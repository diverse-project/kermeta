/* $Id:$ 
 * Creation : December 23, 2009
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            dvojtise
 */
@mainClass "ecore::EPackage"
@mainOperation "generateKMTAspect"


package ecore;


require kermeta
require "../../helpers/EcoreHelper.kmt"
require "platform:/lookup/org.kermeta.language.mdk/src/kmt/standard/StringUtils.kmt"
require "platform:/lookup/fr.irisa.triskell.kermeta.ecore/src/kermeta/helpers/EPackageHelper.kmt"
require "KMTAspectGenerator.kmt"

using kermeta::standard
using kermeta::utils

aspect class EPackage
{
	operation generateKMTAspect(context : transformations::aspect4ecore::KMTAspectGeneratorContext) : Void is do
		// navigate through  the package hierarchy
		self.eSubpackages.each{ p | p.generateKMTAspect(context)}
		self.eClassifiers.each{ c | c.generateKMTAspect(context)}
	end
}

aspect class EClassifier
{
	/**
	 * Generate the KMT file for the given classifier
	 */
	operation generateKMTAspect(context : transformations::aspect4ecore::KMTAspectGeneratorContext) : Void is do 
		
		var fileContent : String
		
		// replace classnameKeyword
		fileContent := context.classTemplate.replaceKeyword(context.classnameKeyword, self.name )
		
		// replace ecoreNsURIKeyword
		fileContent := fileContent.replaceKeyword(context.ecoreNsURIKeyword, self.ePackage.getRootPackage.nsURI )
		
		// replace ecoreFilenameKeyword
		fileContent := fileContent.replaceKeyword(context.ecoreFilenameKeyword, context.inputEcoreFile )
		
		// replace packageQualifiednameKeyword
		fileContent := fileContent.replaceKeyword(context.packageQualifiednameKeyword, 
								self.ePackage.getQualifiedName("::") )
		
		
		
		
		var fileIO : kermeta::io::FileIO init kermeta::io::FileIO.new		
		var fileName : String init context.baseLocation +"/"+ context.filePrefix + self.name + context.filePostfix + ".kmt"
		stdio.writeln("Writing " + fileName +"...")
		fileIO.writeTextFile(fileName, fileContent )
	end
}