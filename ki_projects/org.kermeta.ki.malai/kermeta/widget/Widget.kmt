/*
 * Creation : March 23, 2010
 * Licence  : EPL 
 * Copyright: INRIA Rennes, Triskell
 * Authors  : Arnaud Blouin
 */
package kermeta::ki::malai::widget;

require kermeta
require "platform:/resource/org.kermeta.ki.malai/kermeta/picking/Picker.kmt"
require "platform:/resource/org.kermeta.ki.malai/kermeta/interaction/event/EventManager.kmt"
require "platform:/resource/org.kermeta.ki.malai/kermeta/interaction/Eventable.kmt"

using kermeta::standard
using kermeta::ki::malai::picking
using kermeta::ki::malai::interaction::event
using kermeta::ki::malai::interaction
using kermeta::ki::malai::dispatcher



abstract class GraphicalComponent inherits Pickable {
	reference componentContainer : GraphicalComponent
	

	operation initialise() : Void is abstract
	
	
	operation setPopupMenu(popupMenu : PopupMenu) : Void is do
		extern org::kermeta::ki::malai::widget::GraphicalComponent.setPopupMenu(self, popupMenu)
	end
	

	operation setEnable(enable : Boolean) : Void is do
		extern org::kermeta::ki::malai::widget::GraphicalComponent.setEnable(self, enable)
	end

	
	operation setVisible(visible : Boolean) : Void is do
		extern org::kermeta::ki::malai::widget::GraphicalComponent.setVisible(self, visible)
	end
	
	
	method contains(px : Real, py : Real) : Boolean is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.contains(self, px, py)
	end
	
	
	operation getXOnScreen() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.getXOnScreen(self)
	end

	
	operation getYOnScreen() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.getYOnScreen(self)
	end	
	
	
	operation getX() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.getX(self)
	end
	
	
	operation getY() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.getY(self)
	end
	
	
	operation getWidth() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.getWidth(self)
	end
	
	
	operation getHeight() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::GraphicalComponent.getHeight(self)
	end
	
	
	operation setPosition(x : Integer, y : Integer) : Void is do
		extern org::kermeta::ki::malai::widget::GraphicalComponent.setPosition(self, x, y)
	end
	
	
	
	method getPicker() : Picker is do
		result := void
		
		if(componentContainer.isInstanceOf(Picker)) then
			result := componentContainer.asType(Picker)
		else
			result := componentContainer.getPicker
		end
	end
}



class PopupMenu inherits GraphicalComponent {
	attribute menuItems : MenuItem[0..*]
	
	
	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::PopupMenu.initialise(self)
	end


	method setVisible(visible : Boolean) : Void is do
		extern org::kermeta::ki::malai::widget::PopupMenu.setVisible(self, visible)
	end
	
	
	operation addMenuItem(menuItem : MenuItem) : Void is do
		menuItems.add(menuItem)
		extern org::kermeta::ki::malai::widget::PopupMenu.addMenuItem(self, menuItem)
	end
	
	
	operation removeAllMenuItems() : Void is do
		menuItems.clear()
		extern org::kermeta::ki::malai::widget::PopupMenu.removeAllMenuItems(self)
	end
	
	
	operation getSelectedIndex() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::PopupMenu.getSelectedIndex(self)
	end
	
	
	operation setSelectedIndex(index : Integer) : Void is do
		extern org::kermeta::ki::malai::widget::PopupMenu.setSelectedIndex(self, index)
	end
	
	
	operation getNbMenuItems() : Integer is do
		result ?= extern org::kermeta::ki::malai::widget::PopupMenu.getNbMenuItems(self)
	end
}



class MenuItem inherits GraphicalComponent {
	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::MenuItem.initialise(self)
	end
	
	operation setText(name : String) : Void is do
		extern org::kermeta::ki::malai::widget::MenuItem.setText(self, name)
	end
	
	
	operation getText() : String is do
		result ?= extern org::kermeta::ki::malai::widget::MenuItem.getText(self)
	end
}



class Window inherits GraphicalComponent {
	reference components : GraphicalComponent[0..*]

	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::Window.initialise(self)
	end
	
	
	operation setAlwaysOnTop(onTop : Boolean) : Void is do
		extern org::kermeta::ki::malai::widget::Window.setAlwaysOnTop(self, onTop)
	end
	
	
	operation addComponent(component : GraphicalComponent, addToUIPanel : Boolean) : Void is do
		components.add(component)
		component.componentContainer := self

		if(addToUIPanel) then
			extern org::kermeta::ki::malai::widget::Window.add(self, component)
		end
	end
}



class TextField inherits GraphicalComponent {
	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::TextField.initialise(self)
	end
	
	
	operation getText() : String is do
		result ?= extern org::kermeta::ki::malai::widget::TextField.getText(self)
	end
	
	
	operation setText(text : String) : String is do
		result ?= extern org::kermeta::ki::malai::widget::TextField.setText(self, text)
	end
}




class Button inherits GraphicalComponent
{
	operation getActionCommand() : String is do
		result ?= extern org::kermeta::ki::malai::widget::Button.getActionCommand(self)
	end


	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::Button.initialise(self)
	end

	operation setSelected(selected : Boolean) : Void is do
		extern org::kermeta::ki::malai::widget::Button.setSelected(self, selected)
	end
	
	
	operation initialiseWithIcon(uri : String) : Void is do
		extern org::kermeta::ki::malai::widget::Button.initialiseWithURI(self, uri)
	end
	
	
	operation initialiseWithText(text : String) : Void is do
		extern org::kermeta::ki::malai::widget::Button.initialiseWithText(self, text)
	end
}




class ToggleButton inherits Button
{
}




class CheckBox inherits ToggleButton
{
	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::CheckBox.initialise(self)
	end
	
	operation isChecked() : Boolean is do
		result ?= extern org::kermeta::ki::malai::widget::CheckBox.isChecked(self)
	end
	
	operation setText(text : String) : Void is do
		extern org::kermeta::ki::malai::widget::CheckBox.setText(self, text)
	end
}




class Spinner inherits GraphicalComponent
{
	method initialise() : Void is do
		extern org::kermeta::ki::malai::widget::Spinner.initialise(self)
	end
	
	operation getValue() : String is do
		result ?= extern org::kermeta::ki::malai::widget::Spinner.getValue(self)
	end
}




class Panel inherits GraphicalComponent, Picker, Eventable
{
	reference components : GraphicalComponent[0..*]
	
	attribute eventManager : EventManager
	
	
	method initialise() : Void is do
		self.eventManager := void
		extern org::kermeta::ki::malai::widget::Panel.initialise(self, void)
	end
	
	
	
	/**
	* The panel is created without any eventManager.
	*/
	operation initialiseEventManager(withEventManager : Boolean, dispatcher : ListDispatcher) : Void is do
		if(withEventManager) then
			eventManager := EventManager.new
			eventManager.initialise(dispatcher)
			dispatcher.processes.add(eventManager)
		else
			eventManager := void
		end
		
		extern org::kermeta::ki::malai::widget::Panel.initialise(self, eventManager)
		
		if(withEventManager) then
			extern org::kermeta::ki::malai::interaction::eventWrapper::EventManagerWrapper.attachTo(self, eventManager)
		end
	end
	
	
	method hasEventManager() : Boolean is do
		result := not eventManager.isVoid
	end
	
	
	method getEventManager() : EventManager is do
		result := eventManager
	end
	
	
	operation hasScrollbars() : Boolean is do
		result ?= extern org::kermeta::ki::malai::widget::Panel.hasScrollbars(self)
	end
	
	
	
	operation isVerticalScrollbarVisible() : Boolean is do
		result ?= extern org::kermeta::ki::malai::widget::Panel.isVerticalScrollbarVisible(self)
	end
	
	
	
	operation isHorizontalScrollbarVisible() : Boolean is do
		result ?= extern org::kermeta::ki::malai::widget::Panel.isHorizontalScrollbarVisible(self)
	end
	
	
	
	operation scrollVertically(increment : Integer) : Void is do
		extern org::kermeta::ki::malai::widget::Panel.scrollVertically(self, increment)
	end
	
	
	
	operation scrollHorizontally(increment : Integer) : Void is do
		extern org::kermeta::ki::malai::widget::Panel.scrollHorizontally(self, increment)
	end
	
	
	
	operation addComponent(component : GraphicalComponent, addToUIPanel : Boolean) : Void is do
		components.add(component)
		component.componentContainer := self

		if(not eventManager.isVoid) then
			extern org::kermeta::ki::malai::interaction::eventWrapper::EventManagerWrapper.attachTo(component, eventManager)
		end
		
		if(addToUIPanel) then
			extern org::kermeta::ki::malai::widget::Panel.add(self, component)
		end
	end
	
	
	
	method getPickerAt(px : Real, py : Real) : Picker is do
		result := components.detect{c | (c.isInstanceOf(Picker)).andThen{b | c.contains(px, py)} }.asType(Picker)
	end
	
	
	
	method getPickableAt(px : Real, py : Real) : Pickable is do
		components.exists{c |
			if((c.isInstanceOf(Pickable)).andThen{b | c.contains(px, py)}) then
				result := c
			else if(c.isInstanceOf(Picker)) then
					result := c.asType(Picker).getPickableAt(px - c.getX.toReal, py - c.getY.toReal)
				end
			end
			
			not result.isVoid
		}
	end
	
	
	
	method containsObject(obj : Object) : Boolean is do
		result := components.exists{c |
			(c==obj).orElse{b| c.isInstanceOf(Picker).andThen{b | c.asType(Picker).containsObject(obj) }}
		}
	end
}
