<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModelingUnit">
    <details key="require" value="kermeta|platform:/resource/org.kermeta.ki.malai/kermeta/action/ActionRegistry.kmt|"/>
    <details key="using" value="kermeta::ki::malai::action|kermeta::standard|kermeta::language::structure|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="platform:/resource/org.kermeta.ki.malai/kermeta/action/Action.ecore#/"
      nsPrefix="kermeta">
    <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
    <eClassifiers xsi:type="ecore:EDataType" name="_KermetaSpecialTypesAlias_" instanceClassName="java.lang.Object"/>
    <eSubpackages name="ki" nsURI="platform:/resource/org.kermeta.ki.malai/kermeta/action/Action.ecore#/kermeta/ki"
        nsPrefix="ki">
      <eSubpackages name="malai" nsURI="platform:/resource/org.kermeta.ki.malai/kermeta/action/Action.ecore#/kermeta/ki/malai"
          nsPrefix="malai">
        <eSubpackages name="action" nsURI="platform:/resource/org.kermeta.ki.malai/kermeta/action/Action.ecore#/kermeta/ki/malai/action"
            nsPrefix="action">
          <eClassifiers xsi:type="ecore:EClass" name="Action" abstract="true">
            <eOperations name="initialise">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;done := false&#xA;&#x9;started := false&#xA;&#x9;self.actionRegistry := actionRegistry&#xA;end"/>
              </eAnnotations>
              <eParameters name="actionRegistry" eType="ecore:EClass ActionRegistry.ecore#/1/ki/malai/action/ActionRegistry"/>
            </eOperations>
            <eOperations name="doIt" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;if canDo then&#xA;&#x9;&#x9;started := true&#xA;&#x9;&#x9;result := true&#xA;&#x9;&#x9;doActionBody&#xA;&#x9;&#x9;actionRegistry.handlers.each{h | do&#xA;&#x9;&#x9;&#x9;&#x9;h.onActionExecuted(self)&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;result := false&#xA;&#xA;&#x9;end&#xA;end"/>
                <details key="documentation" value="/** Executes the action. Should be overridden by sub-class to define stuffs to execute.&#xA;&#x9; &#x9;Returns true if the execution is successful. False otherwise. */"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="isRegisterable" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="isAbstract" value="true"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="canDo" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="isAbstract" value="true"/>
                <details key="documentation" value="/** True if the action can be executed. */"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="hadEffect" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;result := isDone&#xA;end"/>
                <details key="documentation" value="/** True if the execution of the action had effects on the target. &#xA;&#x9; *  By default this method only checks if the action is done. Should be overridden.&#xA;&#x9;*/"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="cancelledBy" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="isAbstract" value="true"/>
                <details key="documentation" value="/** Defines if the given action can cancel the calling action.&#xA;&#x9;&#x9;Returns true if the given action cancels the calling action.&#xA;&#x9;&#x9;'action': The action to test. */"/>
              </eAnnotations>
              <eParameters name="action" eType="ecore:EClass platform:/plugin/fr.irisa.triskell.kermeta.io/src/kermeta/framework.ecore#/2/language/structure/Class"/>
            </eOperations>
            <eOperations name="setDone" ordered="false">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;done := true&#xA;end"/>
                <details key="documentation" value="/** Sets the action to 'done'. */"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="isDone" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;result := done&#xA;end"/>
                <details key="documentation" value="/** True if the action is done. */"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="abort">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;done&#xA;end"/>
                <details key="documentation" value="/** Aborts the action. */"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="isStarted" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;result := started&#xA;end"/>
                <details key="documentation" value="/** Returns true if the action has already started. */"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setStarted">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;self.started := started&#xA;end"/>
                <details key="documentation" value="/** Defines if the action has started or not.&#xA;&#x9; &#x9;'started': the new value of isStarted. */"/>
              </eAnnotations>
              <eParameters name="started" eType="#/1/Boolean"/>
            </eOperations>
            <eOperations name="doActionBody" ordered="false">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;end"/>
              </eAnnotations>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="done" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="isComposite" value="true"/>
                <details key="documentation" value="/** Defines if the action is done. */"/>
              </eAnnotations>
            </eStructuralFeatures>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="started" eType="#/1/Boolean">
              <eAnnotations source="kermeta">
                <details key="isComposite" value="true"/>
                <details key="documentation" value="/** Defines if the action has started. */"/>
              </eAnnotations>
            </eStructuralFeatures>
            <eStructuralFeatures xsi:type="ecore:EReference" name="actionRegistry"
                eType="ecore:EClass ActionRegistry.ecore#/1/ki/malai/action/ActionRegistry">
              <eAnnotations source="kermeta">
                <details key="documentation" value="/** The action registry that contains objects that want to be notified&#xA;&#x9;* by events on actions. */"/>
              </eAnnotations>
            </eStructuralFeatures>
          </eClassifiers>
        </eSubpackages>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EAnnotation source="dependentResource" references="ActionRegistry.ecore#/0 ActionRegistry.ecore#/1 ActionRegistry.ecore#/2 ActionHandler.ecore#/0 ActionHandler.ecore#/1 ActionHandler.ecore#/2 ActionHandler.ecore#/3 UndoCollector.ecore#/0 UndoCollector.ecore#/1 UndoCollector.ecore#/2 Undoable.ecore#/0 Undoable.ecore#/1 Undoable.ecore#/2 UndoHandler.ecore#/0 UndoHandler.ecore#/1 UndoHandler.ecore#/2"/>
</xmi:XMI>
