package featureDiagram;
require kermeta
require "platform:/resource/org.kermeta.kompren.slicing/examples/featureModel/featureDiagram.ecore"
require "FeatureDiagramSlicerAspect.kmt"

using kermeta::standard
using kermeta::utils
class FeatureDiagramSlicer {
	reference model : FeatureDiagram

	reference requiredFeatures : Feature[0..*]

	reference addedFeatures : Bag<Feature>

	reference addedFeatureDiagrams : Bag<FeatureDiagram>

	reference addedCNFExps : Bag<CNFExp>

	operation initialise(requiredFeatures : bag Feature[0..*], model : FeatureDiagram) : FeatureDiagramSlicer is do
		result := self
		self.model := model
		self.addedFeatures := Bag<Feature>.new
		self.addedFeatureDiagrams := Bag<FeatureDiagram>.new
		self.addedCNFExps := Bag<CNFExp>.new
		self.requiredFeatures.addAll(requiredFeatures)
	end

	operation launch() : Void is do
		self.model.feedOpposites()
		self.requiredFeatures.each{theFeature | theFeature.visitToAddClasses(self) }
		self.requiredFeatures.each{theFeature | theFeature.visitToAddRelations(self) }
		self.addedFeatures.each{theFeature | onFeatureAdded(theFeature) }
		self.addedCNFExps.each{theCNFExp | onCNFExpAdded(theCNFExp) }
	end

	operation onFeatureAdded(feature : Feature) : Void is do
		stdio.writeln("Feature sliced: " + feature.name)
	end
	operation onCNFExpAdded(cnfExp : CNFExp) : Void is do
		stdio.writeln("CNFExp sliced: " + cnfExp.toString)
	end

}
