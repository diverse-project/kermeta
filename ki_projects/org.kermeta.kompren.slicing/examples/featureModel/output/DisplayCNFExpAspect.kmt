/* $Id:$ 
 * Creation : February 8, 2012
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            ablouin
 */
package featureDiagram;

require kermeta
require "./FeatureDiagramSlicerAspect.kmt"

using kermeta::standard

aspect class CNFExp {
	operation isFullySliced() : Boolean is do
		result := (not sliced.isVoid).andThen{b | sliced }
	end

	operation getExpFormula() : String is abstract
}

aspect class OrCNF {
	method isFullySliced() : Boolean is do
		result := super and left.isFullySliced() and right.isFullySliced()
	end

	method getExpFormula() : String is do
		result := left.getExpFormula + " or " + right.getExpFormula

		if not container.isVoid and container.isInstanceOf(CNFExp) then
			result := "(" + result + ")"
		end
	end
}

aspect class AndCNF {
	method isFullySliced() : Boolean is do
		result := super and left.isFullySliced() and right.isFullySliced()
	end
	
	method getExpFormula() : String is do
		result := left.getExpFormula + " and " + right.getExpFormula

		if not container.isVoid and container.isInstanceOf(CNFExp) then
			result := "(" + result + ")"
		end
	end
}

aspect class NotCNF {
	method isFullySliced() : Boolean is do
		result := super and exp.isFullySliced()
	end

	method getExpFormula() : String is do
		result := "not " + exp.getExpFormula

		if not container.isVoid and container.isInstanceOf(CNFExp) then
			result := "(" + result + ")"
		end
	end
}

aspect class AtomicCNF {
	method getExpFormula() : String is do
		result := feature.name
	end
}
