package org::kermeta::language::behavior;
require kermeta
require "platform:/resource/org.kermeta.kompren.slicing/examples/modelTransfoAnalysis/kermeta.ecore"
require "KermetaStaticAnalysisAspect.kmt"
require "structurePruningAspect.kmt"

using kermeta::standard
using kermeta::utils
using org::kermeta::language::structure
class KermetaStaticAnalysis {
	reference requiredModelingUnits : ModelingUnit[0..*]

	reference addedClassDefinitions : Bag<ClassDefinition>

	operation initialise(requiredModelingUnits : bag ModelingUnit[0..*]) : KermetaStaticAnalysis is do
		result := self
		self.addedClassDefinitions := Bag<ClassDefinition>.new
		self.requiredModelingUnits.addAll(requiredModelingUnits)
	end

	operation launch() : Void is do
		self.requiredModelingUnits.each{theModelingUnit | theModelingUnit.visitToAddClasses(self) }
		self.requiredModelingUnits.each{theModelingUnit | theModelingUnit.visitToAddRelations(self) }
		self.addedClassDefinitions.each{theClassDefinition | onClassDefinitionAdded(theClassDefinition) }
		onEnd()
	end

	operation onClassDefinitionAdded(classDef : ClassDefinition) : Void is do
	if(usedClassDefs.isVoid) then
		usedClassDefs := Set<ClassDefinition>.new
	end

	usedClassDefs.add(classDef)
	end
	operation onEnd() : Void is do
	if(not usedClassDefs.isVoid) then
		usedClassDefs.each{classDef | stdio.writeln(classDef.name) }
	end
	end
	reference usedClassDefs : Set<ClassDefinition>
}
