package ecore;
require kermeta
require "platform:/resource/org.kermeta.kompren.slicing/examples/strictEcore/Ecore.ecore"
require "StrictEcoreAspect.kmt"
using kermeta::persistence
using kermeta::standard
using kermeta::utils
class StrictEcore {
	reference sliceRoots : Bag<Object>
	reference requiredEClasss : EClass[0..*]

	operation initialise(requiredEClasss : bag EClass[0..*]) : StrictEcore is do
		result := self
		self.sliceRoots := Bag<Object>.new
		self.requiredEClasss.addAll(requiredEClasss)
	end

	operation launch() : Void is do
		self.requiredEClasss.each{theEClass | theEClass.visitToAddClasses(self) }
		self.requiredEClasss.each{theEClass | theEClass.visitToAddRelations(self) }
		onEnd()
	end

	operation onEnd() : Void is do
		var repository : EMFRepository init EMFRepository.new
		var resource : EMFResource 
 		resource ?= repository.createResource("./slice.xmi", "http://www.eclipse.org/emf/2002/Ecore")
 		
 		resource.addAll(sliceRoots)
 		resource.save()
	end
	operation addToRoot(obj : Object) is do
		var cont : Object init obj.container

		if(cont.isVoid.orElse{b | (not cont.isInstanceOf(SlicerVisitor)).orElse{b2 | not cont.asType(SlicerVisitor).sliced}}) then
			sliceRoots.add(obj)
		end
	end
}
