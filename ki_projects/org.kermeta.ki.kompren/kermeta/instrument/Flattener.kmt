/*
 * Creation : April 9, 2010
 * Licence  : EPL 
 * Copyright: INRIA Rennes, Triskell
 * Authors  : Arnaud Blouin
 */
package kermeta::ki::kompren;

require "platform:/resource/org.kermeta.ki.kompren/kermeta/ModelExtension.kmt"
require "platform:/resource/org.kermeta.ki.kompren/kermeta/instrument/ZoomerMetamodel.kmt"
require "platform:/resource/org.kermeta.ki.malai/kermeta/interaction/library/Press.kmt"
require "platform:/resource/org.kermeta.ki.kompren/kermeta/action/Flat.kmt"

using kermeta::ki::malai::instrument
using kermeta::ki::malai::interaction
using kermeta::language::structure


class Flattener inherits Instrument
{
	reference metamodel : ModelingUnit
	
	reference zoomer : ZoomerMetamodel
	
	
	method initialiseLinks() : Void is do
		addLink(Press2Flat.new, false)
	end
}




class Press2Flat inherits PressLink
{
	method getActionClass() : Class is do
		result := Flat
	end
	
	
	method updateAction() : Void is do
		if(not action.isVoid) then
			action.asType(Flat).classToFlat := getObject().asType(ClassDefinition)
		end
	end
	
	
	operation getObject() : Object is do
		var press : Press init interaction.asType(Press)
		var zoomer : ZoomerMetamodel init instrument.asType(Flattener).zoomer
		result := press.getPickableAt(zoomer.getZoomedX(press.px), zoomer.getZoomedY(press.py), press.source)
	end
	
	
	method isConditionRespected() : Boolean is do
		var obj : Object init getObject()
		result := not obj.isVoid and obj.isInstanceOf(ClassDefinition)
	end
	
	
	method createAction() : Void is do
		var flat      : Flat      init Flat.new
		var flattener : Flattener init instrument.asType(Flattener)
		
		flat.initialise(instrument.actionRegistry)
		flat.metamodel  := flattener.metamodel
		action          := flat
	end
}
