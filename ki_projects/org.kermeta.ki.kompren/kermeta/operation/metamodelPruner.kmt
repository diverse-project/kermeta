/*
 * Creation : March 16, 2009
 * Licence  : EPL 
 * Copyright: INRIA Rennes, Triskell
 * Authors  : 
 *            Sagar Sen
 *            Arnaud Blouin
 */
package kermeta::ki::kompren;


require kermeta
require "platform:/resource/org.kermeta.ki.kompren/kermeta/ModelExtension.kmt"
require "platform:/resource/org.kermeta.ki.kompren/kermeta/instrument/Pruner.kmt"
require "platform:/resource/org.kermeta.pruning/kermeta/metamodelPruner.kmt"

using kermeta::pruning
using kermeta::language::structure



class VisualMetamodelPruner inherits MetamodelPruner {
	reference viewPolicy : PrunerViewPolicy
	
	
	operation initializeVisualPruning(requiredClasses : bag RequiredClass[0..*], requiredProperties : bag RequiredProperty[0..*], 
						requiredEnumerations : bag RequiredEnumeration[0..*], numberOfPasses : Integer, 
						viewPolicy : PrunerViewPolicy, radiusEffect : Integer, card0 : Boolean) : Void is do
						
		initialize(requiredClasses, requiredProperties, requiredEnumerations, numberOfPasses, radiusEffect, card0)
		self.viewPolicy     := viewPolicy
	end
	
	
	
	method onPackagePruned(pkg : Package) : Void is do // FIXME pkg never pruned by this method
		extern org::kermeta::ki::kompren::view::EntityViewExtern.onPruning(viewPolicy==PrunerViewPolicy.hide, pkg)
	end
	
	
	method onPropertyPruned(prop : Property) : Void is do // FIXME prop never pruned by this method
		extern org::kermeta::ki::kompren::view::EntityViewExtern.onPruning(viewPolicy==PrunerViewPolicy.hide, prop)
	end
	
	
	method onTagPruned(tag : Tag) : Void is do // FIXME tag never pruned by this method
		extern org::kermeta::ki::kompren::view::EntityViewExtern.onPruning(viewPolicy==PrunerViewPolicy.hide, tag)
	end
	
	
	method onTypeDefinitionPruned(typeDef : TypeDefinition) : Void is do
		extern org::kermeta::ki::kompren::view::EntityViewExtern.onPruning(viewPolicy==PrunerViewPolicy.hide, typeDef)
	end
	
	
}
