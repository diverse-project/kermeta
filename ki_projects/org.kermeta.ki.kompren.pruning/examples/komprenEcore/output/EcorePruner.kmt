package ecore;
require kermeta
require "platform:/resource/org.kermeta.ki.kompren.pruning/examples/komprenEcore/Ecore.ecore"
require "EcorePrunerAspect.kmt"

using kermeta::standard
using kermeta::utils
class EcorePruner {
	attribute radius : Integer

	attribute lowerCard0 : Boolean

	reference requiredEClasss : EClass[0..*]

	reference addedEClasss : Bag<EClass>

	reference addedEReferences : Bag<EReference>

	operation initialise(requiredEClasss : bag EClass[0..*], radius : Integer, lowerCard0 : Boolean) : EcorePruner is do
		result := self
		self.addedEClasss := Bag<EClass>.new
		self.addedEReferences := Bag<EReference>.new
		self.radius := radius
		self.lowerCard0 := lowerCard0
		self.requiredEClasss.addAll(requiredEClasss)
	end

	operation launch() : Void is do
		self.requiredEClasss.each{theEClass | theEClass.visitToAddClasses(self, 0) }
		self.requiredEClasss.each{theEClass | theEClass.visitToAddRelations(self, 0) }
	end

	operation onEClassAdded(theEClass : EClass) : Void is do
		self.addedEClasss.add(theEClass)
	end
	operation onEReferenceAdded(theEReference : EReference) : Void is do
		self.addedEReferences.add(theEReference)
	end
	operation oneSuperTypesAdded(theEClassSrc : EClass, theEClassTar : EClass) : Void is do
	end
}
