package org::kermeta::language::structure;
require kermeta
require "platform:/resource/org.kermeta.language.model/src/main/ecore/kermeta.ecore"
require "KermetaPrunerAspect.kmt"

using kermeta::standard
using kermeta::utils
class KermetaPruner {
	attribute radius : Integer

	attribute lowerCard0 : Boolean

	reference requiredClassDefinitions : ClassDefinition[0..*]

	reference requiredPropertys : Property[0..*]

	reference addedClassDefinitions : Bag<ClassDefinition>

	reference addedPropertys : Bag<Property>

	operation initialise(requiredClassDefinitions : bag ClassDefinition[0..*], requiredPropertys : bag Property[0..*], radius : Integer, lowerCard0 : Boolean) : KermetaPruner is do
		result := self
		self.addedClassDefinitions := Bag<ClassDefinition>.new
		self.addedPropertys := Bag<Property>.new
		self.radius := radius
		self.lowerCard0 := lowerCard0
		self.requiredClassDefinitions.addAll(requiredClassDefinitions)
		self.requiredPropertys.addAll(requiredPropertys)
	end

	operation launch() : Void is do
		self.requiredClassDefinitions.each{theClassDefinition | theClassDefinition.visitToAddClasses(self, 0) }
		self.requiredPropertys.each{theProperty | theProperty.visitToAddClasses(self, 0) }
		self.requiredClassDefinitions.each{theClassDefinition | theClassDefinition.visitToAddRelations(self, 0) }
		self.requiredPropertys.each{theProperty | theProperty.visitToAddRelations(self, 0) }
		self.addedClassDefinitions.each{theClassDefinition | onClassDefinitionAdded(theClassDefinition) }
		self.addedPropertys.each{theProperty | if(theProperty.checkCanReallyBeAdded()) then onPropertyAdded(theProperty) end }
	end

	operation onClassDefinitionAdded(theClassDefinition : ClassDefinition) : Void is do
	end
	operation onPropertyAdded(theProperty : Property) : Void is do
	end
	operation onsuperTypeAdded(theTypeDefinitionSrc : TypeDefinition, theTypeTar : Type) : Void is do
	end
}
