package ex::fullClassModel;
require kermeta
require "platform:/resource/org.kermeta.ki.pruning.examples/src/kermeta/fullClassModel/FullClassModel.ecore"
require "FullClassModelPruning.kmt"
using kermeta::standard

aspect class Clazz {
	attribute visited : Boolean

	operation visit(theFullClassModelPruning : FullClassModelPruning, theClazzs : Bag<Clazz>) : Void is do
		self.visited := true
		theFullClassModelPruning.onClazzAdded(self)
		theFullClassModelPruning.addedClazzs.add(self)
		self.superClasses.each{theClazz | theClazzs.add(theClazz) }
		self.properties.each{theProperty | theProperty.visit(theFullClassModelPruning, theClazzs) }
	end

	operation addClazzs(theFullClassModelPruning : FullClassModelPruning) : Void is do
		self.superClasses.each{theClazz |
			if(theClazz.visited) then
				theFullClassModelPruning.onsuperClassesAdded(self, theClazz)
			end
		}
		self.properties.each{theProperty |
			if(not theProperty.visited and theProperty.owner.visited and theProperty.type.visited) then
				theProperty.visited := true
				theFullClassModelPruning.onPropertyAdded(theProperty)
				theFullClassModelPruning.addedPropertys.add(theProperty)
			end
		}
	end

	operation preparePruning() : Void is do
		self.visited := false
		self.properties.each{theProperty | theProperty.preparePruning() }
	end
}
aspect class Property {
	attribute visited : Boolean

	operation visit(theFullClassModelPruning : FullClassModelPruning, theClazzs : Bag<Clazz>) : Void is do
		if(not self.owner.visited) then theClazzs.add(self.owner) end
		if(not self.type.visited) then theClazzs.add(self.type) end
	end

	operation preparePruning() : Void is do
		self.visited := false
	end
}
