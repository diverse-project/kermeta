package ex::stateMachine;
require kermeta
require "StateMachine.kmt"
require "StateMachinePruning.kmt"

using kermeta::standard

aspect class OutputState {
	method visit(theStateMachinePruning : StateMachinePruning, theInputStates : Bag<State>) : Void is do
		super(theStateMachinePruning, theInputStates)
		self.outgoingTransitions.each{theTransition | theTransition.visit(theStateMachinePruning, theInputStates) }
	end

	method addTransitions(theStateMachinePruning : StateMachinePruning) : Void is do
		self.outgoingTransitions.each{theTransition |
			if(not theTransition.visited and (theTransition.target.isVoid or theTransition.target.visited)) then
				theTransition.visited := true
				theStateMachinePruning.onTransitionAdded(theTransition)
				theStateMachinePruning.addedTransitions.add(theTransition)
			end
		}
	end
}
aspect class Transition {
	attribute visited : Boolean

	operation visit(theStateMachinePruning : StateMachinePruning, theInputStates : Bag<State>) : Void is do
		if(not self.target.visited) then theInputStates.add(self.target) end
	end
}
aspect class State {
	attribute visited : Boolean

	operation visit(theStateMachinePruning : StateMachinePruning, theInputStates : Bag<State>) : Void is do
		self.visited := true
		theStateMachinePruning.onStateAdded(self)
		theStateMachinePruning.addedStates.add(self)
	end

	operation addTransitions(theStateMachinePruning : StateMachinePruning) : Void is do
	end
}
