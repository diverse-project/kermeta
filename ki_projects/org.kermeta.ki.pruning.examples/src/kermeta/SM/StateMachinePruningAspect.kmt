/* $Id:$ 
 * Creation : November 17, 2010
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            ablouin
 */
package ex::stateMachine;

require kermeta
require "StateMachine.kmt"
require "StateMachinePruning.kmt"

using kermeta::standard

aspect class State {
	attribute visited : Boolean
	
	operation visit(theStateMachinePruning : StateMachinePruning, theTransitions : Bag<Transition>) : Void is do
		visited := true
		theStateMachinePruning.onStateAdded(self)
		theStateMachinePruning.addedStates.add(self)
	end
	
	operation includeLastRelations(theStateMachinePruning : StateMachinePruning) : Void is do
	end
}


aspect class OutputState {
	method visit(theStateMachinePruning : StateMachinePruning, theTransitions : Bag<Transition>) : Void is do
		super(theStateMachinePruning, theTransitions)
		outgoingTransitions.each{theTransition | if(not theTransition.visited) then theTransitions.add(theTransition) end }
	end
	
	
	method includeLastRelations(theStateMachinePruning : StateMachinePruning) : Void is do
		outgoingTransitions.each{theTransition |
			if(not theTransition.visited and theTransition.source.visited and theTransition.target.visited) then
				theStateMachinePruning.onTransitionAdded(theTransition)
				theTransition.visited := true
			end
		}
	end
}


aspect class Transition {
	attribute visited : Boolean
	
	operation visit(pruner : StateMachinePruning) : Void is do
		pruner.onTransitionAdded(self)
		pruner.addedTransitions.add(self)
	end
}

