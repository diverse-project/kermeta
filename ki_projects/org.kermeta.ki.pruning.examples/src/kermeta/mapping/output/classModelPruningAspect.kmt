package ex::classModel;
require kermeta
require "MappingModelPruningAspect.kmt"
using kermeta::standard
using ex::mappingModel

aspect class Clazz {
	attribute visited : Boolean

	reference srcsOpposite : Mapping[1..*]

	reference targetsOpposite : Mapping[1..*]

	operation visit(theMappingModelPruning : MappingModelPruning, theClazzs : Bag<Clazz>) : Void is do
		self.visited := true
		theMappingModelPruning.onClazzAdded(self)
		theMappingModelPruning.addedClazzs.add(self)
		self.srcsOpposite.each{theMapping | theMapping.visit(theMappingModelPruning, theClazzs) }
		self.targetsOpposite.each{theMapping | theMapping.visit(theMappingModelPruning, theClazzs) }
	end

	operation addMappings(theMappingModelPruning : MappingModelPruning) : Void is do
		self.srcsOpposite.each{theMapping |
			if(not theMapping.visited and not theMapping.srcs.exists{theClazz | not theClazz.visited } and not theMapping.targets.exists{theClazz | not theClazz.visited }) then
				theMapping.visited := true
				theMappingModelPruning.onMappingAdded(theMapping)
				theMappingModelPruning.addedMappings.add(theMapping)
			end
		}
		self.targetsOpposite.each{theMapping |
			if(not theMapping.visited and not theMapping.srcs.exists{theClazz | not theClazz.visited } and not theMapping.targets.exists{theClazz | not theClazz.visited }) then
				theMapping.visited := true
				theMappingModelPruning.onMappingAdded(theMapping)
				theMappingModelPruning.addedMappings.add(theMapping)
			end
		}
	end
}
