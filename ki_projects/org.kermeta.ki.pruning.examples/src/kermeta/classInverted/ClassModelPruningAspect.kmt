/* $Id:$ 
 * Creation : November 17, 2010
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            ablouin
 */
package ex::classModel;

require kermeta
require "ClassModel.kmt"
require "ClassModelPruning.kmt"

using kermeta::standard


aspect class Clazz {
	attribute visited : Boolean
	
	reference superClassesOpposite : Clazz[0..*]
	
	operation initialiseOpposite() : Void is do
		superClasses.each{theClazz | theClazz.superClassesOpposite.add(self) }
	end
	
	operation visit(theClassModelPruning : ClassModelPruning, theClazzs : Bag<Clazz>) : Void is do
		visited := true
		theClassModelPruning.onClazzAdded(self)
		theClassModelPruning.addedClazzs.add(self)
		superClassesOpposite.each{theClazz | if(not theClazz.visited) then theClazzs.add(theClazz) end }
	end
	
	operation includeLastRelations(theClassModelPruning : ClassModelPruning) : Void is do
	end
}
