/* $Id: Helpers.kmt,v 1.1 2008-05-15 14:59:40 tej Exp $
 * Creation date: May 15, 2008
 * License:
 * Copyright:
 * Authors:
 */
@mainClass "acm::Helper"
@mainOperation "main"

package acm;

require kermeta
require "http://www.kermeta.org/acm"


using kermeta::standard
using kermeta::utils
using kermeta::persistence
using kermeta::io



class Helper
{


	operation saveAcmModel(policyType : PolicyType, policyName : String , fileName : String) is do
		var ouputRepo : EMFRepository init EMFRepository.new
		var resource : EMFResource 
		// init
		resource ?= ouputRepo.createResource("../model/" + fileName, "../model/acm.ecore")
		
		// add policy with rules
		var policy : Policy init Policy.new
		policy.type := policyType
		
		// add rules
		var rule : Rule
		
		policy.name := policyName
		
		// addRulesAndEntitiesForVMS(policy)
		
		addRulesAndEntitiesForASMS(policy)
		
		// add and store
		resource.instances.add(policy)
		resource.save
	
	end
	
	
	
	operation addElementToPolicy(e : String,typeE : String , p : Policy) is do
	
	var element : Element init Element.new
	
	if typeE == "org" then
		element.type := p.type.ruleTypes.at(0).parameters.at(0)
	end	
	
	if typeE == "role" then
		element.type := p.type.ruleTypes.at(0).parameters.at(1)
	end
	
	if typeE == "activity" then
	element.type := p.type.ruleTypes.at(0).parameters.at(2)
	end
	
	if typeE == "view" then
		element.type := p.type.ruleTypes.at(0).parameters.at(3)
	end
	
	if typeE == "context" then
	element.type := p.type.ruleTypes.at(0).parameters.at(4)
	end
	
	
	element.name := e
	
	p.elements.add(element)
	
	
end
	
	
	operation createOrBACRuleByNum(name:String, status : String, org:Integer,  role : Integer , act : Integer, view : Integer, context : Integer, policy : Policy) : Rule is do

	// rule
	var rule : Rule init Rule.new
	
	// init rule type
	if status == "Permission" then
	rule.type := policy.type.ruleTypes.at(0)
	else 
	if status == "Prohibition" then 
	rule.type := policy.type.ruleTypes.at(1)
	end
	
	end
	
	rule.name := name
	
	
	// add parameters
	rule.parameters.add(policy.elements.at(org))
	rule.parameters.add(policy.elements.at(role))
	rule.parameters.add(policy.elements.at(act))
	rule.parameters.add(policy.elements.at(view))
	rule.parameters.add(policy.elements.at(context))
	
	// debug
	// stdio.writeln("rule -> " + rule.toString)
	
	result := rule	
	end
	
	
	operation createOrBACRule(name:String, status : String, org:String,  r : String , act : String, v : String, c : String, policyType : PolicyType, policy:Policy) : Rule is do

	// entities	
	var organization : Element init Element.new	
	var role : Element init Element.new
	var activity : Element init Element.new
	var view : Element init Element.new
	var context : Element init Element.new

	// rule
	var rule : Rule init Rule.new
	
	// init rule type
	if status == "Permission" then
	rule.type := policyType.ruleTypes.at(0)
	else 
	if status == "Prohibition" then 
	rule.type := policyType.ruleTypes.at(1)
	end
	
	end
	
	rule.name := name
	
	// init entities
	organization.type := rule.type.parameters.at(0)
	organization.name := org	
	
	role.type := rule.type.parameters.at(1)
	role.name := r
	
	activity.type := rule.type.parameters.at(2)
	activity.name := act
	
	view.type := rule.type.parameters.at(3)
	view.name := v
	
	context.type := rule.type.parameters.at(4)
	context.name := c
	
	
	
	
	
	// add element to policy
	if not policy.elements.contains(organization) then
		policy.elements.add(organization)
	end
	
	if not policy.elements.contains(role) then
	policy.elements.add(role)
	end
	
	if not policy.elements.contains(activity) then
	policy.elements.add(activity)
	end
	
	if not policy.elements.contains(view) then
	policy.elements.add(view)
	end
	
	if not policy.elements.contains(context) then
	policy.elements.add(context)
	end
	
	
	// add parameters
	/*
	rule.parameters.add(organization)
	rule.parameters.add(role)
	rule.parameters.add(activity)
	rule.parameters.add(view)
	rule.parameters.add(context)
	*/
	rule.parameters.add(policy.elements.at(0))
	rule.parameters.add(policy.elements.at(1))
	rule.parameters.add(policy.elements.at(2))
	rule.parameters.add(policy.elements.at(3))
	rule.parameters.add(policy.elements.at(4))
	
	
	
	stdio.writeln("rule -> " + rule.toString)
	
	result := rule	
	end

	operation addRulesAndEntitiesForVMS(policy : Policy) is do
	
	var rule : Rule
	
	// ************************************************ Start: This code automatically generated DO NOT MODIFY
	
	addElementToPolicy("MeetingOrg","org",policy)
		addElementToPolicy("Personnel","role",policy)
		addElementToPolicy("Administrator","role",policy)
		addElementToPolicy("User","role",policy)
		addElementToPolicy("NonAttendee","role",policy)
		addElementToPolicy("Webmaster","role",policy)
		addElementToPolicy("Attendee","role",policy)
		addElementToPolicy("Owner","role",policy)
		addElementToPolicy("Moderator","role",policy)
		addElementToPolicy("Update","activity",policy)
		addElementToPolicy("Delete","activity",policy)
		addElementToPolicy("AttendeeActivity","activity",policy)
		addElementToPolicy("Speak","activity",policy)
		addElementToPolicy("Ask","activity",policy)
		addElementToPolicy("Leave","activity",policy)
		addElementToPolicy("CloseMeeting","activity",policy)
		addElementToPolicy("Consult","activity",policy)
		addElementToPolicy("OpenMeeting","activity",policy)
		addElementToPolicy("Over","activity",policy)
		addElementToPolicy("HandOver","activity",policy)
		addElementToPolicy("UpdateMeetingInfos","activity",policy)
		addElementToPolicy("SetMeetingTitle","activity",policy)
		addElementToPolicy("SetMeetingAgenda","activity",policy)
		addElementToPolicy("SetMeetingModerator","activity",policy)
		addElementToPolicy("PersonnelAccount","view",policy)
		addElementToPolicy("UserAccount","view",policy)
		addElementToPolicy("Meeting","view",policy)
		addElementToPolicy("default","context",policy)
		addElementToPolicy("WorkingDay","context",policy)
		addElementToPolicy("MaintenanceDay","context",policy)
		//  Prohibition(MeetingOrg , NonAttendee , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R1" , "Prohibition" , 0 , 4 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , NonAttendee , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R2" , "Prohibition" , 0 , 4 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , SetMeetingTitle , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R3" , "Prohibition" , 0 , 2 , 21 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Webmaster , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R4" , "Permission" , 0 , 5 , 16 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Personnel , Update , UserAccount , MaintenanceDay)
		rule := createOrBACRuleByNum("R5" , "Permission" , 0 , 1 , 9 , 25 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R6" , "Permission" , 0 , 7 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , SetMeetingAgenda , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R7" , "Prohibition" , 0 , 2 , 22 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R8" , "Prohibition" , 0 , 5 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R9" , "Prohibition" , 0 , 5 , 9 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R10" , "Permission" , 0 , 7 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Moderator , HandOver , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R11" , "Prohibition" , 0 , 8 , 19 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R12" , "Permission" , 0 , 7 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Speak , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R13" , "Prohibition" , 0 , 5 , 12 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , OpenMeeting , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R14" , "Permission" , 0 , 7 , 17 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R15" , "Prohibition" , 0 , 1 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , SetMeetingAgenda , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R16" , "Permission" , 0 , 7 , 22 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , SetMeetingTitle , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R17" , "Prohibition" , 0 , 1 , 21 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Webmaster , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R18" , "Permission" , 0 , 5 , 16 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , UpdateMeetingInfos , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R19" , "Prohibition" , 0 , 2 , 20 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Owner , SetMeetingTitle , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R20" , "Prohibition" , 0 , 7 , 21 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R21" , "Prohibition" , 0 , 2 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R22" , "Prohibition" , 0 , 1 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Speak , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R23" , "Prohibition" , 0 , 1 , 12 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , SetMeetingTitle , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R24" , "Prohibition" , 0 , 5 , 21 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , NonAttendee , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R25" , "Prohibition" , 0 , 4 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , SetMeetingModerator , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R26" , "Prohibition" , 0 , 2 , 23 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Administrator , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R27" , "Permission" , 0 , 2 , 9 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Ask , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R28" , "Prohibition" , 0 , 5 , 13 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Moderator , OpenMeeting , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R29" , "Prohibition" , 0 , 8 , 17 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , SetMeetingAgenda , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R30" , "Prohibition" , 0 , 2 , 22 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , UpdateMeetingInfos , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R31" , "Prohibition" , 0 , 1 , 20 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Administrator , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R32" , "Permission" , 0 , 2 , 10 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , UpdateMeetingInfos , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R33" , "Prohibition" , 0 , 5 , 20 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , UpdateMeetingInfos , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R34" , "Prohibition" , 0 , 2 , 20 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , CloseMeeting , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R35" , "Permission" , 0 , 8 , 15 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , SetMeetingAgenda , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R36" , "Prohibition" , 0 , 1 , 22 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Leave , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R37" , "Prohibition" , 0 , 2 , 14 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , SetMeetingAgenda , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R38" , "Prohibition" , 0 , 5 , 22 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Owner , OpenMeeting , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R39" , "Prohibition" , 0 , 7 , 17 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , SetMeetingModerator , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R40" , "Prohibition" , 0 , 1 , 23 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R41" , "Permission" , 0 , 8 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , Over , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R42" , "Permission" , 0 , 8 , 18 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Attendee , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R43" , "Permission" , 0 , 6 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , SetMeetingTitle , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R44" , "Permission" , 0 , 7 , 21 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Leave , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R45" , "Prohibition" , 0 , 1 , 14 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R46" , "Prohibition" , 0 , 1 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Update , UserAccount , WorkingDay)
		rule := createOrBACRuleByNum("R47" , "Prohibition" , 0 , 1 , 9 , 25 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R48" , "Permission" , 0 , 8 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Attendee , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R49" , "Permission" , 0 , 6 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Administrator , Delete , UserAccount , MaintenanceDay)
		rule := createOrBACRuleByNum("R50" , "Permission" , 0 , 2 , 10 , 25 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Update , UserAccount , WorkingDay)
		rule := createOrBACRuleByNum("R51" , "Prohibition" , 0 , 2 , 9 , 25 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , SetMeetingModerator , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R52" , "Permission" , 0 , 7 , 23 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , SetMeetingTitle , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R53" , "Prohibition" , 0 , 5 , 21 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Update , UserAccount , WorkingDay)
		rule := createOrBACRuleByNum("R54" , "Prohibition" , 0 , 5 , 9 , 25 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R55" , "Prohibition" , 0 , 2 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Webmaster , Update , UserAccount , MaintenanceDay)
		rule := createOrBACRuleByNum("R56" , "Permission" , 0 , 5 , 9 , 25 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Administrator , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R57" , "Permission" , 0 , 2 , 16 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Speak , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R58" , "Prohibition" , 0 , 2 , 12 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Administrator , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R59" , "Permission" , 0 , 2 , 16 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R60" , "Prohibition" , 0 , 5 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Delete , UserAccount , WorkingDay)
		rule := createOrBACRuleByNum("R61" , "Prohibition" , 0 , 1 , 10 , 25 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , SetMeetingTitle , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R62" , "Prohibition" , 0 , 1 , 21 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Attendee , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R63" , "Permission" , 0 , 6 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Personnel , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R64" , "Permission" , 0 , 1 , 16 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Personnel , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R65" , "Permission" , 0 , 1 , 16 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , SetMeetingAgenda , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R66" , "Prohibition" , 0 , 1 , 22 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , AttendeeActivity , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R67" , "Prohibition" , 0 , 1 , 11 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , OpenMeeting , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R68" , "Permission" , 0 , 8 , 17 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R69" , "Permission" , 0 , 7 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , CloseMeeting , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R70" , "Permission" , 0 , 7 , 15 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R71" , "Prohibition" , 0 , 2 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Owner , UpdateMeetingInfos , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R72" , "Prohibition" , 0 , 7 , 20 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , NonAttendee , Ask , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R73" , "Prohibition" , 0 , 4 , 13 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Ask , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R74" , "Prohibition" , 0 , 2 , 13 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , SetMeetingModerator , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R75" , "Prohibition" , 0 , 1 , 23 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R76" , "Prohibition" , 0 , 5 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , Ask , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R77" , "Prohibition" , 0 , 1 , 13 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , UpdateMeetingInfos , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R78" , "Prohibition" , 0 , 1 , 20 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R79" , "Prohibition" , 0 , 2 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Moderator , Over , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R80" , "Prohibition" , 0 , 8 , 18 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , Delete , UserAccount , WorkingDay)
		rule := createOrBACRuleByNum("R81" , "Prohibition" , 0 , 2 , 10 , 25 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , AttendeeActivity , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R82" , "Prohibition" , 0 , 2 , 11 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Owner , SetMeetingModerator , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R83" , "Prohibition" , 0 , 7 , 23 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Personnel , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R84" , "Prohibition" , 0 , 1 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Owner , CloseMeeting , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R85" , "Prohibition" , 0 , 7 , 15 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , UpdateMeetingInfos , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R86" , "Prohibition" , 0 , 5 , 20 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , SetMeetingModerator , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R87" , "Prohibition" , 0 , 5 , 23 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R88" , "Prohibition" , 0 , 5 , 10 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Moderator , CloseMeeting , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R89" , "Prohibition" , 0 , 8 , 15 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , SetMeetingTitle , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R90" , "Prohibition" , 0 , 2 , 21 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Owner , SetMeetingAgenda , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R91" , "Prohibition" , 0 , 7 , 22 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , AttendeeActivity , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R92" , "Prohibition" , 0 , 5 , 11 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Personnel , Delete , UserAccount , MaintenanceDay)
		rule := createOrBACRuleByNum("R93" , "Permission" , 0 , 1 , 10 , 25 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Owner , UpdateMeetingInfos , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R94" , "Permission" , 0 , 7 , 20 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , SetMeetingAgenda , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R95" , "Prohibition" , 0 , 5 , 22 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , AttendeeActivity , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R96" , "Permission" , 0 , 8 , 11 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Webmaster , Delete , UserAccount , MaintenanceDay)
		rule := createOrBACRuleByNum("R97" , "Permission" , 0 , 5 , 10 , 25 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R98" , "Prohibition" , 0 , 5 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Leave , Meeting , MaintenanceDay)
		rule := createOrBACRuleByNum("R99" , "Prohibition" , 0 , 5 , 14 , 26 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Attendee , Leave , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R100" , "Permission" , 0 , 6 , 14 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , Delete , UserAccount , WorkingDay)
		rule := createOrBACRuleByNum("R101" , "Prohibition" , 0 , 5 , 10 , 25 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Webmaster , SetMeetingModerator , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R102" , "Prohibition" , 0 , 5 , 23 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , HandOver , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R103" , "Permission" , 0 , 8 , 19 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Moderator , Speak , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R104" , "Permission" , 0 , 8 , 12 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(MeetingOrg , Administrator , SetMeetingModerator , Meeting , WorkingDay)
		rule := createOrBACRuleByNum("R105" , "Prohibition" , 0 , 2 , 23 , 26 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(MeetingOrg , Administrator , Update , UserAccount , MaintenanceDay)
		rule := createOrBACRuleByNum("R106" , "Permission" , 0 , 2 , 9 , 25 , 29 , policy)
		policy.rules.add(rule)
	
	// ************************************************ END of code automatically generated DO NOT MODIFY	
		
	end
	
	operation addRulesAndEntitiesForASMS(policy : Policy) is do
	
	var rule : Rule
	
	// ************************************************ Start: This code automatically generated DO NOT MODIFY
	
			addElementToPolicy("AuctionSale","org",policy)
		addElementToPolicy("User","role",policy)
		addElementToPolicy("Buyer","role",policy)
		addElementToPolicy("JuniorBuyer","role",policy)
		addElementToPolicy("SeniorBuyer","role",policy)
		addElementToPolicy("Seller","role",policy)
		addElementToPolicy("Personnel","role",policy)
		addElementToPolicy("Administrator","role",policy)
		addElementToPolicy("Moderator","role",policy)
		addElementToPolicy("Consult","activity",policy)
		addElementToPolicy("Update","activity",policy)
		addElementToPolicy("Delete","activity",policy)
		addElementToPolicy("ConsultOldBids","activity",policy)
		addElementToPolicy("UpdateMyInformations","activity",policy)
		addElementToPolicy("CheckMyAuctions","activity",policy)
		addElementToPolicy("EvaluateSeller","activity",policy)
		addElementToPolicy("EvaluateBuyer","activity",policy)
		addElementToPolicy("RaiseAuction","activity",policy)
		addElementToPolicy("PostComment","activity",policy)
		addElementToPolicy("CreateSale","activity",policy)
		addElementToPolicy("CancelSale","activity",policy)
		addElementToPolicy("CheckMySales","activity",policy)
		addElementToPolicy("Sale","view",policy)
		addElementToPolicy("Bid","view",policy)
		addElementToPolicy("Comment","view",policy)
		addElementToPolicy("UserAccount","view",policy)
		addElementToPolicy("PersonnelAccount","view",policy)
		addElementToPolicy("default","context",policy)
		addElementToPolicy("SaleOpenedMinor","context",policy)
		addElementToPolicy("SaleOpenedMajor","context",policy)
		addElementToPolicy("SaleClosed","context",policy)
		//  Prohibition(AuctionSale , SeniorBuyer , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R1" , "Prohibition" , 0 , 4 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , ConsultOldBids , Bid , default)
		rule := createOrBACRuleByNum("R2" , "Permission" , 0 , 8 , 12 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , UpdateMyInformations , UserAccount , default)
		rule := createOrBACRuleByNum("R3" , "Permission" , 0 , 4 , 13 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R4" , "Permission" , 0 , 6 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , UpdateMyInformations , UserAccount , default)
		rule := createOrBACRuleByNum("R5" , "Permission" , 0 , 2 , 13 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R6" , "Permission" , 0 , 5 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R7" , "Prohibition" , 0 , 1 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Delete , Comment , default)
		rule := createOrBACRuleByNum("R8" , "Prohibition" , 0 , 2 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Consult , Sale , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R9" , "Prohibition" , 0 , 3 , 9 , 22 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Update , Bid , default)
		rule := createOrBACRuleByNum("R10" , "Permission" , 0 , 7 , 10 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R11" , "Prohibition" , 0 , 1 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Consult , Comment , default)
		rule := createOrBACRuleByNum("R12" , "Permission" , 0 , 6 , 9 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Consult , Bid , default)
		rule := createOrBACRuleByNum("R13" , "Permission" , 0 , 6 , 9 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R14" , "Prohibition" , 0 , 5 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , RaiseAuction , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R15" , "Permission" , 0 , 4 , 17 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Update , Bid , default)
		rule := createOrBACRuleByNum("R16" , "Permission" , 0 , 8 , 10 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , SeniorBuyer , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R17" , "Prohibition" , 0 , 4 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R18" , "Prohibition" , 0 , 5 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , Consult , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R19" , "Permission" , 0 , 2 , 9 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Delete , Comment , default)
		rule := createOrBACRuleByNum("R20" , "Prohibition" , 0 , 5 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Update , Comment , default)
		rule := createOrBACRuleByNum("R21" , "Permission" , 0 , 7 , 10 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , RaiseAuction , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R22" , "Permission" , 0 , 3 , 17 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Delete , Comment , default)
		rule := createOrBACRuleByNum("R23" , "Permission" , 0 , 6 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , Consult , Sale , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R24" , "Permission" , 0 , 3 , 9 , 22 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Delete , Bid , default)
		rule := createOrBACRuleByNum("R25" , "Prohibition" , 0 , 1 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Delete , Comment , default)
		rule := createOrBACRuleByNum("R26" , "Permission" , 0 , 8 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , Sale , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R27" , "Permission" , 0 , 4 , 9 , 22 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Consult , Bid , default)
		rule := createOrBACRuleByNum("R28" , "Permission" , 0 , 8 , 9 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , SeniorBuyer , Delete , Sale , default)
		rule := createOrBACRuleByNum("R29" , "Prohibition" , 0 , 4 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R30" , "Permission" , 0 , 8 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , PostComment , Comment , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R31" , "Permission" , 0 , 5 , 18 , 24 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , Sale , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R32" , "Permission" , 0 , 4 , 9 , 22 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R33" , "Permission" , 0 , 2 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , RaiseAuction , Bid , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R34" , "Permission" , 0 , 4 , 17 , 23 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , RaiseAuction , Bid , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R35" , "Prohibition" , 0 , 3 , 17 , 23 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , EvaluateBuyer , UserAccount , SaleClosed)
		rule := createOrBACRuleByNum("R36" , "Permission" , 0 , 5 , 16 , 25 , 30 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R37" , "Permission" , 0 , 7 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , Comment , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R38" , "Permission" , 0 , 4 , 9 , 24 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , CancelSale , Bid , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R39" , "Permission" , 0 , 5 , 20 , 23 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R40" , "Permission" , 0 , 7 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , EvaluateSeller , UserAccount , SaleClosed)
		rule := createOrBACRuleByNum("R41" , "Permission" , 0 , 4 , 15 , 25 , 30 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , RaiseAuction , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R42" , "Permission" , 0 , 2 , 17 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R43" , "Prohibition" , 0 , 2 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , SeniorBuyer , Delete , Comment , default)
		rule := createOrBACRuleByNum("R44" , "Prohibition" , 0 , 4 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R45" , "Prohibition" , 0 , 3 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R46" , "Prohibition" , 0 , 2 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Delete , Bid , default)
		rule := createOrBACRuleByNum("R47" , "Permission" , 0 , 7 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , PostComment , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R48" , "Permission" , 0 , 4 , 18 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , User , UpdateMyInformations , UserAccount , default)
		rule := createOrBACRuleByNum("R49" , "Permission" , 0 , 1 , 13 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Delete , Sale , default)
		rule := createOrBACRuleByNum("R50" , "Permission" , 0 , 8 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R51" , "Permission" , 0 , 7 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Consult , Bid , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R52" , "Prohibition" , 0 , 3 , 9 , 23 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R53" , "Permission" , 0 , 4 , 9 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Delete , Bid , default)
		rule := createOrBACRuleByNum("R54" , "Permission" , 0 , 8 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R55" , "Permission" , 0 , 8 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R56" , "Prohibition" , 0 , 3 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Delete , UserAccount , default)
		rule := createOrBACRuleByNum("R57" , "Prohibition" , 0 , 2 , 11 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , PostComment , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R58" , "Permission" , 0 , 3 , 18 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Moderator , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R59" , "Prohibition" , 0 , 8 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R60" , "Permission" , 0 , 6 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Update , Bid , default)
		rule := createOrBACRuleByNum("R61" , "Permission" , 0 , 6 , 10 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Delete , Comment , default)
		rule := createOrBACRuleByNum("R62" , "Prohibition" , 0 , 1 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Update , UserAccount , default)
		rule := createOrBACRuleByNum("R63" , "Permission" , 0 , 7 , 10 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , Update , Bid , default)
		rule := createOrBACRuleByNum("R64" , "Permission" , 0 , 5 , 10 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R65" , "Permission" , 0 , 7 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Consult , Sale , default)
		rule := createOrBACRuleByNum("R66" , "Permission" , 0 , 6 , 9 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R67" , "Permission" , 0 , 4 , 9 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R68" , "Permission" , 0 , 4 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Update , Sale , default)
		rule := createOrBACRuleByNum("R69" , "Permission" , 0 , 6 , 10 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R70" , "Prohibition" , 0 , 1 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , Update , Sale , default)
		rule := createOrBACRuleByNum("R71" , "Permission" , 0 , 5 , 10 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , SeniorBuyer , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R72" , "Prohibition" , 0 , 4 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Update , Sale , default)
		rule := createOrBACRuleByNum("R73" , "Permission" , 0 , 7 , 10 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , Update , Comment , default)
		rule := createOrBACRuleByNum("R74" , "Permission" , 0 , 5 , 10 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , CreateSale , Bid , default)
		rule := createOrBACRuleByNum("R75" , "Permission" , 0 , 5 , 19 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Delete , Sale , default)
		rule := createOrBACRuleByNum("R76" , "Prohibition" , 0 , 3 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Consult , Comment , default)
		rule := createOrBACRuleByNum("R77" , "Permission" , 0 , 8 , 9 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R78" , "Prohibition" , 0 , 3 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R79" , "Prohibition" , 0 , 5 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , PostComment , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R80" , "Permission" , 0 , 2 , 18 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , SeniorBuyer , Delete , Bid , default)
		rule := createOrBACRuleByNum("R81" , "Prohibition" , 0 , 4 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R82" , "Prohibition" , 0 , 3 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Update , UserAccount , default)
		rule := createOrBACRuleByNum("R83" , "Permission" , 0 , 8 , 10 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R84" , "Permission" , 0 , 3 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , Consult , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R85" , "Permission" , 0 , 2 , 9 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Update , Comment , default)
		rule := createOrBACRuleByNum("R86" , "Permission" , 0 , 8 , 10 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Update , UserAccount , default)
		rule := createOrBACRuleByNum("R87" , "Permission" , 0 , 6 , 10 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , UpdateMyInformations , UserAccount , default)
		rule := createOrBACRuleByNum("R88" , "Permission" , 0 , 5 , 13 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Consult , Bid , default)
		rule := createOrBACRuleByNum("R89" , "Permission" , 0 , 7 , 9 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Delete , Bid , default)
		rule := createOrBACRuleByNum("R90" , "Prohibition" , 0 , 3 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , Consult , Bid , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R91" , "Permission" , 0 , 5 , 9 , 23 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Delete , Bid , default)
		rule := createOrBACRuleByNum("R92" , "Prohibition" , 0 , 2 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , ConsultOldBids , Bid , default)
		rule := createOrBACRuleByNum("R93" , "Permission" , 0 , 7 , 12 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , Consult , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R94" , "Permission" , 0 , 3 , 9 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , Consult , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R95" , "Permission" , 0 , 3 , 9 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Delete , Sale , default)
		rule := createOrBACRuleByNum("R96" , "Prohibition" , 0 , 5 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , UpdateMyInformations , UserAccount , default)
		rule := createOrBACRuleByNum("R97" , "Permission" , 0 , 3 , 13 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R98" , "Permission" , 0 , 8 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , SeniorBuyer , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R99" , "Prohibition" , 0 , 4 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Delete , Sale , default)
		rule := createOrBACRuleByNum("R100" , "Prohibition" , 0 , 1 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , Consult , Bid , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R101" , "Permission" , 0 , 4 , 9 , 23 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Delete , Sale , default)
		rule := createOrBACRuleByNum("R102" , "Permission" , 0 , 6 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Update , Comment , default)
		rule := createOrBACRuleByNum("R103" , "Permission" , 0 , 6 , 10 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , SeniorBuyer , PostComment , Comment , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R104" , "Permission" , 0 , 4 , 18 , 24 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , CancelSale , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R105" , "Permission" , 0 , 5 , 20 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R106" , "Permission" , 0 , 6 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Delete , Comment , default)
		rule := createOrBACRuleByNum("R107" , "Prohibition" , 0 , 3 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , PostComment , Comment , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R108" , "Prohibition" , 0 , 3 , 18 , 24 , 29 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , JuniorBuyer , Consult , Comment , SaleOpenedMajor)
		rule := createOrBACRuleByNum("R109" , "Prohibition" , 0 , 3 , 9 , 24 , 29 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , EvaluateSeller , UserAccount , SaleClosed)
		rule := createOrBACRuleByNum("R110" , "Permission" , 0 , 2 , 15 , 25 , 30 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R111" , "Permission" , 0 , 6 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Consult , UserAccount , default)
		rule := createOrBACRuleByNum("R112" , "Permission" , 0 , 8 , 9 , 25 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , Delete , Bid , default)
		rule := createOrBACRuleByNum("R113" , "Permission" , 0 , 6 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Delete , Sale , default)
		rule := createOrBACRuleByNum("R114" , "Prohibition" , 0 , 2 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Update , Sale , default)
		rule := createOrBACRuleByNum("R115" , "Permission" , 0 , 8 , 10 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Delete , Sale , default)
		rule := createOrBACRuleByNum("R116" , "Permission" , 0 , 7 , 11 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Delete , Comment , default)
		rule := createOrBACRuleByNum("R117" , "Permission" , 0 , 7 , 11 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Buyer , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R118" , "Prohibition" , 0 , 2 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Personnel , ConsultOldBids , Bid , default)
		rule := createOrBACRuleByNum("R119" , "Permission" , 0 , 6 , 12 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , PostComment , Comment , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R120" , "Permission" , 0 , 5 , 18 , 24 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Update , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R121" , "Prohibition" , 0 , 5 , 10 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Consult , Sale , default)
		rule := createOrBACRuleByNum("R122" , "Permission" , 0 , 7 , 9 , 22 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Consult , Comment , default)
		rule := createOrBACRuleByNum("R123" , "Permission" , 0 , 7 , 9 , 24 , 27 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , User , Consult , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R124" , "Prohibition" , 0 , 1 , 9 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Buyer , Consult , Sale , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R125" , "Permission" , 0 , 2 , 9 , 22 , 28 , policy)
		policy.rules.add(rule)
		//  Prohibition(AuctionSale , Seller , Delete , Bid , default)
		rule := createOrBACRuleByNum("R126" , "Prohibition" , 0 , 5 , 11 , 23 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Administrator , Delete , PersonnelAccount , default)
		rule := createOrBACRuleByNum("R127" , "Permission" , 0 , 7 , 11 , 26 , 27 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , JuniorBuyer , EvaluateSeller , UserAccount , SaleClosed)
		rule := createOrBACRuleByNum("R128" , "Permission" , 0 , 3 , 15 , 25 , 30 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Seller , Consult , Bid , SaleOpenedMinor)
		rule := createOrBACRuleByNum("R129" , "Permission" , 0 , 5 , 9 , 23 , 28 , policy)
		policy.rules.add(rule)
		//  Permission(AuctionSale , Moderator , Consult , Sale , default)
		rule := createOrBACRuleByNum("R130" , "Permission" , 0 , 8 , 9 , 22 , 27 , policy)
		policy.rules.add(rule)
	
	
	// ************************************************ END of code automatically generated DO NOT MODIFY	
		
	end

	operation main() : Void is do 
		// TODO: implement 'main' operation
	end
}