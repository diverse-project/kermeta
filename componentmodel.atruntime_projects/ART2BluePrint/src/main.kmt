/* $Id:$ 
 * Creation : February 2, 2010
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            bmorin
 */
@mainClass "root_package::Main"
@mainOperation "main"


package root_package;


require kermeta

require "http://art"
require "./ket/art2bp.kmt"

using kermeta::persistence
using kermeta::standard
using kermeta::io

using art
using art::instance

using art2bp

class Main
{
	operation main() : Void is do 
		var model : String init "platform:/resource/ART2BluePrint/model/test.art"
		var mySystem : art::System init loadARTsystem(model)
		
		var xmlGenerator : XMLGenerator init XMLGenerator.new
		var fileIO : FileIO init FileIO.new 
		
		mySystem.root.subComponent.each{ cpt |
			stdio.writeln("generating BluePrint XML file for component "+cpt.name)
			stdio.writeln(xmlGenerator.generate(cpt.asType(PrimitiveInstance)))
			//fileIO.writeTextFile(cpt.name+".xml",xmlGenerator.generate(cpt.asType(PrimitiveInstance)))
		}
	end
	
	operation loadARTsystem(model : String) : art::System is
	do
		var res : Resource init EMFRepository.new.createResource(model, "platform:/resource/ART2BluePrint/metamodel/metamodel@runtime.ecore"/*"http://art"*/)
		res.load
		result := res.one.asType(art::System)	
	end
}