<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EPackage name="kermeta" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kermeta_temp_uri" nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta"/>
    </eAnnotations>
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xA; * The root package. See the other packages if you want to browse the classes of Kermeta api.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kermeta_packages.png&quot;/>&#xA; */"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="/0/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
      </eAnnotations>
    </eClassifiers>
    <eSubpackages name="standard" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/standard/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/standard"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains types dedicated to dealing with java objects&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Defines value types &#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/primitive_types_view.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Defines Collection types &#xA; * &lt;img src=&quot;./figures/collections_view.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Collection" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=values javaClass=org.eclipse.emf.common.util.EList"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Collection is the root abstract class for all kermeta collections&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds an element in the Collection (default implementation)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="size" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the number of elements in the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.size(this), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="count" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the number of instances of element in the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_ft1 = null;&#xA;&#xA;&#x9;G elem_ft1 = null;&#xA;&#xA;&#x9;result_ft1 = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft1 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1 = false;&#xA;&#x9;while( !idLoopCond_1 ) {&#xA;&#x9;idLoopCond_1 = it_ft1.isOff();&#xA;&#x9;if ( idLoopCond_1 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft1 = it_ft1.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_2 = false;&#xA;//BIle:selector&#xA;G e_lbdExp1 = elem_ft1;&#xA;&#xA;&#x9;idIfCond_2 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp1, element);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_2 ) {&#xA;&#xA;&#x9;result_ft1.add(elem_ft1);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;result = result_ft1.size();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="contains" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least one&#xA;&#x9; * instance of element, based on G.equals(elt : Object) definition&#xA;&#x9; * Note: for checking whether a physical element is contained by the collection,&#xA;&#x9; * make use of G.oid()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_3 = false;&#xA;&#x9;while( !idLoopCond_3 ) {&#xA;&#x9;idLoopCond_3 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), result);&#xA;&#x9;if ( idLoopCond_3 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(it.next(), element);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes all instances of element from the Collection, based on&#xA;&#x9; * G.equals(Object) definition&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;//BIft:detect&#xA;&#xA;G result_ft2 = null;&#xA;&#xA;&#x9;G elem_ft2 = null;&#xA;&#xA;&#x9;result_ft2 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft2 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_5 = false;&#xA;&#x9;while( !idLoopCond_5 ) {&#xA;&#x9;idLoopCond_5 = kermeta.standard.helper.BooleanWrapper.or(it_ft2.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft2, null));&#xA;&#x9;if ( idLoopCond_5 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft2 = it_ft2.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_6 = false;&#xA;//BIle:detector&#xA;G e_lbdExp2 = elem_ft2;&#xA;&#xA;&#x9;idIfCond_6 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp2, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_6 ) {&#xA;&#xA;&#x9;result_ft2 = elem_ft2;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft2;&#xA;//EIft:detect&#xA;&#xA;&#x9;java.lang.Boolean idLoopCond_4 = false;&#xA;&#x9;while( !idLoopCond_4 ) {&#xA;&#x9;idLoopCond_4 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(elem, null);&#xA;&#x9;if ( idLoopCond_4 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;G result_ft3 = null;&#xA;&#xA;&#x9;G elem_ft3 = null;&#xA;&#xA;&#x9;result_ft3 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft3 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_7 = false;&#xA;&#x9;while( !idLoopCond_7 ) {&#xA;&#x9;idLoopCond_7 = kermeta.standard.helper.BooleanWrapper.or(it_ft3.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft3, null));&#xA;&#x9;if ( idLoopCond_7 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft3 = it_ft3.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_8 = false;&#xA;//BIle:detector&#xA;G e_lbdExp3 = elem_ft3;&#xA;&#xA;&#x9;idIfCond_8 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp3, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_8 ) {&#xA;&#xA;&#x9;result_ft3 = elem_ft3;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft3;&#xA;//EIft:detect&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__14829186__doesntContainsElementAnymore&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;result_post = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="addAll">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds all elements from the Collection elements in the current Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft4 = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_9 = false;&#xA;&#x9;while( !idLoopCond_9 ) {&#xA;&#x9;idLoopCond_9 = it_ft4.isOff();&#xA;&#x9;if ( idLoopCond_9 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G element_lbdExp4 = it_ft4.next();&#xA;&#xA;&#x9;this.add(element_lbdExp4);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Sequence built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new OrderedSet built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="excludes" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the Collection does not contain element&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="one">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an element from the Collection or void if the Collection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_10 = false;&#xA;&#x9;idIfCond_10 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_10 ) {&#xA;&#xA;&#x9;result = null;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/Collection/G"/>
        </eOperations>
        <eOperations name="containsAll" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if current Collection contains all elements of Collection elements&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_11 = false;&#xA;&#x9;while( !idLoopCond_11 ) {&#xA;&#x9;idLoopCond_11 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( idLoopCond_11 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = this.contains(it.next());&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="sum">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Sum the element if they are summable (ie implement '+' operator by inheriting of the class Summable)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;G res = null;&#xA;&#xA;&#x9;kermeta.standard.Summable&lt;G> tmp = null;&#xA;&#xA;&#x9;G o = null;&#xA;&#xA;&#x9;o = this.one();&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(o, &quot;kermeta.standard.Summable&lt;G>&quot;);&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_12 = false;&#xA;&#x9;idIfCond_12 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tmp, null);&#xA;&#xA;&#x9;if( idIfCond_12 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft5 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_13 = false;&#xA;&#x9;while( !idLoopCond_13 ) {&#xA;&#x9;idLoopCond_13 = it_ft5.isOff();&#xA;&#x9;if ( idLoopCond_13 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G elem_lbdExp5 = it_ft5.next();&#xA;&#xA;&#x9;o = elem_lbdExp5;&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(o, &quot;kermeta.standard.Summable&lt;G>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_14 = false;&#xA;&#x9;idIfCond_14 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tmp, null);&#xA;&#xA;&#x9;if( idIfCond_14 ) {&#xA;&#xA;&#x9;res = tmp.plus(res);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/Collection/G"/>
        </eOperations>
        <eOperations name="excludesAll" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the Collection contains no element of Collection elements&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_15 = false;&#xA;&#x9;while( !idLoopCond_15 ) {&#xA;&#x9;idLoopCond_15 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( idLoopCond_15 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(it.next()));&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="includes" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL API alignment, doeas the same as contains&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.contains(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes all elements from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="empty" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Collection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isEmpty" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL alignment API, does the same as empty&#xA;&#x9; * See Collection&lt;G>.empty()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.empty();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="any">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an element from the Collection&#xA;&#x9; * Raises an EmptyCollection exception if the Collection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_16 = false;&#xA;&#x9;idIfCond_16 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_16 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/Collection/G"/>
        </eOperations>
        <eOperations name="isNotEmpty" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL alignment API&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least&#xA;&#x9; * one element &#xA;&#x9; * See also Collection&lt;G>.contains(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.empty());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="iterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an Iterator on the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Iterator&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getIterator()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.iterator(this, result);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Iterator">
            <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="includesAll" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL API alignment, does the same as containsAll&#xA;&#x9; * See Collection&lt;G>.containsAll(Collection&lt;G>)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.containsAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="values">
          <eGenericType eClassifier="/0/standard/KermetaProperty_Collection_values">
            <eTypeArguments eTypeParameter="/0/standard/Collection/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Iterator" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=javaIterator javaClass=java.util.Iterator"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=kermetaCollection classDefinitionQN=kermeta::standard::Collection"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Iterator to be used with Collection&#xA; * See also Collection&lt;G>.getIterator()&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="hasNext" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the iterator has a next element&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.hasNext(this), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="next">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the next element of the iterator&#xA;&#x9; * Raises IteratorIsOff exception in case the iterator is on the last element &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_17 = false;&#xA;&#x9;idIfCond_17 = kermeta.standard.helper.BooleanWrapper.not(this.hasNext());&#xA;&#xA;&#x9;if( idIfCond_17 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IteratorIsOff) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIteratorIsOff())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.next(this), &quot;G&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/Iterator/G"/>
        </eOperations>
        <eOperations name="isOff" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the iterator is on the last element&#xA;&#x9; * i.e. returns not self.hasNext()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.hasNext());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="javaIterator">
          <eGenericType eClassifier="/0/standard/KermetaProperty_Iterator_javaIterator">
            <eTypeArguments eTypeParameter="/0/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="kermetaCollection">
          <eGenericType eClassifier="/0/standard/Collection">
            <eTypeArguments eTypeParameter="/0/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValueType" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=value javaClass=java.lang.String"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstract class ValueType does not contain any feature.&#xA; * However, any instance of a sub-class of ValueType will be passed by value &#xA; * instead of by reference for any other objects.&#xA; * that means that each time you := such object it will call the clone function associated to it (Not implemented yet except for Integer, String and boolean!!!)&#xA; * &#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="/0/standard/KermetaProperty_ValueType_value"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comparable" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstract class Comparable defines a set of operation&#xA; * to compare instances of a class.&#xA; * Sub-classes only has to implement abstract operation compareTo.&#xA; * All other methods are defined w.r.t. the compareTo operation&#xA; */"/>
        </eAnnotations>
        <eOperations name="compareTo" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * This method should be implemented by any class that inherits&#xA;&#x9; * from Comparable.&#xA;&#x9; * returns 0 if self = other&#xA;&#x9; * returns > 0 if  self > other&#xA;&#x9; * returns &lt; 0 if  self &lt; other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="java.lang.Integer result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="isLowerOrEqual" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self &lt;= other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreater" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self > other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreaterOrEqual" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self >= other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="isLower" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self &lt; other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="/0/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Summable" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstract class Summable defines a set of operation&#xA; * to sum instances of a class.&#xA; * Sub-classes only has to implement abstract operation plus.&#xA;  */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="plus">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Summarization method to be implemented by any summable class.&#xA;&#x9; * The parameter must have the same type (or one of its subtypes)&#xA;&#x9; *  than the current object .&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="G result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/Summable/G"/>
          <eParameters name="other">
            <eGenericType eTypeParameter="/0/standard/Summable/G"/>
          </eParameters>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaBoolean" instanceClassName="java.lang.Boolean"/>
      <eClassifiers xsi:type="ecore:EClass" name="Boolean" eSuperTypes="/0/standard/ValueType"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaNumeric" instanceClassName="java.lang.Number"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaInteger" instanceClassName="java.lang.Integer"/>
      <eClassifiers xsi:type="ecore:EClass" name="Integer" eSuperTypes="/0/standard/ValueType"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaReal" instanceClassName="java.lang.Double"/>
      <eClassifiers xsi:type="ecore:EClass" name="Real" eSuperTypes="/0/standard/ValueType"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaCharacter" instanceClassName="java.lang.Character"/>
      <eClassifiers xsi:type="ecore:EClass" name="Character" eSuperTypes="/0/standard/ValueType"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaString" instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EClass" name="String" eSuperTypes="/0/standard/ValueType"/>
      <eClassifiers xsi:type="ecore:EClass" name="UnknownJavaObject" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xA;  * This special object is used to represent java objects that cannot be concretely used with kermeta&#xA;  * &lt;b>the only actions possible on these objects are : assignment and passing them as parameter&lt;/b>&#xA;  * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xA;  */"/>
        </eAnnotations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; &#x9; * NOT IMPLEMENTED&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;toString of  UnknownJavaObject not implemented yet&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Void" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The class Void &#xA; * By convention it is a sub-type of everything&#xA; */"/>
        </eAnnotations>
        <eOperations name="isVoid" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return true&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isInstanceOf" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="type" eType="/0/language/structure/Type"/>
        </eOperations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the String identifier '&lt;void>'&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&lt;void>&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotComparableException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * raised when two objects are not comparable&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Integer">
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::standard::Integer"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Unlimited natural is used for reflection.&#xA; * It is mapped to integer.equals().&#xA; * Any negative number is interpreted as '*'&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceClassName="java.lang.Object">
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::language::structure::Object"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="deprecated" value="please use directly kermeta::language::structure::Object"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Set">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A Set is a non-ordered collection that contains distinct elements&#xA; * (with regards to the G.equals(Object) operation)&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.add(G)&#xA;&#x9; * Adds elt to the Set if it is not already contained by the&#xA;&#x9; * Set, does nothing otherwise&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_164 = false;&#xA;&#x9;idIfCond_164 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( idIfCond_164 ) {&#xA;&#xA;&#x9;super.add(element);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the intersection of the Set elements&#xA;&#x9; * with the current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_165 = false;&#xA;&#x9;while( !idLoopCond_165 ) {&#xA;&#x9;idLoopCond_165 = it.isOff();&#xA;&#x9;if ( idLoopCond_165 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_166 = false;&#xA;&#x9;idIfCond_166 = elements.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_166 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="minus">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the difference between the&#xA;&#x9; * current Set and the Set elements, ie all elements contained by &#xA;&#x9; * the current Set that do not appear in the elements Set &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_167 = false;&#xA;&#x9;while( !idLoopCond_167 ) {&#xA;&#x9;idLoopCond_167 = it.isOff();&#xA;&#x9;if ( idLoopCond_167 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_168 = false;&#xA;&#x9;idIfCond_168 = kermeta.standard.helper.BooleanWrapper.not(elements.contains(elem));&#xA;&#xA;&#x9;if( idIfCond_168 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Set">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.remove(G)&#xA;&#x9; * Removes the element from the Set if it is contained by the Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft41 = null;&#xA;&#xA;&#x9;G elem_ft41 = null;&#xA;&#xA;&#x9;result_ft41 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft41 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_169 = false;&#xA;&#x9;while( !idLoopCond_169 ) {&#xA;&#x9;idLoopCond_169 = kermeta.standard.helper.BooleanWrapper.or(it_ft41.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft41, null));&#xA;&#x9;if ( idLoopCond_169 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft41 = it_ft41.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_170 = false;&#xA;//BIle:detector&#xA;G e_lbdExp41 = elem_ft41;&#xA;&#xA;&#x9;idIfCond_170 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp41, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_170 ) {&#xA;&#xA;&#x9;result_ft41 = elem_ft41;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft41;&#xA;//EIft:detect&#xA;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_171 = false;&#xA;&#x9;idIfCond_171 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_171 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Object.equals(Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_172 = false;&#xA;&#x9;idIfCond_172 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_172 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_173 = false;&#xA;&#x9;idIfCond_173 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_173 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.standard.Collection&lt;G>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_174 = false;&#xA;&#x9;idIfCond_174 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_174 ) {&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;java.lang.Boolean ok = true;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_175 = false;&#xA;&#x9;while( !idLoopCond_175 ) {&#xA;&#x9;idLoopCond_175 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(ok));&#xA;&#x9;if ( idLoopCond_175 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_176 = false;&#xA;&#x9;idIfCond_176 = kermeta.standard.helper.BooleanWrapper.not(collection.contains(elem));&#xA;&#xA;&#x9;if( idIfCond_176 ) {&#xA;&#xA;&#x9;ok = false;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;isEqual = ok;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xA;&#x9; * Returns a new Sequence composed of all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="symmetricDifference">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set which contents corresponds to the symmetric&#xA;&#x9; * difference between current Set and Set s, ie all elements of&#xA;&#x9; * each Set that do not appear in the other one&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> res = s.minus(this);&#xA;&#xA;&#x9;result = this.minus(s);&#xA;&#xA;&#x9;result.addAll(res);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
          <eParameters name="s">
            <eGenericType eClassifier="/0/standard/Set">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a ordered set of the bag elements sorted using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Recursive sort of the given (ordered) set using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="/0/standard/OrderedSet">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="/0/standard/OrderedSet">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="/0/standard/OrderedSet">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set which content includes all non-Collection elements&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xA;&#x9; * Set, as many elements as the Collection contains&#xA;&#x9; * Duplicates are removed&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_177 = false;&#xA;&#x9;idIfCond_177 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;G&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;if( idIfCond_177 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft42 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_178 = false;&#xA;&#x9;while( !idLoopCond_178 ) {&#xA;&#x9;idLoopCond_178 = it_ft42.isOff();&#xA;&#x9;if ( idLoopCond_178 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G e_lbdExp42 = it_ft42.next();&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(e_lbdExp42, &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;res.addAll(col);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eClassifier="/0/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xA;&#x9; * Returns a new OrderedSet that contains all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xA;&#x9; * Returns a new Bag composed of all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the union of the Set elements&#xA;&#x9; * with the current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Set">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xA;&#x9; * Returns a new Set composed of all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="unionWithBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag corresponding to the union of the Bag elements&#xA;&#x9; * with the current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Bag">
              <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Collection">
          <eTypeArguments eTypeParameter="/0/standard/Set/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Bag">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Bag is a concrete non-ordered Collection allowing duplicates&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag corresponding to the intersection of elements&#xA;&#x9; * and the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_179 = false;&#xA;&#x9;while( !idLoopCond_179 ) {&#xA;&#x9;idLoopCond_179 = it.isOff();&#xA;&#x9;if ( idLoopCond_179 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_180 = false;&#xA;&#x9;idIfCond_180 = elements.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_180 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_181 = false;&#xA;&#x9;idIfCond_181 = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.count(elem), elements.count(elem));&#xA;&#xA;&#x9;if( idIfCond_181 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;it = elements.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_182 = false;&#xA;&#x9;while( !idLoopCond_182 ) {&#xA;&#x9;idLoopCond_182 = it.isOff();&#xA;&#x9;if ( idLoopCond_182 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_183 = false;&#xA;&#x9;idIfCond_183 = this.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_183 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_184 = false;&#xA;&#x9;idIfCond_184 = kermeta.standard.helper.IntegerWrapper.isLower(elements.count(elem), this.count(elem));&#xA;&#xA;&#x9;if( idIfCond_184 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Bag">
              <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xA;&#x9; * Returns a new Set containing elements of the Bag without duplicates&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="equals" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Object.equals(elt : Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_185 = false;&#xA;&#x9;idIfCond_185 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_185 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_186 = false;&#xA;&#x9;idIfCond_186 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_186 ) {&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> selfAsSet = this.asSet();&#xA;&#xA;&#x9;isEqual = selfAsSet.equals(collection.asSet());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xA;&#x9; * Returns a new Sequence containing all elements of current Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a sequence of the bag elements sorted using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Recursive sort of the given sequence using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="/0/standard/Sequence">
              <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="/0/standard/Sequence">
              <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="/0/standard/Sequence">
              <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="excluding">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xA;&#x9; * current Bag from which all instances of object have been&#xA;&#x9; * removed&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.remove(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="/0/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="intersectionWithSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the intersection of a Set of&#xA;&#x9; * elements and the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_187 = false;&#xA;&#x9;while( !idLoopCond_187 ) {&#xA;&#x9;idLoopCond_187 = it.isOff();&#xA;&#x9;if ( idLoopCond_187 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_188 = false;&#xA;&#x9;idIfCond_188 = this.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_188 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Set">
              <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag which content includes all non-Collection elements&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xA;&#x9; * Bag, as many elements as the Collection contains&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Bag&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_189 = false;&#xA;&#x9;idIfCond_189 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;G&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;if( idIfCond_189 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft43 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_190 = false;&#xA;&#x9;while( !idLoopCond_190 ) {&#xA;&#x9;idLoopCond_190 = it_ft43.isOff();&#xA;&#x9;if ( idLoopCond_190 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G e_lbdExp43 = it_ft43.next();&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(e_lbdExp43, &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;res.addAll(col);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eClassifier="/0/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="including">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xA;&#x9; * current Bag and the element object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.add(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="/0/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xA;&#x9; * Returns a new OrderedSet containing elements of the Bag without duplicates&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xA;&#x9; * Returns a new Bag containing all elements of current Bag&#x9;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag corresponding to the union of elements and&#xA;&#x9; * current Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Bag">
            <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="removeOne">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes one instance of element from the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft44 = null;&#xA;&#xA;&#x9;G elem_ft44 = null;&#xA;&#xA;&#x9;result_ft44 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft44 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_191 = false;&#xA;&#x9;while( !idLoopCond_191 ) {&#xA;&#x9;idLoopCond_191 = kermeta.standard.helper.BooleanWrapper.or(it_ft44.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft44, null));&#xA;&#x9;if ( idLoopCond_191 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft44 = it_ft44.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_192 = false;&#xA;//BIle:detector&#xA;G e_lbdExp44 = elem_ft44;&#xA;&#xA;&#x9;idIfCond_192 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp44, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_192 ) {&#xA;&#xA;&#x9;result_ft44 = elem_ft44;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft44;&#xA;//EIft:detect&#xA;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_193 = false;&#xA;&#x9;idIfCond_193 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_193 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeFromOid">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes the element identified by the provided Oid from the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft45 = null;&#xA;&#xA;&#x9;G elem_ft45 = null;&#xA;&#xA;&#x9;result_ft45 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft45 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_194 = false;&#xA;&#x9;while( !idLoopCond_194 ) {&#xA;&#x9;idLoopCond_194 = kermeta.standard.helper.BooleanWrapper.or(it_ft45.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft45, null));&#xA;&#x9;if ( idLoopCond_194 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft45 = it_ft45.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_195 = false;&#xA;//BIle:detector&#xA;G e_lbdExp45 = elem_ft45;&#xA;&#xA;&#x9;idIfCond_195 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(e_lbdExp45), elementOid);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_195 ) {&#xA;&#xA;&#x9;result_ft45 = elem_ft45;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft45;&#xA;//EIft:detect&#xA;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_196 = false;&#xA;&#x9;idIfCond_196 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_196 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__31535205__doesntContainsElementAnymore&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft46 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft46 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft46 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_197 = false;&#xA;&#x9;while( !idLoopCond_197 ) {&#xA;&#x9;idLoopCond_197 = kermeta.standard.helper.BooleanWrapper.or(it_ft46.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft46, false));&#xA;&#x9;if ( idLoopCond_197 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft46 = null;&#xA;//BIle:func&#xA;G e_lbdExp46 = it_ft46.next();&#xA;&#xA;&#x9;result_lambda_ft46 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(e_lbdExp46), elementOid);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft46 = kermeta.standard.helper.BooleanWrapper.or(test_ft46, result_lambda_ft46);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft46 = test_ft46;&#xA;//EIft:exists&#xA;result_post = kermeta.standard.helper.BooleanWrapper.not(result_ft46);&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="elementOid" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Collection">
          <eTypeArguments eTypeParameter="/0/standard/Bag/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedCollection" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An OrderedCollection is the root abstract class for all ordered Collections.&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds element in the OrderedCollection at rank index&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_198 = false;&#xA;&#x9;idIfCond_198 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_198 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes the element at rank index from the OrderedCollection&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_199 = false;&#xA;&#x9;idIfCond_199 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1)));&#xA;&#xA;&#x9;if( idIfCond_199 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="elementAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the element at rank index in the OrderedCollection&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_200 = false;&#xA;&#x9;idIfCond_200 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1)));&#xA;&#xA;&#x9;if( idIfCond_200 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.elementAt(this, index), &quot;G&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/OrderedCollection/G"/>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="last">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the last element in the OrderedCollection&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_201 = false;&#xA;&#x9;idIfCond_201 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_201 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.elementAt(kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/OrderedCollection/G"/>
        </eOperations>
        <eOperations name="equals" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Object.equals(Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_202 = false;&#xA;&#x9;idIfCond_202 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_202 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_203 = false;&#xA;&#x9;idIfCond_203 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_203 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.standard.Collection&lt;G>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_204 = false;&#xA;&#x9;idIfCond_204 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_204 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = this.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_205 = false;&#xA;&#x9;while( !idLoopCond_205 ) {&#xA;&#x9;idLoopCond_205 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_205 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_206 = false;&#xA;&#x9;idIfCond_206 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_206 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="indexOf" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * Returns the index of the first instance of element in the OrderedCollection&#xA;&#x9; * or -1 if the element is not contained by the OrderedCollection&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_207 = false;&#xA;&#x9;idIfCond_207 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_207 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Boolean found = false;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_208 = false;&#xA;&#x9;while( !idLoopCond_208 ) {&#xA;&#x9;idLoopCond_208 = kermeta.standard.helper.BooleanWrapper.or(found, it.isOff());&#xA;&#x9;if ( idLoopCond_208 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_209 = false;&#xA;&#x9;idIfCond_209 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(element, it.next());&#xA;&#xA;&#x9;if( idIfCond_209 ) {&#xA;&#xA;&#x9;found = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_210 = false;&#xA;&#x9;idIfCond_210 = found;&#xA;&#xA;&#x9;if( idIfCond_210 ) {&#xA;&#xA;&#x9;result = i;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="first">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * Returns the first element in the OrderedCollection&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_211 = false;&#xA;&#x9;idIfCond_211 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_211 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.elementAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/OrderedCollection/G"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Collection">
          <eTypeArguments eTypeParameter="/0/standard/OrderedCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedSet">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An OrderedSet is a Set that contained ordered distinct elements&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="add" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * See Set&lt;G>.add(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;super.add(element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xA;&#x9; * inserted in head&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides OrderedCollection&lt;G>.addAt(Integer, G)&#xA;&#x9; * Adds element in the OrderedSet at rank index if the ordered set does&#xA;&#x9; * not already contain the element, does nothing otherwise&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_212 = false;&#xA;&#x9;idIfCond_212 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( idIfCond_212 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.OrderedCollectionSuper.super_addAt(this, index, element);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xA;&#x9; * inserted at rank index&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, subject);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
          <eParameters name="subject">
            <eGenericType eTypeParameter="/0/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * See OrderedCollection&lt;G>.equals(Object) &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.OrderedCollectionSuper.super_equals(this, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xA;&#x9; * inserted in tail&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns element at rank index in the sequence&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedSet&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_213 = false;&#xA;&#x9;idIfCond_213 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_213 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean idLoopCond_214 = false;&#xA;&#x9;while( !idLoopCond_214 ) {&#xA;&#x9;idLoopCond_214 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( idLoopCond_214 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/OrderedSet/G"/>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="subSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet composed of elements of current ordered&#xA;&#x9; * set from rank min to rank max (order is respected)&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xA;&#x9; * the size of the ordered set or min is larger than max&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_215 = false;&#xA;&#x9;idIfCond_215 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( idIfCond_215 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_216 = false;&#xA;&#x9;while( !idLoopCond_216 ) {&#xA;&#x9;idLoopCond_216 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( idLoopCond_216 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_217 = false;&#xA;&#x9;while( !idLoopCond_217 ) {&#xA;&#x9;idLoopCond_217 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( idLoopCond_217 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/OrderedSet">
            <eTypeArguments eTypeParameter="/0/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="min" eType="/0/standard/JavaInteger"/>
          <eParameters name="max" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Set">
          <eTypeArguments eTypeParameter="/0/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="/0/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="/0/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Sequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A Sequence is an OrderedCollection of elements allowing duplicates&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="subSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence composed of elements of current sequence&#xA;&#x9; * from rank min to rank max (order is respected)&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xA;&#x9; * the size of the sequence or min is larger than max&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_218 = false;&#xA;&#x9;idIfCond_218 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( idIfCond_218 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_219 = false;&#xA;&#x9;while( !idLoopCond_219 ) {&#xA;&#x9;idLoopCond_219 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( idLoopCond_219 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_220 = false;&#xA;&#x9;while( !idLoopCond_220 ) {&#xA;&#x9;idLoopCond_220 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( idLoopCond_220 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="min" eType="/0/standard/JavaInteger"/>
          <eParameters name="max" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xA;&#x9; * inserted in head&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xA;&#x9; * inserted at rank index&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides OrderedCollection&lt;G>.equals(Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current Sequence&#x9;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.OrderedCollectionSuper.super_equals(this, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xA;&#x9; * inserted in tail&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Sequence">
            <eTypeArguments eTypeParameter="/0/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns element at rank index in the sequence&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the Sequence&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_221 = false;&#xA;&#x9;idIfCond_221 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_221 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean idLoopCond_222 = false;&#xA;&#x9;while( !idLoopCond_222 ) {&#xA;&#x9;idLoopCond_222 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( idLoopCond_222 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/standard/Sequence/G"/>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Bag">
          <eTypeArguments eTypeParameter="/0/standard/Sequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="/0/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="/0/standard/Sequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Collection_values" instanceClassName="org.eclipse.emf.common.util.EList">
        <eTypeParameters name="G"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Iterator_javaIterator" instanceClassName="java.util.Iterator">
        <eTypeParameters name="G"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_ValueType_value" instanceClassName="java.lang.String"/>
    </eSubpackages>
    <eSubpackages name="utils" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/utils/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/utils"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xA; * metamodel&#xA; * &#xA; * &lt;img src=&quot;./figures/utils_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xA; * metamodel&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StringBuffer" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=content javaClass=java.lang.StringBuffer"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This class mimic the behavior of the java's StringBuffer class. This enables better performance in long&#xA; * string concatenation.&lt;br>&#xA; * &lt;b>Only work on Strings&lt;/b>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="append" eType="/0/utils/StringBuffer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Append a given string at the end of this StringBuffer&#xA;&#x9; * @param arg0 A string to append at the end of this StringBuffer&#xA;&#x9; * @return A reference to this object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.utils.StringBuffer result = null;&#xA;&#xA;&#x9;result = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.append(this, arg0), &quot;kermeta.utils.StringBuffer&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="arg0" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="length" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return the length of the StringBuffer&#xA;&#x9; * @return length of the StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.length(this), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; *Convert this StringBuffer to String and return its value&#xA;&#x9; *@return The string value of this StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.String stringValue = null;&#xA;&#xA;&#x9;stringValue = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.toString(this), &quot;java.lang.String&quot;);&#xA;&#xA;&#x9;result = stringValue;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" eType="/0/utils/KermetaProperty_StringBuffer_content"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Hashtable" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=wrappedHashtable javaClass=java.util.Hashtable"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An implementation of hashtable&#xA; * This implementation is for speed optimisation it cannot be serialized. &#xA; * If your wish to serialize its content you need to copy its content into a classical ecore structure (attribute or references)&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="K"/>
        <eTypeParameters name="V"/>
        <eOperations name="getValue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the value for key 'key' if it exists, otherwise returns Void&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;V result = null;&#xA;&#xA;&#x9;result = (V) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.get(this, key), &quot;V&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/utils/Hashtable/V"/>
          <eParameters name="key">
            <eGenericType eTypeParameter="/0/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes all elements from the Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="containsKey" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#x9;&#xA;&#x9; * Returns a Boolean stating whether a key is present or not in this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getValue(key), null);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="/0/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="put">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds a entry into the Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.put(this, key, value);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="/0/utils/Hashtable/K"/>
          </eParameters>
          <eParameters name="value">
            <eGenericType eTypeParameter="/0/utils/Hashtable/V"/>
          </eParameters>
        </eOperations>
        <eOperations name="keyIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an iterator over the Keys of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;K> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;K>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.keysIterator(this), &quot;kermeta.standard.Iterator&lt;K>&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Iterator">
            <eTypeArguments eTypeParameter="/0/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="keys">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a set containing the hash keys of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;K> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;K>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it = this.keyIterator();&#xA;&#x9;java.lang.Boolean idLoopCond_223 = false;&#xA;&#x9;while( !idLoopCond_223 ) {&#xA;&#x9;idLoopCond_223 = it.isOff();&#xA;&#x9;if ( idLoopCond_223 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eTypeParameter="/0/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="values">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a collection containing the elements of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Collection&lt;V> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;V>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it_ft47 = this.keys().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_224 = false;&#xA;&#x9;while( !idLoopCond_224 ) {&#xA;&#x9;idLoopCond_224 = it_ft47.isOff();&#xA;&#x9;if ( idLoopCond_224 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;K k_lbdExp47 = it_ft47.next();&#xA;&#xA;&#x9;result.add(this.getValue(k_lbdExp47));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Collection">
            <eTypeArguments eTypeParameter="/0/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes the entry with key equals to 'key'&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.remove(this, key);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="/0/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="valueIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an iterator over the values of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;V> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;V>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.valueIterator(this), &quot;kermeta.standard.Iterator&lt;V>&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Iterator">
            <eTypeArguments eTypeParameter="/0/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="size" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the size of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.size(this), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="wrappedHashtable">
          <eGenericType eClassifier="/0/utils/KermetaProperty_Hashtable_wrappedHashtable">
            <eTypeArguments eTypeParameter="/0/utils/Hashtable/K"/>
            <eTypeArguments eTypeParameter="/0/utils/Hashtable/V"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Stack">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An implementation of stack&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="peek">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Gets the element at the top of the stack&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.first();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/utils/Stack/G"/>
        </eOperations>
        <eOperations name="pop">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Get and remove the element at the top of the stack&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.peek();&#xA;&#xA;&#x9;this.removeAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="/0/utils/Stack/G"/>
        </eOperations>
        <eOperations name="push">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Pushes an element into the stack&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.addAt(0, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/utils/Stack/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Sequence">
          <eTypeArguments eTypeParameter="/0/utils/Stack/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_StringBuffer_content" instanceClassName="java.lang.StringBuffer"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Hashtable_wrappedHashtable" instanceClassName="java.util.Hashtable">
        <eTypeParameters name="K"/>
        <eTypeParameters name="V"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="language" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains the implementation of Kermeta reflective collections.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveCollection">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * ReflectiveCollection is a special collection that is used to define the type &#xA; * of attributes that have an upper multiplicity > 1 in a class. It indeed handles&#xA; * the update of opposite property if such an attribute has got one.&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::Collection&lt;G>.clear(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.remove(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.add(G)&#xA;&#x9; * Add an element to this collection and update its opposite property if it exists.&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/Set">
          <eTypeArguments eTypeParameter="/0/language/ReflectiveCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveSequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * ReflectiveSequence is an ordered ReflectiveCollection.&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.clear()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.helper.ReflectiveCollectionSuper.super_clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.addAt(Integer)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.removeAt(Integer)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="/0/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.remove(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.helper.ReflectiveCollectionSuper.super_remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.equals(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = super.equals(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.add(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.helper.ReflectiveCollectionSuper.super_add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="/0/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="/0/standard/OrderedSet">
          <eTypeArguments eTypeParameter="/0/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="/0/language/ReflectiveCollection">
          <eTypeArguments eTypeParameter="/0/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eSubpackages name="structure" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure/kermeta_temp_uri" nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Contains the concrete implementation (including the operation bodies) &#xA; * of the classes of the &lt;code>kermeta::reflection&lt;/code> package.&#xA; * If you need more documentation, please take a look at the&#xA; * &lt;code>kermeta::reflection&lt;/code> package which is more complete.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_package.png&quot;/>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_visitor_view.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eAnnotations source="kermeta">
            <details key="EMF_needProperty" value="name=oid javaClass=java.lang.Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_needProperty" value="name=internalContainingResource classDefinitionQN=kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Object definition: all entities of Kermeta metamodel explicitly inherit from Object"/>
          </eAnnotations>
          <eOperations name="isVoid" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Object is Void&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isInstanceOf" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the current Object conforms to given Type&#xA;&#x9; * This means: is this object an instance of this type, or is it an instance of its subtype &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, type.getClass().getName()), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="/0/language/structure/Type"/>
          </eOperations>
          <eOperations name="container" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the Object that contains current Object, void if the Object has&#xA;&#x9; * no container&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="equals" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * semantic equality,&#xA;&#x9; * if you wish to test for object identity you need to use the method oid&#xA;&#x9; * ex: x.oid == y.oid&#xA;&#x9; * by default, (ie. if not overloaded), the equals method for class Object implements &#xA;&#x9; * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xA;&#x9; * reference values x and y, this method returns true if and only if x and y refer to the same &#xA;&#x9; * object (x.oid == y.oid has the value true). &#xA;&#x9; *&#xA;&#x9; * note1: the operator == is mapped to this &#xA;&#x9; * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this, element), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="asType" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Implementation of OCL like cast. It returns self if the object object conforms to the type given as parameter.&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeSelfExpression" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_225 = false;&#xA;&#x9;idIfCond_225 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, type);&#xA;&#xA;&#x9;if( idIfCond_225 ) {&#xA;&#xA;&#x9;result = this;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="/0/language/structure/Class"/>
          </eOperations>
          <eOperations name="getMetaClass" eType="/0/language/structure/Class">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the Class object that is the metaclass of current Object&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( this ), &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNotEqual" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * See kermeta::language::structure::Object.equals(Object)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this, element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="isKindOf" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the current Object is an instance of the given Class&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.equalsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this), cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cl" eType="/0/language/structure/Class"/>
          </eOperations>
          <eOperations name="oid" eType="/0/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the unique Oid of the Object&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(this), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="toString" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Implements Object.toString()&#xA; &#x9; * Returns a String of form [qn:oid] where 'qn' is the qualified name of&#xA; &#x9; * the object type, and oid the unique ID of the object&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;[&quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition().qualifiedName()), &quot;:&quot;), kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(this))), &quot;]&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSet" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * True if the &lt;code>~property&lt;/code> of the object has been set&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(this, property), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="/0/language/structure/Property"/>
          </eOperations>
          <eOperations name="get" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** &#xA;&#x9; * Returns the instances of the given property for this Object.&#xA;&#x9; *&#xA;&#x9; * Example : &#xA;&#x9; * &lt;pre>&#xA;&#x9; * class A { reference attr : String }&#xA;&#x9; * &lt;/pre>&#xA;&#x9; * Using A :&#xA;&#x9; * &lt;pre>&#xA;&#x9; * operation getAProp() is do&#xA;&#x9; *    var a : A&#xA;&#x9; *    var s : String&#xA;&#x9; *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xA;&#x9; *    s ?= a.get(the_attr)&#xA;&#x9; * end&#xA;&#x9; * &lt;/pre>&#xA;&#x9; * The user has to cast&#xA;&#x9; * the result of this method according to the type and the upper multiplicity&#xA;&#x9; * of this property. If upper multiplicity > 1, than the effective type of the &#xA;&#x9; * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xA;&#x9; * the name of the given Property (i.e the type of the property instance).&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="/0/language/structure/Property"/>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Sets the &lt;code>element&lt;/code> to the &lt;code>~property&lt;/code> of the object &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_226 = false;&#xA;&#x9;idIfCond_226 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_226 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.language.structure.EnumerationLiteral&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_227 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft48 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_228 = false;&#xA;&#x9;idIfCond_228 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_228 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp48 = null;&#xA;&#xA;&#x9;result_ft48 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft48 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_227 = result_ft48;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_227 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(this, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="/0/language/structure/Property"/>
            <eParameters name="element" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="isFrozen" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Object is currently in a&#xA;&#x9; * frozen state&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(this), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Runs checking of invariants defined for the metaclass of the Object&#xA;&#x9; * Also check the multiplicity of attributes (except derived and transient attributes)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_229 = false;&#xA;&#x9;idIfCond_229 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_229 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft49 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_230 = false;&#xA;&#x9;while( !idLoopCond_230 ) {&#xA;&#x9;idLoopCond_230 = it_ft49.isOff();&#xA;&#x9;if ( idLoopCond_230 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp49 = it_ft49.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft50 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft50 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft50 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp49.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_232 = false;&#xA;&#x9;while( !idLoopCond_232 ) {&#xA;&#x9;idLoopCond_232 = kermeta.standard.helper.BooleanWrapper.or(it_ft50.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft50, false));&#xA;&#x9;if ( idLoopCond_232 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft50 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp50 = it_ft50.next();&#xA;&#xA;&#x9;result_lambda_ft50 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp50.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft50 = kermeta.standard.helper.BooleanWrapper.or(test_ft50, result_lambda_ft50);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft50 = test_ft50;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_231 = false;&#xA;&#x9;idIfCond_231 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft50), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp49.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_231 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, p_lbdExp49);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_233 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft51 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_234 = false;&#xA;&#x9;idIfCond_234 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_234 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp51 = null;&#xA;&#xA;&#x9;result_ft51 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft51 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_233 = result_ft51;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_233 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_235 = false;&#xA;&#x9;idIfCond_235 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp49.getUpper(), org.kermeta.compil.runtime.helper.language.ObjectUtil.convertAsObject(kermeta.standard.helper.IntegerWrapper.uminus(1))), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp49.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_235 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp49.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_236 = false;&#xA;&#x9;idIfCond_236 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp49.getLower());&#xA;&#xA;&#x9;if( idIfCond_236 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp49.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_237 = false;&#xA;&#x9;idIfCond_237 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp49.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_237 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp49.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(this);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode" eType="/0/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * code used in hashtable in order to identify an object in the hashtable keys&#xA;&#x9; * This system is similar to the hashcode used in java. Please refer to java documentation&#xA;&#x9; * for more information about hashcode&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(this), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Remove the element set as the &lt;code>~property&lt;/code> of the object.&#xA;&#x9; * The &lt;code>isSet(~property)&lt;/code> method will then return False&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="/0/language/structure/Property"/>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Freeze the Object&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(this);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="containingResource" eType="/0/persistence/Resource">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the Resource currently containing (directly or indirectly) the Object &#xA;&#x9; * or void if the object belongs to no Resource&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(this), &quot;kermeta.persistence.Resource&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Recursively runs checking of invariants defined for the metaclass of the Object&#xA;&#x9; * and its supertypes&#xA;&#x9; * Ignores derived attributes. &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_238 = false;&#xA;&#x9;idIfCond_238 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this, null);&#xA;&#xA;&#x9;if( idIfCond_238 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(this);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft52 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_239 = false;&#xA;&#x9;while( !idLoopCond_239 ) {&#xA;&#x9;idLoopCond_239 = it_ft52.isOff();&#xA;&#x9;if ( idLoopCond_239 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp52 = it_ft52.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_240 = false;&#xA;&#x9;idIfCond_240 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp52.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp52.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_240 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_241 = false;&#xA;&#x9;idIfCond_241 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp52)));&#xA;&#xA;&#x9;if( idIfCond_241 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_242 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft53 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft53 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft53 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp52)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_243 = false;&#xA;&#x9;while( !idLoopCond_243 ) {&#xA;&#x9;idLoopCond_243 = kermeta.standard.helper.BooleanWrapper.or(it_ft53.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft53, false));&#xA;&#x9;if ( idLoopCond_243 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft53 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp53 = it_ft53.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_244 = false;&#xA;&#x9;idIfCond_244 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp53, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_244 ) {&#xA;&#xA;&#x9;result_lambda_ft53 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp53, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft53 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft53 = kermeta.standard.helper.BooleanWrapper.or(test_ft53, result_lambda_ft53);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft53 = test_ft53;&#xA;&#xA;//CEC&#xA;idIfCond_242 = result_ft53;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_242 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp52), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft54 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_245 = false;&#xA;&#x9;while( !idLoopCond_245 ) {&#xA;&#x9;idLoopCond_245 = it_ft54.isOff();&#xA;&#x9;if ( idLoopCond_245 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp54 = it_ft54.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp54);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp52));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="tag" upperBound="-1" eType="/0/language/structure/Tag" eOpposite="/0/language/structure/Tag/object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An Object can be tagged by a Tag. &#xA;They are typically used to put comments/documentation on the object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTags" upperBound="-1" eType="/0/language/structure/Tag" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An object can contains a Tag.  &#xA;Be careful, owning a tag doesn't means that the tag applies to the Object&#xA;To know which Tags apply to the object use the &quot;tag&quot; reference"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="oid" eType="/0/language/structure/KermetaProperty_Object_oid"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="internalContainingResource" eType="/0/persistence/Resource"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Alias to kermeta::standard::Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Base class definition for the &lt;b>use&lt;/b> of a type."/>
          </eAnnotations>
          <eOperations name="clone" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a copy of passed Object built by recursively copying attribute&#xA;&#x9; * properties, and referencing original reference properties values&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="kermeta.language.structure.Object result = null;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a copy of passed Object built by recursively copying values of&#xA;&#x9; * all properties, no matter the property kind&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="kermeta.language.structure.Object result = null;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="isInstance" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Implements Type.isInstance(Object)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSuperTypeOf" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Implements Type.isSuperTypeOf(Type)&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xA; &#x9; * to extend it.&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.TypeUtil.hasSubType(this, object), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="/0/language/structure/Type"/>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Implements Type.isSubTypeOf(Type)&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xA; &#x9; * to extend it.&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.TypeUtil.isSuperTypeOfSwitcher(object, this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="/0/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeContainer" eType="/0/language/structure/TypeContainer" eOpposite="/0/language/structure/TypeContainer/containedType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning TypeContainer, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::String"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Boolean"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="/0/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Every one knows what an operation is."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1" eType="/0/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeParameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the Operation, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Operation is abstract"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1" eType="/0/language/structure/Parameter" containment="true" eOpposite="/0/language/structure/Parameter/operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="pre" upperBound="-1" eType="/0/language/structure/Constraint" containment="true" eOpposite="/0/language/structure/Constraint/preOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Pre-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="/0/language/structure/ClassDefinition" eOpposite="/0/language/structure/ClassDefinition/ownedOperation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition owning the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="post" upperBound="-1" eType="/0/language/structure/Constraint" containment="true" eOpposite="/0/language/structure/Constraint/postOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Post-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException" upperBound="-1" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Exceptions raised by the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superOperation" eType="/0/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Super-operation of the Operation, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="/0/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xA; - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xA; - Property with isComposite == false : EReference"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="_default" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="If True, the value of the property is not stored but computed from other properties"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" eType="/0/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Opposite Property of the Property, void if the Property has no opposite"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="getterBody" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property is read-only"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="setterBody" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="/0/language/structure/ClassDefinition" eOpposite="/0/language/structure/ClassDefinition/ownedAttribute">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition that owns the Property"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isID" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the property allows to identify its containing Object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSetterAbstract" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the setter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property has a containment role"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isGetterAbstract" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the getter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeContainer" abstract="true" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Phantom class : EMF reflexive editors need that any element of a metamodel &#xA;has a direct or indirect containment relationship with the root model element of&#xA;the metamodel. This class resolves this technical requirement."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="containedType" upperBound="-1" eType="/0/language/structure/Type" containment="true" eOpposite="/0/language/structure/Type/typeContainer">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained types"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral" eSuperTypes="/0/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Item definition for enumeration"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" eType="/0/language/structure/Enumeration" transient="true" eOpposite="/0/language/structure/Enumeration/ownedLiteral">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding" eSuperTypes="/0/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a binding between a TypeVariable and a Type"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Assigned Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1" eType="/0/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeVariable"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="/0/language/structure/TypedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value=" Model elements with a multiplicity [lower..upper] inherit this class"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the element is ordered"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="/0/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Max cardinality of the element, '-1' for '*'"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="/0/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Min cardinality of the element"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="/0/standard/JavaBoolean" defaultValueLiteral="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether duplicated elements are allowed"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Integer">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true" eSuperTypes="/0/language/structure/TypeContainer /0/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of typed element : each element &#xA;that is typed inherits this class."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the model element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="/0/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This boolean allows to tell if this Type definition is an aspect or not&#xA;If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xA;TypeDefinition that has exactly the same qualified name"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xA;this class)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAspect" eType="/0/standard/JavaBoolean" defaultValueLiteral="false"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any element that contain a  name (example : Operation, Property) inherit this&#xA;class."/>
          </eAnnotations>
          <eOperations name="qualifiedName" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the qualified name of this named element. Qualified name is &#xA;&#x9; * the list of the names of the packages hierarchically ordered, delimited by&#xA;&#x9; * a &quot;::&quot;, followed by the name of this named element.&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.NamedElement elem = this;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_246 = false;&#xA;&#x9;idIfCond_246 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;));&#xA;&#xA;&#x9;if( idIfCond_246 ) {&#xA;&#xA;&#x9;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem), &quot;kermeta.language.structure.NamedElement&quot;);&#xA;&#x9;java.lang.Boolean idLoopCond_247 = false;&#xA;&#x9;while( !idLoopCond_247 ) {&#xA;&#x9;idLoopCond_247 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(elem, null);&#xA;&#x9;if ( idLoopCond_247 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(elem.getName(), &quot;::&quot;), result);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_248 = false;&#xA;&#x9;idIfCond_248 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;));&#xA;&#xA;&#x9;if( idIfCond_248 ) {&#xA;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem), &quot;kermeta.language.structure.NamedElement&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;elem = null;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of this named element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="/0/language/structure/ParameterizedType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Returns the Attributes, References, and derived Properties owned by&#xA;the ClassDefinition of this Class."/>
          </eAnnotations>
          <eOperations name="_new" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Instantiates a new occurence for this Class&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(this.getTypeDefinition().qualifiedName().replace(&quot;::&quot;, &quot;.&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="equals" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ClassUtil.equals(this, other), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="other" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="clone" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.cloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.deepCloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="toString" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the String representation of this class. &#xA;&#x9; *  Note : throws an exception if this class has no classDefinition&#xA;&#x9; *  or if the classDefinition is not well constructed.&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getTypeDefinition().getName();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterOwnedOperation" upperBound="-1" eType="/0/language/structure/Operation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Operation> result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(this.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cDef.getOwnedOperation());&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterSuperClass" ordered="false" upperBound="-1" eType="/0/language/structure/Class">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Class> result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(this.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Class> supertypes = ((kermeta.standard.OrderedSet&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft55 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(cDef.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_249 = false;&#xA;&#x9;while( !idLoopCond_249 ) {&#xA;&#x9;idLoopCond_249 = it_ft55.isOff();&#xA;&#x9;if ( idLoopCond_249 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type elem_lbdExp55 = it_ft55.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_250 = false;&#xA;&#x9;idIfCond_250 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), elem_lbdExp55);&#xA;&#xA;&#x9;if( idIfCond_250 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(elem_lbdExp55, &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;&#x9;supertypes.add(c);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = supertypes;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterIsAbstract" eType="/0/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(this.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;result = cDef.getIsAbstract();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterName" eType="/0/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getTypeDefinition().getName();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterClassDefinition" eType="/0/language/structure/ClassDefinition">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.ClassDefinition result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(this.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterOwnedAttribute" upperBound="-1" eType="/0/language/structure/Property">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Property> result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(this.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cDef.getOwnedAttribute());&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="/0/language/structure/Type /0/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Special type definition for Enumeration, PrimitiveType"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="/0/language/structure/DataType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for Enumeration"/>
          </eAnnotations>
          <eOperations name="clone" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Implements kermeta::language::structure::Type.clone(Object)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( &quot;NOT IMPLEMENTED&quot; );&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/0/language/structure/Object"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1" eType="/0/language/structure/EnumerationLiteral" containment="true" eOpposite="/0/language/structure/EnumerationLiteral/enumeration">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owned items in an Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="/0/language/structure/NamedElement /0/language/structure/TypeDefinitionContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Package in kermeta. Each kermeta model must have a root package. "/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" upperBound="-1" eType="/0/language/structure/Package" containment="true" eOpposite="/0/language/structure/Package/nestingPackage">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Nested Packages contained by the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" eType="/0/language/structure/Package" transient="true" eOpposite="/0/language/structure/Package/nestedPackage">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Package, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Uri of the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="/0/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for operation parameter"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="operation" eType="/0/language/structure/Operation" transient="true" eOpposite="/0/language/structure/Operation/ownedParameter">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning operation"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="/0/language/structure/DataType /0/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA;type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA;&lt;pre>alias MyString : kermeta::standard::String&lt;/pre>. Another example could be: &lt;code>root::apackage::AClass&lt;/code>&#xD;&#xA;&lt;pre>alias MyClass : root::apackage::AClass&lt;/pre>, thus a primitive type may be not a subtype of ValueType (ValueType is a concept from the Kermeta framework)."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type the primitive type is linked with"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Tag" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Tag is intended to be used to add documentation on a  model element,&#xA;or add some textual information that cannot be expressed with any&#xA;model element definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="String value of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="object" lowerBound="1" upperBound="-1" eType="/0/language/structure/Object" eOpposite="/0/language/structure/Object/tag">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Objects to which the Tag is attached to"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="/0/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Constraint is part of a contract implementation in a Class definition or an operation.&#xA;Three kinds of constraints are available : pre, post, and inv (invariant constraint)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the constraint, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="preOwner" eType="/0/language/structure/Operation" eOpposite="/0/language/structure/Operation/pre">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to pre-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" eType="/0/language/structure/ConstraintType" transient="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Constraint (precond/postcond/inv)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="postOwner" eType="/0/language/structure/Operation" eOpposite="/0/language/structure/Operation/post">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to post-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="/0/language/structure/ConstraintLanguage" transient="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Language in which the constraint is expressed"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="invOwner" eType="/0/language/structure/ClassDefinition" eOpposite="/0/language/structure/ClassDefinition/inv">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning ClassDefinition if Constraint corresponds to invariant"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintType">
          <eLiterals name="inv" literal="inv"/>
          <eLiterals name="pre" value="1" literal="pre"/>
          <eLiterals name="post" value="2" literal="post"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintLanguage">
          <eLiterals name="kermeta" literal="kermeta"/>
          <eLiterals name="ocl" value="1" literal="ocl"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition" eSuperTypes="/0/language/structure/GenericTypeDefinition /0/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The definition of a class definition :)&#xA; &lt;pre>class A&#xA;{ &#xA;  attribute s : String&#xA;}&#xA;  &lt;/pre> is a class definition; in :&#xA;&lt;pre>&#xA;main() : A is do end&#xA;&lt;/pre>&#xA;A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A"/>
          </eAnnotations>
          <eOperations name="allSuperTypes">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns all the types directly and indirectly inherited by this ClasDefinition &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Type> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> allSuperClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> superClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;superClasses.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.not(superClasses.isEmpty());&#xA;&#x9;java.lang.Boolean idLoopCond_257 = false;&#xA;&#x9;while( !idLoopCond_257 ) {&#xA;&#x9;idLoopCond_257 = superClasses.isEmpty();&#xA;&#x9;if ( idLoopCond_257 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;allSuperClasses.addAll(superClasses);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> temp = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft60 = superClasses.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_258 = false;&#xA;&#x9;while( !idLoopCond_258 ) {&#xA;&#x9;idLoopCond_258 = it_ft60.isOff();&#xA;&#x9;if ( idLoopCond_258 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type s_lbdExp60 = it_ft60.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_259 = false;&#xA;&#x9;idIfCond_259 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(s_lbdExp60, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_259 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_260 = false;&#xA;&#x9;idIfCond_260 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(s_lbdExp60, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_260 ) {&#xA;&#xA;&#x9;temp.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(s_lbdExp60, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getSuperType()));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;superClasses.clear();&#xA;&#xA;&#x9;superClasses.addAll(temp);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = allSuperClasses;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="/0/standard/Set">
              <eTypeArguments eClassifier="/0/language/structure/Type"/>
            </eGenericType>
          </eOperations>
          <eOperations name="getterAllOperation" ordered="false" upperBound="-1" eType="/0/language/structure/Operation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Operation> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;result.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getOwnedOperation()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft56 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_251 = false;&#xA;&#x9;while( !idLoopCond_251 ) {&#xA;&#x9;idLoopCond_251 = it_ft56.isOff();&#xA;&#x9;if ( idLoopCond_251 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp56 = it_ft56.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_252 = false;&#xA;&#x9;idIfCond_252 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), t_lbdExp56);&#xA;&#xA;&#x9;if( idIfCond_252 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(t_lbdExp56, &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(c.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft57 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsSet(cDef.getterAllOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_253 = false;&#xA;&#x9;while( !idLoopCond_253 ) {&#xA;&#x9;idLoopCond_253 = it_ft57.isOff();&#xA;&#x9;if ( idLoopCond_253 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation p_lbdExp57 = it_ft57.next();&#xA;&#xA;&#x9;result.add(p_lbdExp57);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterAllAttribute" ordered="false" upperBound="-1" eType="/0/language/structure/Property">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Property> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;result.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(this.getOwnedAttribute()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft58 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_254 = false;&#xA;&#x9;while( !idLoopCond_254 ) {&#xA;&#x9;idLoopCond_254 = it_ft58.isOff();&#xA;&#x9;if ( idLoopCond_254 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp58 = it_ft58.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_255 = false;&#xA;&#x9;idIfCond_255 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), t_lbdExp58);&#xA;&#xA;&#x9;if( idIfCond_255 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(t_lbdExp58, &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(c.getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft59 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cDef.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_256 = false;&#xA;&#x9;while( !idLoopCond_256 ) {&#xA;&#x9;idLoopCond_256 = it_ft59.isOff();&#xA;&#x9;if ( idLoopCond_256 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp59 = it_ft59.next();&#xA;&#xA;&#x9;result.add(p_lbdExp59);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1" eType="/0/language/structure/Operation" containment="true" eOpposite="/0/language/structure/Operation/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Operations owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the ClassDefinition is abstract (which means that&#xA;no instance can be allocated)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Classes from which this ClassDefinition inherits."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="inv" upperBound="-1" eType="/0/language/structure/Constraint" containment="true" eOpposite="/0/language/structure/Constraint/invOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Invariants defined for this ClassDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1" eType="/0/language/structure/Property" containment="true" eOpposite="/0/language/structure/Property/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Attributes, References, and derived Properties owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition" abstract="true" eSuperTypes="/0/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstracts the definition of generic type definitions (i.e. type definitions that&#xA;can be parameterized), namely, for ClassDefinition and ModelTypeDefinition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1" eType="/0/language/structure/TypeVariable" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type variables defined for the GenericTypeDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" abstract="true" eSuperTypes="/0/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for Parameterized types, namely, Class and ModelType"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding" upperBound="-1" eType="/0/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Bindings between type variables and provided types "/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" lowerBound="1" eType="/0/language/structure/GenericTypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Definition of the Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualTypeBinding" upperBound="-1" eType="/0/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true" eSuperTypes="/0/language/structure/TypeContainer /0/language/structure/Type /0/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a type variable for generic types :  &#xA;in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="supertype" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Reference to the supertype, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable" eSuperTypes="/0/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType" eSuperTypes="/0/language/structure/Type /0/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type of a model, consisting of a set of included type definitions"/>
          </eAnnotations>
          <eOperations name="_new" eType="/0/language/structure/Model">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * To be written ##########################################&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Model result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Model) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ModelTypeUtil.newObject(this), &quot;kermeta.language.structure.Model&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isModelTypeOf" eType="/0/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * To be written ##########################################&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ModelTypeUtil.isModelTypeOf(this, m), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="m" eType="/0/language/structure/Model"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includedTypeDefinition" upperBound="-1" eType="/0/language/structure/TypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelTypeVariable" eSuperTypes="/0/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualType" upperBound="-1" eType="/0/language/structure/VirtualType" containment="true" eOpposite="/0/language/structure/VirtualType/modelType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualType" eSuperTypes="/0/language/structure/ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="modelType" lowerBound="1" eType="/0/language/structure/ModelTypeVariable" eOpposite="/0/language/structure/ModelTypeVariable/virtualType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding" upperBound="-1" eType="/0/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition" lowerBound="1" eType="/0/language/structure/ClassDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Is the holder of a set of model elements (Object) that are compatible with the ModelType that has &#xA;instantiated this Model."/>
          </eAnnotations>
          <eOperations name="addCompatible" eType="/0/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xA; &#x9; * Returns the object if it has been added (One can check that some element have been ignored or not)&#xA; &#x9; * return Void if not added&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents());&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ModelUtil.addCompatible(this, objectToAdd);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToAdd" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Remove an object from the model&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(contents, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xA; &#x9; * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Collection&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft61 = objectsToAdd.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_261 = false;&#xA;&#x9;while( !idLoopCond_261 ) {&#xA;&#x9;idLoopCond_261 = it_ft61.isOff();&#xA;&#x9;if ( idLoopCond_261 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object obj_lbdExp61 = it_ft61.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object addedObject = this.addCompatible(obj_lbdExp61);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_262 = false;&#xA;&#x9;idIfCond_262 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(addedObject));&#xA;&#xA;&#x9;if( idIfCond_262 ) {&#xA;&#xA;&#x9;result.add(obj_lbdExp61);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="/0/standard/Collection">
              <eTypeArguments eClassifier="/0/language/structure/Object"/>
            </eGenericType>
            <eParameters name="objectsToAdd">
              <eGenericType eClassifier="/0/standard/Collection">
                <eTypeArguments eClassifier="/0/language/structure/Object"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ModelUtil.add(this, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="/0/language/structure/Object"/>
          </eOperations>
          <eOperations name="filter">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Returns a set of all the elements of the model that are instance of the given Type&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Object> result_ft62 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object elem_ft62 = null;&#xA;&#xA;&#x9;result_ft62 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft62 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_263 = false;&#xA;&#x9;while( !idLoopCond_263 ) {&#xA;&#x9;idLoopCond_263 = it_ft62.isOff();&#xA;&#x9;if ( idLoopCond_263 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft62 = it_ft62.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_264 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Object o_lbdExp62 = elem_ft62;&#xA;&#xA;&#x9;idIfCond_264 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(typeName, o_lbdExp62);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_264 ) {&#xA;&#xA;&#x9;result_ft62.add(elem_ft62);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;result = result_ft62.asSet();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="/0/standard/Set">
              <eTypeArguments eClassifier="/0/language/structure/Object"/>
            </eGenericType>
            <eParameters name="typeName" eType="/0/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1" eType="/0/language/structure/Object" changeable="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contents of this model..."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelingUnit" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xA;It also reference others modeling unit."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="usings" upperBound="-1" eType="/0/language/structure/Using" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;using&quot; statement associated with this ModelingUnit. Ie. list of &quot;syntatic shortcut&quot;&#xA;that can be used within this unit."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includeFilters" upperBound="-1" eType="/0/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;only element whose qualified name begins with one of these filter will be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="packages" upperBound="-1" eType="/0/language/structure/Package" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="root packages contained by this ModelingUnit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="excludeFilters" upperBound="-1" eType="/0/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;element whose qualified name begins with one of these filter will NOT be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="referencedModelingUnits" upperBound="-1" eType="/0/language/structure/ModelingUnit">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="requires" upperBound="-1" eType="/0/language/structure/Require" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;require&quot; statements associated with this ModelingUnit. Ie. list of the other&#xA;files required to run this unit"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Require" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Using" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Filter" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Filter is the class that represent a filter on a ModelingUnit.&#xA;the qualifiedName represent the beginning of the matched names"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ProductType" eSuperTypes="/0/language/structure/TypeContainer /0/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type corresponding to a set of Types&#xA;Only used in the context of FunctionType"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" unique="false" upperBound="-1" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Types "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType" eSuperTypes="/0/language/structure/TypeContainer /0/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type used to define the use of lambda expressions.&#xA; Uses :&#xA; &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xA;     var test : Boolean init true&#xA;     from var it : Iterator&lt;G> init iterator&#xA;     until it.isOff&#xA;     loop&#xA;        test := test and func(it.next)&#xA;     end&#xA;     result := test&#xA; end&#xA; &lt;/pre>&#xA; *&#xA; In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xA; Boolean, with a parameter of type G and a return type of type Boolean&#xA; The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter."/>
          </eAnnotations>
          <eAnnotations source="kermeta.inv">
            <details key="resultType" value=""/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Result type of the function"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the function (a ProductType for multiple parameters)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="/0/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class definition for the &lt;pre>Void&lt;/pre> type"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer" abstract="true" eSuperTypes="/0/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xA;element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xA;package definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeDefinition" upperBound="-1" eType="/0/language/structure/TypeDefinition" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained TypeDefinitions"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Object_oid" instanceClassName="java.lang.Integer"/>
      </eSubpackages>
      <eSubpackages name="behavior" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior/kermeta_temp_uri" nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="CallExpression" abstract="true" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any callable expression inherits this class, e.g : &#xA;  - variable call&#xA;  - feature call ( &lt;code>a.b&lt;/code> : b is a feature call)&#xA;&#xA;&lt;img alt=&quot;&quot;  height=&quot;90%&quot; width=&quot;90%&quot;  src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_call_expressions.png&quot; />"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticTypeVariableBindings" upperBound="-1" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="A call must be named"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Kermeta calls can embedd expressions as parameters"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true" eSuperTypes="/0/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The base class for every entity used to define a behavior in operation body."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticType" eType="/0/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Expression (set by type checking)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallVariable" eSuperTypes="/0/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="We call &quot;CallVariable&quot; the use of a variable in a statement.&#xA;in &lt;code>i := j + 1&lt;/code>, i and j are 2 CallVariables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallVariable represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallFeature" eSuperTypes="/0/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallFeature is the model element that refers to the use of a feature, i.e either &#xA;a property or an operation in a statement. In &lt;code>stdio.writeln(&quot;hello&quot;)&lt;/code>, &#xA;&lt;code>writeln&lt;/code> is a CallFeature."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallFeature represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticOperation" eType="/0/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The method which will be executed (operation case)&#xA;and the result value passed to the caller"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target Expression (the owner of the feature)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticEnumLiteral" eType="/0/language/structure/EnumerationLiteral">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticProperty" eType="/0/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The object which will be returned (property case)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallSuperOperation" eSuperTypes="/0/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the operataion in the parent class&#xA;&#x9;In the following example, the type of super(element) is CallSuperOperation:&#xA;&#xA;class ParentClass {&#xA;  operation op(element : Integer) : Integer is do&#xA;      result := element + 1&#xA;  end&#xA;}&#xA; *&#xA;class ChildClass {&#xA;  method op(element : Integer) : Integer is do&#xA;      result := super(element)&#xA;  end&#xA;}"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallResult" eSuperTypes="/0/language/behavior/CallVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the special internal variable &quot;result&quot; that is used to store the return value of any operation "/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallValue" eSuperTypes="/0/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallValue refers to the use of the &lt;code>value&lt;/code> reserved keyword. This keyword is&#xA;only used in the body of the &lt;code>setter&lt;/code> part of derived properties."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Assignment is the model-element representation of the assignment statement &lt;code>x := y&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_assign_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Value to be assigned, as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1" eType="/0/language/behavior/CallExpression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target of the assignment, as a CallExpression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCast" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether current assignment corresponds to a cast operation "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Block is the model-element representation for the &lt;code>do...end&lt;/code> block."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="statement" upperBound="-1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of statements composing the block"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="rescueBlock" upperBound="-1" eType="/0/language/behavior/Rescue" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of rescues defined for the block"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Condition is the model-element representation for the &lt;code>&lt;/code> "/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="thenBody" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Then part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Condition expression of conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Optional else part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Raise" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to raise exception block"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written #######################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Rescue" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to rescue exception block"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="exceptionName" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the catched exception"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" upperBound="-1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the rescue block, specified as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionType" lowerBound="1" eType="/0/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the cathed exception"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeReference" eSuperTypes="/0/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="TypeReference refers to the type used in a variable declaration"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Literal" abstract="true" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Literal refers to String values, Integer values, etc."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EmptyExpression" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="As suggested by its name, this class represents an expression that do nothing. Like a &quot;nop&quot;"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="JavaStaticCall" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represent a call to an extern Java operation. &#xA;This Java operation must be static and have at least one RuntimeO"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jmethod" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Java method to be launched in the identified Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jclass" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Qualified name of the targeted Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Java static call provided as KerMeta expressions"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaExpression" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to lambda expression definition (&lt;code>function { e | stdio.writeln(e.toString) }&lt;/code>)&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_lambda_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the lambda expression providede as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1" eType="/0/language/behavior/LambdaParameter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the lambda expression"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaParameter" eSuperTypes="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to parameter definition in lambda expression"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the lambda parameter"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="/0/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written ################################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="/0/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing an Integer value"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="/0/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="/0/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a String value, typically : &quot;my string&quot;"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="/0/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Boolean value, typically : true or false keyword"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeLiteral" eSuperTypes="/0/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Type.&#xA;for example, in &#xA;   Integer.new&#xA;Integer is a type literal representing the type kermeta::standard::Integer"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeref" lowerBound="1" eType="/0/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type refered by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidLiteral" eSuperTypes="/0/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class is used to represent the special expression void"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Loop" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Loop refers to &lt;code>from var x : X init a until booleanCondition loop ... end&lt;/code>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="stopCondition" lowerBound="1" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Stop condition of the loop, is interpreted as a Bollean value"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SelfExpression" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to &lt;code>self&lt;/code> use"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VariableDecl" eSuperTypes="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="refers to variable declaration &lt;code>var x : X init a&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_var_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="/0/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="/0/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the declared variable"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier" eType="/0/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="kunit" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kunit/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/kunit"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains the implementation of a unit test tool. This is a clone of&#xA; * JUnit architecture.&#xA; * Reference : http://junit.sourceforge.net/doc/cookstour/cookstour.htm&#xA; *&#xA; * Usage example of kunit can be found in fr.irisa.triskell.kermeta.samples project.&#xA; *&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * main features of the famous Unit test tool for Kermeta language&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Fallible" abstract="true" eSuperTypes="/0/kunit/AbstractFallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This is represents the aspect of tests that they may go wrong.&#xA; * it defines the ability to define the conditions for success&#xA; * (assertions) and the mechanism for recording that those &#xA; * conditions have not been met.&#xA; */"/>
        </eAnnotations>
        <eOperations name="number" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * current order position of counter of assertions&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_265 = false;&#xA;&#x9;idIfCond_265 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getRank());&#xA;&#xA;&#x9;if( idIfCond_265 ) {&#xA;&#xA;&#x9;this.setRank(0);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setRank(kermeta.standard.helper.IntegerWrapper.plus(this.getRank(), 1));&#xA;&#xA;&#x9;result = this.getRank();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getLogKermeta" eType="/0/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * where failures will be put &#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logDefined" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.kunit.Log result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="mustStop" eType="/0/standard/JavaBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_266 = false;&#xA;&#x9;idIfCond_266 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStopOnFailure());&#xA;&#xA;&#x9;if( idIfCond_266 ) {&#xA;&#xA;&#x9;this.setStopOnFailure(true);&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.getStopOnFailure();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_267 = false;&#xA;&#x9;idIfCond_267 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_267 ) {&#xA;&#xA;&#x9;java.lang.String msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_268 = false;&#xA;&#x9;idIfCond_268 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_268 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, msg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this._assert(condition);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_269 = false;&#xA;&#x9;idIfCond_269 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_269 ) {&#xA;&#xA;&#x9;java.lang.String realMsg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed: &quot;), msg);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_270 = false;&#xA;&#x9;idIfCond_270 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_270 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(realMsg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, realMsg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is true&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.BooleanWrapper.not(condition), message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="message" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure &#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_271 = false;&#xA;&#x9;idIfCond_271 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_271 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if the two strings are not identical&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="/0/standard/JavaString"/>
          <eParameters name="actual" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is true&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this._assert(kermeta.standard.helper.BooleanWrapper.not(condition));&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(condition, message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="message" eType="/0/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stopOnFailure" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Set this attribute to false if you wish your test to not stop if the assert fails.&#xA;   * note : if set to false, the count of failures/errors may be bigger that the number of executed test operations&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="rank" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * counter of assertions in the test method&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Test" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstact notion of a test which is runnable and which has a log&#xA; * in which it can keep note of failures&#xA; */"/>
        </eAnnotations>
        <eOperations name="setLogKermeta">
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="setLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Initializes the log where failures and errors will be put&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="setLogEMF_renameAs"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="paramNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__15922097__paramNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(log, null);&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;this.setLog(log);&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__6096819__logNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;result_post = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getLog(), null);&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="log" eType="/0/kunit/Log"/>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Execute the test and verify its assertions&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initLog" eType="/0/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * called when run by the java testrunner&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;this.setLog(((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getLog())));&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="/0/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * where failures and errors will be put &#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidTestCaseNameException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This exception is rose if there is a problem on the name of the test method&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidParameterException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This is for when we try to build a suite from a class that isn't a TestCase&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Log" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Log is a log of failures and errors that happened to fallibles since start was called&#xA; */"/>
        </eAnnotations>
        <eOperations name="addSetUpError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds errors which occur during the SetUp phase&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getHarnessErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError())).initFrom(test, e).makeSetUp());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="/0/kunit/Fallible"/>
          <eParameters name="e" eType="/0/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addTestError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds an error to the list of errors&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError())).initFrom(test, e));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="/0/kunit/Fallible"/>
          <eParameters name="e" eType="/0/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addFailure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds a failed test to the list of failed tests&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getFailures()).add(((kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFailure())).initFrom(test, msg));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="/0/kunit/Fallible"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="addTearDownError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds errors which occur during the TearDown phase&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getHarnessErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError())).initFrom(test, e).makeTearDown());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="/0/kunit/Fallible"/>
          <eParameters name="e" eType="/0/exceptions/Exception"/>
        </eOperations>
        <eOperations name="newAttempt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Increments the runtests counter&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_272 = false;&#xA;&#x9;idIfCond_272 = kermeta.standard.helper.IntegerWrapper.equals(this.getRuntests(), null);&#xA;&#xA;&#x9;if( idIfCond_272 ) {&#xA;&#xA;&#x9;this.setRuntests(0);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setRuntests(kermeta.standard.helper.IntegerWrapper.plus(1, this.getRuntests()));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failures" upperBound="-1" eType="/0/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * list of detected assertion failures&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1" eType="/0/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * list of detected test errors&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="runtests" eType="/0/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * number of test that were run&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="harnessErrors" upperBound="-1" eType="/0/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;* list of detected errors with the test harness&#xA;&#x9;*/"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Failure" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Failure represents an assertion failure stored in a failure log&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * overwrite the default method, in order to add the message&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getFailure()), &quot; &quot;), this.getMessage());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="/0/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * initialization of the failure&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Failure result = null;&#xA;&#xA;&#x9;this.setFailure(fallible);&#xA;&#xA;&#x9;this.setMessage(msg);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="fallible" eType="/0/kunit/Fallible"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the stored message (given or generated one)&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failure" eType="/0/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the stored failure&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ErrorKind">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * all kinds of error we can meet&#xA; */"/>
        </eAnnotations>
        <eLiterals name="setUpError" literal="setUpError"/>
        <eLiterals name="testError" value="1" literal="testError"/>
        <eLiterals name="tearDownError" value="2" literal="tearDownError"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Error" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Error represents an occurrence of an exception in setUp, tearDown or a test&#xA; * and is stored in a failure log&#xA; */"/>
        </eAnnotations>
        <eOperations name="makeTearDown" eType="/0/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Changes the type of an error to makeTearDownError, the best way to use&#xA;&#x9; * this method is to call it after the init from line:&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeTearDown&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;tearDownError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="makeSetUp" eType="/0/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Changes the type of an error to SetUpError, the best way to use&#xA;&#x9; * this method is to call it after the init from line:&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeSetUp&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;setUpError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * overwrite the default method, in order to add :&#xA;&#x9; *   - the type&#xA;&#x9; *   - the message&#xA;&#x9; *   - the stack trace&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_273 = false;&#xA;&#x9;idIfCond_273 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getKind(), kermeta.kunit.ErrorKind.getByName(&quot;testError&quot;));&#xA;&#xA;&#x9;if( idIfCond_273 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getError());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this.getError()).getterName(), &quot;.&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_274 = false;&#xA;&#x9;idIfCond_274 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getKind(), kermeta.kunit.ErrorKind.getByName(&quot;setUpError&quot;));&#xA;&#xA;&#x9;if( idIfCond_274 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;setUp()&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;tearDown()&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; raised &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this.getException()).getterName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_275 = false;&#xA;&#x9;idIfCond_275 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getException().getMessage(), null);&#xA;&#xA;&#x9;if( idIfCond_275 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Caused by: &quot;), this.getException().getMessage());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no message)&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_276 = false;&#xA;&#x9;idIfCond_276 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getException().getStackTrace(), null);&#xA;&#xA;&#x9;if( idIfCond_276 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Stack Trace:\n&quot;), this.getException().getStackTrace());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no stack trace)&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="/0/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Sets up a new error with failable object and the exception that occurred&#xA;&#x9; * by default it will be a test error. Use makeSetUp or makeTearDown to&#xA;&#x9; * change its type&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setError(error);&#xA;&#xA;&#x9;this.setException(e);&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;testError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="error" eType="/0/kunit/Fallible"/>
          <eParameters name="e" eType="/0/exceptions/Exception"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="error" eType="/0/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the stored error&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exception" eType="/0/exceptions/Exception">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the Kermeta exception corresponding to the error&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="/0/kunit/ErrorKind" transient="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the nature of the stored error&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestSuite" eSuperTypes="/0/kunit/Test">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A TestSuite is a structured collection of tests, using the&#xA; * composite pattern, all tests are runnable and have a log&#xA; * In addition a suite can be populated automatically from a&#xA; * test case class with one test case object for each test&#xA; * method in the class.&#xA; *  You can make a suite and populate it manually like this:&#xA; *&#xA; *  var suite : TestSuite init TestSuite.new.&#xA; *  suite.tests.add(t1)&#xA; *&#xA; *  Alternatively you can populate a suite automatically from&#xA; *  a class that inherits TestCase and which has several methods&#xA; *  called test:&#xA; *&#xA; *  var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xA; */"/>
        </eAnnotations>
        <eOperations name="addAllTestCasesFrom" eType="/0/kunit/TestSuite">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * Add to this suite, a set of test cases of type c, one for each&#xA;&#x9;  * test method in class c. C must be a descendent of TestCase&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testCaseClassIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestSuite result = null;&#xA;&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__6384060__testCaseClassIsATestCase&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsSet(testCaseClass.getterSuperClass()).contains(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft63 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft63 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft63 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsSet(testCaseClass.getterSuperClass()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_278 = false;&#xA;&#x9;while( !idLoopCond_278 ) {&#xA;&#x9;idLoopCond_278 = kermeta.standard.helper.BooleanWrapper.or(it_ft63.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft63, false));&#xA;&#x9;if ( idLoopCond_278 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft63 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Class sc_lbdExp63 = it_ft63.next();&#xA;&#xA;&#x9;result_lambda_ft63 = org.kermeta.compil.runtime.helper.language.ClassUtil.equalsSwitcher(sc_lbdExp63, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft63 = kermeta.standard.helper.BooleanWrapper.or(test_ft63, result_lambda_ft63);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft63 = test_ft63;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_277 = false;&#xA;&#x9;idIfCond_277 = kermeta.standard.helper.BooleanWrapper.not(result_ft63);&#xA;&#xA;&#x9;if( idIfCond_277 ) {&#xA;&#xA;&#x9;kermeta.exceptions.Exception e = ((kermeta.kunit.InvalidParameterException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getInvalidParameterException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot build a suite from class: &quot;, testCaseClass.getterName()));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation> result_ft65 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Operation elem_ft65 = null;&#xA;&#xA;&#x9;result_ft65 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft65 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(testCaseClass.getterOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_280 = false;&#xA;&#x9;while( !idLoopCond_280 ) {&#xA;&#x9;idLoopCond_280 = it_ft65.isOff();&#xA;&#x9;if ( idLoopCond_280 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft65 = it_ft65.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_281 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Operation o_lbdExp65 = elem_ft65;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_282 = false;&#xA;&#x9;idIfCond_282 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o_lbdExp65.getName()), 4);&#xA;&#xA;&#x9;if( idIfCond_282 ) {&#xA;&#xA;&#x9;idIfCond_281 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o_lbdExp65.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_281 = false;&#xA;}&#xA;&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_281 ) {&#xA;&#xA;&#x9;result_ft65.add(elem_ft65);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft64 = result_ft65.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_279 = false;&#xA;&#x9;while( !idLoopCond_279 ) {&#xA;&#x9;idLoopCond_279 = it_ft64.isOff();&#xA;&#x9;if ( idLoopCond_279 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp64 = it_ft64.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(testCaseClass._new(), &quot;kermeta.kunit.TestCase&quot;);&#xA;&#xA;&#x9;testCase.setTestMethodName(o_lbdExp64.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).add(testCase);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="/0/language/structure/Class"/>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * Run all the tests in the test suite&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Test> it_ft66 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_283 = false;&#xA;&#x9;while( !idLoopCond_283 ) {&#xA;&#x9;idLoopCond_283 = it_ft66.isOff();&#xA;&#x9;if ( idLoopCond_283 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Test t_lbdExp66 = it_ft66.next();&#xA;&#xA;&#x9;t_lbdExp66.setLogKermeta(this.getLog());&#xA;&#xA;&#x9;t_lbdExp66.run();&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAllTestCasesFromAspects">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * to be written #####################################################&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation> result_ft68 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Operation elem_ft68 = null;&#xA;&#xA;&#x9;result_ft68 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft68 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(anAspect.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_285 = false;&#xA;&#x9;while( !idLoopCond_285 ) {&#xA;&#x9;idLoopCond_285 = it_ft68.isOff();&#xA;&#x9;if ( idLoopCond_285 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft68 = it_ft68.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_286 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Operation o_lbdExp68 = elem_ft68;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_287 = false;&#xA;&#x9;idIfCond_287 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o_lbdExp68.getName()), 4);&#xA;&#xA;&#x9;if( idIfCond_287 ) {&#xA;&#xA;&#x9;idIfCond_286 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o_lbdExp68.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_286 = false;&#xA;}&#xA;&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_286 ) {&#xA;&#xA;&#x9;result_ft68.add(elem_ft68);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft67 = result_ft68.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_284 = false;&#xA;&#x9;while( !idLoopCond_284 ) {&#xA;&#x9;idLoopCond_284 = it_ft67.isOff();&#xA;&#x9;if ( idLoopCond_284 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp67 = it_ft67.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(testCaseClass._new(), &quot;kermeta.kunit.TestCase&quot;);&#xA;&#xA;&#x9;testCase.setTestMethodName(o_lbdExp67.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).add(testCase);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="/0/language/structure/Class"/>
          <eParameters name="anAspect" eType="/0/language/structure/ClassDefinition"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="tests" upperBound="-1" eType="/0/kunit/Test">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * The collection of tests which will be ran as the suite&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestCase" abstract="true" eSuperTypes="/0/kunit/Test /0/kunit/Fallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A test case comprises one or more test methods plus&#xA; * setUp and tearDown that build and destroy their test harness.&#xA; * An instance of a subclass of TestCase should have its&#xA; * testMethodName set to the name of one of its operations&#xA; * which should be called whe the test is run. You can do this&#xA; * yourself:&#xA; *&#xA; * var testCase : TestCase init MyTestCaseClass.new.setTestMethodName(&quot;testSomething&quot;)&#xA; *&#xA; * Alternatively if your TestCase Class has many methods whose&#xA; * name begins with 'test' you can create a set of instaces already&#xA; * set up with their testMethodName using the addAllTestCasesFrom&#xA; * operation on TestSuite&#xA; */"/>
        </eAnnotations>
        <eOperations name="setUp">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the things to be done before execution of the test method&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="raiseIfHasFailures">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * operation used when the TestCase is run from a java test runner, encapsulates the failures results&#xA;&#x9; * into an AssertionFailedError so the TestRunner can detect it&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.String msg = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_288 = false;&#xA;&#x9;idIfCond_288 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).empty());&#xA;&#xA;&#x9;if( idIfCond_288 ) {&#xA;&#xA;&#x9;msg = &quot;Failures: &quot;;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Failure> it_ft69 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_289 = false;&#xA;&#x9;while( !idLoopCond_289 ) {&#xA;&#x9;idLoopCond_289 = it_ft69.isOff();&#xA;&#x9;if ( idLoopCond_289 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Failure f_lbdExp69 = it_ft69.next();&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f_lbdExp69.toString());&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_290 = false;&#xA;&#x9;idIfCond_290 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_290 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft70 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_291 = false;&#xA;&#x9;while( !idLoopCond_291 ) {&#xA;&#x9;idLoopCond_291 = it_ft70.isOff();&#xA;&#x9;if ( idLoopCond_291 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Error f_lbdExp70 = it_ft70.next();&#xA;&#xA;&#x9;msg = &quot;Errors: &quot;;&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f_lbdExp70.toString());&#xA;&#xA;&#x9;kermeta.exceptions.Exception exception = ((kermeta.exceptions.Exception) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getException()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getLogEMF_renameAs" eType="/0/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * accessor on the log&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getLogEMF_renameAs"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Fallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setTestMethodName" eType="/0/kunit/TestCase">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Sets the name of the method from the concrete subclass of&#xA;&#x9; *  TestCase that should be executed when this TestCase instance&#xA;&#x9; * is run as a test.&#xA;&#x9; * Throws invalidTestCaseNameException if the given string is not&#xA;&#x9; * the name of a method in the test case&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestCase result = null;&#xA;&#xA;&#x9;this.set__testMethodName(name);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="name" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="getTestMethodName" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * accessor on the method name&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.get__testMethodName();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * overwrites the default method for more informative output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getterName(), &quot;.&quot;), this.getTestMethodName()), &quot;()&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="tearDown">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the things to be done after execution of the test method&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Execute the whole test case : SetUp, test method, TearDown&#xA;&#x9; * The assertions of the test method are computed&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.getLogEMF_renameAs().newAttempt();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;this.setUp();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;kermeta.interpreter.DynamicExpression de = ((kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.interpreter.InterpreterPackage.eINSTANCE.getDynamicExpression()));&#xA;&#xA;&#x9;de.initializeDefaults();&#xA;&#xA;&#x9;de.setSelfClass((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;de.parse(kermeta.standard.helper.StringWrapper.plus(&quot;self.&quot;, this.getTestMethodName()));&#xA;&#xA;&#x9;de.execute(this, ((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable())));&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;this.tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_1 ) {&#xA;boolean caught_1 = false;&#xA;if( ex_switcher_1.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_1 = true;&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_1.getRealException();&#xA;this.getLogEMF_renameAs().addTearDownError(this, e);&#xA;}&#xA;if( !caught_1 ) { throw ex_switcher_1; }&#xA;&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_2 ) {&#xA;boolean caught_2 = false;&#xA;if( ex_switcher_2.getRealException() instanceof kermeta.kunit.AssertionFailedError ) {&#xA;caught_2 = true;&#xA;kermeta.kunit.AssertionFailedError afe = (kermeta.kunit.AssertionFailedError) ex_switcher_2.getRealException();&#xA;this.getLogEMF_renameAs().addFailure(this, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(afe.getMessage(), &quot;\nstack trace:\n&quot;), afe.getStackTrace()));&#xA;}if( ex_switcher_2.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_2 = true;&#xA;kermeta.exceptions.Exception e1 = (kermeta.exceptions.Exception) ex_switcher_2.getRealException();&#xA;this.getLogEMF_renameAs().addTestError(this, e1);{&#xA;try {&#xA;&#x9;this.tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_3 ) {&#xA;boolean caught_3 = false;&#xA;if( ex_switcher_3.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_3 = true;&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_3.getRealException();&#xA;this.getLogEMF_renameAs().addTearDownError(this, e);&#xA;}&#xA;if( !caught_3 ) { throw ex_switcher_3; }&#xA;&#xA;}&#xA;}&#xA;}&#xA;if( !caught_2 ) { throw ex_switcher_2; }&#xA;&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_4 ) {&#xA;boolean caught_4 = false;&#xA;if( ex_switcher_4.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_4 = true;&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_4.getRealException();&#xA;this.getLogEMF_renameAs().addSetUpError(this, e);&#xA;}&#xA;if( !caught_4 ) { throw ex_switcher_4; }&#xA;&#xA;}&#xA;}&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="__testMethodName" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the name of the method which corresponds to the test case in the test class&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestRunner" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Create and use a test runner to run one or more tests and print the failure log. E.g.:&#xA; * do&#xA; *&#x9;     var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xA; *&#x9;     var runner : TestRunner init TestRunner.new&#xA; *&#x9;     runner.run(suite)&#xA; *&#x9;     runner.printLogs&#xA; * end&#xA; *&#xA; * Where InterestingTestCaseSet is a subclass of TestCase and contains several test... methods&#xA; */"/>
        </eAnnotations>
        <eOperations name="runTest">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Use this to run a test case or a test suite.&#xA;&#x9; * If you want to run all the test.... methods in a TestCase class,&#xA;&#x9; *  you can populate a suite with TestSuite.addAllTestCasesFrom&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__23167244__testNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test, null);&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;this.setLog(((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getLog())));&#xA;&#xA;&#x9;test.setLogKermeta(this.getLog());&#xA;&#xA;&#x9;test.run();&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__6256655__logNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;result_post = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getLog(), null);&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="test" eType="/0/kunit/Test"/>
        </eOperations>
        <eOperations name="printTestResult" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Prints the log or errors and failures from a test run.&#xA;&#x9; * Run some tests first.&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\n---------------------------------------------  TEST RESULTS-----------------------------------------------\n&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_292 = false;&#xA;&#x9;idIfCond_292 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).empty());&#xA;&#xA;&#x9;if( idIfCond_292 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nFailures: &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Failure> it_ft71 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_293 = false;&#xA;&#x9;while( !idLoopCond_293 ) {&#xA;&#x9;idLoopCond_293 = it_ft71.isOff();&#xA;&#x9;if ( idLoopCond_293 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Failure f_lbdExp71 = it_ft71.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, f_lbdExp71.toString()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_294 = false;&#xA;&#x9;idIfCond_294 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_294 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nErrors: &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft72 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_295 = false;&#xA;&#x9;while( !idLoopCond_295 ) {&#xA;&#x9;idLoopCond_295 = it_ft72.isOff();&#xA;&#x9;if ( idLoopCond_295 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Error e_lbdExp72 = it_ft72.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e_lbdExp72.toString()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_296 = false;&#xA;&#x9;idIfCond_296 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_296 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nErrors from setUp or tearDown : &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft73 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_297 = false;&#xA;&#x9;while( !idLoopCond_297 ) {&#xA;&#x9;idLoopCond_297 = it_ft73.isOff();&#xA;&#x9;if ( idLoopCond_297 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Error e_lbdExp73 = it_ft73.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e_lbdExp73.toString()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\n Summary: &quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of launched tests : &quot;, kermeta.standard.helper.IntegerWrapper.toString(this.getLog().getRuntests())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of failures : &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors : &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors in setUp or tearDown: &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\n-------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * For backwards compatibility with old kunit, this takes a test case class&#xA;&#x9;  * and creates the necessary suite, and runs it. DEPRECATED&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="cIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__29569642__cIsATestCase&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsSet(testCaseClass.getterSuperClass()).contains(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;this.runTest(((kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestSuite())).addAllTestCasesFrom(testCaseClass));&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="/0/language/structure/Class"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="/0/kunit/Log" containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Where to register the failures and errors&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractFallible" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * to be written ############################&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="distil" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; ** reduces all runs of white-space to a single space character&#xA;&#x9; **/"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean white = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_298 = false;&#xA;&#x9;while( !idLoopCond_298 ) {&#xA;&#x9;idLoopCond_298 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.StringWrapper.size(s));&#xA;&#x9;if ( idLoopCond_298 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.String c = kermeta.standard.helper.CharacterWrapper.toString(kermeta.standard.helper.StringWrapper.elementAt(s, i));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_299 = false;&#xA;&#x9;idIfCond_299 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.indexOf(&quot; \n\t&quot;, c), 0);&#xA;&#xA;&#x9;if( idIfCond_299 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_300 = false;&#xA;&#x9;idIfCond_300 = kermeta.standard.helper.BooleanWrapper.not(white);&#xA;&#xA;&#x9;if( idIfCond_300 ) {&#xA;&#xA;&#x9;white = true;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; &quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, c);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_301 = false;&#xA;&#x9;idIfCond_301 = white;&#xA;&#xA;&#x9;if( idIfCond_301 ) {&#xA;&#xA;&#x9;white = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="s" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * process the given condition and react with the given message&#xA;     * if it is satisfied&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="message" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** to be used if a failure reaction is needed */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the two given string and react if they are not equal */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="expected" eType="/0/standard/JavaString"/>
          <eParameters name="actual" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * process the given condition and react with the given message&#xA;     * if it is not satisfied&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="message" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * process the given condition and react with the given message&#xA;     * if it is not satisfied&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertSimilar">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if the two strings are not identical modulo-white-space&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;expected = this.distil(expected);&#xA;&#xA;&#x9;actual = this.distil(actual);&#xA;&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual  \t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="/0/standard/JavaString"/>
          <eParameters name="actual" eType="/0/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AssertionFailedError" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** AssertionViolatedException are raised when assertions are violated */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Assert" eSuperTypes="/0/kunit/AbstractFallible">
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** raise a AssertionViolatedException with the provided message */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_302 = false;&#xA;&#x9;idIfCond_302 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_302 ) {&#xA;&#xA;&#x9;this.fail(&quot;assertTrue failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_303 = false;&#xA;&#x9;idIfCond_303 = condition;&#xA;&#xA;&#x9;if( idIfCond_303 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Will fail if the two strings are not identical */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_304 = false;&#xA;&#x9;idIfCond_304 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.equals(expected, actual));&#xA;&#xA;&#x9;if( idIfCond_304 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertEqual failed\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="/0/standard/JavaString"/>
          <eParameters name="actual" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_305 = false;&#xA;&#x9;idIfCond_305 = condition;&#xA;&#xA;&#x9;if( idIfCond_305 ) {&#xA;&#xA;&#x9;this.fail(&quot;assertTrue number failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_306 = false;&#xA;&#x9;idIfCond_306 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_306 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Fails if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_307 = false;&#xA;&#x9;idIfCond_307 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_307 ) {&#xA;&#xA;&#x9;this.fail(&quot;assert failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_308 = false;&#xA;&#x9;idIfCond_308 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_308 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="/0/standard/JavaBoolean"/>
          <eParameters name="msg" eType="/0/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="exceptions" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/exceptions/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/exceptions"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains the definition of a Kermeta exception and a few basic exceptions.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/exceptions_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Exception" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Generic exceptions&#xA; * The main class from which all the exception inherit&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The message attached to the exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedException" eType="/0/exceptions/Exception" containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Any nested exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stackTrace" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * The stack trace as a String&#xA;     * Filled by the interpreted when the exception is raised&#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RuntimeError" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Exception for interpreter exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="/0/language/behavior/Expression" containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The code that raised the exception */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CallOnVoidTarget" eSuperTypes="/0/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when a feature is called on void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeCastError" eSuperTypes="/0/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Occurs when a cast (Object::asType operation) fails&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotImplementedException" eSuperTypes="/0/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Use this exception when you want to forbid the access to an unimplemented operation &#xA; * and invite to implement it&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UpperBoundReachedError" eSuperTypes="/0/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xA; * Use this exception when user tries to add an element to a property which type is collection&#xA; * which has an upper bound != -1 ( ie *)&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractClassInstantiationError" eSuperTypes="/0/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Creation on an abstract class. Usually this is detected by the type-checker. The only&#xA; * case where this happens is when instantiating a type variable, whose bound type turns&#xA; * out to be abstract.&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IncompatibleTypeError" eSuperTypes="/0/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Raised by the Object::set operation if the type of the &#xA; * Object to set has an incompatible type.&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DivisionByZero" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** well-known attempt to divide with a zero valued divider */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OverflowError" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the figure oversteps the capacity of the numeric variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="VoidOperandError" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** one of the required operands is void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringIndexOutOfBound" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the data overstep the size of the string variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringFormatException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * to be written #########################################&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IndexOutOfBound" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access out of bounds elements */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EmptyCollection" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access element on an empty collection */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IteratorIsOff" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Occurs when calling next() operation while iterator is already&#xA; * positioned on the last element of a collection&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IOException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** an interaction with the underlying system failed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileNotFoundException" eSuperTypes="/0/exceptions/IOException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the file has not be found on the underlying system */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Common super class for all ConstraintVioloated exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constraintAppliedTo" eType="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Object on which the constraint was applied to&#xA;&#x9; * On Invariant, we can generally consider this object as the faulty Object&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failedConstraint" eType="/0/language/structure/Constraint">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** constraint that has failed&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPre" eSuperTypes="/0/exceptions/ConstraintViolatedException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The pre-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPost" eSuperTypes="/0/exceptions/ConstraintViolatedException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The post-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedInv" eSuperTypes="/0/exceptions/ConstraintViolatedException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** An invariant isn't satisfied on a given Object */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceLoadException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource loading fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceSaveException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails for some reasons */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failedWhileSaving" eType="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Object on which the the saved failed&#xA;&#x9; * One can rescue the exception and analyse the structure next to this object, &#xA;&#x9; * this can give some clue about the faulty structure&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceMixedLevelsException" eSuperTypes="/0/exceptions/ResourceSaveException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails because an object refers to an element which &#xA; * belongs to the Definition of the currently running program */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceCreateException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to crate a Resource already existing in the Repository */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceUnconformityException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when user tries to add an object that is not conform to the metamodel */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnregisteredMetamodelException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when a resource cannot be loaded or saved because the URI used for &#xA; * the  metamodel is not registered&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpressionException" eSuperTypes="/0/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * to be written #########################################&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KRuntimeError" instanceClassName="org.kermeta.compil.runtime.helper.error.KRuntimeError" serializable="false"/>
    </eSubpackages>
    <eSubpackages name="io" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/io/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/io"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains standard input/output related classes. &#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains file input/output related classes. &#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StdIO" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An implementation of StdIO : standard input/output&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writeln the object to standard output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_309 = false;&#xA;&#x9;idIfCond_309 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_309 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="errorln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writeln the object to error output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_310 = false;&#xA;&#x9;idIfCond_310 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_310 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.errorln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes the object to error output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_311 = false;&#xA;&#x9;idIfCond_311 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_311 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.error(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="write">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes the object to standard output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_312 = false;&#xA;&#x9;idIfCond_312 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_312 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.write(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="read" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Reads a String from standard input&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_313 = false;&#xA;&#x9;idIfCond_313 = kermeta.standard.helper.StringWrapper.equals(prompt, null);&#xA;&#xA;&#x9;if( idIfCond_313 ) {&#xA;&#xA;&#x9;prompt = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.io.StdIOUtil.read(prompt), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="prompt" eType="/0/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileIO" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Implementation of simple helpers to read ans write text files&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeTextFileWithEncoding">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes a String in a text file by using a specific encoding&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_314 = false;&#xA;&#x9;idIfCond_314 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_314 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.writeTextFileWithEncoding(filename, text, encoding);&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="/0/standard/JavaString"/>
          <eParameters name="text" eType="/0/standard/JavaString"/>
          <eParameters name="encoding" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="writeTextFile">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes a String in a text file&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_315 = false;&#xA;&#x9;idIfCond_315 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_315 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.writeTextFile(filename, text);&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="/0/standard/JavaString"/>
          <eParameters name="text" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="readTextFile" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Reads a text file&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_316 = false;&#xA;&#x9;idIfCond_316 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_316 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean exists = null;&#xA;&#xA;&#x9;java.lang.Boolean isdirectory = null;&#xA;&#xA;&#x9;exists = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.fileExists(filename), &quot;java.lang.Boolean&quot;);&#xA;&#xA;&#x9;isdirectory = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.fileIsDirectory(filename), &quot;java.lang.Boolean&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_317 = false;&#xA;&#x9;idIfCond_317 = kermeta.standard.helper.BooleanWrapper.not(exists);&#xA;&#xA;&#x9;if( idIfCond_317 ) {&#xA;&#xA;&#x9;kermeta.exceptions.FileNotFoundException e = ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException()));&#xA;&#xA;&#x9;e.setMessage(filename);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_318 = false;&#xA;&#x9;idIfCond_318 = isdirectory;&#xA;&#xA;&#x9;if( idIfCond_318 ) {&#xA;&#xA;&#x9;kermeta.exceptions.FileNotFoundException e = ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(filename, &quot; is not a file&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.readTextFile(filename), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="/0/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="persistence" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/persistence/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/persistence"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains the classes that handle the serialization of models, in particular&#xA; * EMF models.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/persistence_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The main class that handle a loaded/saved model.&#xA; * There are a few important things to note for the developer :&#xA; * &#xA; * - load a Resource : this loads a Collection of instances corresponding to the&#xA; *   objects in the loaded model. If the Collection of instances is empty, than &#xA; *&#x9; a ResourceLoadException is raised&#xA; *&#xA; * - save a Resource : this saves the collection of instances in a new file. This can&#xA; *   be correctly done if and only if the instances saved are conform to the metamodel&#xA; *   linked to this resource (this link does not need to be explicit. It is normally retrieved&#xA; *   through the EMF model -- see Java wrapping &quot;Resource.java&quot;).&#xA; * &#xA; * - add/remove an instance to the Resource : this adds an element in the resource. It cannot&#xA; *   be &quot;simply&quot; added because of the following potential errors :&#xA; *&#xA; *   - The object added is not conform to the metamodel -> Error&#xA; *   - The object was already added in the resource -> Not a real error : we do nothing&#xA; *   - The object to remove does not exist -> redirect to a collection-specific error&#xA; *   - The object to remove is attached to an object in the collection -> &quot;dependency-violation&quot; exception?&#xA;&#xA; */"/>
        </eAnnotations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Loads the Resource, thus making content of the Resource browsable.&#xA;&#x9; * Raises a ResourceLoadException in case loaded Resource is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="normalizedUri" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return a normalized version of the Uri of this resource&#xA;&#x9; * in order to prevent several loading of the same file because they have diffent path that leads to them, kermeta uses normalizedURI&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xA;&#x9; * to check how a given uri is normalized by kermeta&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.normalizeUri(uri), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Save a Resource in the file specified by the current value of uri &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Save a Resource in a file referenced by the new uri.&#xA;&#x9; * note: this doesn't change the URI of the resource, it is only saved in another place &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="new_uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Search for elements referenced by one element contained by this resource that are not contained by this repository&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xA;&#x9; * checks only objects directly referenced by the element in this resource, ignores indirectly referenced objects&#xA;&#x9; * example of use :&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xA;&#x9; *&#x9;report := resource.findDanglingModelElements()&#xA;&#x9; *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft75 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(this.getterContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_320 = false;&#xA;&#x9;while( !idLoopCond_320 ) {&#xA;&#x9;idLoopCond_320 = it_ft75.isOff();&#xA;&#x9;if ( idLoopCond_320 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object containedObj_lbdExp75 = it_ft75.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(containedObj_lbdExp75).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_321 = false;&#xA;&#x9;idIfCond_321 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(classDef));&#xA;&#xA;&#x9;if( idIfCond_321 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft76 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDef.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_322 = false;&#xA;&#x9;while( !idLoopCond_322 ) {&#xA;&#x9;idLoopCond_322 = it_ft76.isOff();&#xA;&#x9;if ( idLoopCond_322 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp76 = it_ft76.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_323 = false;&#xA;&#x9;idIfCond_323 = kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp76.getIsDerived());&#xA;&#xA;&#x9;if( idIfCond_323 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_324 = false;&#xA;&#x9;idIfCond_324 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop_lbdExp76.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop_lbdExp76.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( idIfCond_324 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp75, prop_lbdExp76), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_325 = false;&#xA;&#x9;idIfCond_325 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObjs));&#xA;&#xA;&#x9;if( idIfCond_325 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft77 = referencedObjs.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_326 = false;&#xA;&#x9;while( !idLoopCond_326 ) {&#xA;&#x9;idLoopCond_326 = it_ft77.isOff();&#xA;&#x9;if ( idLoopCond_326 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object referencedObj_lbdExp77 = it_ft77.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft78 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft78 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft78 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_328 = false;&#xA;&#x9;while( !idLoopCond_328 ) {&#xA;&#x9;idLoopCond_328 = kermeta.standard.helper.BooleanWrapper.or(it_ft78.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft78, false));&#xA;&#x9;if ( idLoopCond_328 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft78 = null;&#xA;//BIle:func&#xA;kermeta.persistence.Resource res2_lbdExp78 = it_ft78.next();&#xA;&#xA;&#x9;result_lambda_ft78 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2_lbdExp78.getterContents()).contains(referencedObj_lbdExp77);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft78 = kermeta.standard.helper.BooleanWrapper.or(test_ft78, result_lambda_ft78);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft78 = test_ft78;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_327 = false;&#xA;&#x9;idIfCond_327 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft78), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp77, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp77, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp77, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_327 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj_lbdExp77);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp75);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp76);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp75, prop_lbdExp76);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_329 = false;&#xA;&#x9;idIfCond_329 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObj));&#xA;&#xA;&#x9;if( idIfCond_329 ) {&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft79 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft79 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft79 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_331 = false;&#xA;&#x9;while( !idLoopCond_331 ) {&#xA;&#x9;idLoopCond_331 = kermeta.standard.helper.BooleanWrapper.or(it_ft79.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft79, false));&#xA;&#x9;if ( idLoopCond_331 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft79 = null;&#xA;//BIle:func&#xA;kermeta.persistence.Resource res2_lbdExp79 = it_ft79.next();&#xA;&#xA;&#x9;result_lambda_ft79 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2_lbdExp79.getterContents()).contains(referencedObj);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft79 = kermeta.standard.helper.BooleanWrapper.or(test_ft79, result_lambda_ft79);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft79 = test_ft79;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_330 = false;&#xA;&#x9;idIfCond_330 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft79), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_330 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp75);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp76);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eClassifier="/0/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="instances" eType="/0/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * The entities contained in the model-instance, that are provided when user loads a resource &#xA;&#x9; * instances == rootContents&#xA;&#x9; * this is a loop on Resource itself in order to get backward compatibility&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="deprecated" value="user should use the resource directly since this is a collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterDependentResources" ordered="false" upperBound="-1" eType="/0/persistence/Resource">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.Resource> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.ResourceUtil.getDependentResources(this, uri, metaModelURI, &quot;EMF&quot;), &quot;kermeta.standard.Set&lt;kermeta.persistence.Resource>&quot;);&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterContents" ordered="false" upperBound="-1" eType="/0/language/structure/Object">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;res.addAll(this);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> coll = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft74 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_319 = false;&#xA;&#x9;while( !idLoopCond_319 ) {&#xA;&#x9;idLoopCond_319 = it_ft74.isOff();&#xA;&#x9;if ( idLoopCond_319 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object e_lbdExp74 = it_ft74.next();&#xA;&#xA;&#x9;coll = (kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getAllContainedObjects(e_lbdExp74), &quot;kermeta.standard.Set&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;res.addAll(coll);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Uri of the Resource to load&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="metaModelURI" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Uri of the meta-model of the Resource to load&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="repository" eType="/0/persistence/Repository" eOpposite="/0/persistence/Repository/resources">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Repository used to create the Resource&#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xA;&#x9; * one Resource of a given Repository&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Indicates weither this resource will be updated when saving the repository&#xA;&#x9; * This is useful if the repository contains some metamodels that should not be saved.&#xA;&#x9; *&#xA;&#x9; * Note that in the current version, it doesn't ensure that you have not modified its content (using the freeze)&#xA;&#x9; * If you modify the elements of such resource, other resource that depend on it will be incorrectly saved &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eGenericSuperTypes eClassifier="/0/standard/Set">
          <eTypeArguments eClassifier="/0/language/structure/Object"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFResource" eSuperTypes="/0/persistence/Resource">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Extension of the Resource class definition that is specific to EMF Repository.&#xA; * User is not supposed to directly create it. Otherwise it will not be correctly initialized&#xA; * You must To create one &#xA; */"/>
        </eAnnotations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Resource.save()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_332 = false;&#xA;&#x9;idIfCond_332 = this.getIsReadOnly();&#xA;&#xA;&#x9;if( idIfCond_332 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceSaveException e = ((kermeta.exceptions.ResourceSaveException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getResourceSaveException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot save a readonly resource. Probably this resource was indirectly loaded when loading another resource. \n&quot;, &quot;If you really intend to save this resource, you can set isReadOnly to false, but you must ensure to do so before any resource save.\n&quot;), &quot;Note : setting isReadOnly to false on the metamodel may lead to unpredictable results&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(this, getUri(), getMetaModelURI());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Set&lt;Object>.remove(Object)&#xA;&#x9; * Remove the instance from the Resource&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_333 = false;&#xA;&#x9;idIfCond_333 = this.contains(instance);&#xA;&#xA;&#x9;if( idIfCond_333 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unSetContainingResource(instance);&#xA;&#xA;&#x9;kermeta.standard.helper.SetSuper.super_remove(this, instance);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="/0/language/structure/Object"/>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Resource.saveWithNewURI(String)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(this, new_uri, getMetaModelURI());&#xA;"/>
          </eAnnotations>
          <eParameters name="new_uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="saveAndValidateWithEMF" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Checks the Resource using the EMF validation function, and saves it if&#xA;&#x9; * validation succeeds&#xA;&#x9; * Applies validation to all root objects of the Resource&#xA;&#x9; * Returns true if the validation reports no error, raises exceptions otherwise&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.ResourceUtil.save(this, this.uri, metaModelURI, &quot;EMF&quot;, this, true), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Resource.load()&#xA;&#x9; * In case the metamodelURI was not previously set, metamodelURI is filled with&#xA;&#x9; * the nsuri of the root package of the metamodel used to load the Resource after&#xA;&#x9; * a successful load&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.clear();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Loader.load(this, getUri(), getMetaModelURI());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_334 = false;&#xA;&#x9;idIfCond_334 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_334 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;Resource load failed!&quot;);&#xA;&#xA;&#x9;kermeta.exceptions.ResourceLoadException e = ((kermeta.exceptions.ResourceLoadException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getResourceLoadException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Resource load failed, no object was created in this resource from &quot;, this.getUri()));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Set&lt;Object>.add(Object)&#xA;&#x9; * Add an instance to the Resource &#xA;&#x9; * Ensures that the instance is referenced by a one and only one Resource of the same Repository&#xA;&#x9; * Ensures that the instance does not appear more than once in the Resource&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.persistence.Resource> result_ft81 = null;&#xA;&#xA;&#x9;kermeta.persistence.Resource elem_ft81 = null;&#xA;&#xA;&#x9;result_ft81 = ((kermeta.standard.Sequence&lt;kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft81 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_336 = false;&#xA;&#x9;while( !idLoopCond_336 ) {&#xA;&#x9;idLoopCond_336 = it_ft81.isOff();&#xA;&#x9;if ( idLoopCond_336 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft81 = it_ft81.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_337 = false;&#xA;//BIle:selector&#xA;kermeta.persistence.Resource r_lbdExp81 = elem_ft81;&#xA;&#xA;&#x9;idIfCond_337 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(r_lbdExp81, this), r_lbdExp81.contains(instance));&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_337 ) {&#xA;&#xA;&#x9;result_ft81.add(elem_ft81);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft80 = result_ft81.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_335 = false;&#xA;&#x9;while( !idLoopCond_335 ) {&#xA;&#x9;idLoopCond_335 = it_ft80.isOff();&#xA;&#x9;if ( idLoopCond_335 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.persistence.Resource r_lbdExp80 = it_ft80.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;DVK ! another resource of the same repository was containing this element&quot;);&#xA;&#xA;&#x9;r_lbdExp80.remove(instance);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.setContainingResource(instance, this);&#xA;&#xA;&#x9;kermeta.standard.helper.SetSuper.super_add(this, instance);&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="/0/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Repository" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Abstract resource container, that contains a list of available loaded resources, &#xA; * and methods to create or get a resource given an URI.&#xA; * A repository cannot contain 2 resources which points to the same file (ie. that have the same normalizedURI)&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="/0/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Creates a new Resource with given uri, and an optional mm_uri&#xA;&#x9; * mm_uri is required when creating a new model from scratch.&#xA;&#x9; * Raises a ResourceCreate exception in case the Repository already&#xA;&#x9; * contains a Resource with the given uri&#xA;&#x9; * If uri does not points to an existing model file (in the case of&#xA;&#x9; * a model creation), calls to load() operation will fail as long as&#xA;&#x9; * the model has not been saved once&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.persistence.Resource result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="/0/standard/JavaString"/>
          <eParameters name="mm_uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="normalizeUri" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return a normalized version of the Uri &#xA;&#x9; * in order to prevent several loading of the same file because they have different path that leads to them, kermeta uses normalizedURI&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xA;&#x9; * to check how a given uri is normalized by kermeta &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.normalizeUri(uri), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Search for elements referenced by one element contained by this repository  that are not contained by this repository&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xA;&#x9; * example of use :&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xA;     *&#x9;report := repository.findDanglingModelElements()&#xA;     *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> fullResContents = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft82 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_338 = false;&#xA;&#x9;while( !idLoopCond_338 ) {&#xA;&#x9;idLoopCond_338 = it_ft82.isOff();&#xA;&#x9;if ( idLoopCond_338 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.persistence.Resource res_lbdExp82 = it_ft82.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_339 = false;&#xA;&#x9;idIfCond_339 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(fullResContents);&#xA;&#xA;&#x9;if( idIfCond_339 ) {&#xA;&#xA;&#x9;fullResContents = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res_lbdExp82.getterContents());&#xA;}&#xA; else {&#xA;&#xA;&#x9;fullResContents.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res_lbdExp82.getterContents()));&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft83 = fullResContents.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_340 = false;&#xA;&#x9;while( !idLoopCond_340 ) {&#xA;&#x9;idLoopCond_340 = it_ft83.isOff();&#xA;&#x9;if ( idLoopCond_340 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object containedObj_lbdExp83 = it_ft83.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(containedObj_lbdExp83).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_341 = false;&#xA;&#x9;idIfCond_341 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(classDef));&#xA;&#xA;&#x9;if( idIfCond_341 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft84 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDef.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_342 = false;&#xA;&#x9;while( !idLoopCond_342 ) {&#xA;&#x9;idLoopCond_342 = it_ft84.isOff();&#xA;&#x9;if ( idLoopCond_342 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp84 = it_ft84.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_343 = false;&#xA;&#x9;idIfCond_343 = kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp84.getIsDerived());&#xA;&#xA;&#x9;if( idIfCond_343 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_344 = false;&#xA;&#x9;idIfCond_344 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop_lbdExp84.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop_lbdExp84.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( idIfCond_344 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp83, prop_lbdExp84), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_345 = false;&#xA;&#x9;idIfCond_345 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObjs));&#xA;&#xA;&#x9;if( idIfCond_345 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft85 = referencedObjs.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_346 = false;&#xA;&#x9;while( !idLoopCond_346 ) {&#xA;&#x9;idLoopCond_346 = it_ft85.isOff();&#xA;&#x9;if ( idLoopCond_346 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object referencedObj_lbdExp85 = it_ft85.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_347 = false;&#xA;&#x9;idIfCond_347 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(fullResContents.contains(referencedObj_lbdExp85)), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp85, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp85, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp85, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_347 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj_lbdExp85);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp83);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp84);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp83, prop_lbdExp84);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_348 = false;&#xA;&#x9;idIfCond_348 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObj));&#xA;&#xA;&#x9;if( idIfCond_348 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_349 = false;&#xA;&#x9;idIfCond_349 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(fullResContents.contains(referencedObj)), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_349 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp83);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp84);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/standard/Set">
            <eTypeArguments eClassifier="/0/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="getResource" eType="/0/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the Resource associated with the given uri if this uri is associated with&#xA;&#x9; * an already created Resource of the Repository.&#xA;&#x9; * If the Repository contains no Resource associated with the given uri, creates&#xA;&#x9; * a new Resource and loads it.&#xA;&#x9; * In order to prevent multiple load of the same file by using variant path to the same file, all URI used by this function are normalized&#xA;&#x9; * Raises a ResourceCreate exception if the given uri does not point to an existing&#xA;&#x9; * model file &#xA;&#x9; * May also raises loading exceptions if this is the first retrieval of the resource&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.initRepository(this);&#xA;&#xA;&#x9;java.lang.String normalisedUri = this.normalizeUri(uri);&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_350 = false;&#xA;&#x9;while( !idLoopCond_350 ) {&#xA;&#x9;idLoopCond_350 = it.isOff();&#xA;&#x9;if ( idLoopCond_350 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;kermeta.persistence.Resource next = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_351 = false;&#xA;&#x9;idIfCond_351 = kermeta.standard.helper.StringWrapper.equals(normalisedUri, next.normalizedUri());&#xA;&#xA;&#x9;if( idIfCond_351 ) {&#xA;&#xA;&#x9;result = next;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_352 = false;&#xA;&#x9;idIfCond_352 = result == null;&#xA;&#xA;&#x9;if( idIfCond_352 ) {&#xA;&#xA;&#x9;result = this.createResource(uri, &quot;&quot;);&#xA;&#xA;&#x9;result.load();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="resources" ordered="false" upperBound="-1" eType="/0/persistence/Resource" containment="true" eOpposite="/0/persistence/Resource/repository">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Resources created by this Repository &#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xA;&#x9; * one Resource of a given Repository&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DanglingDiagnostic" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * class used to gather the information required to make a user friendly report about a dangling element&#xA; * (see. findDanglingModelElements())&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * user friendly message build with those informations&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getDanglingElement()), &quot; referenced by &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getReferencingElement())), &quot;.&quot;), this.getReferencingProperty().getName()), &quot; is dangling&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingElement" eType="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Element that has a reference to the dangling element  &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="danglingElement" eType="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Element that is not contained by a resource in the repository  &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingProperty" eType="/0/language/structure/Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Property used to reference the dangling element  &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFRepository" eSuperTypes="/0/persistence/Repository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Repository that stores and manages resources that come from EMF&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="/0/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Repository.createResource(String, String)&#xA;&#x9; * Create a new resource for a model given by its uri, &#xA;&#x9; * which meta-model is stored in file given by mm_uri&#xA;&#x9; * If file already exists, you'll be able to call the load method to concretly load the model&#xA;&#x9; * otherwise, you can only call the save method&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Repository"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;//BIft:collect&#xA;&#xA;kermeta.standard.Sequence&lt;java.lang.String> result_ft86 = null;&#xA;&#xA;&#x9;result_ft86 = ((kermeta.standard.Sequence&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft86 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_354 = false;&#xA;&#x9;while( !idLoopCond_354 ) {&#xA;&#x9;idLoopCond_354 = it_ft86.isOff();&#xA;&#x9;if ( idLoopCond_354 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.String result_lambda_ft86 = null;&#xA;//BIle:collector&#xA;kermeta.persistence.Resource r_lbdExp86 = it_ft86.next();&#xA;&#xA;&#x9;result_lambda_ft86 = r_lbdExp86.getUri();&#xA;//EIle:collector&#xA;&#xA;&#x9;result_ft86.add(result_lambda_ft86);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:collect&#xA;java.lang.Boolean idIfCond_353 = false;&#xA;&#x9;idIfCond_353 = kermeta.standard.helper.BooleanWrapper.not(result_ft86.contains(uri));&#xA;&#xA;&#x9;if( idIfCond_353 ) {&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.createResource(this, uri, mm_uri), &quot;kermeta.persistence.Resource&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceCreateException e = ((kermeta.exceptions.ResourceCreateException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getResourceCreateException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Trying to create a resource already existing at &quot;, uri), &quot;.\n&quot;), &quot;Remove existing resource from repository first, or use \&quot;getResource\&quot; operation.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="/0/standard/JavaString"/>
          <eParameters name="mm_uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="registerEcoreFile">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * Register the content of the given ecore file into EMF registry&#xA;&#x9;  * Once registered, EMF will be able to load and save models conformant to this ecore file&#xA;&#x9;  * Warning: if the NSURI you wish to register is already, registered (either statically or due to a previous call)&#xA;&#x9;  *  it will do nothing. Ie. modification in the ecore file will not be taken into account unless you manually unregister it.&#x9;    &#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.registerEcoreFile(mm_uri);&#xA;"/>
          </eAnnotations>
          <eParameters name="mm_uri" eType="/0/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrorUnknownMetaclass" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * When loading the Resources, &#xA;&#x9; * if there are some errors due to an unknown metaclass while loading some objects, the loader try to ignore them&#xA;&#x9; * by default, not setting this attribute is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="useInterpreterInternalResources" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * If true, tells to the save of the resources that they should also integrate the resources from Kermeta interpreter itself&#xA;&#x9; * this is useful for example to make a dependency to framework.km&#xA;&#x9; * by default, not setting this is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreAllLoadErrors" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * When loading the Resources, &#xA;&#x9; * if there are some errors while loading some objects, the loader can try to ignore them&#xA;&#x9; * setting this attribute to true is equivalent to setting ignoreLoadErrorUnknownMetaclass and ignoreLoadErrorUnknownProperty to true&#xA;&#x9; * by default, not setting this attribute is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrorUnknownProperty" eType="/0/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * When loading the Resources, &#xA;&#x9; * if there are some errors due to an unknown property while loading some objects (ie. the metaclass is known but it cannot retreive&#xA;&#x9; * the given reference or attribute in the ClassDefinition, the loader try to ignore them&#xA;&#x9; * by default, not setting this attribute is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="ecore" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/ecore/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/ecore"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains the definition of a Kermeta classes used for compatibility with Ecore &#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="EFeatureMapEntry" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Kermeta representation of EMF EFeatureMapEntry&#xA; * it contains the name of the required feature and the actual value&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="/0/language/structure/Object" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="eStructuralFeatureName" eType="/0/standard/JavaString"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="interpreter" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/interpreter/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/interpreter"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains a set of classes whose function is to evaluate a kermeta &#xA; * expression written as a string.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/interpreter_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpression" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * DynamicExpression is a class used to make dynamic calls, i.e dynamic evaluation&#xA; * of Kermeta statements represented in a string.&#xA; * &#xA; * An example :&#xA; *   var de : DynamicExpression init DynamicExpression.new&#xA; *   de.initializeDefaults&#xA; *   de.formalParameters.put(&quot;a&quot;, String)&#xA; *   de.parse(&quot;stdio.writeln(a)&quot;) // note: to execute a list of statements, you have to surround them with do..end&#xA; *   var params : Hashtable&lt;String, Object> init Hashtable&lt;String, Object>.new&#xA; *   params.put(&quot;a&quot;, &quot;hello world!&quot;)&#xA; *   de.execute(void, params)&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/dynamic_expression_view.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="execute" eType="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * Execute the expression in the given context&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_355 = false;&#xA;&#x9;idIfCond_355 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getExpression(), null);&#xA;&#xA;&#x9;if( idIfCond_355 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression is void&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_356 = false;&#xA;&#x9;idIfCond_356 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_356 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.DynamicExpressionUtil.execute(this, selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="selfObj" eType="/0/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="/0/utils/Hashtable">
              <eTypeArguments eClassifier="/0/standard/JavaString"/>
              <eTypeArguments eClassifier="/0/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="initializeDefaults" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Initializes the formalParameters with an empty set of parameters&#xA;&#x9; * and the self type with void&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setFormalParameters(((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable())));&#xA;&#xA;&#x9;this.setSelfClass((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Object&quot;).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="parse" eType="/0/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Parse the expression as a string&#xA;&#x9; * and updates the expression field and errors&#xA;&#x9; * Returns true if the expression was parsed sucessfuly&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).clear();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_357 = false;&#xA;&#x9;idIfCond_357 = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getFormalParameters(), null), org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getSelfClass(), null));&#xA;&#xA;&#x9;if( idIfCond_357 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;parse precondition - formalParameters or selfType is void&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.DynamicExpressionUtil.parse(this, expression), &quot;java.lang.Boolean&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_358 = false;&#xA;&#x9;idIfCond_358 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_358 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;parse result - expression contains errors&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.interpreter.KermetaError> it_ft87 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_359 = false;&#xA;&#x9;while( !idLoopCond_359 ) {&#xA;&#x9;idLoopCond_359 = it_ft87.isOff();&#xA;&#x9;if ( idLoopCond_359 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.interpreter.KermetaError error_lbdExp87 = it_ft87.next();&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.append(e.getMessage(), kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, error_lbdExp87.getMessage()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="expression" eType="/0/standard/JavaString"/>
        </eOperations>
        <eOperations name="evalString" eType="/0/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * Execute the expression given as a string.&#xA;     * the self type and formal parameters are supposed to be set&#xA;     * before calling this operation&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_360 = false;&#xA;&#x9;idIfCond_360 = kermeta.standard.helper.BooleanWrapper.not(this.parse(body));&#xA;&#xA;&#x9;if( idIfCond_360 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;evalString - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.execute(selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="body" eType="/0/standard/JavaString"/>
          <eParameters name="selfObj" eType="/0/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="/0/utils/Hashtable">
              <eTypeArguments eClassifier="/0/standard/JavaString"/>
              <eTypeArguments eClassifier="/0/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="/0/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the expression&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1" eType="/0/interpreter/KermetaError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Parse errors and type errors&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Formal parameters of the expression (bindings between parameters' names and types)&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="/0/utils/Hashtable">
            <eTypeArguments eClassifier="/0/standard/JavaString"/>
            <eTypeArguments eClassifier="/0/language/structure/Type"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selfClass" eType="/0/language/structure/ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * The type of the self object&#xA;&#x9; * or void if the expression is not to be executed&#xA;&#x9; * in the context of an object&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KermetaError" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Kermeta language error in a code written in Kermeta&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="/0/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Error message&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ParseError" eSuperTypes="/0/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Kermeta error for parsing problems&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeError" eSuperTypes="/0/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Type errors in a code written in Kermeta&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="runtime2SCA" nsURI="http://www.kermeta.org/runtime2SCA/kermeta_temp_uri" nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/runtime2SCA"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="Main" eSuperTypes="/0/language/structure/Object">
      <eOperations name="loadModel" eType="/2/System">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;art.System result = null;&#xA;&#xA;&#x9;kermeta.persistence.Resource resource = repository.createResource(model, &quot;http://art&quot;);&#xA;&#xA;&#x9;resource.load();&#xA;&#xA;&#x9;result = (art.System) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(resource.instances().one(), &quot;art.System&quot;);&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="repository" eType="/0/persistence/EMFRepository"/>
        <eParameters name="model" eType="/0/standard/JavaString"/>
      </eOperations>
      <eOperations name="mainWithParameter">
        <eAnnotations source="kermeta">
          <details key="main" value="platform:/resource/SmartAdapters/examples/serviceDiscovery/model/woven/DAModel.art C:/Documents and Settings/bmorin/workspace/SCA_example/src/test.composite"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;java.lang.String content = null;&#xA;&#xA;&#x9;art.System system = this.loadModel(((kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFRepository())), modelURI);&#xA;&#xA;&#x9;sca.SCA generator = ((sca.SCA) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(sca.ScaPackage.eINSTANCE.getSCA()));&#xA;&#xA;&#x9;content = generator.generate(system);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().write(&quot;Generating base configuration...&quot;);&#xA;&#xA;&#x9;kermeta.io.FileIO fileWriter = ((kermeta.io.FileIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getFileIO()));&#xA;&#xA;&#x9;fileWriter.writeTextFile(file, content);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().write(&quot;OK!&quot;);&#xA;"/>
        </eAnnotations>
        <eParameters name="modelURI" eType="/0/standard/JavaString"/>
        <eParameters name="file" eType="/0/standard/JavaString"/>
      </eOperations>
      <eOperations name="main">
        <eAnnotations source="kermeta">
          <details key="main" value=""/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;java.lang.String modelURI = &quot;platform:/resource/SmartAdapters/examples/serviceDiscovery/model/woven/DAModel.art&quot;;&#xA;&#xA;&#x9;java.lang.String file = &quot;C:/Documents and Settings/bmorin/workspace/SCA_example/src/test.composite&quot;;&#xA;&#xA;&#x9;this.mainWithParameter(modelURI, file);&#xA;"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
  </ecore:EPackage>
  <ecore:EPackage name="art" nsURI="http://art/kermeta_temp_uri" nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://art"/>
    </eAnnotations>
    <eAnnotations source="kermeta">
      <details key="ecore" value="true"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="/0/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="/2/String">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModelElement" abstract="true" eSuperTypes="/2/NamedElement">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="System" eSuperTypes="/2/ModelElement">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="services" upperBound="-1" eType="/2/type/Service" containment="true">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="root" lowerBound="1" eType="/2/instance/CompositeInstance" containment="true">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataTypes" upperBound="-1" eType="/2/DataType" containment="true">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1" eType="/2/type/ComponentType" containment="true">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="/2/ModelElement">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true" eSuperTypes="/2/ModelElement">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="/2/DataType">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AddElement" eSuperTypes="/0/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RemoveElement" eSuperTypes="/0/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="UpdateElement" eSuperTypes="/0/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CardinalityElement" eSuperTypes="/2/ModelElement">
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="/2/Integer">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="/2/Integer">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eSubpackages name="instance" nsURI="http://art/instance/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://art/instance"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentInstance" abstract="true" eSuperTypes="/2/ModelElement /2/AddElement /2/RemoveElement /2/UpdateElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eAnnotations source="kermeta.inv">
          <details key="completeTransmissionBindings" value=""/>
        </eAnnotations>
        <eOperations name="getOperationEMF_renameAs" upperBound="-1" eType="/2/type/Operation">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getOperationEMF_renameAs"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.OrderedSet&lt;art.type.Operation> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterOperation" upperBound="-1" eType="/2/type/Operation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;art.type.Operation> result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.type.Operation>convertAsOrderedSet(this.getOperationEMF_renameAs());&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterGetAllBindings" upperBound="-1" eType="/2/instance/TransmissionBinding">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;art.instance.TransmissionBinding> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;art.instance.TransmissionBinding> res = ((kermeta.standard.OrderedSet&lt;art.instance.TransmissionBinding>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;res.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.TransmissionBinding>convertAsOrderedSet(this.getBinding()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_361 = false;&#xA;&#x9;idIfCond_361 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.CompositeInstance&quot;));&#xA;&#xA;&#x9;if( idIfCond_361 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ComponentInstance> it_ft88 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.ComponentInstance>convertAsOrderedSet(((art.instance.CompositeInstance) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.CompositeInstance&quot;))).getSubComponent()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_362 = false;&#xA;&#x9;while( !idLoopCond_362 ) {&#xA;&#x9;idLoopCond_362 = it_ft88.isOff();&#xA;&#x9;if ( idLoopCond_362 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.instance.ComponentInstance sub_lbdExp88 = it_ft88.next();&#xA;&#xA;&#x9;res.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.TransmissionBinding>convertAsOrderedSet(sub_lbdExp88.getterGetAllBindings()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterOperationAsString" unique="false" upperBound="-1" eType="/2/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterDependentComponents" upperBound="-1" eType="/2/instance/ComponentInstance">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;art.instance.ComponentInstance> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;art.instance.ComponentInstance> res = ((kermeta.standard.Set&lt;art.instance.ComponentInstance>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;art.instance.CompositeInstance composite = this.getSuperComponent();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_363 = false;&#xA;&#x9;idIfCond_363 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(composite, null);&#xA;&#xA;&#x9;if( idIfCond_363 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_364 = false;&#xA;&#x9;idIfCond_364 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.CompositeInstance&quot;));&#xA;&#xA;&#x9;if( idIfCond_364 ) {&#xA;&#xA;&#x9;res.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.ComponentInstance>convertAsOrderedSet(((art.instance.CompositeInstance) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.CompositeInstance&quot;))).getSubComponent()));&#xA;}&#xA;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;art.instance.ComponentInstance> result_ft89 = null;&#xA;&#xA;&#x9;art.instance.ComponentInstance elem_ft89 = null;&#xA;&#xA;&#x9;result_ft89 = ((kermeta.standard.Sequence&lt;art.instance.ComponentInstance>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ComponentInstance> it_ft89 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.ComponentInstance>convertAsOrderedSet(composite.getSubComponent()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_365 = false;&#xA;&#x9;while( !idLoopCond_365 ) {&#xA;&#x9;idLoopCond_365 = it_ft89.isOff();&#xA;&#x9;if ( idLoopCond_365 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft89 = it_ft89.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_366 = false;&#xA;//BIle:selector&#xA;art.instance.ComponentInstance c_lbdExp89 = elem_ft89;&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft90 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft90 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.TransmissionBinding> it_ft90 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.TransmissionBinding>convertAsOrderedSet(c_lbdExp89.getBinding()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_367 = false;&#xA;&#x9;while( !idLoopCond_367 ) {&#xA;&#x9;idLoopCond_367 = kermeta.standard.helper.BooleanWrapper.or(it_ft90.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft90, false));&#xA;&#x9;if ( idLoopCond_367 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft90 = null;&#xA;//BIle:func&#xA;art.instance.TransmissionBinding b_lbdExp90 = it_ft90.next();&#xA;&#xA;&#x9;result_lambda_ft90 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(b_lbdExp90.getServerInstance(), this);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft90 = kermeta.standard.helper.BooleanWrapper.or(test_ft90, result_lambda_ft90);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft90 = test_ft90;&#xA;//EIft:exists&#xA;idIfCond_366 = result_ft90;&#xA;&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_366 ) {&#xA;&#xA;&#x9;result_ft89.add(elem_ft89);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;res.addAll(result_ft89);&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;art.instance.ComponentInstance> result_ft93 = null;&#xA;&#xA;&#x9;art.instance.ComponentInstance elem_ft93 = null;&#xA;&#xA;&#x9;result_ft93 = ((kermeta.standard.Sequence&lt;art.instance.ComponentInstance>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ComponentInstance> it_ft93 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.ComponentInstance>convertAsOrderedSet(composite.getSubComponent()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_371 = false;&#xA;&#x9;while( !idLoopCond_371 ) {&#xA;&#x9;idLoopCond_371 = it_ft93.isOff();&#xA;&#x9;if ( idLoopCond_371 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft93 = it_ft93.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_372 = false;&#xA;//BIle:selector&#xA;art.instance.ComponentInstance c_lbdExp93 = elem_ft93;&#xA;&#xA;&#x9;idIfCond_372 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(c_lbdExp93, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.CompositeInstance&quot;));&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_372 ) {&#xA;&#xA;&#x9;result_ft93.add(elem_ft93);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;art.instance.ComponentInstance> result_ft91 = null;&#xA;&#xA;&#x9;art.instance.ComponentInstance elem_ft91 = null;&#xA;&#xA;&#x9;result_ft91 = ((kermeta.standard.Sequence&lt;art.instance.ComponentInstance>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ComponentInstance> it_ft91 = result_ft93.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_368 = false;&#xA;&#x9;while( !idLoopCond_368 ) {&#xA;&#x9;idLoopCond_368 = it_ft91.isOff();&#xA;&#x9;if ( idLoopCond_368 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft91 = it_ft91.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_369 = false;&#xA;//BIle:selector&#xA;art.instance.ComponentInstance c_lbdExp91 = elem_ft91;&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft92 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft92 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.DelegationBinding> it_ft92 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.DelegationBinding>convertAsOrderedSet(((art.instance.CompositeInstance) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(c_lbdExp91, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.CompositeInstance&quot;))).getDelegation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_370 = false;&#xA;&#x9;while( !idLoopCond_370 ) {&#xA;&#x9;idLoopCond_370 = kermeta.standard.helper.BooleanWrapper.or(it_ft92.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft92, false));&#xA;&#x9;if ( idLoopCond_370 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft92 = null;&#xA;//BIle:func&#xA;art.instance.DelegationBinding d_lbdExp92 = it_ft92.next();&#xA;&#xA;&#x9;result_lambda_ft92 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(d_lbdExp92.getServerInstance(), this);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft92 = kermeta.standard.helper.BooleanWrapper.or(test_ft92, result_lambda_ft92);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft92 = test_ft92;&#xA;//EIft:exists&#xA;idIfCond_369 = result_ft92;&#xA;&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_369 ) {&#xA;&#xA;&#x9;result_ft91.add(elem_ft91);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;&#xA;}&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="binding" upperBound="-1" eType="/2/instance/TransmissionBinding" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="/2/type/ComponentType">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="superComponent" eType="/2/instance/CompositeInstance" eOpposite="/2/instance/CompositeInstance/subComponent">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="state" lowerBound="1" eType="/2/String">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" upperBound="-1" eType="/2/instance/ValuedAttribute" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="implem" eType="/2/implem/ComponentImplementation" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PrimitiveInstance" eSuperTypes="/2/instance/ComponentInstance">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eOperations name="getOperationEMF_renameAs" upperBound="-1" eType="/2/type/Operation">
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getOperationEMF_renameAs"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="art::instance::ComponentInstance"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;art.type.Operation> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;art.type.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;art.type.Port> result_ft99 = null;&#xA;&#xA;&#x9;art.type.Port elem_ft99 = null;&#xA;&#xA;&#x9;result_ft99 = ((kermeta.standard.Sequence&lt;art.type.Port>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Port> it_ft99 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.type.Port>convertAsOrderedSet(this.getType().getPort()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_379 = false;&#xA;&#x9;while( !idLoopCond_379 ) {&#xA;&#x9;idLoopCond_379 = it_ft99.isOff();&#xA;&#x9;if ( idLoopCond_379 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft99 = it_ft99.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_380 = false;&#xA;//BIle:selector&#xA;art.type.Port p_lbdExp99 = elem_ft99;&#xA;&#xA;&#x9;idIfCond_380 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp99.getRole(), &quot;server&quot;);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_380 ) {&#xA;&#xA;&#x9;result_ft99.add(elem_ft99);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:collect&#xA;&#xA;kermeta.standard.Sequence&lt;art.type.Service> result_ft98 = null;&#xA;&#xA;&#x9;result_ft98 = ((kermeta.standard.Sequence&lt;art.type.Service>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Port> it_ft98 = result_ft99.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_378 = false;&#xA;&#x9;while( !idLoopCond_378 ) {&#xA;&#x9;idLoopCond_378 = it_ft98.isOff();&#xA;&#x9;if ( idLoopCond_378 ) {&#xA;&#x9;} else {&#xA;&#xA;art.type.Service result_lambda_ft98 = null;&#xA;//BIle:collector&#xA;art.type.Port p_lbdExp98 = it_ft98.next();&#xA;&#xA;&#x9;result_lambda_ft98 = p_lbdExp98.getService();&#xA;//EIle:collector&#xA;&#xA;&#x9;result_ft98.add(result_lambda_ft98);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:collect&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Service> it_ft97 = result_ft98.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_377 = false;&#xA;&#x9;while( !idLoopCond_377 ) {&#xA;&#x9;idLoopCond_377 = it_ft97.isOff();&#xA;&#x9;if ( idLoopCond_377 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.type.Service s_lbdExp97 = it_ft97.next();&#xA;&#xA;&#x9;result.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.type.Operation>convertAsOrderedSet(s_lbdExp97.getOperation()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CompositeInstance" eSuperTypes="/2/instance/ComponentInstance">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eAnnotations source="kermeta.inv">
          <details key="completeDelegationBindings" value=""/>
        </eAnnotations>
        <eOperations name="getOperationEMF_renameAs" upperBound="-1" eType="/2/type/Operation">
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getOperationEMF_renameAs"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="art::instance::ComponentInstance"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;art.type.Operation> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;art.type.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:collect&#xA;&#xA;kermeta.standard.Sequence&lt;art.instance.ComponentInstance> result_ft101 = null;&#xA;&#xA;&#x9;result_ft101 = ((kermeta.standard.Sequence&lt;art.instance.ComponentInstance>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.DelegationBinding> it_ft101 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.DelegationBinding>convertAsOrderedSet(this.getDelegation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_382 = false;&#xA;&#x9;while( !idLoopCond_382 ) {&#xA;&#x9;idLoopCond_382 = it_ft101.isOff();&#xA;&#x9;if ( idLoopCond_382 ) {&#xA;&#x9;} else {&#xA;&#xA;art.instance.ComponentInstance result_lambda_ft101 = null;&#xA;//BIle:collector&#xA;art.instance.DelegationBinding d_lbdExp101 = it_ft101.next();&#xA;&#xA;&#x9;result_lambda_ft101 = d_lbdExp101.getServerInstance();&#xA;//EIle:collector&#xA;&#xA;&#x9;result_ft101.add(result_lambda_ft101);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:collect&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ComponentInstance> it_ft100 = result_ft101.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_381 = false;&#xA;&#x9;while( !idLoopCond_381 ) {&#xA;&#x9;idLoopCond_381 = it_ft100.isOff();&#xA;&#x9;if ( idLoopCond_381 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.instance.ComponentInstance c_lbdExp100 = it_ft100.next();&#xA;&#xA;&#x9;result.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.type.Operation>convertAsOrderedSet(c_lbdExp100.getterOperation()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="subComponent" upperBound="-1" eType="/2/instance/ComponentInstance" containment="true" eOpposite="/2/instance/ComponentInstance/superComponent">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="delegation" upperBound="-1" eType="/2/instance/DelegationBinding" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="InstanceState">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eLiterals name="OFF" literal="OFF"/>
        <eLiterals name="ON" value="1" literal="ON"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValuedAttribute" eSuperTypes="/2/UpdateElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="/2/String">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" eType="/2/type/Attribute">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Binding" abstract="true" eSuperTypes="/2/AddElement /2/RemoveElement /2/UpdateElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eAnnotations source="kermeta.inv">
          <details key="wellFormedBinding" value=""/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="serverInstance" lowerBound="1" eType="/2/instance/ComponentInstance">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="/2/String">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TransmissionBinding" eSuperTypes="/2/instance/Binding">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eAnnotations source="kermeta.inv">
          <details key="wellFormedTransmissionBinding" value=""/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="server" eType="/2/type/Port">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="client" eType="/2/type/Port">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DelegationBinding" eSuperTypes="/2/instance/Binding">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eAnnotations source="kermeta.inv">
          <details key="wellFormedDelegationBinding" value=""/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1" eType="/2/type/Port">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exported" lowerBound="1" eType="/2/type/Port">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="type" nsURI="http://art/type/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://art/type"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentType" abstract="true" eSuperTypes="/2/ModelElement /2/AddElement /2/RemoveElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="port" upperBound="-1" eType="/2/type/Port" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" upperBound="-1" eType="/2/type/Attribute" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="/2/type/ComponentType">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="binding" upperBound="-1" eType="/2/instance/TransmissionBinding" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CompositeType" eSuperTypes="/2/type/ComponentType">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="delegation" upperBound="-1" eType="/2/instance/DelegationBinding" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="subTypes" upperBound="-1" eType="/2/type/CompositeType">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Service" abstract="true" eSuperTypes="/2/ModelElement /2/AddElement /2/RemoveElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eAnnotations source="kermeta.inv">
          <details key="validService" value=""/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="operation" upperBound="-1" eType="/2/type/Operation" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="/2/ModelElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="input" upperBound="-1" eType="/2/type/Parameter" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="output" upperBound="-1" eType="/2/type/Parameter" containment="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="/2/TypedElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FunctionalService" eSuperTypes="/2/type/Service">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ControlService" eSuperTypes="/2/type/Service">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Port" eSuperTypes="/2/CardinalityElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="service" lowerBound="1" eType="/2/type/Service">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="role" lowerBound="1" eType="/2/String">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOptional" eType="/2/Boolean" defaultValueLiteral="true">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="/2/TypedElement">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="PortRole">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eLiterals name="client" literal="client"/>
        <eLiterals name="server" value="1" literal="server"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="implem" nsURI="http://art/implem/kermeta_temp_uri" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://art/implem"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore" value="true"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentImplementation" abstract="true" eSuperTypes="/0/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FractalComponent" eSuperTypes="/2/implem/ComponentImplementation">
        <eAnnotations source="kermeta">
          <details key="ecore" value="true"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="controllerDesc" eType="/2/String">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="contentDesc" eType="/2/String">
          <eAnnotations source="kermeta">
            <details key="ecore" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="sca" nsURI="http://www.kermeta.org/sca/kermeta_temp_uri" nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/sca"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="SCA" eSuperTypes="/0/language/structure/Object">
      <eOperations name="generate" eType="/0/standard/JavaString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.utils.StringBuffer _res = ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer()));&#xA;&#xA;&#x9;_res.append(&quot;\n&lt;sca:composite xmlns:sca=\&quot;http://www.osoa.org/xmlns/sca/1.0\&quot; xmlns:sample=\&quot;http://sample\&quot; xmlns=\&quot;http://www.osoa.org/xmlns/sca/1.0\&quot; name=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(system.getRoot().getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot; targetNamespace=\&quot;http://sample\&quot;>\n&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ComponentInstance> it_ft112 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.ComponentInstance>convertAsOrderedSet(system.getRoot().getSubComponent()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_394 = false;&#xA;&#x9;while( !idLoopCond_394 ) {&#xA;&#x9;idLoopCond_394 = it_ft112.isOff();&#xA;&#x9;if ( idLoopCond_394 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.instance.ComponentInstance sub_lbdExp112 = it_ft112.next();&#xA;&#xA;&#x9;_res.append(&quot;\t&lt;sca:component name=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(sub_lbdExp112.getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot;>\n&quot;);&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;art.type.Port> result_ft114 = null;&#xA;&#xA;&#x9;art.type.Port elem_ft114 = null;&#xA;&#xA;&#x9;result_ft114 = ((kermeta.standard.Sequence&lt;art.type.Port>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Port> it_ft114 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.type.Port>convertAsOrderedSet(sub_lbdExp112.getType().getPort()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_396 = false;&#xA;&#x9;while( !idLoopCond_396 ) {&#xA;&#x9;idLoopCond_396 = it_ft114.isOff();&#xA;&#x9;if ( idLoopCond_396 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft114 = it_ft114.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_397 = false;&#xA;//BIle:selector&#xA;art.type.Port p_lbdExp114 = elem_ft114;&#xA;&#xA;&#x9;idIfCond_397 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp114.getRole(), &quot;server&quot;);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_397 ) {&#xA;&#xA;&#x9;result_ft114.add(elem_ft114);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Port> it_ft113 = result_ft114.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_395 = false;&#xA;&#x9;while( !idLoopCond_395 ) {&#xA;&#x9;idLoopCond_395 = it_ft113.isOff();&#xA;&#x9;if ( idLoopCond_395 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.type.Port p_lbdExp113 = it_ft113.next();&#xA;&#xA;&#x9;_res.append(&quot;\t\t&lt;sca:service name=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(p_lbdExp113.getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot;>\n\t\t\t&lt;sca:interface.java interface=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(p_lbdExp113.getService().getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot;/>\n\t\t&lt;/sca:service>\n&quot;);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;_res.append(&quot;&quot;);&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;art.type.Port> result_ft116 = null;&#xA;&#xA;&#x9;art.type.Port elem_ft116 = null;&#xA;&#xA;&#x9;result_ft116 = ((kermeta.standard.Sequence&lt;art.type.Port>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Port> it_ft116 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.type.Port>convertAsOrderedSet(sub_lbdExp112.getType().getPort()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_399 = false;&#xA;&#x9;while( !idLoopCond_399 ) {&#xA;&#x9;idLoopCond_399 = it_ft116.isOff();&#xA;&#x9;if ( idLoopCond_399 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft116 = it_ft116.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_400 = false;&#xA;//BIle:selector&#xA;art.type.Port p_lbdExp116 = elem_ft116;&#xA;&#xA;&#x9;idIfCond_400 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp116.getRole(), &quot;client&quot;);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_400 ) {&#xA;&#xA;&#x9;result_ft116.add(elem_ft116);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.type.Port> it_ft115 = result_ft116.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_398 = false;&#xA;&#x9;while( !idLoopCond_398 ) {&#xA;&#x9;idLoopCond_398 = it_ft115.isOff();&#xA;&#x9;if ( idLoopCond_398 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.type.Port p_lbdExp115 = it_ft115.next();&#xA;&#xA;&#x9;_res.append(&quot;\t\t &lt;sca:reference name=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(p_lbdExp115.getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot;/>\n&quot;);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;_res.append(&quot;&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.ValuedAttribute> it_ft117 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.ValuedAttribute>convertAsOrderedSet(sub_lbdExp112.getAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_401 = false;&#xA;&#x9;while( !idLoopCond_401 ) {&#xA;&#x9;idLoopCond_401 = it_ft117.isOff();&#xA;&#x9;if ( idLoopCond_401 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.instance.ValuedAttribute a_lbdExp117 = it_ft117.next();&#xA;&#xA;&#x9;_res.append(&quot;\t\t&lt;sca:property name=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(kermeta.standard.helper.StringWrapper.substring(kermeta.standard.helper.StringWrapper.split(a_lbdExp117.getValue(), &quot;:&quot;).elementAt(0), 3, kermeta.standard.helper.StringWrapper.size(kermeta.standard.helper.StringWrapper.split(a_lbdExp117.getValue(), &quot;: &quot;).elementAt(0))));&#xA;&#xA;&#x9;_res.append(&quot;\&quot;>&quot;);&#xA;&#xA;&#x9;_res.append(kermeta.standard.helper.StringWrapper.split(a_lbdExp117.getValue(), &quot;: &quot;).elementAt(1));&#xA;&#xA;&#x9;_res.append(&quot;&lt;/sca:property>\n&quot;);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;_res.append(&quot;\t&lt;/sca:component>\n&quot;);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;_res.append(&quot;&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.TransmissionBinding> it_ft118 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.TransmissionBinding>convertAsOrderedSet(system.getRoot().getterGetAllBindings()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_402 = false;&#xA;&#x9;while( !idLoopCond_402 ) {&#xA;&#x9;idLoopCond_402 = it_ft118.isOff();&#xA;&#x9;if ( idLoopCond_402 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.instance.TransmissionBinding b_lbdExp118 = it_ft118.next();&#xA;&#xA;&#x9;_res.append(&quot;\t&lt;sca:wire source=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(((art.instance.ComponentInstance) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(b_lbdExp118), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;art.instance.ComponentInstance&quot;))).getName());&#xA;&#xA;&#x9;_res.append(&quot;/&quot;);&#xA;&#xA;&#x9;_res.append(b_lbdExp118.getClient().getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot; target=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(b_lbdExp118.getServerInstance().getName());&#xA;&#xA;&#x9;_res.append(&quot;/&quot;);&#xA;&#xA;&#x9;_res.append(b_lbdExp118.getServer().getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot;/>\n&quot;);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;_res.append(&quot;&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;art.instance.DelegationBinding> it_ft119 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;art.instance.DelegationBinding>convertAsOrderedSet(system.getRoot().getDelegation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_403 = false;&#xA;&#x9;while( !idLoopCond_403 ) {&#xA;&#x9;idLoopCond_403 = it_ft119.isOff();&#xA;&#x9;if ( idLoopCond_403 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;art.instance.DelegationBinding d_lbdExp119 = it_ft119.next();&#xA;&#xA;&#x9;_res.append(&quot;\t&lt;sca:service name=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(d_lbdExp119.getSource().getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot; promote=\&quot;&quot;);&#xA;&#xA;&#x9;_res.append(d_lbdExp119.getServerInstance().getName());&#xA;&#xA;&#x9;_res.append(&quot;/&quot;);&#xA;&#xA;&#x9;_res.append(d_lbdExp119.getExported().getName());&#xA;&#xA;&#x9;_res.append(&quot;\&quot;/>\n&quot;);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;_res.append(&quot;&lt;/sca:composite>&quot;);&#xA;&#xA;&#x9;result = _res.toString();&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="system" eType="/2/System"/>
      </eOperations>
    </eClassifiers>
  </ecore:EPackage>
</xmi:XMI>
