/**
 * License: EPL
 * Copyright: IRISA / INRIA / Universite de Rennes 1
 * 
 * Generating with Kermeta <http://www.kermeta.org>
 *
 * $Id$
 */
package sca;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>SCA</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see sca.ScaPackage#getSCA()
 * @model
 * @generated
 */
public interface SCA extends kermeta.language.structure.Object {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tkermeta.utils.StringBuffer _res = ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer()));\n\n\t_res.append(\"\\n<sca:composite xmlns:sca=\\\"http://www.osoa.org/xmlns/sca/1.0\\\" name=\\\"\");\n\n\t_res.append(system.getRoot().getName());\n\n\t_res.append(\"\\\" targetNamespace=\\\"http://sample\\\">\\n\");\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.instance.ComponentInstance> it_ft95 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<art.instance.ComponentInstance>convertAsOrderedSet(system.getRoot().getSubComponent()).iterator();\n\tjava.lang.Boolean idLoopCond_382 = false;\n\twhile( !idLoopCond_382 ) {\n\tidLoopCond_382 = it_ft95.isOff();\n\tif ( idLoopCond_382 ) {\n\t} else {\n\n\t//BIle:func\nart.instance.ComponentInstance sub_lbdExp95 = it_ft95.next();\n\n\t_res.append(\"\\t<sca:component constrainingType=\\\"eu.diva.\");\n\n\t_res.append(sub_lbdExp95.getName());\n\n\t_res.append(\"\\\" name=\\\"\");\n\n\t_res.append(sub_lbdExp95.getName());\n\n\t_res.append(\"\\\">\\n\\t<sca:implementation.java class=\\\"eu.diva.\");\n\n\t_res.append(sub_lbdExp95.getName());\n\n\t_res.append(\".\");\n\n\t_res.append(sub_lbdExp95.getName());\n\n\t_res.append(\"Impl\\\"/>\\n\");\n\n\t//BIft:select\n\nkermeta.standard.Sequence<art.type.Port> result_ft97 = null;\n\n\tart.type.Port elem_ft97 = null;\n\n\tresult_ft97 = ((kermeta.standard.Sequence<art.type.Port>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.type.Port> it_ft97 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<art.type.Port>convertAsOrderedSet(sub_lbdExp95.getType().getPort()).iterator();\n\tjava.lang.Boolean idLoopCond_384 = false;\n\twhile( !idLoopCond_384 ) {\n\tidLoopCond_384 = it_ft97.isOff();\n\tif ( idLoopCond_384 ) {\n\t} else {\n\n\telem_ft97 = it_ft97.next();\n\n\tjava.lang.Boolean idIfCond_385 = false;\n//BIle:selector\nart.type.Port p_lbdExp97 = elem_ft97;\n\n\tidIfCond_385 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp97.getRole(), \"server\");\n//EIle:selector\n\n\n\tif( idIfCond_385 ) {\n\n\tresult_ft97.add(elem_ft97);\n}\n\n}\n\t}\n}\n\n//EIft:select\n//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.type.Port> it_ft96 = result_ft97.iterator();\n\tjava.lang.Boolean idLoopCond_383 = false;\n\twhile( !idLoopCond_383 ) {\n\tidLoopCond_383 = it_ft96.isOff();\n\tif ( idLoopCond_383 ) {\n\t} else {\n\n\t//BIle:func\nart.type.Port p_lbdExp96 = it_ft96.next();\n\n\t_res.append(\"\\t\\t<sca:service name=\\\"\");\n\n\t_res.append(p_lbdExp96.getName());\n\n\t_res.append(\"\\\">\\n\\t\\t\\t<sca:interface.java interface=\\\"\");\n\n\t_res.append(p_lbdExp96.getService().getName());\n\n\t_res.append(\"\\\"/>\\n\\t\\t</sca:service>\\n\");\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t_res.append(\"\");\n\n\t//BIft:select\n\nkermeta.standard.Sequence<art.type.Port> result_ft99 = null;\n\n\tart.type.Port elem_ft99 = null;\n\n\tresult_ft99 = ((kermeta.standard.Sequence<art.type.Port>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.type.Port> it_ft99 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<art.type.Port>convertAsOrderedSet(sub_lbdExp95.getType().getPort()).iterator();\n\tjava.lang.Boolean idLoopCond_387 = false;\n\twhile( !idLoopCond_387 ) {\n\tidLoopCond_387 = it_ft99.isOff();\n\tif ( idLoopCond_387 ) {\n\t} else {\n\n\telem_ft99 = it_ft99.next();\n\n\tjava.lang.Boolean idIfCond_388 = false;\n//BIle:selector\nart.type.Port p_lbdExp99 = elem_ft99;\n\n\tidIfCond_388 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp99.getRole(), \"client\");\n//EIle:selector\n\n\n\tif( idIfCond_388 ) {\n\n\tresult_ft99.add(elem_ft99);\n}\n\n}\n\t}\n}\n\n//EIft:select\n//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.type.Port> it_ft98 = result_ft99.iterator();\n\tjava.lang.Boolean idLoopCond_386 = false;\n\twhile( !idLoopCond_386 ) {\n\tidLoopCond_386 = it_ft98.isOff();\n\tif ( idLoopCond_386 ) {\n\t} else {\n\n\t//BIle:func\nart.type.Port p_lbdExp98 = it_ft98.next();\n\n\t_res.append(\"\\t\\t <sca:reference name=\\\"\");\n\n\t_res.append(p_lbdExp98.getName());\n\n\t_res.append(\"\\\"/>\\n\");\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t_res.append(\"\");\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.instance.ValuedAttribute> it_ft100 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<art.instance.ValuedAttribute>convertAsOrderedSet(sub_lbdExp95.getAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_389 = false;\n\twhile( !idLoopCond_389 ) {\n\tidLoopCond_389 = it_ft100.isOff();\n\tif ( idLoopCond_389 ) {\n\t} else {\n\n\t//BIle:func\nart.instance.ValuedAttribute a_lbdExp100 = it_ft100.next();\n\n\t_res.append(\"\\t\\t<sca:property name=\\\"\");\n\n\t_res.append(kermeta.standard.helper.StringWrapper.substring(kermeta.standard.helper.StringWrapper.split(a_lbdExp100.getValue(), \":\").elementAt(0), 3, kermeta.standard.helper.StringWrapper.size(kermeta.standard.helper.StringWrapper.split(a_lbdExp100.getValue(), \": \").elementAt(0))));\n\n\t_res.append(\"\\\">\");\n\n\t_res.append(kermeta.standard.helper.StringWrapper.split(a_lbdExp100.getValue(), \": \").elementAt(1));\n\n\t_res.append(\"</sca:property>\\n\");\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t_res.append(\"\\t</sca:component>\\n\");\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t_res.append(\"\");\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.instance.TransmissionBinding> it_ft101 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<art.instance.TransmissionBinding>convertAsOrderedSet(system.getRoot().getterGetAllBindings()).iterator();\n\tjava.lang.Boolean idLoopCond_390 = false;\n\twhile( !idLoopCond_390 ) {\n\tidLoopCond_390 = it_ft101.isOff();\n\tif ( idLoopCond_390 ) {\n\t} else {\n\n\t//BIle:func\nart.instance.TransmissionBinding b_lbdExp101 = it_ft101.next();\n\n\t_res.append(\"\\t<sca:wire source=\\\"\");\n\n\t_res.append(((art.instance.ComponentInstance) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(b_lbdExp101), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"art.instance.ComponentInstance\"))).getName());\n\n\t_res.append(\"/\");\n\n\t_res.append(b_lbdExp101.getClient().getName());\n\n\t_res.append(\"\\\" target=\\\"\");\n\n\t_res.append(b_lbdExp101.getServerInstance().getName());\n\n\t_res.append(\"/\");\n\n\t_res.append(b_lbdExp101.getServer().getName());\n\n\t_res.append(\"\\\"/>\\n\");\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t_res.append(\"\");\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<art.instance.DelegationBinding> it_ft102 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<art.instance.DelegationBinding>convertAsOrderedSet(system.getRoot().getDelegation()).iterator();\n\tjava.lang.Boolean idLoopCond_391 = false;\n\twhile( !idLoopCond_391 ) {\n\tidLoopCond_391 = it_ft102.isOff();\n\tif ( idLoopCond_391 ) {\n\t} else {\n\n\t//BIle:func\nart.instance.DelegationBinding d_lbdExp102 = it_ft102.next();\n\n\t_res.append(\"\\t<sca:service name=\\\"\");\n\n\t_res.append(d_lbdExp102.getSource().getName());\n\n\t_res.append(\"\\\" promote=\\\"\");\n\n\t_res.append(d_lbdExp102.getServerInstance().getName());\n\n\t_res.append(\"/\");\n\n\t_res.append(d_lbdExp102.getExported().getName());\n\n\t_res.append(\"\\\"/>\\n\");\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t_res.append(\"</sca:composite>\");\n\n\tresult = _res.toString();\n\nreturn result;\n'"
	 * @generated
	 */
	String generate(art.System system);

} // SCA
