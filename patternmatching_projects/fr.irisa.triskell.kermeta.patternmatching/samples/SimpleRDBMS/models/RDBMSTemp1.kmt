@mainClass "RDBMSM::Main"
@mainOperation "main"

package RDBMSM;

require kermeta
require "../metamodels/RDBMSMM.kmt"
using kermeta::standard

class Main
{
    operation main() : Void is do 
		var rdbmodel : RDBMSMM::RDBMSModel init RDBMSMM::RDBMSModel.new

        /* Initializing the table for Teachers */
		/* pattern_par */  var tabA : RDBMSMM::Table init RDBMSMM::Table.new
		/* pattern_par */  var col1 : RDBMSMM::Column init RDBMSMM::Column.new
		/* pattern_par (value ANY)*/  var T1Name : String 
		/* pattern_par (value ANY)*/  var T1Type : String 
		/* TODO: we need to indicate Any value of a primitive type*/		  		
		
		col1.name := "Didier"
		col1.type := T1Type
				
		/* pattern_par */  var col2 : RDBMSMM::Column init RDBMSMM::Column.new
		/* pattern_par (value ANY)*/  var T2Name : String 
		/* pattern_par (value ANY)*/  var T2Type : String 
		/* TODO: we need to indicate Any value of a primitive type*/			
		col2.name := T2Name 
		col2.type := T2Type 
		
		tabA.cols.add(col1)		
		tabA.cols.add(col2)	
		
		rdbmodel.table.add(tabA)

        rdbmodel.print 

        var testStr : String
        stdio.writeln("Test String")
        stdio.writeln(testStr.toString())
        
        var testInt : Integer
        stdio.writeln(testInt.toString())        
        
    end
}