/* File:      flora_prefix.flh -- FLORA prefixes
**
** Author(s): Michael Kifer
**	      Guizhen Yang
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) The Research Foundation of SUNY, 2001
** 
** FLORA-2 is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** FLORA-2 is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with FLORA-2; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
**
*/


/******************************************************************************
  functor of Flora system module name
******************************************************************************/
#define FL_FLORALIB			flora


/******************************************************************************
  Flora prefix

  All Flora symbols begin with this prefix.
******************************************************************************/
/* for F-logic and HiLog predicates */
#define FLORA_PREFIX			'_$_$_flora'


/******************************************************************************
  Attaching FLORA_PREFIX

  The argument to this Macro should be quoted.
******************************************************************************/
#define FLORA_SYMBOL(X)	       	       	FLORA_PREFIX#1


/******************************************************************************
  Strings following FLORA_PREFIX

  These strings should be quoted.
******************************************************************************/
/* Keep "mod" in the name of a formula wrapper right after FLORA_PREFIX
   We rely on this to identify meta wrappers */
#define FLORA_USER_MODULE		'moduser'
#define FLORA_SYSTEM_MODULE		'modsys'
#define FLORA_UNIVERSAL_MODULE		'_'
#define FLORA_USER_FDB_TRIE		'userfdbtrie'
#define FLORA_SYSTEM_FDB_TRIE		'sysfdbtrie'

/*  Trie for keeping skeletons of defined facts -- debugging */
#define FLORA_USER_FLD_TRIE		'userfldtrie'
#define FLORA_SYSTEM_FLD_TRIE		'sysfldtrie'



/******************************************************************************
  Module and trie prefixes
******************************************************************************/
/* prefix to construct Flora user module predicates. */
#deffast FLORA_USER_MODULE_PREFIX	FLORA_SYMBOL(FLORA_USER_MODULE)

/* prefix to construct Flora system module predicates. */
#deffast FLORA_SYSTEM_MODULE_PREFIX	FLORA_SYMBOL(FLORA_SYSTEM_MODULE)

/* prefix to construct Flora system module predicates. */
#deffast FLORA_UNIVERSAL_MODULE_PREFIX	FLORA_SYMBOL(FLORA_UNIVERSAL_MODULE)

/*  prefix to name Flora storage trie for a user module. */
#deffast FLORA_USER_FDB_TRIE_PREFIX	FLORA_SYMBOL(FLORA_USER_FDB_TRIE)

/*  prefix to name Flora storage trie for a system module. */ 
#deffast FLORA_SYSTEM_FDB_TRIE_PREFIX	FLORA_SYMBOL(FLORA_SYSTEM_FDB_TRIE)

/* prefix to name Flora fld storage trie for a user module. */
#deffast FLORA_USER_FLD_TRIE_PREFIX	FLORA_SYMBOL(FLORA_USER_FLD_TRIE)

/* prefix to name Flora fld storage trie for a system module. */
#deffast FLORA_SYSTEM_FLD_TRIE_PREFIX	FLORA_SYMBOL(FLORA_SYSTEM_FLD_TRIE)


/****************************************************************************
  F-logic atom prefixes for predicates that are used to distinguish F-logic
  wrappers in the trailers, the user program, base facts, etc.
****************************************************************************/
#define FLHEADPREFIX		'derived_'
#define FLTRAILERPREFIX		'inferred_'
#define FLBODYPREFIX		''

#mode save
#mode nostring "\!#'"
#define FLHEADPREFIX(X)		'derived_#1'
#define FLTRAILERPREFIX(X)	'inferred_#1'
#mode restore


/******************************************************************************
  Lengths of prefixes of F-logic wrappers
******************************************************************************/
#deffast FLHEADPREFIX_LEN		#eval length(FLHEADPREFIX)-2
#deffast FLBODYPREFIX_LEN		#eval length(FLBODYPREFIX)-2
#deffast FLTRAILERPREFIX_LEN		#eval length(FLTRAILERPREFIX)-2

/****************************************************************************
  Prefixes that are used for F-logic wrappers in rule bodies of user programs.
  They are called "debuggin prefixes" because they were introduced to help
  implement the debugging feature that catches undefined methods.
****************************************************************************/
#define FLDEBUGPREFIX		'd_'
#define FLDYNAPREFIX		'dyna_'
#define FLDYNZPREFIX		'dynz_'
/* Prefixes used for checking undefinedness */
#define FLDEFINEDPREFIX		'defined_'
#define FLCHECKPREFIX		'check_'

/* Corresponding macros */
#mode save
#mode nostring "\!#'"
#define FLDEBUGPREFIX(X)        'd_#1'
#define FLDYNAPREFIX(X)		'dyna_#1'
#define FLDYNZPREFIX(X)		'dynz_#1'

#define FLDEFINEDPREFIX(X)	'defined_#1'
#define FLCHECKPREFIX(X)	'check_#1'
#mode restore


/******************************************************************************
  Lengths of prefixes that are used in the wrappers to the left of module name

  Note: We need to remember that these prefixes are enclosed in quotes.
        But we need the actual atom length that Prolog uses. So, we deduct 2.
******************************************************************************/

#deffast FLORA_PREFIX_LEN_PLUS1	     #eval length(FLORA_PREFIX)-1

/* length of FLORA_PREFIX'FLORA_USER_MODULE */
#deffast FLORA_USER_MODULE_PREFIX_LEN_PLUS1  #eval length(FLORA_USER_MODULE_PREFIX)-2

/* length of FLORA_PREFIX'FLORA_SYSTEM_MODULE */
#deffast FLORA_SYSTEM_MODULE_PREFIX_LEN_PLUS1  #eval length(FLORA_SYSTEM_MODULE_PREFIX)-2
