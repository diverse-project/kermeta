/* This demo shows the use of aggregates and assert/retract commands.
*/

john[salary(1990) -> 20].
john[salary(1991) -> 40].
john[salary(1992) -> 60].
john[salary(1993) -> 70].
john[salary(1994) -> 70].
john[salary(1995) -> 80].
john[salary(1996) -> 70].
john[salary(1997) -> 50].
john[salary(1998) -> 80].

mary[salary(1990) -> 40].
mary[salary(1991) -> 30].
mary[salary(1992) -> 60].
mary[salary(1993) -> 70].
mary[salary(1994) -> 60].
mary[salary(1995) -> 60].
mary[salary(1996) -> 70].
mary[salary(1997) -> 80].
mary[salary(1998) -> unknown].

?- writeln('max1: ')@prolog(),
	?Z=max{?X|john[salary(?Year)->?X] }.

?- writeln('max2: ')@prolog(),
	?Z=max{?X|john[salary(?Year) ->?X], ?Year < 1996}.

?- writeln('count1: ')@prolog(),
	?Z=count{?Year|john.salary(?Year) < max{ ?X | john[salary(?Y2)->?X], ?Y2<?Year}}.

?- writeln('count2: ')@prolog(),
	?Z=count{?Year| ?X=john.salary(?Year),?Y=mary.salary(?Year),
	              (number(?X), number(?Y))@prolog(), ?X < ?Y}.

?- writeln('avg1: ')@prolog(),
	?Z=avg{?X[?Who]|?Who[salary(?Year)->?X]}.

?- writeln('collect1: ')@prolog(),
    ?Z=collectset{?Year[?Who]|?Who[salary(?Year) -> ?X], number(?X)@prolog(), ?X < 60}.

?- writeln('delete1: ')@prolog(), delete{mary[salary(?Y)->unknown]}.

?- writeln('delete2: ')@prolog(),
	delete{john[salary(?Y)->?S1], mary[salary(?Y)->?S2]|
		       ((var(?S1); number(?S1)), (var(?S2); number(?S2)))@prolog(),
		       ?S1<?S2}.

?- writeln('delete3: ')@prolog(),
	delete{john[salary(?Y)->?S1]|mary[salary(?Y)->?S2],
		       ((var(?S1); number(?S1)), (var(?S2); number(?S2)))@prolog(),
		       ?S1<?S2}.


