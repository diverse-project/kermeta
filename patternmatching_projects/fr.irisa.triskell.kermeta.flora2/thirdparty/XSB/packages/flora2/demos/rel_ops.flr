/* File:      rel_ops.flr
** Author(s): Bertram Ludaescher
** Contact:   flora-users@lists.sourceforge.net
** 
** Copyright (C) Bertram Ludaescher, 1998
** 
** FLORA-2 is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** FLORA-2 is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with FLORA-2; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: rel_ops.flr,v 1.5 2005/07/26 00:33:33 hwan Exp $
** 
*/

// ==================================================================
// So you're familiar with RELATIONAL OPERATORS and want to know the 
// corresponding rules? Here are some illustrative EXAMPLES:
//
// This has nothing to do with F-logic, actually
// ==================================================================

// SELECT some tuples from %p(X,Y):
%ans_sel(?X,?Y) :- %p(?X,?Y), \+ ?X=?Y.

// PROJECT on the first argument of %p(X,Y):
%ans_proj(?X) :- %p(?X,?_Y).		

// JOIN %p(A,B), %q(C,D) wrt. B and C: 
%ans_join(?X,?Y,?Z) :- %p(?X,?Y), %q(?Y,?Z).

// PRODUCT of %p(X) and %q(Y):
%ans_prod(?X,?Y) :- %p(?X), %q(?Y).

// UNION of %p(X), %q(X): 
%ans_union(?X) :- %p(?X).
%ans_union(?X) :- %q(?X).

// INTERSECTION of %p(X), %q(X):
%ans_intersect(?X) :- %p(?X), %q(?X).

// SET-DIFFERENCE %p(X) \ %q(X):
%ans_diff(?X) :- %p(?X), \+ %q(?X).


// ==================================================================
// Here are some base facts.
// ==================================================================

// %p(X,Y):
%p(a,a).
%p(a,b).
%p(b,c).

// %q(X,Y).
%q(a,e).
%q(b,f).

// %p(X):
%p(a). %p(b). %p(c).

// %q(X):
%q(b). %q(d).


// ==================================================================
// now you may ask:
// ==================================================================


    ?- %ans_sel(?X,?Y).
    ?- %ans_proj(?X).
    ?- %ans_join(?X,?Y,?Z).
    ?- %ans_prod(?X,?Y).
    ?- %ans_union(?X).
    ?- %ans_intersect(?X).
    ?- %ans_diff(?X).

