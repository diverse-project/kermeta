/* $Id: OCLMKMTPrinter.kmt,v 1.3 2007-02-13 13:06:44 bitterjug Exp $
 * File : Visitors.kmt
 * License : EPL
 * Copyright : IRISA / INRIA / Universite de Rennes 1
 * ----------------------------------------------------------------------------
 * Creation date : Mar 28, 2006
 * Authors : 
 *  Didier Vojtisek <dvojtise@irisa.fr>
 *  Damien Pollet   <dpollet@irisa.fr>
 *  Vincent Mahï¿½	<vmahe@irisa.fr>
 * 
 */
 
/* This package contains operations code for Visitor Patterns
 You should use Patterns4Ecore.kmt operations for applying Patterns */
package OCLKMTPrinter;

require kermeta
//require "../ecore.kmt"
require "../helpers/OCLHelper.kmt"
require "../../mmodel/oclcstvisitor.kmt"
require "ocl2kmtVisitor.kmt"
//require "Tools.kmt"

using kermeta::standard
using kermeta::persistence
using ocl::cst
using ocl2kmt

class OCLKMTPrinter
{ 
	attribute repository: EMFRepository
	attribute modelURI: String

	operation initialize() is 
	do
//		modelURI :="../../model/speedsOCL1.xmi"
//		modelURI :="../../model/speedsOCL2.xmi"
//		modelURI :="../../model/speedsOCL3.xmi"
//		modelURI :="../../model/speedsOCL4.xmi"
//		modelURI :="../../model/speedsOCL5.xmi"
		modelURI :="../../model/allSpeedsOCL.xmi"		
		repository := EMFRepository.new
		helper := OCLHelpers::OCLHelper.new
    	helper.initialize
		helper.loadOCLModel(EMFRepository.new, modelURI)
	end
	   
    reference helper : OCLHelpers::OCLHelper
    
    operation main(): Void is
    do
    	initialize
     	var visitor : Ocl2kmtVisitor init Ocl2kmtVisitor.new
     	var model : Set<Object> init helper.loadOCLModel(repository, modelURI)
		helper.getPackageDeclaration(model).accept(visitor)
    end

}