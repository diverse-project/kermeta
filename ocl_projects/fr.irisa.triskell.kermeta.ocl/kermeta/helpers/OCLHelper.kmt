/* $Id: OCLHelper.kmt,v 1.4 2007-02-13 13:06:44 bitterjug Exp $
 * File : EcoreHelper.kmt
 * License : EPL
 * Copyright : IRISA / INRIA / Universite de Rennes 1
 * ----------------------------------------------------------------------------
 * Creation date : Sep 08, 2005
 * Authors : 
 *  Didier Vojtisek <dvojtise@irisa.fr>
 *  Damien Pollet   <dpollet@irisa.fr>
 * 
 */
//@mainClass "OCLHelpers::OCLHelper"
//@mainOperation "main"


package OCLHelpers;
 
require kermeta
require "../../mmodel/oclcstvisitor.kmt" 

using ocl::cst
using kermeta::standard
using kermeta::persistence
using kermeta::exceptions

/** This class provides some helper methods to load/save Ecore models
    Plus some other useful navigation methods
 */
class OCLHelper
{
	attribute ecoreMetamodel : String

	operation initialize(): Void is
		do
			if ecoreMetamodel == void then
				ecoreMetamodel := "../../mmodel/OCLCST.ecore"
			end
		end
    
    operation loadOCLModel(repository : EMFRepository, modelUri : String) : Set<Object> is 
	    do
	    	initialize
	    	var resource : Resource init repository.createResource(modelUri , ecoreMetamodel)
	    	resource.load
	    	var instances : Set<Object> init resource.instances
	    	result := instances
	    end
    
    operation getPackageDeclaration(os : Set<Object>): ocl::cst::PackageDeclarationCS is
	    do
	    	result ?= os.detect{ o |
	    			var packageDeclaration: ocl::cst::PackageDeclarationCS
		     	   packageDeclaration ?= o
		     	   packageDeclaration != void
	    		}
	    end

  }
  
