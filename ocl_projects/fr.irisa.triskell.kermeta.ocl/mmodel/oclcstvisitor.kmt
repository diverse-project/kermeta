package ocl;

using ocl::cst
using ocl

package cst{

abstract class CSTNode inherits visitors::Visitable
{
	attribute startOffset : RealLiteralExpCS

	attribute endOffset : RealLiteralExpCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::visitors::Visitable is
		result := visitor.visitCSTNode(self)

}
class PackageDeclarationCS inherits CSTNode
{
	reference pathNameCS : PathNameCS

	reference contextDecls : ContextDeclCS[0..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitPackageDeclarationCS(self)

}
abstract class ContextDeclCS inherits CSTNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitContextDeclCS(self)

}
class PropertyContextCS inherits ContextDeclCS
{
	reference pathNameCS : PathNameCS

	reference simpleNameCS : SimpleNameCS

	reference typeCS : TypeCS

	reference initOrDerValueCS : InitOrDerValueCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::ContextDeclCS is
		result := visitor.visitPropertyContextCS(self)

}
class ClassifierContextDeclCS inherits ContextDeclCS
{
	reference pathNameCS : PathNameCS

	reference invOrDefCS : InvOrDefCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::ContextDeclCS is
		result := visitor.visitClassifierContextDeclCS(self)

}
class OperationContextDeclCS inherits ContextDeclCS
{
	reference operationCS : OperationCS

	reference prePostOrBodyDecls : PrePostOrBodyDeclCS[1..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::ContextDeclCS is
		result := visitor.visitOperationContextDeclCS(self)

}
class PrePostOrBodyDeclCS inherits CSTNode
{
	attribute kind : PrePostOrBodyEnum

	reference simpleNameCS : SimpleNameCS

	reference expressionCS : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitPrePostOrBodyDeclCS(self)

}
enumeration PrePostOrBodyEnum
{
	~pre;
	~post;
	body;
}
class OperationCS inherits CSTNode
{
	reference pathNameCS : PathNameCS

	reference simpleNameCS : SimpleNameCS

	reference parameters : VariableCS[0..*]

	reference typeCS : TypeCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitOperationCS(self)

}
abstract class InitOrDerValueCS inherits CSTNode
{
	reference initOrDerValueCS : InitOrDerValueCS

	reference expressionCS : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitInitOrDerValueCS(self)

}
class DerValueCS inherits InitOrDerValueCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::InitOrDerValueCS is
		result := visitor.visitDerValueCS(self)

}
class InitValueCS inherits InitOrDerValueCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::InitOrDerValueCS is
		result := visitor.visitInitValueCS(self)

}
abstract class InvOrDefCS inherits CSTNode
{
	reference simpleNameCS : SimpleNameCS

	reference invOrDefCS : InvOrDefCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitInvOrDefCS(self)

}
class InvCS inherits InvOrDefCS
{
	reference expressionCS : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::InvOrDefCS is
		result := visitor.visitInvCS(self)

}
class DefCS inherits InvOrDefCS
{
	reference defExpressionCS : DefExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::InvOrDefCS is
		result := visitor.visitDefCS(self)

}
class DefExpressionCS inherits CSTNode
{
	reference operationCS : OperationCS

	reference variableCS : VariableCS

	reference expressionCS : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitDefExpressionCS(self)

}
class PathNameCS inherits TypeCS
{
	attribute sequenceOfNames : FeatureCallExpCS[0..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::TypeCS is
		result := visitor.visitPathNameCS(self)

}
class VariableExpCS inherits OCLExpressionCS
{
	reference arguments : OCLExpressionCS[0..*]

	reference simpleNameCS : SimpleNameCS

	reference isMarkedPreCS : IsMarkedPreCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitVariableExpCS(self)

}
class SimpleNameCS inherits OCLExpressionCS
{
	attribute ~value : FeatureCallExpCS

	attribute type : SimpleTypeEnum

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitSimpleNameCS(self)

}
enumeration SimpleTypeEnum
{
	identifier;
	~self;
	Integer;
	String;
	Real;
	Boolean;
	OclAny;
	OclVoid;
	Invalid;
	OclMessage;
	keyword;
}
abstract class TypeCS inherits OCLExpressionCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitTypeCS(self)

}
class PrimitiveTypeCS inherits SimpleNameCS, TypeCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::SimpleNameCS is
		result := visitor.visitPrimitiveTypeCS(self)

}
class TupleTypeCS inherits TypeCS
{
	reference variables : VariableCS[1..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::TypeCS is
		result := visitor.visitTupleTypeCS(self)

}
class CollectionTypeCS inherits TypeCS
{
	attribute collectionTypeIdentifier : CollectionTypeIdentifierEnum

	reference typeCS : TypeCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::TypeCS is
		result := visitor.visitCollectionTypeCS(self)

}
enumeration CollectionTypeIdentifierEnum
{
	Set;
	Bag;
	Sequence;
	Collection;
	OrderedSet;
}
abstract class OCLExpressionCS inherits CSTNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitOCLExpressionCS(self)

}
class LetExpCS inherits OCLExpressionCS
{
	reference variables : VariableCS[1..*]

	reference inExpression : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitLetExpCS(self)

}
class IfExpCS inherits OCLExpressionCS
{
	attribute thenExpression : OCLExpressionCS[1..1]

	attribute elseExpression : OCLExpressionCS[1..1]

	attribute condition : OCLExpressionCS[1..1]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitIfExpCS(self)

}
class MessageExpCS inherits OCLExpressionCS
{
	attribute target : OCLExpressionCS

	attribute kind : MessageExpKind

	reference simpleNameCS : SimpleNameCS

	attribute arguments : OCLMessageArgCS[0..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitMessageExpCS(self)

}
class OCLMessageArgCS inherits CSTNode
{
	reference typeCS : TypeCS

	reference expression : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitOCLMessageArgCS(self)

}
class VariableCS inherits CSTNode
{
	attribute name : FeatureCallExpCS

	reference typeCS : TypeCS

	reference initExpression : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitVariableCS(self)

}
abstract class LiteralExpCS inherits OCLExpressionCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitLiteralExpCS(self)

}
class EnumLiteralExpCS inherits LiteralExpCS
{
	reference pathNameCS : PathNameCS

	reference simpleNameCS : SimpleNameCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LiteralExpCS is
		result := visitor.visitEnumLiteralExpCS(self)

}
class CollectionLiteralExpCS inherits LiteralExpCS
{
	attribute collectionType : CollectionTypeIdentifierEnum

	reference collectionLiteralParts : CollectionLiteralPartCS[0..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LiteralExpCS is
		result := visitor.visitCollectionLiteralExpCS(self)

}
class TupleLiteralExpCS inherits LiteralExpCS
{
	reference variables : VariableCS[0..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LiteralExpCS is
		result := visitor.visitTupleLiteralExpCS(self)

}
class PrimitiveLiteralExpCS inherits LiteralExpCS
{
	attribute symbol : FeatureCallExpCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LiteralExpCS is
		result := visitor.visitPrimitiveLiteralExpCS(self)

}
class IntegerLiteralExpCS inherits PrimitiveLiteralExpCS
{
	attribute integerSymbol : StringLiteralExpCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::PrimitiveLiteralExpCS is
		result := visitor.visitIntegerLiteralExpCS(self)

}
class RealLiteralExpCS inherits PrimitiveLiteralExpCS
{
	attribute realSymbol : VariableCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::PrimitiveLiteralExpCS is
		result := visitor.visitRealLiteralExpCS(self)

}
class StringLiteralExpCS inherits PrimitiveLiteralExpCS
{
	attribute stringSymbol : FeatureCallExpCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::PrimitiveLiteralExpCS is
		result := visitor.visitStringLiteralExpCS(self)

}
class BooleanLiteralExpCS inherits PrimitiveLiteralExpCS
{
	attribute booleanSymbol : PrimitiveTypeCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::PrimitiveLiteralExpCS is
		result := visitor.visitBooleanLiteralExpCS(self)

}
class NullLiteralExpCS inherits LiteralExpCS
{
	attribute symbol : FeatureCallExpCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LiteralExpCS is
		result := visitor.visitNullLiteralExpCS(self)

}
class InvalidLiteralExpCS inherits LiteralExpCS
{
	attribute symbol : FeatureCallExpCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LiteralExpCS is
		result := visitor.visitInvalidLiteralExpCS(self)

}
class CollectionLiteralPartCS inherits CSTNode
{
	reference expressionCS : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitCollectionLiteralPartCS(self)

}
class CollectionRangeCS inherits CollectionLiteralPartCS
{
	reference lastExpressionCS : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CollectionLiteralPartCS is
		result := visitor.visitCollectionRangeCS(self)

}
class CallExpCS inherits OCLExpressionCS
{
	reference source : OCLExpressionCS

	attribute accessor : DotOrArrowEnum

	reference simpleNameCS : SimpleNameCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::OCLExpressionCS is
		result := visitor.visitCallExpCS(self)

}
class LoopExpCS inherits CallExpCS
{
	reference variable1 : VariableCS

	reference variable2 : VariableCS

	reference body : OCLExpressionCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CallExpCS is
		result := visitor.visitLoopExpCS(self)

}
class IteratorExpCS inherits LoopExpCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LoopExpCS is
		result := visitor.visitIteratorExpCS(self)

}
class IterateExpCS inherits LoopExpCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::LoopExpCS is
		result := visitor.visitIterateExpCS(self)

}
class FeatureCallExpCS inherits CallExpCS
{
	reference arguments : OCLExpressionCS[0..*]

	reference isMarkedPreCS : IsMarkedPreCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CallExpCS is
		result := visitor.visitFeatureCallExpCS(self)

}
enumeration DotOrArrowEnum
{
	none;
	dot;
	arrow;
}
class OperationCallExpCS inherits FeatureCallExpCS
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::FeatureCallExpCS is
		result := visitor.visitOperationCallExpCS(self)

}
class IsMarkedPreCS inherits CSTNode
{
	attribute ~pre : TypeCS

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::CSTNode is
		result := visitor.visitIsMarkedPreCS(self)

}
class StateExpCS inherits TypeCS
{
	attribute sequenceOfNames : FeatureCallExpCS[0..*]

	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ocl::cst::TypeCS is
		result := visitor.visitStateExpCS(self)

}
enumeration MessageExpKind
{
	hasSent;
	sent;
}
package visitors
{
	abstract class Visitable
	{
operation accept(visitor : Visitor) : kermeta::standard::~Void is
			abstract

	}
	abstract class Visitor
	{
operation visit(visitable : Visitable) : kermeta::standard::~Void is
			abstract

		operation visitCSTNode(visitable : CSTNode) : kermeta::standard::~Void is
			abstract

		operation visitPackageDeclarationCS(visitable : PackageDeclarationCS) : kermeta::standard::~Void is
			abstract

		operation visitContextDeclCS(visitable : ContextDeclCS) : kermeta::standard::~Void is
			abstract

		operation visitPropertyContextCS(visitable : PropertyContextCS) : kermeta::standard::~Void is
			abstract

		operation visitClassifierContextDeclCS(visitable : ClassifierContextDeclCS) : kermeta::standard::~Void is
			abstract

		operation visitOperationContextDeclCS(visitable : OperationContextDeclCS) : kermeta::standard::~Void is
			abstract

		operation visitPrePostOrBodyDeclCS(visitable : PrePostOrBodyDeclCS) : kermeta::standard::~Void is
			abstract

		operation visitOperationCS(visitable : OperationCS) : kermeta::standard::~Void is
			abstract

		operation visitInitOrDerValueCS(visitable : InitOrDerValueCS) : kermeta::standard::~Void is
			abstract

		operation visitDerValueCS(visitable : DerValueCS) : kermeta::standard::~Void is
			abstract

		operation visitInitValueCS(visitable : InitValueCS) : kermeta::standard::~Void is
			abstract

		operation visitInvOrDefCS(visitable : InvOrDefCS) : kermeta::standard::~Void is
			abstract

		operation visitInvCS(visitable : InvCS) : kermeta::standard::~Void is
			abstract

		operation visitDefCS(visitable : DefCS) : kermeta::standard::~Void is
			abstract

		operation visitDefExpressionCS(visitable : DefExpressionCS) : kermeta::standard::~Void is
			abstract

		operation visitPathNameCS(visitable : PathNameCS) : kermeta::standard::~Void is
			abstract

		operation visitVariableExpCS(visitable : VariableExpCS) : kermeta::standard::~Void is
			abstract

		operation visitSimpleNameCS(visitable : SimpleNameCS) : kermeta::standard::~Void is
			abstract

		operation visitTypeCS(visitable : TypeCS) : kermeta::standard::~Void is
			abstract

		operation visitPrimitiveTypeCS(visitable : PrimitiveTypeCS) : kermeta::standard::~Void is
			abstract

		operation visitTupleTypeCS(visitable : TupleTypeCS) : kermeta::standard::~Void is
			abstract

		operation visitCollectionTypeCS(visitable : CollectionTypeCS) : kermeta::standard::~Void is
			abstract

		operation visitOCLExpressionCS(visitable : OCLExpressionCS) : kermeta::standard::~Void is
			abstract

		operation visitLetExpCS(visitable : LetExpCS) : kermeta::standard::~Void is
			abstract

		operation visitIfExpCS(visitable : IfExpCS) : kermeta::standard::~Void is
			abstract

		operation visitMessageExpCS(visitable : MessageExpCS) : kermeta::standard::~Void is
			abstract

		operation visitOCLMessageArgCS(visitable : OCLMessageArgCS) : kermeta::standard::~Void is
			abstract

		operation visitVariableCS(visitable : VariableCS) : kermeta::standard::~Void is
			abstract

		operation visitLiteralExpCS(visitable : LiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitEnumLiteralExpCS(visitable : EnumLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitCollectionLiteralExpCS(visitable : CollectionLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitTupleLiteralExpCS(visitable : TupleLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitPrimitiveLiteralExpCS(visitable : PrimitiveLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitIntegerLiteralExpCS(visitable : IntegerLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitRealLiteralExpCS(visitable : RealLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitStringLiteralExpCS(visitable : StringLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitBooleanLiteralExpCS(visitable : BooleanLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitNullLiteralExpCS(visitable : NullLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitInvalidLiteralExpCS(visitable : InvalidLiteralExpCS) : kermeta::standard::~Void is
			abstract

		operation visitCollectionLiteralPartCS(visitable : CollectionLiteralPartCS) : kermeta::standard::~Void is
			abstract

		operation visitCollectionRangeCS(visitable : CollectionRangeCS) : kermeta::standard::~Void is
			abstract

		operation visitCallExpCS(visitable : CallExpCS) : kermeta::standard::~Void is
			abstract

		operation visitLoopExpCS(visitable : LoopExpCS) : kermeta::standard::~Void is
			abstract

		operation visitIteratorExpCS(visitable : IteratorExpCS) : kermeta::standard::~Void is
			abstract

		operation visitIterateExpCS(visitable : IterateExpCS) : kermeta::standard::~Void is
			abstract

		operation visitFeatureCallExpCS(visitable : FeatureCallExpCS) : kermeta::standard::~Void is
			abstract

		operation visitOperationCallExpCS(visitable : OperationCallExpCS) : kermeta::standard::~Void is
			abstract

		operation visitIsMarkedPreCS(visitable : IsMarkedPreCS) : kermeta::standard::~Void is
			abstract

		operation visitStateExpCS(visitable : StateExpCS) : kermeta::standard::~Void is
			abstract

	}
}
}
