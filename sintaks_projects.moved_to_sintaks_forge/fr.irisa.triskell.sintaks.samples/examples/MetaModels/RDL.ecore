<?xml version="1.0" encoding="ASCII"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="fr"
    nsURI="http://rdl" nsPrefix="fr">
  <eSubpackages name="irisa" nsURI="platform:/plugin/fr.irisa.triskell.rdl.model/model/rdl.ecore#//irisa"
      nsPrefix="irisa">
    <eSubpackages name="triskell" nsURI="platform:/plugin/fr.irisa.triskell.rdl.model/model/rdl.ecore#//irisa/triskell"
        nsPrefix="triskell">
      <eSubpackages name="rdl" nsURI="platform:/plugin/fr.irisa.triskell.rdl.model/model/rdl.ecore#//irisa/triskell/rdl"
          nsPrefix="rdl">
        <eSubpackages name="models" nsURI="platform:/plugin/fr.irisa.triskell.rdl.model/model/rdl.ecore#//irisa/triskell/rdl/models"
            nsPrefix="models">
          <eSubpackages name="ucs" nsURI="platform:/plugin/fr.irisa.triskell.rdl.model/model/rdl.ecore#//irisa/triskell/rdl/models/ucs"
              nsPrefix="ucs">
            <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
            <eClassifiers xsi:type="ecore:EDataType" name="ClassClass" instanceClassName="java.lang.Object">
              <eAnnotations source="kermeta">
                <details key="alias" value="kermeta::reflection::Class"/>
              </eAnnotations>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ModelElement">
              <eOperations name="accept" eType="#//irisa/triskell/rdl/models/ucs/VisitorResult">
                <eAnnotations source="kermeta">
                  <details key="body" value="do&#xA;&#x9;var foundMethod : kermeta::standard::Boolean init false&#xA;&#x9;var methodClass : kermeta::reflection::Class&#xA;&#x9;var thisClass : kermeta::reflection::Class init self.getMetaClass&#xA;&#x9;var str : alias String : kermeta::standard::String;&#xA;&#x9;from var int : kermeta::standard::Integer init 0&#xA;&#x9;until foundMethod.equals(true).~or(thisClass.equals(void))&#xA;&#x9;loop&#xA;do&#xA;&#x9;&#x9;&#x9;str := &quot;visit&quot;.plus(thisClass.name)&#xA;&#x9;&#x9;&#x9;methodClass := self.findVisitorMethod(vis.getMetaClass, str)&#xA;&#x9;&#x9;&#x9;if methodClass.isVoid.equals(false) then&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;foundMethod := true&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if thisClass.superClass.size.isGreater(0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;thisClass := thisClass.superClass.one&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;thisClass := void&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end&#x9;end&#xA;&#x9;if foundMethod then&#xA;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;var de : kermeta::interpreter::DynamicExpression init kermeta::interpreter::DynamicExpression.new&#xA;&#x9;&#x9;&#x9;de.initializeDefaults&#xA;&#x9;&#x9;&#x9;var mc : kermeta::language::structure::Class&#xA;&#x9;&#x9;&#x9;mc ?= methodClass&#xA;&#x9;&#x9;&#x9;de.formalParameters.put(&quot;vis&quot;, mc)&#xA;&#x9;&#x9;&#x9;mc ?= thisClass&#xA;&#x9;&#x9;&#x9;de.formalParameters.put(&quot;cls&quot;, mc)&#xA;&#x9;&#x9;&#x9;mc ?= context.getMetaClass&#xA;&#x9;&#x9;&#x9;de.formalParameters.put(&quot;context&quot;, fr::irisa::triskell::rdl::models::ucs::VisitorContext)&#xA;&#x9;&#x9;&#x9;if de.parse(&quot;vis.&quot;.plus(str).plus(&quot;(cls,context)&quot;)).equals(false) then&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;stdio.writeln(&quot;Errors while parsing dynamic expression &quot;.plus(&quot;vis.&quot;).plus(str).plus(&quot;(cls, context)&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;from var ite : kermeta::standard::Iterator&lt;kermeta::interpreter::KermetaError> init de.errors.iterator&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;until ite.isOff&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;loop&#xA;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;stdio.writeln(ite.next.message)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var params : kermeta::utils::Hashtable&lt;alias String : kermeta::standard::String;, alias Object : kermeta::language::structure::Object;> init kermeta::utils::Hashtable&lt;alias String : kermeta::standard::String;, alias Object : kermeta::language::structure::Object;>.new&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;params.put(&quot;vis&quot;, vis)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;params.put(&quot;cls&quot;, self)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;params.put(&quot;context&quot;, context)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result ?= de.execute(void, params)&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end&#xA;&#x9;else&#xA;&#x9;&#x9;do&#xA;&#x9;&#x9;end&#xA;&#x9;end&#xA;end"/>
                </eAnnotations>
                <eParameters name="vis" eType="#//irisa/triskell/rdl/models/ucs/ModelVisitor"/>
                <eParameters name="context" eType="#//irisa/triskell/rdl/models/ucs/VisitorContext"/>
              </eOperations>
              <eOperations name="findVisitorMethod" eType="#//irisa/triskell/rdl/models/ucs/ClassClass">
                <eAnnotations source="kermeta">
                  <details key="body" value="do&#xA;&#x9;var foundMethod : kermeta::standard::Boolean init false&#xA;&#x9;var op : kermeta::reflection::Operation&#xA;&#x9;from var int : kermeta::standard::Integer init 0&#xA;&#x9;until foundMethod.equals(true).~or(theClass.equals(void))&#xA;&#x9;loop&#xA;do&#xA;&#x9;&#x9;&#x9;op := theClass.ownedOperation.detect{p | do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;p.name.equals(name)&#xA;&#x9;&#x9;&#x9;&#x9;end}&#xA;&#x9;&#x9;&#x9;if op.isVoid.equals(false) then&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;foundMethod := true&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result := theClass&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if theClass.superClass.size.isGreater(0) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;theClass := theClass.superClass.one&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;theClass := void&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end&#x9;end&#xA;end"/>
                </eAnnotations>
                <eParameters name="theClass" eType="#//irisa/triskell/rdl/models/ucs/ClassClass"/>
                <eParameters name="name" eType="#//irisa/triskell/rdl/models/ucs/String"/>
              </eOperations>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#//irisa/triskell/rdl/models/ucs/String"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="VisitorResult"/>
            <eClassifiers xsi:type="ecore:EClass" name="VisitorContext"/>
            <eClassifiers xsi:type="ecore:EClass" name="ModelVisitor"/>
            <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#//irisa/triskell/rdl/models/ucs/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="Transformation">
              <eOperations name="execute" eType="#//irisa/triskell/rdl/models/ucs/Model">
                <eAnnotations source="kermeta">
                  <details key="isAbstract" value="true"/>
                </eAnnotations>
                <eParameters name="input" eType="#//irisa/triskell/rdl/models/ucs/Model"/>
              </eOperations>
            </eClassifiers>
          </eSubpackages>
          <eSubpackages name="rdl" nsURI="platform:/plugin/fr.irisa.triskell.rdl.model/model/rdl.ecore#//irisa/triskell/rdl/models/rdl"
              nsPrefix="rdl">
            <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
            <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
            <eClassifiers xsi:type="ecore:EClass" name="RdlModel" eSuperTypes="#//irisa/triskell/rdl/models/ucs/Model">
              <eStructuralFeatures xsi:type="ecore:EReference" name="requirementGroups"
                  upperBound="-1" eType="#//irisa/triskell/rdl/models/rdl/RequirementGroup"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#//irisa/triskell/rdl/models/ucs/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementGroup" eSuperTypes="#//irisa/triskell/rdl/models/ucs/ModelElement">
              <eStructuralFeatures xsi:type="ecore:EReference" name="number" eType="#//irisa/triskell/rdl/models/rdl/TypeStructureNumber"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="requirements"
                  upperBound="-1" eType="#//irisa/triskell/rdl/models/rdl/Requirement"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="TypeStructureNumber" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Type">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="numbers" upperBound="-1"
                  eType="#//irisa/triskell/rdl/models/rdl/String"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="Quantifier" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Type"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierA" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierNone" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierThe" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierOne" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierThis" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierEach" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="Requirement" eSuperTypes="#//irisa/triskell/rdl/models/ucs/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasic" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Requirement"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementIfThenElse" eSuperTypes="#//irisa/triskell/rdl/models/rdl/Requirement">
              <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="elsePart" eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="thenPart" eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValue" eSuperTypes="#//irisa/triskell/rdl/models/ucs/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectReference" eSuperTypes="#//irisa/triskell/rdl/models/ucs/ModelElement">
              <eStructuralFeatures xsi:type="ecore:EReference" name="quantifier" eType="#//irisa/triskell/rdl/models/rdl/Quantifier"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicComposite"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasic"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicLeaf" eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasic"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogical"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicComposite">
              <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1"
                  eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic" containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1"
                  eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporal"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicComposite">
              <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
                  eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic" containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="consequence"
                  lowerBound="1" eType="#//irisa/triskell/rdl/models/rdl/RequirementBasic"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalSynchronous"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporal"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalAsynchronous"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporal"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalWhen"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporalSynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalBefore"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporalSynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalAfter"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporalSynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalWhile"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporalAsynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalUntil"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeTemporalAsynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogicalAnd"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogicalImplies"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogicalOr"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementNull" eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivation" eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicLeaf">
              <eStructuralFeatures xsi:type="ecore:EReference" name="complements"
                  eType="#//irisa/triskell/rdl/models/rdl/ServiceActivationComplement"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="subject" eType="#//irisa/triskell/rdl/models/rdl/ServiceActivationSubject"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationPotential"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivation"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationCan" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationPotential"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationReal" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivation"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationPast" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationReal"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationPresent"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationReal"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationDid" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationPast"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationStops" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationPresent"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationStarts" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationPresent"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationDoes" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationPresent"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectDeclaration" eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicLeaf">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//irisa/triskell/rdl/models/rdl/String"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectDeclarationInstance"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObjectDeclaration"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectDeclarationSingleton"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObjectDeclaration"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableProperty" eSuperTypes="#//irisa/triskell/rdl/models/rdl/RequirementBasicLeaf">
              <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//irisa/triskell/rdl/models/rdl/ObservableReference"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//irisa/triskell/rdl/models/rdl/ObservableValue"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyComposite"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservableProperty"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyLeaf" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservableProperty"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyCompositeLogical"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyComposite">
              <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1"
                  eType="#//irisa/triskell/rdl/models/rdl/ObservableProperty" containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1"
                  eType="#//irisa/triskell/rdl/models/rdl/ObservableProperty" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyOr" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyAnd" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyChange"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyStable"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyBecomes"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyChange"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyRemains"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyChange"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyChanges"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyChange"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyMustBe"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyStable"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyIsNot" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyStable"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyIs" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservablePropertyStable"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueComposite"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservableValue">
              <eStructuralFeatures xsi:type="ecore:EReference" name="subValues" upperBound="-1"
                  eType="#//irisa/triskell/rdl/models/rdl/ObservableValue" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueLeaf" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservableValue"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueNot" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservableValueLeaf">
              <eStructuralFeatures xsi:type="ecore:EReference" name="delegate" eType="#//irisa/triskell/rdl/models/rdl/ObservableValue"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueSimple" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObservableValueLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableReference" eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObjectReference">
              <eStructuralFeatures xsi:type="ecore:EReference" name="associatedOwners"
                  eType="#//irisa/triskell/rdl/models/rdl/ObservableReferenceOwner"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImplicit" eType="#//irisa/triskell/rdl/models/rdl/Boolean"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="owners" eType="#//irisa/triskell/rdl/models/rdl/ObservableReferenceOwner"
                  defaultValueLiteral="" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableReferenceOwner"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObjectReference">
              <eStructuralFeatures xsi:type="ecore:EReference" name="parent" eType="#//irisa/triskell/rdl/models/rdl/ObservableReferenceOwner"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationParticipant"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ObjectReference"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationSubject"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationParticipant"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationComplement"
                eSuperTypes="#//irisa/triskell/rdl/models/rdl/ServiceActivationParticipant"/>
          </eSubpackages>
        </eSubpackages>
      </eSubpackages>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
