<?xml version="1.0" encoding="ASCII"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="fr"
    nsURI="platform:/resource/DevRDLKermeta/models/rdm/Rdm.ecore" nsPrefix="fr">
  <eSubpackages name="irisa" nsURI="platform:/resource/DevRDLKermeta/models/rdm/Rdm.ecore#//irisa"
      nsPrefix="irisa">
    <eSubpackages name="triskell" nsURI="platform:/resource/DevRDLKermeta/models/rdm/Rdm.ecore#//irisa/triskell"
        nsPrefix="triskell">
      <eSubpackages name="mdre" nsURI="platform:/resource/DevRDLKermeta/models/rdm/Rdm.ecore#//irisa/triskell/mdre"
          nsPrefix="mdre">
        <eSubpackages name="models" nsURI="platform:/resource/DevRDLKermeta/models/rdm/Rdm.ecore#//irisa/triskell/mdre/models"
            nsPrefix="models">
          <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; * Definition of alias to palliate bug into ecore generation&#xD;&#xA; */"/>
            </eAnnotations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EDataType" name="ClassClass" instanceClassName="java.lang.Object">
            <eAnnotations source="kermeta">
              <details key="alias" value="kermeta::reflection::Class"/>
            </eAnnotations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ModelElement" abstract="true">
            <eOperations name="accept" eType="#//irisa/triskell/mdre/models/VisitorResult">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;var foundMethod : kermeta::standard::Boolean init false&#xA;&#x9;var methodClass : kermeta::reflection::Class&#xA;&#x9;var thisClass : kermeta::reflection::Class init self.getMetaClass&#xA;&#x9;var str : fr::irisa::triskell::mdre::models::String&#xA;&#x9;from var int : kermeta::standard::Integer init 0&#xA;&#x9;until foundMethod.equals(true).~or(thisClass.equals(void))&#xA;&#x9;loop&#xA;&#x9;&#x9;str := &quot;visit&quot;.plus(thisClass.name)&#xA;&#x9;&#x9;methodClass := findVisitorMethod(vis.getMetaClass, str)&#xA;&#x9;&#x9;if methodClass.isVoid.equals(false) then&#xA;&#x9;&#x9;&#x9;foundMethod := true&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if thisClass.superClass.size.isGreater(0) then&#xA;&#x9;&#x9;&#x9;&#x9;thisClass := thisClass.superClass.one&#xA;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;thisClass := void&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;end&#xA;&#x9;if foundMethod then&#xA;&#x9;&#x9;var de : kermeta::interpreter::DynamicExpression init kermeta::interpreter::DynamicExpression.new&#xA;&#x9;&#x9;de.initializeDefaults&#xA;&#x9;&#x9;var mc : kermeta::language::structure::Class&#xA;&#x9;&#x9;mc ?= methodClass&#xA;&#x9;&#x9;de.formalParameters.put(&quot;vis&quot;, mc)&#xA;&#x9;&#x9;mc ?= thisClass&#xA;&#x9;&#x9;de.formalParameters.put(&quot;cls&quot;, mc)&#xA;&#x9;&#x9;mc ?= context.getMetaClass&#xA;&#x9;&#x9;de.formalParameters.put(&quot;context&quot;, fr::irisa::triskell::mdre::models::VisitorContext)&#xA;&#x9;&#x9;if de.parse(&quot;vis.&quot;.plus(str).plus(&quot;(cls,context)&quot;)).equals(false) then&#xA;&#x9;&#x9;&#x9;stdio.writeln(&quot;Errors while parsing dynamic expression &quot;.plus(&quot;vis.&quot;).plus(str).plus(&quot;(cls, context)&quot;))&#xA;&#x9;&#x9;&#x9;from var ite : kermeta::standard::Iterator&lt;kermeta::interpreter::KermetaError> init de.errors.iterator&#xA;&#x9;&#x9;&#x9;until ite.isOff&#xA;&#x9;&#x9;&#x9;loop&#xA;&#x9;&#x9;&#x9;&#x9;stdio.writeln(ite.next.message)&#xA;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;var params : kermeta::utils::Hashtable&lt;fr::irisa::triskell::mdre::models::String, kermeta::standard::Object> init kermeta::utils::Hashtable&lt;fr::irisa::triskell::mdre::models::String, kermeta::standard::Object>.new&#xA;&#x9;&#x9;&#x9;params.put(&quot;vis&quot;, vis)&#xA;&#x9;&#x9;&#x9;params.put(&quot;cls&quot;, self)&#xA;&#x9;&#x9;&#x9;params.put(&quot;context&quot;, context)&#xA;&#x9;&#x9;&#x9;result ?= de.execute(void, params)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;end"/>
              </eAnnotations>
              <eParameters name="vis" eType="#//irisa/triskell/mdre/models/ModelVisitor"/>
              <eParameters name="context" eType="#//irisa/triskell/mdre/models/VisitorContext"/>
            </eOperations>
            <eOperations name="findVisitorMethod" eType="#//irisa/triskell/mdre/models/ClassClass">
              <eAnnotations source="kermeta">
                <details key="body" value="do&#xA;&#x9;var foundMethod : kermeta::standard::Boolean init false&#xA;&#x9;var op : kermeta::reflection::Operation&#xA;&#x9;from var int : kermeta::standard::Integer init 0&#xA;&#x9;until foundMethod.equals(true).~or(theClass.equals(void))&#xA;&#x9;loop&#xA;&#x9;&#x9;op := theClass.ownedOperation.detect{p | p.name.equals(name)}&#xA;&#x9;&#x9;if op.isVoid.equals(false) then&#xA;&#x9;&#x9;&#x9;foundMethod := true&#xA;&#x9;&#x9;&#x9;result := theClass&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;if theClass.superClass.size.isGreater(0) then&#xA;&#x9;&#x9;&#x9;&#x9;theClass := theClass.superClass.one&#xA;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;theClass := void&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;end&#xA;end"/>
              </eAnnotations>
              <eParameters name="theClass" eType="#//irisa/triskell/mdre/models/ClassClass"/>
              <eParameters name="name" eType="#//irisa/triskell/mdre/models/String"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#//irisa/triskell/mdre/models/String">
              <eAnnotations source="kermeta">
                <details key="isComposite" value="true"/>
              </eAnnotations>
            </eStructuralFeatures>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="VisitorResult" abstract="true"/>
          <eClassifiers xsi:type="ecore:EClass" name="VisitorContext" abstract="true"/>
          <eClassifiers xsi:type="ecore:EClass" name="ModelVisitor" abstract="true"/>
          <eClassifiers xsi:type="ecore:EClass" name="Model" abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/ModelElement"/>
          <eClassifiers xsi:type="ecore:EClass" name="Instance" abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/ModelElement">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="refInstanceOfName"
                eType="#//irisa/triskell/mdre/models/String">
              <eAnnotations source="kermeta">
                <details key="isComposite" value="true"/>
                <details key="documentation" value="/**&#xD;&#xA;  * This attribute represent the name of the concept&#xD;&#xA;  * for which this object is an instance.&#xD;&#xA;  * It is designed to make possible link edition&#xD;&#xA;  * when type (or concept) reference for this instance is null &#xD;&#xA;  * or will be assign to null&#xD;&#xA;  */"/>
              </eAnnotations>
            </eStructuralFeatures>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Transformation" abstract="true">
            <eOperations name="execute" eType="#//irisa/triskell/mdre/models/Model">
              <eAnnotations source="kermeta">
                <details key="isAbstract" value="true"/>
              </eAnnotations>
              <eParameters name="input" eType="#//irisa/triskell/mdre/models/Model"/>
            </eOperations>
          </eClassifiers>
          <eSubpackages name="rdm" nsURI="http://rdm" nsPrefix="rdm">
            <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
              <eAnnotations source="kermeta">
                <details key="documentation" value="/**&#xD;&#xA; * Definition of alias to palliate bug into ecore generation&#xD;&#xA; */"/>
              </eAnnotations>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
            <eClassifiers xsi:type="ecore:EClass" name="RDModel" eSuperTypes="#//irisa/triskell/mdre/models/Model">
              <eStructuralFeatures xsi:type="ecore:EReference" name="requirementGroups"
                  upperBound="-1" eType="#//irisa/triskell/mdre/models/rdm/RequirementGroup"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementGroup" eSuperTypes="#//irisa/triskell/mdre/models/ModelElement">
              <eStructuralFeatures xsi:type="ecore:EReference" name="number" eType="#//irisa/triskell/mdre/models/rdm/TypeStructureNumber"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="requirements"
                  upperBound="-1" eType="#//irisa/triskell/mdre/models/rdm/Requirement"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="TypeStructureNumber" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Type">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="numbers" upperBound="-1"
                  eType="#//irisa/triskell/mdre/models/rdm/String">
                <eAnnotations source="kermeta">
                  <details key="isComposite" value="true"/>
                </eAnnotations>
              </eStructuralFeatures>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="Quantifier" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/Type"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierA" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierNone" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierThe" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierOne" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierThis" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="QuantifierEach" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Quantifier"/>
            <eClassifiers xsi:type="ecore:EClass" name="Requirement" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasic" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/Requirement"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementIfThenElse" eSuperTypes="#//irisa/triskell/mdre/models/rdm/Requirement">
              <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="elsePart" eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="thenPart" eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValue" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/ModelElement"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectReference" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/ModelElement">
              <eStructuralFeatures xsi:type="ecore:EReference" name="quantifier" eType="#//irisa/triskell/mdre/models/rdm/Quantifier"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicComposite"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasic"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicLeaf" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasic"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogical"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicComposite">
              <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1"
                  eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic" containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1"
                  eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporal"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicComposite">
              <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
                  eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic" containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="consequence"
                  lowerBound="1" eType="#//irisa/triskell/mdre/models/rdm/RequirementBasic"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalSynchronous"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporal"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalAsynchronous"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporal"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalWhen"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporalSynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalBefore"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporalSynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalAfter"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporalSynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalWhile"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporalAsynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeTemporalUntil"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeTemporalAsynchronous"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogicalAnd"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogicalImplies"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementBasicCompositeLogicalOr"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="RequirementNull" eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivation" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicLeaf">
              <eStructuralFeatures xsi:type="ecore:EReference" name="complements"
                  upperBound="-1" eType="#//irisa/triskell/mdre/models/rdm/ServiceActivationComplement"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="subject" eType="#//irisa/triskell/mdre/models/rdm/ServiceActivationSubject"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationPotential"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivation"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationCan" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationPotential"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationReal" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivation"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationPast" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationReal"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationPresent"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationReal"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationDid" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationPast"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationStops" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationPresent"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationStarts" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationPresent"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationDoes" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationPresent"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectDeclaration" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicLeaf">
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//irisa/triskell/mdre/models/rdm/String">
                <eAnnotations source="kermeta">
                  <details key="isComposite" value="true"/>
                </eAnnotations>
              </eStructuralFeatures>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectDeclarationInstance"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObjectDeclaration"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObjectDeclarationSingleton"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObjectDeclaration"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableProperty" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/RequirementBasicLeaf">
              <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//irisa/triskell/mdre/models/rdm/ObservableReference"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//irisa/triskell/mdre/models/rdm/ObservableValue"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyComposite"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservableProperty"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyLeaf" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservableProperty"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyCompositeLogical"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyComposite">
              <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1"
                  eType="#//irisa/triskell/mdre/models/rdm/ObservableProperty" containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1"
                  eType="#//irisa/triskell/mdre/models/rdm/ObservableProperty" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyOr" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyAnd" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyCompositeLogical"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyChange"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyStable"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyBecomes"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyChange"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyRemains"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyChange"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyChanges"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyChange"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyMustBe"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyStable"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyIsNot" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyStable"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservablePropertyIs" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservablePropertyStable"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueComposite"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservableValue">
              <eStructuralFeatures xsi:type="ecore:EReference" name="subValues" upperBound="-1"
                  eType="#//irisa/triskell/mdre/models/rdm/ObservableValue" containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueLeaf" abstract="true"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservableValue"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueNot" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservableValueLeaf">
              <eStructuralFeatures xsi:type="ecore:EReference" name="delegate" eType="#//irisa/triskell/mdre/models/rdm/ObservableValue"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableValueSimple" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObservableValueLeaf"/>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableReference" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObjectReference">
              <eStructuralFeatures xsi:type="ecore:EReference" name="associatedOwners"
                  upperBound="-1" eType="#//irisa/triskell/mdre/models/rdm/ObservableReferenceOwner"
                  containment="true"/>
              <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImplicit" eType="#//irisa/triskell/mdre/models/rdm/Boolean">
                <eAnnotations source="kermeta">
                  <details key="isComposite" value="true"/>
                </eAnnotations>
              </eStructuralFeatures>
              <eStructuralFeatures xsi:type="ecore:EReference" name="owners" upperBound="-1"
                  eType="#//irisa/triskell/mdre/models/rdm/ObservableReferenceOwner"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ObservableReferenceOwner"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObjectReference">
              <eStructuralFeatures xsi:type="ecore:EReference" name="parent" eType="#//irisa/triskell/mdre/models/rdm/ObservableReferenceOwner"
                  containment="true"/>
            </eClassifiers>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationParticipant"
                abstract="true" eSuperTypes="#//irisa/triskell/mdre/models/rdm/ObjectReference"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationSubject"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationParticipant"/>
            <eClassifiers xsi:type="ecore:EClass" name="ServiceActivationComplement"
                eSuperTypes="#//irisa/triskell/mdre/models/rdm/ServiceActivationParticipant"/>
          </eSubpackages>
        </eSubpackages>
      </eSubpackages>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
