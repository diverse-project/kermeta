# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#
# Framework config properties.
#

# To override the packages the framework exports by default from the
# class path, set this variable.
#org.osgi.framework.system.packages=

# To append packages to the default set of exported system packages,
# set this value.
#org.osgi.framework.system.packages.extra=

# The following property makes specified packages from the class path
# available to all bundles. You should avoid using this property.
#org.osgi.framework.bootdelegation=sun.*,com.sun.*

# Felix tries to guess when to implicitly boot delegate in certain
# situations to ease integration without outside code. This feature
# is enabled by default, uncomment the following line to disable it.
#felix.bootdelegation.implicit=false

# The following property explicitly specifies the location of the bundle
# cache, which defaults to "felix-cache" in the current working directory.
# If this value is not absolute, then the felix.cache.rootdir controls
# how the absolute location is calculated. (See next property)
#org.osgi.framework.storage=${dollar}{felix.cache.rootdir}/felix-cache

# The following property is used to convert a relative bundle cache
# location into an absolute one by specifying the root to prepend to
# the relative cache path. The default for this property is the
# current working directory.
#felix.cache.rootdir=${dollar}{user.dir}

# The following property controls whether the bundle cache is flushed
# the first time the framework is initialized. Possible values are
# "none" and "onFirstInit"; the default is "none".
#org.osgi.framework.storage.clean=onFirstInit

# The following property determines which actions are performed when
# processing the auto-deploy directory. It is a comma-delimited list of
# the following values: 'install', 'start', 'update', and 'uninstall'.
# An undefined or blank value is equivalent to disabling auto-deploy
# processing.
felix.auto.deploy.action=install,start

# The following property specifies the directory to use as the bundle
# auto-deploy directory; the default is 'bundle' in the working directory.
#felix.auto.deploy.dir=bundle

# The following property is a space-delimited list of bundle URLs
# to install when the framework starts. The ending numerical component
# is the target start level. Any number of these properties may be
# specified for different start levels.
#felix.auto.install.1=

# The following property is a space-delimited list of bundle URLs
# to install and start when the framework starts. The ending numerical
# component is the target start level. Any number of these properties
# may be specified for different start levels.
#felix.auto.start.1=

felix.log.level=1

# Sets the initial start level of the framework upon startup.
#org.osgi.framework.startlevel.beginning=1

# Sets the start level of newly installed bundles.
#felix.startlevel.bundle=1

# Felix installs a stream and content handler factories by default,
# uncomment the following line to not install them.
#felix.service.urlhandlers=false

# The launcher registers a shutdown hook to cleanly stop the framework
# by default, uncomment the following line to disable it.
#felix.shutdown.hook=false

#
# Bundle config properties.
#

org.osgi.service.http.port=8080
obr.repository.url=http://felix.apache.org/obr/releases.xml



org.osgi.framework.system.packages=org.osgi.framework; version=1.5.0, \
 org.osgi.service.packageadmin; version=1.2, \
 org.osgi.framework.launch; version=1.5.0,\
 org.osgi.service.startlevel; version=1.1, \
 org.osgi.service.url; version=1.0, \
 org.osgi.util.tracker, \
 javax.swing; \
 javax.swing.event; \
 javax.swing.table; \
 javax.swing.text; \
 javax.imageio;\
 org.w3c.dom; \
 org.xml.sax; \
 org.xml.sax.helpers; \
 org.xml.sax.ext; \
 sun.misc; \
 sun.security.action; \
 javax.xml.parsers;\
 org.apache.xml.serialize;\
 javax.xml.transform;\
 javax.xml.transform.dom;\
 javax.xml.transform.stream;\
 net.java.stun4j;\
 net.java.stun4j.client;\
 javax.sound;\
 javax.sound.sampled; \
 javax.naming; \
 javax.naming.directory; \
 javax.net; \
 javax.net.ssl; \
 ${dalvik-1.0.0-m3-r22a}
 ${scala_package}

dalvik-1.0.0-m3-r22a=, \
android; \
android.app; \
android.content; \
android.database; \
android.database.sqlite; \
android.graphics; \
android.graphics.drawable; \
android.graphics.glutils; \
android.hardware; \
android.location; \
android.media; \
android.net; \
android.opengl; \
android.os; \
android.provider; \
android.sax; \
android.speech.recognition; \
android.telephony; \
android.telephony.gsm; \
android.text; \
android.text.method; \
android.text.style; \
android.text.util; \
android.util; \
android.view; \
android.view.animation; \
android.webkit; \
android.widget; \
com.google.android.maps; \
com.google.android.xmppService; \
javax.crypto; \
javax.crypto.interfaces; \
javax.crypto.spec; \
javax.microedition.khronos.opengles; \
javax.net; \
javax.net.ssl; \
javax.security.auth; \
javax.security.auth.callback; \
javax.security.auth.login; \
javax.security.auth.x500; \
javax.security.cert; \
javax.sound.midi; \
javax.sound.midi.spi; \
javax.sound.sampled; \
javax.sound.sampled.spi; \
javax.sql; \
javax.xml; \
javax.xml.datatype; \
javax.xml.namespace; \
javax.xml.parsers; \
javax.xml.transform; \
javax.xml.transform.dom; \
javax.xml.transform.sax; \
javax.xml.transform.stream; \
javax.xml.validation; \
javax.xml.xpath; \
junit.extensions; \
junit.framework; \
org.apache.commons.codec; \
org.apache.commons.codec.binary; \
org.apache.commons.codec.language; \
org.apache.commons.codec.net; \
org.apache.commons.httpclient; \
org.apache.commons.httpclient.auth; \
org.apache.commons.httpclient.cookie; \
org.apache.commons.httpclient.methods; \
org.apache.commons.httpclient.methods.multipart; \
org.apache.commons.httpclient.params; \
org.apache.commons.httpclient.protocol; \
org.apache.commons.httpclient.util; \
org.bluez; \
org.json; \
org.w3c.dom; \
org.xml.sax; \
org.xml.sax.ext; \
org.xml.sax.helpers; \
scala.annotation.unchecked; \
scala.reflect.generic; \
scala.collection.interfaces; \
scala.xml.persistent; \
scala.actors.threadpool; \
scala.concurrent; \
scala.util.parsing.combinator.testing; \
scala.annotation; \
scala.concurrent.forkjoin; \
scala.io; \
scala.reflect; \
scala.util.automata; \
scala.ref; \
scala.util.parsing.syntax; \
scala.util.matching; \
scala.util.parsing.combinator; \
scala.compat; \
scala.runtime; \
scala.util.parsing.ast; \
scala.util.parsing.json; \
scala.util.logging; \
scala.xml.dtd; \
scala.util.parsing.combinator.token; \
scala.util.parsing.input; \
scala.testing; \
scala.util.grammar; \
scala.collection; \
scala.collection.immutable; \
scala.text; \
scala.actors.scheduler; \
scala; \
scala.actors; \
scala.util.continuations; \
scala.xml.include; \
scala.collection.script; \
scala.math; \
scala.util; \
scala.util.control; \
scala.actors.threadpool.helpers; \
scala.xml.parsing; \
scala.annotation.target; \
scala.xml; \
scala.actors.remote; \
scala.collection.mutable; \
scala.actors.threadpool.locks; \
scala.util.regexp; \
scala.xml.include.sax; \
scala.xml.factory; \
scala.xml.transform; \
scala.util.parsing.combinator.lexical; \
scala.util.parsing.combinator.syntactical; \
scala.xml.pull; \
scala.mobile; \
scala.collection.generic; \
