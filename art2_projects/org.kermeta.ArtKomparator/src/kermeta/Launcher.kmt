/* $Id:$ 
 * Creation : February 12, 2010
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            ffouquet
 */
@mainClass "org::kermeta::artKomparator::Launcher"
@mainOperation "launchFromURL"


package org::kermeta::artKomparator;

require kermeta
require "platform:/resource/org.kermeta.art.model/metamodel/art.ecore"
require "platform:/resource/org.kermeta.ArtDeployer/src/kermeta/OSGiCommand.kmt"
require "Komparator.kmt"
using kermeta::persistence
using kermeta::standard
using kermeta::io
using org::kermeta::art::deployer
using org::kermeta::komparator

class Launcher
{
	attribute actualRuntimeModel : art2::ContainerRoot 
	attribute nodeName : String
	attribute hotdeployPATH : String
	
	operation launchFromURL(newModelUrl : String) : Void is do
		var model : art2::ContainerRoot init loadART2Model(newModelUrl)
		launchFromModel(model)
	end

	operation launchFromModel(newModel : art2::ContainerRoot) : Void is do 
	
		if(nodeName != void and hotdeployPATH != void)
		then
	
	
		//var nodeName : String init "duke.irisa.fr"

		var factory : OSGiCommandFactory init OSGiCommandFactory.new
		var komparator : Komparator init Komparator.new
		
		var contextCommand : CommandContext init CommandContext.new
		//contextCommand.runtimePATH := "///Users/ffouquet/Servers/apache-servicemix-4.2.0-fuse-01-00/deploy"
		contextCommand.runtimePATH := hotdeployPATH
		
		var commandSet : Set<Command> init komparator.kompare(actualRuntimeModel,newModel, self.nodeName,factory)
		commandSet.each{c |
			c.execute(contextCommand)
		}
		
		end

	end
	
	operation loadART2Model(model : String) : art2::ContainerRoot is
	do
		var res : Resource init EMFRepository.new.createResource(model, "platform:/resource/org.kermeta.art.model/metamodel/art.ecore")
		res.load
		result := res.one.asType(art2::ContainerRoot)	
	end
	
}