package ScalaImplicit.org.kermeta.org.kermeta.default.aspects
object ImplicitConversion {
 implicit def richAspect(v : org.kermeta.art.generator.ComponentWrapperGenerator) = v.asInstanceOf[org.kermeta.art.generator.ComponentWrapperGeneratorAspect]
 implicit def richAspect(v : org.kermeta.art.generator.ComponentWrapperGeneratorAspect) = v.asInstanceOf[org.kermeta.art.generator.ComponentWrapperGenerator]
 implicit def richAspect(v : org.kermeta.art.generator.FeatureGenerator) = v.asInstanceOf[org.kermeta.art.generator.FeatureGeneratorAspect]
 implicit def richAspect(v : org.kermeta.art.generator.FeatureGeneratorAspect) = v.asInstanceOf[org.kermeta.art.generator.FeatureGenerator]
 implicit def richAspect(v : org.kermeta.art.generator.ComponentInstanceGenerator) = v.asInstanceOf[org.kermeta.art.generator.ComponentInstanceGeneratorAspect]
 implicit def richAspect(v : org.kermeta.art.generator.ComponentInstanceGeneratorAspect) = v.asInstanceOf[org.kermeta.art.generator.ComponentInstanceGenerator]
 implicit def richAspect(v : org.kermeta.art.deployer.OSGiCommandFactory) = v.asInstanceOf[org.kermeta.art.deployer.OSGiCommandFactoryAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.OSGiCommandFactoryAspect) = v.asInstanceOf[org.kermeta.art.deployer.OSGiCommandFactory]
 implicit def richAspect(v : org.kermeta.art.deployer.AddComponentType) = v.asInstanceOf[org.kermeta.art.deployer.AddComponentTypeAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.AddComponentTypeAspect) = v.asInstanceOf[org.kermeta.art.deployer.AddComponentType]
 implicit def richAspect(v : org.kermeta.art.deployer.RemoveComponentType) = v.asInstanceOf[org.kermeta.art.deployer.RemoveComponentTypeAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.RemoveComponentTypeAspect) = v.asInstanceOf[org.kermeta.art.deployer.RemoveComponentType]
 implicit def richAspect(v : org.kermeta.art.deployer.AddComponentInstance) = v.asInstanceOf[org.kermeta.art.deployer.AddComponentInstanceAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.AddComponentInstanceAspect) = v.asInstanceOf[org.kermeta.art.deployer.AddComponentInstance]
 implicit def richAspect(v : org.kermeta.art.deployer.RemoveComponentInstance) = v.asInstanceOf[org.kermeta.art.deployer.RemoveComponentInstanceAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.RemoveComponentInstanceAspect) = v.asInstanceOf[org.kermeta.art.deployer.RemoveComponentInstance]
 implicit def richAspect(v : org.kermeta.art.deployer.UpdateComponentInstance) = v.asInstanceOf[org.kermeta.art.deployer.UpdateComponentInstanceAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.UpdateComponentInstanceAspect) = v.asInstanceOf[org.kermeta.art.deployer.UpdateComponentInstance]
 implicit def richAspect(v : org.kermeta.art.deployer.CommandContext) = v.asInstanceOf[org.kermeta.art.deployer.CommandContextAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.CommandContextAspect) = v.asInstanceOf[org.kermeta.art.deployer.CommandContext]
 implicit def richAspect(v : org.kermeta.art.deployer.Command) = v.asInstanceOf[org.kermeta.art.deployer.CommandAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.CommandAspect) = v.asInstanceOf[org.kermeta.art.deployer.Command]
 implicit def richAspect(v : org.kermeta.art.deployer.ComponentTypeCommand) = v.asInstanceOf[org.kermeta.art.deployer.ComponentTypeCommandAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.ComponentTypeCommandAspect) = v.asInstanceOf[org.kermeta.art.deployer.ComponentTypeCommand]
 implicit def richAspect(v : org.kermeta.art.deployer.ComponentInstanceCommand) = v.asInstanceOf[org.kermeta.art.deployer.ComponentInstanceCommandAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.ComponentInstanceCommandAspect) = v.asInstanceOf[org.kermeta.art.deployer.ComponentInstanceCommand]
 implicit def richAspect(v : org.kermeta.art.deployer.AbtractCommandFactory) = v.asInstanceOf[org.kermeta.art.deployer.AbtractCommandFactoryAspect]
 implicit def richAspect(v : org.kermeta.art.deployer.AbtractCommandFactoryAspect) = v.asInstanceOf[org.kermeta.art.deployer.AbtractCommandFactory]
 implicit def richAspect(v : org.kermeta.artKomparator.Launcher) = v.asInstanceOf[org.kermeta.artKomparator.LauncherAspect]
 implicit def richAspect(v : org.kermeta.artKomparator.LauncherAspect) = v.asInstanceOf[org.kermeta.artKomparator.Launcher]
 implicit def richAspect(v : org.kermeta.komparator.Komparator) = v.asInstanceOf[org.kermeta.komparator.KomparatorAspect]
 implicit def richAspect(v : org.kermeta.komparator.KomparatorAspect) = v.asInstanceOf[org.kermeta.komparator.Komparator]
 implicit def richAspect(v : art2.ComponentInstance) = v.asInstanceOf[ScalaAspect.art2.ComponentInstanceAspect]
 implicit def richAspect(v : ScalaAspect.art2.ComponentInstanceAspect) = v.asInstanceOf[art2.impl.ComponentInstanceImpl]
 implicit def richAspect(v : art2.Port) = v.asInstanceOf[ScalaAspect.art2.PortAspect]
 implicit def richAspect(v : ScalaAspect.art2.PortAspect) = v.asInstanceOf[art2.impl.PortImpl]
 implicit def richAspect(v : art2.MessageHub) = v.asInstanceOf[ScalaAspect.art2.MessageHubAspect]
 implicit def richAspect(v : ScalaAspect.art2.MessageHubAspect) = v.asInstanceOf[art2.impl.MessageHubImpl]
 implicit def richAspect(v : art2.Topic) = v.asInstanceOf[ScalaAspect.art2.TopicAspect]
 implicit def richAspect(v : ScalaAspect.art2.TopicAspect) = v.asInstanceOf[art2.impl.TopicImpl]
 implicit def richAspect(v : art2.Queue) = v.asInstanceOf[ScalaAspect.art2.QueueAspect]
 implicit def richAspect(v : ScalaAspect.art2.QueueAspect) = v.asInstanceOf[art2.impl.QueueImpl]
 implicit def richAspect(v : art2.Binding) = v.asInstanceOf[ScalaAspect.art2.BindingAspect]
 implicit def richAspect(v : ScalaAspect.art2.BindingAspect) = v.asInstanceOf[art2.impl.BindingImpl]
 implicit def richAspect(v : art2.ComponentType) = v.asInstanceOf[ScalaAspect.art2.ComponentTypeAspect]
 implicit def richAspect(v : ScalaAspect.art2.ComponentTypeAspect) = v.asInstanceOf[art2.impl.ComponentTypeImpl]
 implicit def richAspect(v : art2.ContainerNode) = v.asInstanceOf[ScalaAspect.art2.ContainerNodeAspect]
 implicit def richAspect(v : ScalaAspect.art2.ContainerNodeAspect) = v.asInstanceOf[art2.impl.ContainerNodeImpl]
 implicit def richAspect(v : art2.ContainerRoot) = v.asInstanceOf[ScalaAspect.art2.ContainerRootAspect]
 implicit def richAspect(v : ScalaAspect.art2.ContainerRootAspect) = v.asInstanceOf[art2.impl.ContainerRootImpl]
 implicit def richAspect(v : art2.PortType) = v.asInstanceOf[ScalaAspect.art2.PortTypeAspect]
 implicit def richAspect(v : ScalaAspect.art2.PortTypeAspect) = v.asInstanceOf[art2.impl.PortTypeImpl]
 implicit def richAspect(v : art2.NamedElement) = v.asInstanceOf[ScalaAspect.art2.NamedElementAspect]
 implicit def richAspect(v : ScalaAspect.art2.NamedElementAspect) = v.asInstanceOf[art2.impl.NamedElementImpl]
 implicit def richAspect(v : art2.Namespace) = v.asInstanceOf[ScalaAspect.art2.NamespaceAspect]
 implicit def richAspect(v : ScalaAspect.art2.NamespaceAspect) = v.asInstanceOf[art2.impl.NamespaceImpl]
 implicit def richAspect(v : art2.Dictionary) = v.asInstanceOf[ScalaAspect.art2.DictionaryAspect]
 implicit def richAspect(v : ScalaAspect.art2.DictionaryAspect) = v.asInstanceOf[art2.impl.DictionaryImpl]
 implicit def richAspect(v : art2.DictionaryType) = v.asInstanceOf[ScalaAspect.art2.DictionaryTypeAspect]
 implicit def richAspect(v : ScalaAspect.art2.DictionaryTypeAspect) = v.asInstanceOf[art2.impl.DictionaryTypeImpl]
 implicit def richAspect(v : art2.DictionaryAttribute) = v.asInstanceOf[ScalaAspect.art2.DictionaryAttributeAspect]
 implicit def richAspect(v : ScalaAspect.art2.DictionaryAttributeAspect) = v.asInstanceOf[art2.impl.DictionaryAttributeImpl]
 implicit def richAspect(v : art2.TypedElement) = v.asInstanceOf[ScalaAspect.art2.TypedElementAspect]
 implicit def richAspect(v : ScalaAspect.art2.TypedElementAspect) = v.asInstanceOf[art2.impl.TypedElementImpl]
 implicit def richAspect(v : art2.DictionaryValue) = v.asInstanceOf[ScalaAspect.art2.DictionaryValueAspect]
 implicit def richAspect(v : ScalaAspect.art2.DictionaryValueAspect) = v.asInstanceOf[art2.impl.DictionaryValueImpl]
 implicit def richAspect(v : art2.CompositeType) = v.asInstanceOf[ScalaAspect.art2.CompositeTypeAspect]
 implicit def richAspect(v : ScalaAspect.art2.CompositeTypeAspect) = v.asInstanceOf[art2.impl.CompositeTypeImpl]
 implicit def richAspect(v : art2.PortTypeRef) = v.asInstanceOf[ScalaAspect.art2.PortTypeRefAspect]
 implicit def richAspect(v : ScalaAspect.art2.PortTypeRefAspect) = v.asInstanceOf[art2.impl.PortTypeRefImpl]
 implicit def richAspect(v : art2.Wire) = v.asInstanceOf[ScalaAspect.art2.WireAspect]
 implicit def richAspect(v : ScalaAspect.art2.WireAspect) = v.asInstanceOf[art2.impl.WireImpl]
 implicit def richAspect(v : art2.ServicePortType) = v.asInstanceOf[ScalaAspect.art2.ServicePortTypeAspect]
 implicit def richAspect(v : ScalaAspect.art2.ServicePortTypeAspect) = v.asInstanceOf[art2.impl.ServicePortTypeImpl]
 implicit def richAspect(v : art2.Operation) = v.asInstanceOf[ScalaAspect.art2.OperationAspect]
 implicit def richAspect(v : ScalaAspect.art2.OperationAspect) = v.asInstanceOf[art2.impl.OperationImpl]
 implicit def richAspect(v : art2.Parameter) = v.asInstanceOf[ScalaAspect.art2.ParameterAspect]
 implicit def richAspect(v : ScalaAspect.art2.ParameterAspect) = v.asInstanceOf[art2.impl.ParameterImpl]
 implicit def richAspect(v : art2.MessagePortType) = v.asInstanceOf[ScalaAspect.art2.MessagePortTypeAspect]
 implicit def richAspect(v : ScalaAspect.art2.MessagePortTypeAspect) = v.asInstanceOf[art2.impl.MessagePortTypeImpl]
 implicit def richAspect(v : art2.Repository) = v.asInstanceOf[ScalaAspect.art2.RepositoryAspect]
 implicit def richAspect(v : ScalaAspect.art2.RepositoryAspect) = v.asInstanceOf[art2.impl.RepositoryImpl]
 implicit def richAspect(v : art2.DeployUnit) = v.asInstanceOf[ScalaAspect.art2.DeployUnitAspect]
 implicit def richAspect(v : ScalaAspect.art2.DeployUnitAspect) = v.asInstanceOf[art2.impl.DeployUnitImpl]
 implicit def richAspect(v : art2.ComponentTypeLibrary) = v.asInstanceOf[ScalaAspect.art2.ComponentTypeLibraryAspect]
 implicit def richAspect(v : ScalaAspect.art2.ComponentTypeLibraryAspect) = v.asInstanceOf[art2.impl.ComponentTypeLibraryImpl]
 implicit def richAspect(v : art2.IntegrationPattern) = v.asInstanceOf[ScalaAspect.art2.IntegrationPatternAspect]
 implicit def richAspect(v : ScalaAspect.art2.IntegrationPatternAspect) = v.asInstanceOf[art2.impl.IntegrationPatternImpl]
 implicit def richAspect(v : art2.ExtraFonctionalProperty) = v.asInstanceOf[ScalaAspect.art2.ExtraFonctionalPropertyAspect]
 implicit def richAspect(v : ScalaAspect.art2.ExtraFonctionalPropertyAspect) = v.asInstanceOf[art2.impl.ExtraFonctionalPropertyImpl]
 implicit def richAspect(v : art2.Metric) = v.asInstanceOf[ScalaAspect.art2.MetricAspect]
 implicit def richAspect(v : ScalaAspect.art2.MetricAspect) = v.asInstanceOf[art2.impl.MetricImpl]
 implicit def richAspect(v : art2.PortTypeMapping) = v.asInstanceOf[ScalaAspect.art2.PortTypeMappingAspect]
 implicit def richAspect(v : ScalaAspect.art2.PortTypeMappingAspect) = v.asInstanceOf[art2.impl.PortTypeMappingImpl]
 implicit def richAspect(v : art2.MBinding) = v.asInstanceOf[ScalaAspect.art2.MBindingAspect]
 implicit def richAspect(v : ScalaAspect.art2.MBindingAspect) = v.asInstanceOf[art2.impl.MBindingImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EAttribute) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EAttributeAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EAttributeAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EAttributeImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EAnnotation) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EAnnotationAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EAnnotationAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EAnnotationImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EClass) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EClassAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EClassAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EClassImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EClassifier) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EClassifierAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EClassifierAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EClassifierImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EDataType) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EDataTypeAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EDataTypeAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EDataTypeImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EEnum) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EEnumAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EEnumAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EEnumImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EEnumLiteral) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EEnumLiteralAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EEnumLiteralAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EEnumLiteralImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EFactory) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EFactoryAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EFactoryAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EFactoryImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EModelElement) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EModelElementAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EModelElementAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EModelElementImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.ENamedElement) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.ENamedElementAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.ENamedElementAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.ENamedElementImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EObject) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structureScalaAspect.aspect.ObjectAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EObjectAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EObjectImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EOperation) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EOperationAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EOperationAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EOperationImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EPackage) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EPackageAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EPackageAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EPackageImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EParameter) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EParameterAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EParameterAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EParameterImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EReference) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EReferenceAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EReferenceAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EReferenceImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EStructuralFeature) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EStructuralFeatureAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EStructuralFeatureAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EStructuralFeatureImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.ETypedElement) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.ETypedElementAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.ETypedElementAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.ETypedElementImpl]
 implicit def richAspect(v : java.util.Map.Entry[String,String]) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EStringToStringMapEntryAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EStringToStringMapEntryAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.EGenericType) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.EGenericTypeAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.EGenericTypeAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.EGenericTypeImpl]
 implicit def richAspect(v : org.eclipse.emf.ecore.ETypeParameter) = v.asInstanceOf[ScalaAspect.org.eclipse.emf.ecore.ETypeParameterAspect]
 implicit def richAspect(v : ScalaAspect.org.eclipse.emf.ecore.ETypeParameterAspect) = v.asInstanceOf[org.eclipse.emf.ecore.impl.ETypeParameterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.DummyClass) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.DummyClassAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.DummyClassAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.impl.DummyClassImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.DummyClass) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.DummyClassAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.DummyClassAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.impl.DummyClassImpl]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PropertyConstraint) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PropertyConstraintAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PropertyConstraintAspect) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PropertyConstraint]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Property) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PropertyAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PropertyAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.PropertyImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ClassDefinition) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ClassDefinitionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ClassDefinitionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ClassDefinitionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Object) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ObjectAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ObjectAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ObjectImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Operation) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.OperationAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.OperationAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.OperationImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Type) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.TypeContainer) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeContainerAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeContainerAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypeContainerImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.EnumerationLiteral) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.EnumerationLiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.EnumerationLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.EnumerationLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.TypeVariableBinding) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeVariableBindingAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeVariableBindingAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypeVariableBindingImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.MultiplicityElement) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.MultiplicityElementAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.MultiplicityElementAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.MultiplicityElementImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.TypedElement) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypedElementAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypedElementAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypedElementImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.TypeDefinition) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeDefinitionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeDefinitionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypeDefinitionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.NamedElement) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.NamedElementAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.NamedElementAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.NamedElementImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Class) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ClassAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ClassAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ClassImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.DataType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.DataTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.DataTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.DataTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Enumeration) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.EnumerationAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.EnumerationAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.EnumerationImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Package) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PackageAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PackageAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.PackageImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Parameter) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ParameterAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ParameterAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ParameterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.PrimitiveType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PrimitiveTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.PrimitiveTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.PrimitiveTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Tag) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TagAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TagAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TagImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Constraint) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ConstraintAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ConstraintAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ConstraintImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.GenericTypeDefinition) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.GenericTypeDefinitionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.GenericTypeDefinitionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.GenericTypeDefinitionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ParameterizedType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ParameterizedTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ParameterizedTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ParameterizedTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.TypeVariable) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeVariableAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypeVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ObjectTypeVariable) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ObjectTypeVariableAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ObjectTypeVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ObjectTypeVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ModelType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ModelTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ModelTypeVariable) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelTypeVariableAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelTypeVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ModelTypeVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.VirtualType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.VirtualTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.VirtualTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.VirtualTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Model) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ModelImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ModelingUnit) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelingUnitAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ModelingUnitAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ModelingUnitImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Require) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.RequireAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.RequireAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.RequireImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Using) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.UsingAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.UsingAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.UsingImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.Filter) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.FilterAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.FilterAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.FilterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.ProductType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ProductTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.ProductTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.ProductTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.FunctionType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.FunctionTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.FunctionTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.FunctionTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.VoidType) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.VoidTypeAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.VoidTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.VoidTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.structure.TypeDefinitionContainer) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeDefinitionContainerAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.structure.TypeDefinitionContainerAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.structure.impl.TypeDefinitionContainerImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallExpression) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallExpressionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Expression) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.ExpressionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.ExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.ExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallVariable) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallVariableAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallFeature) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallFeatureAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallFeatureAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallFeatureImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallSuperOperation) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallSuperOperationAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallSuperOperationAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallSuperOperationImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallResult) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallResultAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallResultAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallResultImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallValue) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallValueAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.CallValueAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallValueImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Assignment) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.AssignmentAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.AssignmentAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.AssignmentImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Block) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.BlockAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.BlockAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.BlockImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Conditional) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.ConditionalAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.ConditionalAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.ConditionalImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Raise) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.RaiseAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.RaiseAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.RaiseImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Rescue) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.RescueAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.RescueAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.RescueImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.TypeReference) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.TypeReferenceAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.TypeReferenceAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.TypeReferenceImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Literal) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.EmptyExpression) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.EmptyExpressionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.EmptyExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.EmptyExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.JavaStaticCall) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.JavaStaticCallAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.JavaStaticCallAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.JavaStaticCallImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.LambdaExpression) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LambdaExpressionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LambdaExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LambdaExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.LambdaParameter) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LambdaParameterAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LambdaParameterAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LambdaParameterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.IntegerLiteral) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.IntegerLiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.IntegerLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.IntegerLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.StringLiteral) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.StringLiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.StringLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.StringLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.BooleanLiteral) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.BooleanLiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.BooleanLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.BooleanLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.TypeLiteral) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.TypeLiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.TypeLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.TypeLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.VoidLiteral) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.VoidLiteralAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.VoidLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.VoidLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Loop) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LoopAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.LoopAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LoopImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.SelfExpression) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.SelfExpressionAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.SelfExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.SelfExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.VariableDecl) = v.asInstanceOf[ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.VariableDeclAspect]
 implicit def richAspect(v : ScalaAspect.fr.irisa.triskell.kermeta.language.behavior.VariableDeclAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.VariableDeclImpl]
}

