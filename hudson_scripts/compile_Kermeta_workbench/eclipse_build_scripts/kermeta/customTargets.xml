<project name="Build specific targets and properties" default="noDefault" basedir=".">

<!-- ===================================================================== -->
<!-- Run a given ${target} on all elements being built -->
<!-- ===================================================================== -->
<target name="allElements">
	<echo>${buildDirectory}	</echo>

	<ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="fr.irisa.triskell.traceability" />
	</ant>
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="org.kermeta.log4j" />
	</ant>
	
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="fr.irisa.triskell.kermeta" />
	</ant>	
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="fr.irisa.triskell.kermeta.samples.fsm" />
	</ant>
	
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="org.kermeta.uml2" />
	</ant>
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="org.kermeta.alltests" />
	</ant>
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="fr.irisa.triskell.kermeta.ecore" />
	</ant>
    <ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="fr.irisa.triskell.kermeta.ocl" />
	</ant>	
</target>

<!-- ===================================================================== -->
<!-- Targets to assemble the built elements for particular configurations  -->
<!-- These generally call the generated assemble scripts (named in -->
<!-- ${assembleScriptName}) but may also add pre and post processing -->
<!-- Add one target for each root element and each configuration -->
<!-- ===================================================================== -->

<target name="assemble.fr.irisa.triskell.kermeta">
	<property name="archiveName" value="fr.irisa.triskell.kermeta-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>
<target name="assemble.fr.irisa.triskell.traceability">
	<property name="archiveName" value="fr.irisa.triskell.traceability-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.fr.irisa.triskell.kermeta.samples.fsm">
	<property name="archiveName" value="fr.irisa.triskell.kermeta.samples.fsm-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.fr.irisa.triskell.kermeta.ecore">
	<property name="archiveName" value="fr.irisa.triskell.kermeta.ecore-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>
<target name="assemble.fr.irisa.triskell.kermeta.ocl">
	<property name="archiveName" value="fr.irisa.triskell.kermeta.ocl-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.org.kermeta.uml2">
	<property name="archiveName" value="org.kermeta.uml2-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.org.kermeta.log4j">
	<property name="archiveName" value="org.kermeta.log4j-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.org.kermeta.alltests">
	<property name="archiveName" value="org.kermeta.alltests-${buildId}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.fr.irisa.triskell.kermeta.win32.win32.x86">
	<property name="archiveName" value="kermeta-${buildId}-win32.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>
<target name="assemble.fr.irisa.triskell.traceability.win32.win32.x86">
	<property name="archiveName" value="traceability-${buildId}-win32.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.fr.irisa.triskell.kermeta.samples.fsm.win32.win32.x86">
	<property name="archiveName" value="kermeta-fsm-${buildId}-win32.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<target name="assemble.org.kermeta.alltests.win32.win32.x86">
	<property name="archiveName" value="org.kermeta.alltests-${buildId}-win32.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<!-- ===================================================================== -->
<!-- Check out map files from correct repository -->
<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
<!-- ===================================================================== -->
<target name="checkLocal">
	<available property="mapsLocal" file="${buildDirectory}/maps/org.eclipse.releng" />
</target>
<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

	<!-- ***  change the repo info -->
	<property name="mapCvsRoot" value=":pserver:anonymous@dev.eclipse.org:/home/eclipse" />
	<property name="mapVersionTag" value="R3_0_maintenance" />
	<cvs cvsRoot="${mapCvsRoot}"
		package="org.eclipse.releng"
		dest="${buildDirectory}/maps"
		tag="${mapVersionTag}"
	/>
	<!--tag the map files project-->
	<antcall target="tagMapFiles" />
</target>

<target name="tagMapFiles" if="tagMaps">
	<cvs dest="${buildDirectory}/maps/org.eclipse.releng" command="tag r301_v${timestamp}" />
</target>

<!-- ===================================================================== -->
<!-- Steps to do before setup -->
<!-- ===================================================================== -->
<target name="preSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after setup but before starting the build proper -->
<!-- ===================================================================== -->
<target name="postSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do before fetching the build elements -->
<!-- ===================================================================== -->
<target name="preFetch">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after fetching the build elements -->
<!-- ===================================================================== -->
<target name="postFetch">

</target>

<!-- ===================================================================== -->
<!-- Steps to do before generating build scripts -->
<!-- ===================================================================== -->
<target name="preGenerate">

</target>

<!-- ===================================================================== -->
<!-- Steps to do after generating the build scripts -->
<!-- ===================================================================== -->
<target name="postGenerate">
	<antcall target="clean" />
</target>

<!-- ===================================================================== -->
<!-- Steps to do before assembling -->
<!-- ===================================================================== -->
<target name="preAssemble">

</target>

<!-- ===================================================================== -->
<!-- Steps to do after assembling-->
<!-- ===================================================================== -->
<target name="postAssemble">
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="preProcess">
	<replace dir="${buildDirectory}/plugins" value="${timestamp}" token="@build@">
		<include name="**/about.mappings" />
	</replace>
</target>

<!-- ===================================================================== -->
<!-- Steps to do after running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="postProcess">
	<condition property="logsAvailable">
		<istrue value="${javacVerbose}"/> 
	</condition>
	<antcall target="gatherLogs" />
</target>

<!-- ===================================================================== -->
<!-- Steps to do after everything is built and assembled -->
<!-- (e.g., testing, posting, emailing, ...) -->
<!-- ===================================================================== -->
<target name="postBuild">
</target>

<!-- ===================================================================== -->
<!-- Helper targets -->
<!-- ===================================================================== -->
<target name="gatherLogs" if="logsAvailable">

	<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
	<antcall target="allElements">
		<param name="target" value="gatherLogs" />
	</antcall>

	<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
		<fileset dir="${buildDirectory}/features/fr.irisa.triskell.kermeta">
			<include name="*.log.zip" />
		</fileset>
	</unzip>
</target>
<target name="clean" unless="noclean">
	<antcall target="allElements">
		<param name="target" value="cleanElement" />
	</antcall>
</target>
<!-- ===================================================================== -->
<!-- Default target                                                        -->
<!-- ===================================================================== -->
<target name="noDefault">
	<echo message="You must specify a target when invoking this file" />
</target>

</project>
