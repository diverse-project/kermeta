<?xml version="1.0" encoding="ASCII"?>
<ASM:LogoProgram xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ASM="http://www.kermeta.org/kmLogo/ASM">
  <instructions xsi:type="ASM:ProcDeclaration" name="koch" procCall="//@instructions.0/@instructions.0/@elsePart/@instructions.0 //@instructions.0/@instructions.0/@elsePart/@instructions.2 //@instructions.0/@instructions.0/@elsePart/@instructions.4 //@instructions.1/@instructions.0/@block/@instructions.1">
    <args name="level"/>
    <args name="width"/>
    <instructions xsi:type="ASM:If">
      <condition xsi:type="ASM:Lower">
        <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.0"/>
        <rhs xsi:type="ASM:Constant" integerValue="1"/>
      </condition>
      <thenPart>
        <instructions xsi:type="ASM:Forward">
          <steps xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.1"/>
        </instructions>
      </thenPart>
      <elsePart>
        <instructions xsi:type="ASM:ProcCall" declaration="//@instructions.0">
          <actualArgs xsi:type="ASM:Plus">
            <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.0"/>
            <rhs xsi:type="ASM:Constant" integerValue="-1"/>
          </actualArgs>
          <actualArgs xsi:type="ASM:Div">
            <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.1"/>
            <rhs xsi:type="ASM:Constant" integerValue="3"/>
          </actualArgs>
        </instructions>
        <instructions xsi:type="ASM:Left">
          <angle xsi:type="ASM:Constant" integerValue="60"/>
        </instructions>
        <instructions xsi:type="ASM:ProcCall" declaration="//@instructions.0">
          <actualArgs xsi:type="ASM:Plus">
            <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.0"/>
            <rhs xsi:type="ASM:Constant" integerValue="-1"/>
          </actualArgs>
          <actualArgs xsi:type="ASM:Div">
            <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.1"/>
            <rhs xsi:type="ASM:Constant" integerValue="3"/>
          </actualArgs>
        </instructions>
        <instructions xsi:type="ASM:Right">
          <angle xsi:type="ASM:Constant" integerValue="120"/>
        </instructions>
        <instructions xsi:type="ASM:ProcCall" declaration="//@instructions.0">
          <actualArgs xsi:type="ASM:Plus">
            <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.0"/>
            <rhs xsi:type="ASM:Constant" integerValue="-1"/>
          </actualArgs>
          <actualArgs xsi:type="ASM:Div">
            <lhs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.1"/>
            <rhs xsi:type="ASM:Constant" integerValue="3"/>
          </actualArgs>
        </instructions>
        <instructions xsi:type="ASM:Left">
          <angle xsi:type="ASM:Constant" integerValue="60"/>
        </instructions>
      </elsePart>
    </instructions>
  </instructions>
  <instructions xsi:type="ASM:ProcDeclaration" name="snowflake" procCall="//@instructions.4">
    <args name="level"/>
    <args name="width"/>
    <instructions xsi:type="ASM:Repeat">
      <condition xsi:type="ASM:Constant" integerValue="3"/>
      <block>
        <instructions xsi:type="ASM:Right">
          <angle xsi:type="ASM:Constant" integerValue="120"/>
        </instructions>
        <instructions xsi:type="ASM:ProcCall" declaration="//@instructions.0">
          <actualArgs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.0"/>
          <actualArgs xsi:type="ASM:ParameterCall" parameter="//@instructions.0/@args.1"/>
        </instructions>
      </block>
    </instructions>
  </instructions>
  <instructions xsi:type="ASM:Clear"/>
  <instructions xsi:type="ASM:PenDown"/>
  <instructions xsi:type="ASM:ProcCall" declaration="//@instructions.1">
    <actualArgs xsi:type="ASM:Constant" integerValue="2"/>
    <actualArgs xsi:type="ASM:Constant" integerValue="64"/>
  </instructions>
  <instructions xsi:type="ASM:PenUp"/>
</ASM:LogoProgram>
