@mainClass "root_package::Main"
@mainOperation "main"


package root_package;  
require kermeta  
require "platform:/plugin/fr.irisa.triskell.SpoonEMF/model/java5.ecore"    
using kermeta::standard
using kermeta::persistence

using spoon::reflect::declaration

   
class Main
{ 

    operation main() : Void is do 
    
    	//does not support platform:// notation
        //var xmi_uri : String init "file:///home//barais//test3.xmi"
        //var xmi_javaFolder : String init  "//home//barais//workspaces//workspace_spoon//SpoonInput//src//test"
          
        
        
		
		//var  java5helper : Java5Helper init Java5Helper.new
        
        
        
        //java5helper.createXMIfromJavaFolder(xmi_uri,xmi_javaFolder)

		 stdio.writeln("XMI file created")

         
		var resource : EMFResource init EMFResource.new
 
		resource.uri := "../Test/src.java5"
		resource.metaModelURI := "platform:/plugin/fr.irisa.triskell.SpoonEMF/model/java5.ecore"
		resource.initializeContentMap
		resource.load()
		 stdio.writeln("end loading")
	 	stdio.writeln("size = " + resource.contentMap.getValue("allRootContents").select{e|CtClass.isInstance(e)}.size.toString)
		
    end
    

} 

class Java5Helper {


	operation createXMIfromJavaFolder(xmi_uri : String, javafolder_uri : String) : Void is do
		extern fr::irisa::triskell::kermeta::runtime::loader::java5files::Java52RuntimeResource.createResourcesFromJavaFolder(self, javafolder_uri, xmi_uri)
	end 

}


