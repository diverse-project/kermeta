@mainClass "root_package::Main"
@mainOperation "main"

 
package root_package;  
require kermeta  
require "http://spoon"

using kermeta::standard
using kermeta::persistence

using spoon::reflect::declaration

   
class Main
{ 

    operation main() : Void is do 
    
    	//does not support platform:// notation
        var xmi_uri : String init "file:///home//barais//test4.xmi"
        var xmi_javaFolder : String init  "//home//barais//workspaces//workspace_spoon//SpoonInput//src//a"
        
        var helper : Java5Helper init Java5Helper.new
        helper.createXMIfromJavaFolder(xmi_uri,xmi_javaFolder)
        
//        helper.loadJava5Model()
        
				
    end
    

} 

class Java5Helper {


	operation createXMIfromJavaFolder(xmi_uri : String, javafolder_uri : String) : Void is do
		extern fr::irisa::triskell::kermeta::runtime::loader::java5files::Java52RuntimeResource.createResourcesFromJavaFolder(self, javafolder_uri, xmi_uri)
	end 
	
	operation loadJava5Model(uri: String) : Sequence<CtPackage> is do
		var rep : EMFRepository init EMFRepository.new
		var res : Resource
		
		res:=rep.createResource(uri, "http://spoon")
		res.load
    	var instances : Set<Object> init res.instances
    	// retreives only the packages
    	var pack : CtPackage
    	//var packs : Sequence<CtPackage>
    	result := instances.select { e | CtPackage.isInstance(e) }.collect{p | pack ?= p}
		
	end
	

}


