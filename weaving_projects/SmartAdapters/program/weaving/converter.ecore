<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModellingUnit">
    <details key="using" value="kermeta::reflection|kermeta::standard|kermeta::utils|org::smartadapters::utils|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="org" nsURI="platform:/resource/SmartAdapters/program/weaving/converter.ecore#/" nsPrefix="org">
    <eSubpackages name="smartadapters" nsURI="platform:/resource/SmartAdapters/program/weaving/converter.ecore#/org/smartadapters" nsPrefix="smartadapters">
      <eSubpackages name="utils" nsURI="platform:/resource/SmartAdapters/program/weaving/converter.ecore#/org/smartadapters/utils" nsPrefix="utils">
        <eClassifiers xsi:type="ecore:EClass" name="Converter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;Converts a model that conforms to MM' into a model that conforms to MM&#xD;&#xA;It can be improved...&#xD;&#xA;*/"/>
          </eAnnotations>
          <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
          <eOperations name="initConverter" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;convertTable := convert&#xA;&#x9;converted := kermeta::utils::Hashtable&lt;kermeta::reflection::Object, kermeta::reflection::Object>.new&#xA;&#x9;converting := kermeta::utils::Hashtable&lt;kermeta::reflection::Object, kermeta::reflection::Object>.new&#xA;end"/>
              <details key="documentation" value="/**&#xD;&#xA; initializes the converter (~constructor)&#xD;&#xA; must be called before any other operation&#xD;&#xA; */"/>
            </eAnnotations>
            <eParameters name="convert">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/utils/hashtable.ecore#/1/utils/Hashtable"/>
            </eParameters>
          </eOperations>
          <eOperations name="deleteConverted">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;converting.remove(obj)&#xA;&#x9;converted.remove(obj)&#xA;end"/>
            </eAnnotations>
            <eParameters name="obj">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="addEntry" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;convertTable.put(key, val)&#xA;end"/>
            </eAnnotations>
            <eParameters name="key">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Class"/>
            </eParameters>
            <eParameters name="val">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Class"/>
            </eParameters>
          </eOperations>
          <eOperations name="getConverted">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var e : kermeta::reflection::EnumerationLiteral&#xA;&#x9;e ?= obj&#xA;&#x9;if e.isNotEqual(void) then&#xA;&#x9;&#x9;result := obj&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;result := getConvertedObject(obj)&#xA;&#xA;&#x9;end&#xA;end"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            <eParameters name="obj">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="getConvertedObject">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var newMeta : kermeta::reflection::Class&#xA;&#x9;newMeta := convertTable.getValue(obj.getMetaClass)&#xA;&#x9;if newMeta.isNotEqual(void) then&#xA;&#x9;&#x9;var o : kermeta::reflection::Object init newMeta.new&#xA;&#x9;&#x9;if converted.getValue(obj).equals(void) then&#xA;&#x9;&#x9;&#x9;if converting.getValue(obj).equals(void) then&#xA;&#x9;&#x9;&#x9;&#x9;converting.put(obj, o)&#xA;&#x9;&#x9;&#x9;&#x9;convert(obj, o)&#xA;&#x9;&#x9;&#x9;&#x9;converted.put(obj, o)&#xA;&#x9;&#x9;&#x9;&#x9;converting.remove(obj)&#xA;&#x9;&#x9;&#x9;&#x9;result := o&#xA;&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;result := converting.getValue(obj)&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;result := converted.getValue(obj)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;result := obj&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="/**&#xD;&#xA; returns a converted object (MM), equivalent to obj (MM')&#xD;&#xA; */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            <eParameters name="obj">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="getConvertedEnum">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;stdio.writeln(&quot;?>enumLit: &quot;.plus(enumLit.name))&#xA;&#x9;stdio.writeln(&quot;?>enumLit.getMetaClass: &quot;.plus(enumLit.getMetaClass.name))&#xA;&#x9;stdio.writeln(&quot;?>enumLit.enumeration.getMetaClass: &quot;.plus(enumLit.~enumeration.getMetaClass.name))&#xA;&#x9;result := enumLit&#xA;end"/>
              <details key="documentation" value="/**&#xD;&#xA; TODO: &#xe0; revoir...&#xD;&#xA; */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/EnumerationLiteral"/>
            <eParameters name="enumLit">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/EnumerationLiteral"/>
            </eParameters>
          </eOperations>
          <eOperations name="convert">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var classDef : kermeta::reflection::ClassDefinition&#xA;&#x9;classDef ?= conv.getMetaClass.typeDefinition&#xA;&#x9;if classDef.isNotEqual(void) then&#xA;&#x9;&#x9;var att : kermeta::standard::Set&lt;kermeta::reflection::Property> init classDef.allAttribute&#xA;&#x9;&#x9;att.each{a | if (obj.get(a).isNotEqual(void)) and (not ((a.name.equals(&quot;tag&quot;)) or (a.name.equals(&quot;ownedTag&quot;)))) then&#xA;&#x9;&#x9;&#x9;&#x9;var cl : kermeta::reflection::Class init a.getMetaClass.typeDefinition.getMetaClass&#xA;&#x9;&#x9;&#x9;&#x9;var ob : kermeta::reflection::Object init obj.get(a)&#xA;&#x9;&#x9;&#x9;&#x9;if (a.upper.equals(1)) and (ob.isNotEqual(void)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var temp : kermeta::reflection::Object&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;temp := getConverted(ob)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if temp.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;conv.~set(a, temp)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var list : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var convertedList : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list ?= ob&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (list.isNotEqual(void)) and ((list.size) > (0)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;convertedList ?= conv.get(a)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;convertedList.clear&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;list.each{o | do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var tmp : kermeta::reflection::Object init getConverted(o)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;convertedList.add(tmp)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="/**&#xD;&#xA; copies obj (MM') into conv (MM) thanks to the convert Hashtable&#xD;&#xA; */"/>
            </eAnnotations>
            <eParameters name="obj">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
            <eParameters name="conv">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="convertTable" containment="true">
            <eGenericType>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Class"/>
              </eTypeArguments>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Class"/>
              </eTypeArguments>
              <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/utils/hashtable.ecore#/1/utils/Hashtable"/>
            </eGenericType>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="enumTable" containment="true">
            <eGenericType>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Enumeration"/>
              </eTypeArguments>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Enumeration"/>
              </eTypeArguments>
              <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/utils/hashtable.ecore#/1/utils/Hashtable"/>
            </eGenericType>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="converted">
            <eGenericType>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
              </eTypeArguments>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
              </eTypeArguments>
              <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/utils/hashtable.ecore#/1/utils/Hashtable"/>
            </eGenericType>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="converting">
            <eGenericType>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
              </eTypeArguments>
              <eTypeArguments>
                <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore#/1/reflection/Object"/>
              </eTypeArguments>
              <eClassifier xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/utils/hashtable.ecore#/1/utils/Hashtable"/>
            </eGenericType>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EAnnotation source="dependentResource"/>
</xmi:XMI>
