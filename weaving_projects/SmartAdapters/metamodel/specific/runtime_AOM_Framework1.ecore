<?xml version="1.0" encoding="ASCII"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="org"
    nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/"
    nsPrefix="org">
  <eClassifiers xsi:type="ecore:EDataType" name="_KermetaSpecialTypesAlias_" instanceClassName="java.lang.Object"/>
  <eSubpackages name="smartadapters" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/org/smartadapters"
      nsPrefix="smartadapters">
    <eSubpackages name="core" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/org/smartadapters/core"
        nsPrefix="core">
      <eClassifiers xsi:type="ecore:EClass" name="Adapter">
        <eStructuralFeatures xsi:type="ecore:EReference" name="aspect" lowerBound="1"
            eType="#//smartadapters/core/Aspect" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adapt" upperBound="-1"
            eType="#//smartadapters/core/Adaptation" containment="true" eOpposite="#//smartadapters/core/Adaptation/adapter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Aspect">
        <eStructuralFeatures xsi:type="ecore:EReference" name="template" eType="ecore:EClass ../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//ModelPattern"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="structure" lowerBound="1"
            eType="ecore:EClass ../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PModel"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="persistent" upperBound="-1"
            eType="ecore:EClass ../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   persistent refers to aspectual PObject that must not be&#xD;&#xA;   cloned between two bindings&#xD;&#xA;   TODO : contraints...&#xD;&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Adaptation" abstract="true" eSuperTypes="#//smartadapters/extension/AdapterElement">
        <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
            <details key="documentation" value="/**&#xD;&#xA;   Execute the adaptation for a given binding&#xD;&#xA;   Sub-classes must implement this method&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="checking" value="check"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adapter" lowerBound="1"
            eType="#//smartadapters/core/Adapter" eOpposite="#//smartadapters/core/Adapter/adapt"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="cloneAdaptation" abstract="true"
          eSuperTypes="#//smartadapters/core/Adaptation">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="#//smartadapters/core/uniqueType">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="createAdaptation" abstract="true"
          eSuperTypes="#//smartadapters/core/Adaptation">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="#//smartadapters/core/uniqueType">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="setAdaptation" abstract="true" eSuperTypes="#//smartadapters/core/Adaptation"/>
      <eClassifiers xsi:type="ecore:EClass" name="unsetAdaptation" abstract="true"
          eSuperTypes="#//smartadapters/core/Adaptation"/>
      <eClassifiers xsi:type="ecore:EClass" name="makeUnique" eSuperTypes="#//smartadapters/core/Adaptation">
        <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
          <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
            <details key="body" value="do&#xA;&#x9;var res : kermeta::standard::Boolean init false&#xA;&#x9;if adapter.aspect.structure.isNotEqual(void) then&#xA;&#x9;&#x9;if adapter.aspect.structure.content.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;res := (element.isNotEqual(void)) and (adapter.aspect.structure.content.contains(element))&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;&#x9;result := res&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
            <details key="body" value="do&#xA;&#x9;adapter.aspect.persistent.add(element)&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
            eType="ecore:EClass ../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="uniqueType">
        <eLiterals name="unique" literal="unique"/>
        <eLiterals name="non_unique" value="1" literal="non_unique"/>
        <eLiterals name="onDemand" value="2" literal="onDemand"/>
      </eClassifiers>
      <eSubpackages name="adaptations" nsURI="platform:/resource/SmartAdapters/metamodel/specific/runtime_AOM_Framework.ecore#/org/smartadapters/core/adaptations"
          nsPrefix="adaptations">
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeNamedElement" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::NamedElement&#xA;   * All the references expect NamedElementToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := NamedElementToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempNamedElement : runtime::NamedElement&#xA;&#x9;tempNamedElement ?= ad.getRealObject(NamedElementToSet, false)&#xA;&#x9;tempNamedElement.name ?= ad.setSingleProperty(refname, tempNamedElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeNamedElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeNamedElement.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.NamedElementToUnset := self.NamedElementToSet&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="NamedElementToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/NamedElement"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeNamedElement" eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::NamedElement&#xA;   * All the references expect NamedElementToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := NamedElementToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempNamedElement : runtime::NamedElement&#xA;&#x9;tempNamedElement ?= ad.getRealObject(NamedElementToUnset, false)&#xA;&#x9;tempNamedElement.name ?= ad.unsetSingleProperty(refname, tempNamedElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeNamedElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeNamedElement.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.NamedElementToSet := self.NamedElementToUnset&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="NamedElementToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/NamedElement"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeSystem" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::System&#xA;   * All the references expect SystemToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := SystemToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempSystem : runtime::System&#xA;&#x9;tempSystem ?= ad.getRealObject(SystemToSet, false)&#xA;&#x9;tempSystem.root ?= ad.setSingleProperty(refroot, tempSystem.root)&#xA;&#x9;ad.setMultipleProperty(tempSystem.services, refservices)&#xA;&#x9;ad.setMultipleProperty(tempSystem.types, reftypes)&#xA;&#x9;ad.setMultipleProperty(tempSystem.dataTypes, refdataTypes)&#xA;&#x9;tempSystem.name ?= ad.setSingleProperty(refname, tempSystem.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeSystem&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeSystem.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.SystemToUnset := self.SystemToSet&#xA;&#x9;&#x9;unset.refroot := self.refroot&#xA;&#x9;&#x9;unset.refservices.clear&#xA;&#x9;&#x9;unset.refservices.addAll(self.refservices)&#xA;&#x9;&#x9;unset.reftypes.clear&#xA;&#x9;&#x9;unset.reftypes.addAll(self.reftypes)&#xA;&#x9;&#x9;unset.refdataTypes.clear&#xA;&#x9;&#x9;unset.refdataTypes.addAll(self.refdataTypes)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="SystemToSet" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/System"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refroot" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservices" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Service"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftypes" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdataTypes" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/DataType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeSystem" eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::System&#xA;   * All the references expect SystemToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := SystemToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempSystem : runtime::System&#xA;&#x9;tempSystem ?= ad.getRealObject(SystemToUnset, false)&#xA;&#x9;tempSystem.root ?= ad.unsetSingleProperty(refroot, tempSystem.root)&#xA;&#x9;ad.unsetMultipleProperty(tempSystem.services, refservices)&#xA;&#x9;ad.unsetMultipleProperty(tempSystem.types, reftypes)&#xA;&#x9;ad.unsetMultipleProperty(tempSystem.dataTypes, refdataTypes)&#xA;&#x9;tempSystem.name ?= ad.unsetSingleProperty(refname, tempSystem.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeSystem&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeSystem.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.SystemToSet := self.SystemToUnset&#xA;&#x9;&#x9;~set.refroot := self.refroot&#xA;&#x9;&#x9;~set.refservices.clear&#xA;&#x9;&#x9;~set.refservices.addAll(self.refservices)&#xA;&#x9;&#x9;~set.reftypes.clear&#xA;&#x9;&#x9;~set.reftypes.addAll(self.reftypes)&#xA;&#x9;&#x9;~set.refdataTypes.clear&#xA;&#x9;&#x9;~set.refdataTypes.addAll(self.refdataTypes)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="SystemToUnset" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/System"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refroot" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservices" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Service"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftypes" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdataTypes" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/DataType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceComponentInstance"
            eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::ComponentInstance&#xA;   * All the references expect ComponentInstanceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentInstanceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentInstance : runtime::instance::ComponentInstance&#xA;&#x9;tempComponentInstance ?= ad.getRealObject(ComponentInstanceToSet, false)&#xA;&#x9;tempComponentInstance.type ?= ad.setSingleProperty(reftype, tempComponentInstance.type)&#xA;&#x9;tempComponentInstance.state ?= ad.setSingleProperty(refstate, tempComponentInstance.state)&#xA;&#x9;tempComponentInstance.superComponent ?= ad.setSingleProperty(refsuperComponent, tempComponentInstance.superComponent)&#xA;&#x9;ad.setMultipleProperty(tempComponentInstance.~attribute, refattribute)&#xA;&#x9;ad.setMultipleProperty(tempComponentInstance.binding, refbinding)&#xA;&#x9;tempComponentInstance.controllerDesc ?= ad.setSingleProperty(refcontrollerDesc, tempComponentInstance.controllerDesc)&#xA;&#x9;tempComponentInstance.contentDesc ?= ad.setSingleProperty(refcontentDesc, tempComponentInstance.contentDesc)&#xA;&#x9;tempComponentInstance.name ?= ad.setSingleProperty(refname, tempComponentInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceComponentInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceComponentInstance.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ComponentInstanceToUnset := self.ComponentInstanceToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refstate := self.refstate&#xA;&#x9;&#x9;unset.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;unset.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentInstanceToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ValuedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc"
              eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceComponentInstance"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::ComponentInstance&#xA;   * All the references expect ComponentInstanceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentInstanceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentInstance : runtime::instance::ComponentInstance&#xA;&#x9;tempComponentInstance ?= ad.getRealObject(ComponentInstanceToUnset, false)&#xA;&#x9;tempComponentInstance.type ?= ad.unsetSingleProperty(reftype, tempComponentInstance.type)&#xA;&#x9;tempComponentInstance.state ?= ad.unsetSingleProperty(refstate, tempComponentInstance.state)&#xA;&#x9;tempComponentInstance.superComponent ?= ad.unsetSingleProperty(refsuperComponent, tempComponentInstance.superComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentInstance.~attribute, refattribute)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentInstance.binding, refbinding)&#xA;&#x9;tempComponentInstance.controllerDesc ?= ad.unsetSingleProperty(refcontrollerDesc, tempComponentInstance.controllerDesc)&#xA;&#x9;tempComponentInstance.contentDesc ?= ad.unsetSingleProperty(refcontentDesc, tempComponentInstance.contentDesc)&#xA;&#x9;tempComponentInstance.name ?= ad.unsetSingleProperty(refname, tempComponentInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceComponentInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceComponentInstance.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ComponentInstanceToSet := self.ComponentInstanceToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refstate := self.refstate&#xA;&#x9;&#x9;~set.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;~set.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentInstanceToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ValuedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc"
              eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstancePrimitiveInstance"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::PrimitiveInstance from scratch&#xA;   * This new element is handled by refering to newPrimitiveInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPrimitiveInstance.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPrimitiveInstance, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPrimitiveInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/PrimitiveInstance"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstancePrimitiveInstance"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::PrimitiveInstance from an existing one&#xA;   * This cloned element is handled by refering to clonedPrimitiveInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveInstanceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPrimitiveInstance, PrimitiveInstanceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveInstanceToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/PrimitiveInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPrimitiveInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/PrimitiveInstance"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstancePrimitiveInstance"
            eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::PrimitiveInstance&#xA;   * All the references expect PrimitiveInstanceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveInstanceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveInstance : runtime::instance::PrimitiveInstance&#xA;&#x9;tempPrimitiveInstance ?= ad.getRealObject(PrimitiveInstanceToSet, false)&#xA;&#x9;tempPrimitiveInstance.type ?= ad.setSingleProperty(reftype, tempPrimitiveInstance.type)&#xA;&#x9;tempPrimitiveInstance.state ?= ad.setSingleProperty(refstate, tempPrimitiveInstance.state)&#xA;&#x9;tempPrimitiveInstance.superComponent ?= ad.setSingleProperty(refsuperComponent, tempPrimitiveInstance.superComponent)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveInstance.~attribute, refattribute)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveInstance.binding, refbinding)&#xA;&#x9;tempPrimitiveInstance.controllerDesc ?= ad.setSingleProperty(refcontrollerDesc, tempPrimitiveInstance.controllerDesc)&#xA;&#x9;tempPrimitiveInstance.contentDesc ?= ad.setSingleProperty(refcontentDesc, tempPrimitiveInstance.contentDesc)&#xA;&#x9;tempPrimitiveInstance.name ?= ad.setSingleProperty(refname, tempPrimitiveInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstancePrimitiveInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstancePrimitiveInstance.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PrimitiveInstanceToUnset := self.PrimitiveInstanceToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refstate := self.refstate&#xA;&#x9;&#x9;unset.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;unset.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveInstanceToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/PrimitiveInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ValuedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc"
              eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstancePrimitiveInstance"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::PrimitiveInstance&#xA;   * All the references expect PrimitiveInstanceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveInstanceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveInstance : runtime::instance::PrimitiveInstance&#xA;&#x9;tempPrimitiveInstance ?= ad.getRealObject(PrimitiveInstanceToUnset, false)&#xA;&#x9;tempPrimitiveInstance.type ?= ad.unsetSingleProperty(reftype, tempPrimitiveInstance.type)&#xA;&#x9;tempPrimitiveInstance.state ?= ad.unsetSingleProperty(refstate, tempPrimitiveInstance.state)&#xA;&#x9;tempPrimitiveInstance.superComponent ?= ad.unsetSingleProperty(refsuperComponent, tempPrimitiveInstance.superComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveInstance.~attribute, refattribute)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveInstance.binding, refbinding)&#xA;&#x9;tempPrimitiveInstance.controllerDesc ?= ad.unsetSingleProperty(refcontrollerDesc, tempPrimitiveInstance.controllerDesc)&#xA;&#x9;tempPrimitiveInstance.contentDesc ?= ad.unsetSingleProperty(refcontentDesc, tempPrimitiveInstance.contentDesc)&#xA;&#x9;tempPrimitiveInstance.name ?= ad.unsetSingleProperty(refname, tempPrimitiveInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstancePrimitiveInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstancePrimitiveInstance.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PrimitiveInstanceToSet := self.PrimitiveInstanceToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refstate := self.refstate&#xA;&#x9;&#x9;~set.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;~set.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveInstanceToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/PrimitiveInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ValuedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc"
              eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceCompositeInstance"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::CompositeInstance from scratch&#xA;   * This new element is handled by refering to newCompositeInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newCompositeInstance.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newCompositeInstance, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newCompositeInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceCompositeInstance"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::CompositeInstance from an existing one&#xA;   * This cloned element is handled by refering to clonedCompositeInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeInstanceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedCompositeInstance, CompositeInstanceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeInstanceToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedCompositeInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceCompositeInstance"
            eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::CompositeInstance&#xA;   * All the references expect CompositeInstanceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeInstanceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeInstance : runtime::instance::CompositeInstance&#xA;&#x9;tempCompositeInstance ?= ad.getRealObject(CompositeInstanceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.subComponent, refsubComponent)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.delegation, refdelegation)&#xA;&#x9;tempCompositeInstance.type ?= ad.setSingleProperty(reftype, tempCompositeInstance.type)&#xA;&#x9;tempCompositeInstance.state ?= ad.setSingleProperty(refstate, tempCompositeInstance.state)&#xA;&#x9;tempCompositeInstance.superComponent ?= ad.setSingleProperty(refsuperComponent, tempCompositeInstance.superComponent)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.~attribute, refattribute)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.binding, refbinding)&#xA;&#x9;tempCompositeInstance.controllerDesc ?= ad.setSingleProperty(refcontrollerDesc, tempCompositeInstance.controllerDesc)&#xA;&#x9;tempCompositeInstance.contentDesc ?= ad.setSingleProperty(refcontentDesc, tempCompositeInstance.contentDesc)&#xA;&#x9;tempCompositeInstance.name ?= ad.setSingleProperty(refname, tempCompositeInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceCompositeInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceCompositeInstance.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.CompositeInstanceToUnset := self.CompositeInstanceToSet&#xA;&#x9;&#x9;unset.refsubComponent.clear&#xA;&#x9;&#x9;unset.refsubComponent.addAll(self.refsubComponent)&#xA;&#x9;&#x9;unset.refdelegation.clear&#xA;&#x9;&#x9;unset.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refstate := self.refstate&#xA;&#x9;&#x9;unset.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;unset.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeInstanceToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubComponent"
              upperBound="-1" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ValuedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc"
              eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceCompositeInstance"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::CompositeInstance&#xA;   * All the references expect CompositeInstanceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeInstanceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeInstance : runtime::instance::CompositeInstance&#xA;&#x9;tempCompositeInstance ?= ad.getRealObject(CompositeInstanceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.subComponent, refsubComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.delegation, refdelegation)&#xA;&#x9;tempCompositeInstance.type ?= ad.unsetSingleProperty(reftype, tempCompositeInstance.type)&#xA;&#x9;tempCompositeInstance.state ?= ad.unsetSingleProperty(refstate, tempCompositeInstance.state)&#xA;&#x9;tempCompositeInstance.superComponent ?= ad.unsetSingleProperty(refsuperComponent, tempCompositeInstance.superComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.~attribute, refattribute)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.binding, refbinding)&#xA;&#x9;tempCompositeInstance.controllerDesc ?= ad.unsetSingleProperty(refcontrollerDesc, tempCompositeInstance.controllerDesc)&#xA;&#x9;tempCompositeInstance.contentDesc ?= ad.unsetSingleProperty(refcontentDesc, tempCompositeInstance.contentDesc)&#xA;&#x9;tempCompositeInstance.name ?= ad.unsetSingleProperty(refname, tempCompositeInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceCompositeInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceCompositeInstance.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.CompositeInstanceToSet := self.CompositeInstanceToUnset&#xA;&#x9;&#x9;~set.refsubComponent.clear&#xA;&#x9;&#x9;~set.refsubComponent.addAll(self.refsubComponent)&#xA;&#x9;&#x9;~set.refdelegation.clear&#xA;&#x9;&#x9;~set.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refstate := self.refstate&#xA;&#x9;&#x9;~set.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;~set.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeInstanceToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubComponent"
              upperBound="-1" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/CompositeInstance"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ValuedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc"
              eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceBinding" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::Binding&#xA;   * All the references expect BindingToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := BindingToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempBinding : runtime::instance::Binding&#xA;&#x9;tempBinding ?= ad.getRealObject(BindingToSet, false)&#xA;&#x9;tempBinding.serverInstance ?= ad.setSingleProperty(refserverInstance, tempBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceBinding.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.BindingToUnset := self.BindingToSet&#xA;&#x9;&#x9;unset.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="BindingToSet" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/Binding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceBinding" eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::Binding&#xA;   * All the references expect BindingToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := BindingToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempBinding : runtime::instance::Binding&#xA;&#x9;tempBinding ?= ad.getRealObject(BindingToUnset, false)&#xA;&#x9;tempBinding.serverInstance ?= ad.unsetSingleProperty(refserverInstance, tempBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceBinding.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.BindingToSet := self.BindingToUnset&#xA;&#x9;&#x9;~set.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="BindingToUnset" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/Binding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceTransmissionBinding"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::TransmissionBinding from scratch&#xA;   * This new element is handled by refering to newTransmissionBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newTransmissionBinding.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newTransmissionBinding, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newTransmissionBinding"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceTransmissionBinding"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::TransmissionBinding from an existing one&#xA;   * This cloned element is handled by refering to clonedTransmissionBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TransmissionBindingToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedTransmissionBinding, TransmissionBindingToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TransmissionBindingToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedTransmissionBinding"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceTransmissionBinding"
            eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::TransmissionBinding&#xA;   * All the references expect TransmissionBindingToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TransmissionBindingToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempTransmissionBinding : runtime::instance::TransmissionBinding&#xA;&#x9;tempTransmissionBinding ?= ad.getRealObject(TransmissionBindingToSet, false)&#xA;&#x9;tempTransmissionBinding.client ?= ad.setSingleProperty(refclient, tempTransmissionBinding.client)&#xA;&#x9;tempTransmissionBinding.server ?= ad.setSingleProperty(refserver, tempTransmissionBinding.server)&#xA;&#x9;tempTransmissionBinding.serverInstance ?= ad.setSingleProperty(refserverInstance, tempTransmissionBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceTransmissionBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceTransmissionBinding.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.TransmissionBindingToUnset := self.TransmissionBindingToSet&#xA;&#x9;&#x9;unset.refclient := self.refclient&#xA;&#x9;&#x9;unset.refserver := self.refserver&#xA;&#x9;&#x9;unset.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TransmissionBindingToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refclient" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserver" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceTransmissionBinding"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::TransmissionBinding&#xA;   * All the references expect TransmissionBindingToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TransmissionBindingToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempTransmissionBinding : runtime::instance::TransmissionBinding&#xA;&#x9;tempTransmissionBinding ?= ad.getRealObject(TransmissionBindingToUnset, false)&#xA;&#x9;tempTransmissionBinding.client ?= ad.unsetSingleProperty(refclient, tempTransmissionBinding.client)&#xA;&#x9;tempTransmissionBinding.server ?= ad.unsetSingleProperty(refserver, tempTransmissionBinding.server)&#xA;&#x9;tempTransmissionBinding.serverInstance ?= ad.unsetSingleProperty(refserverInstance, tempTransmissionBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceTransmissionBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceTransmissionBinding.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.TransmissionBindingToSet := self.TransmissionBindingToUnset&#xA;&#x9;&#x9;~set.refclient := self.refclient&#xA;&#x9;&#x9;~set.refserver := self.refserver&#xA;&#x9;&#x9;~set.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TransmissionBindingToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refclient" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserver" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceDelegationBinding"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::DelegationBinding from scratch&#xA;   * This new element is handled by refering to newDelegationBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newDelegationBinding.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newDelegationBinding, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newDelegationBinding"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceDelegationBinding"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::DelegationBinding from an existing one&#xA;   * This cloned element is handled by refering to clonedDelegationBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DelegationBindingToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedDelegationBinding, DelegationBindingToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DelegationBindingToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedDelegationBinding"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceDelegationBinding"
            eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::DelegationBinding&#xA;   * All the references expect DelegationBindingToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DelegationBindingToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempDelegationBinding : runtime::instance::DelegationBinding&#xA;&#x9;tempDelegationBinding ?= ad.getRealObject(DelegationBindingToSet, false)&#xA;&#x9;tempDelegationBinding.source ?= ad.setSingleProperty(refsource, tempDelegationBinding.source)&#xA;&#x9;tempDelegationBinding.exported ?= ad.setSingleProperty(refexported, tempDelegationBinding.exported)&#xA;&#x9;tempDelegationBinding.serverInstance ?= ad.setSingleProperty(refserverInstance, tempDelegationBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceDelegationBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceDelegationBinding.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.DelegationBindingToUnset := self.DelegationBindingToSet&#xA;&#x9;&#x9;unset.refsource := self.refsource&#xA;&#x9;&#x9;unset.refexported := self.refexported&#xA;&#x9;&#x9;unset.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DelegationBindingToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsource" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refexported" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceDelegationBinding"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::DelegationBinding&#xA;   * All the references expect DelegationBindingToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DelegationBindingToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempDelegationBinding : runtime::instance::DelegationBinding&#xA;&#x9;tempDelegationBinding ?= ad.getRealObject(DelegationBindingToUnset, false)&#xA;&#x9;tempDelegationBinding.source ?= ad.unsetSingleProperty(refsource, tempDelegationBinding.source)&#xA;&#x9;tempDelegationBinding.exported ?= ad.unsetSingleProperty(refexported, tempDelegationBinding.exported)&#xA;&#x9;tempDelegationBinding.serverInstance ?= ad.unsetSingleProperty(refserverInstance, tempDelegationBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceDelegationBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceDelegationBinding.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.DelegationBindingToSet := self.DelegationBindingToUnset&#xA;&#x9;&#x9;~set.refsource := self.refsource&#xA;&#x9;&#x9;~set.refexported := self.refexported&#xA;&#x9;&#x9;~set.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DelegationBindingToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsource" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refexported" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/ComponentInstance"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeComponentType" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::ComponentType&#xA;   * All the references expect ComponentTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentType : runtime::type::ComponentType&#xA;&#x9;tempComponentType ?= ad.getRealObject(ComponentTypeToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempComponentType.port, refport)&#xA;&#x9;ad.setMultipleProperty(tempComponentType.~attribute, refattribute)&#xA;&#x9;tempComponentType.name ?= ad.setSingleProperty(refname, tempComponentType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeComponentType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeComponentType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ComponentTypeToUnset := self.ComponentTypeToSet&#xA;&#x9;&#x9;unset.refport.clear&#xA;&#x9;&#x9;unset.refport.addAll(self.refport)&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentTypeToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Attribute"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeComponentType"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::ComponentType&#xA;   * All the references expect ComponentTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentType : runtime::type::ComponentType&#xA;&#x9;tempComponentType ?= ad.getRealObject(ComponentTypeToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentType.port, refport)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentType.~attribute, refattribute)&#xA;&#x9;tempComponentType.name ?= ad.unsetSingleProperty(refname, tempComponentType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeComponentType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeComponentType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ComponentTypeToSet := self.ComponentTypeToUnset&#xA;&#x9;&#x9;~set.refport.clear&#xA;&#x9;&#x9;~set.refport.addAll(self.refport)&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentTypeToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/ComponentType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Attribute"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypePrimitiveType"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::PrimitiveType from scratch&#xA;   * This new element is handled by refering to newPrimitiveType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPrimitiveType.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPrimitiveType, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPrimitiveType"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/PrimitiveType"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypePrimitiveType"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::PrimitiveType from an existing one&#xA;   * This cloned element is handled by refering to clonedPrimitiveType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveTypeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPrimitiveType, PrimitiveTypeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveTypeToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/PrimitiveType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPrimitiveType"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/PrimitiveType"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypePrimitiveType" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::PrimitiveType&#xA;   * All the references expect PrimitiveTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveType : runtime::type::PrimitiveType&#xA;&#x9;tempPrimitiveType ?= ad.getRealObject(PrimitiveTypeToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveType.binding, refbinding)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveType.port, refport)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveType.~attribute, refattribute)&#xA;&#x9;tempPrimitiveType.name ?= ad.setSingleProperty(refname, tempPrimitiveType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypePrimitiveType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypePrimitiveType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PrimitiveTypeToUnset := self.PrimitiveTypeToSet&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refport.clear&#xA;&#x9;&#x9;unset.refport.addAll(self.refport)&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveTypeToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/PrimitiveType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Attribute"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypePrimitiveType"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::PrimitiveType&#xA;   * All the references expect PrimitiveTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveType : runtime::type::PrimitiveType&#xA;&#x9;tempPrimitiveType ?= ad.getRealObject(PrimitiveTypeToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveType.binding, refbinding)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveType.port, refport)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveType.~attribute, refattribute)&#xA;&#x9;tempPrimitiveType.name ?= ad.unsetSingleProperty(refname, tempPrimitiveType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypePrimitiveType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypePrimitiveType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PrimitiveTypeToSet := self.PrimitiveTypeToUnset&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refport.clear&#xA;&#x9;&#x9;~set.refport.addAll(self.refport)&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveTypeToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/PrimitiveType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/TransmissionBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Attribute"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeCompositeType"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::CompositeType from scratch&#xA;   * This new element is handled by refering to newCompositeType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newCompositeType.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newCompositeType, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newCompositeType"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeCompositeType"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::CompositeType from an existing one&#xA;   * This cloned element is handled by refering to clonedCompositeType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeTypeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedCompositeType, CompositeTypeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeTypeToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedCompositeType"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeCompositeType" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::CompositeType&#xA;   * All the references expect CompositeTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeType : runtime::type::CompositeType&#xA;&#x9;tempCompositeType ?= ad.getRealObject(CompositeTypeToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.subTypes, refsubTypes)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.delegation, refdelegation)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.port, refport)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.~attribute, refattribute)&#xA;&#x9;tempCompositeType.name ?= ad.setSingleProperty(refname, tempCompositeType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeCompositeType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeCompositeType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.CompositeTypeToUnset := self.CompositeTypeToSet&#xA;&#x9;&#x9;unset.refsubTypes.clear&#xA;&#x9;&#x9;unset.refsubTypes.addAll(self.refsubTypes)&#xA;&#x9;&#x9;unset.refdelegation.clear&#xA;&#x9;&#x9;unset.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;unset.refport.clear&#xA;&#x9;&#x9;unset.refport.addAll(self.refport)&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeTypeToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubTypes" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Attribute"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeCompositeType"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::CompositeType&#xA;   * All the references expect CompositeTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeType : runtime::type::CompositeType&#xA;&#x9;tempCompositeType ?= ad.getRealObject(CompositeTypeToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.subTypes, refsubTypes)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.delegation, refdelegation)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.port, refport)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.~attribute, refattribute)&#xA;&#x9;tempCompositeType.name ?= ad.unsetSingleProperty(refname, tempCompositeType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeCompositeType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeCompositeType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.CompositeTypeToSet := self.CompositeTypeToUnset&#xA;&#x9;&#x9;~set.refsubTypes.clear&#xA;&#x9;&#x9;~set.refsubTypes.addAll(self.refsubTypes)&#xA;&#x9;&#x9;~set.refdelegation.clear&#xA;&#x9;&#x9;~set.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;~set.refport.clear&#xA;&#x9;&#x9;~set.refport.addAll(self.refport)&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeTypeToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubTypes" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/CompositeType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/instance/DelegationBinding"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Attribute"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeService" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Service&#xA;   * All the references expect ServiceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ServiceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempService : runtime::type::Service&#xA;&#x9;tempService ?= ad.getRealObject(ServiceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempService.~operation, refoperation)&#xA;&#x9;tempService.name ?= ad.setSingleProperty(refname, tempService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeService.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ServiceToUnset := self.ServiceToSet&#xA;&#x9;&#x9;unset.refoperation.clear&#xA;&#x9;&#x9;unset.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ServiceToSet" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Service"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeService" eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Service&#xA;   * All the references expect ServiceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ServiceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempService : runtime::type::Service&#xA;&#x9;tempService ?= ad.getRealObject(ServiceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempService.~operation, refoperation)&#xA;&#x9;tempService.name ?= ad.unsetSingleProperty(refname, tempService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeService.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ServiceToSet := self.ServiceToUnset&#xA;&#x9;&#x9;~set.refoperation.clear&#xA;&#x9;&#x9;~set.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ServiceToUnset" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Service"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeFunctionalService"
            eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::FunctionalService from scratch&#xA;   * This new element is handled by refering to newFunctionalService&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newFunctionalService.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newFunctionalService, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newFunctionalService"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/FunctionalService"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeFunctionalService"
            eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::FunctionalService from an existing one&#xA;   * This cloned element is handled by refering to clonedFunctionalService&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := FunctionalServiceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedFunctionalService, FunctionalServiceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="FunctionalServiceToClone"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/FunctionalService"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedFunctionalService"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/FunctionalService"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeFunctionalService"
            eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::FunctionalService&#xA;   * All the references expect FunctionalServiceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := FunctionalServiceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempFunctionalService : runtime::type::FunctionalService&#xA;&#x9;tempFunctionalService ?= ad.getRealObject(FunctionalServiceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempFunctionalService.~operation, refoperation)&#xA;&#x9;tempFunctionalService.name ?= ad.setSingleProperty(refname, tempFunctionalService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeFunctionalService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeFunctionalService.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.FunctionalServiceToUnset := self.FunctionalServiceToSet&#xA;&#x9;&#x9;unset.refoperation.clear&#xA;&#x9;&#x9;unset.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="FunctionalServiceToSet"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/FunctionalService"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeFunctionalService"
            eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::FunctionalService&#xA;   * All the references expect FunctionalServiceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := FunctionalServiceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempFunctionalService : runtime::type::FunctionalService&#xA;&#x9;tempFunctionalService ?= ad.getRealObject(FunctionalServiceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempFunctionalService.~operation, refoperation)&#xA;&#x9;tempFunctionalService.name ?= ad.unsetSingleProperty(refname, tempFunctionalService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeFunctionalService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeFunctionalService.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.FunctionalServiceToSet := self.FunctionalServiceToUnset&#xA;&#x9;&#x9;~set.refoperation.clear&#xA;&#x9;&#x9;~set.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="FunctionalServiceToUnset"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/FunctionalService"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1"
              eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypePort" eSuperTypes="#//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Port from scratch&#xA;   * This new element is handled by refering to newPort&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPort.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPort, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPort" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypePort" eSuperTypes="#//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Port from an existing one&#xA;   * This cloned element is handled by refering to clonedPort&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PortToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPort, PortToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PortToClone" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPort" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypePort" eSuperTypes="#//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Port&#xA;   * All the references expect PortToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PortToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPort : runtime::type::Port&#xA;&#x9;tempPort ?= ad.getRealObject(PortToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempPort.sub, refsub)&#xA;&#x9;tempPort.isOptional ?= ad.setSingleProperty(refisOptional, tempPort.isOptional)&#xA;&#x9;tempPort.name ?= ad.setSingleProperty(refname, tempPort.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypePort&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypePort.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PortToUnset := self.PortToSet&#xA;&#x9;&#x9;unset.refsub.clear&#xA;&#x9;&#x9;unset.refsub.addAll(self.refsub)&#xA;&#x9;&#x9;unset.refisOptional := self.refisOptional&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PortToSet" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refisOptional" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/Boolean">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservice" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Service"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refrole" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypePort" eSuperTypes="#//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Port&#xA;   * All the references expect PortToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PortToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="#//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPort : runtime::type::Port&#xA;&#x9;tempPort ?= ad.getRealObject(PortToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempPort.sub, refsub)&#xA;&#x9;tempPort.isOptional ?= ad.unsetSingleProperty(refisOptional, tempPort.isOptional)&#xA;&#x9;tempPort.name ?= ad.unsetSingleProperty(refname, tempPort.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypePort&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypePort.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PortToSet := self.PortToUnset&#xA;&#x9;&#x9;~set.refsub.clear&#xA;&#x9;&#x9;~set.refsub.addAll(self.refsub)&#xA;&#x9;&#x9;~set.refisOptional := self.refisOptional&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PortToUnset" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Port"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refisOptional" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/Boolean">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservice" eType="ecore:EClass ../domain/metamodel@runtimePattern.ecore#//art/type/Service"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refrole" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String"/>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="extension" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/org/smartadapters/extension"
        nsPrefix="extension">
      <eClassifiers xsi:type="ecore:EClass" name="AdapterElement">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/String">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOptional" eType="ecore:EDataType ../domain/metamodel@runtimePattern.ecore#//art/Boolean">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DerivableAdapter" eSuperTypes="#//smartadapters/core/Adapter">
        <eStructuralFeatures xsi:type="ecore:EReference" name="alternatives" upperBound="-1"
            eType="#//smartadapters/extension/EntityAlternative" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constraints" upperBound="-1"
            eType="#//smartadapters/extension/Constraint" containment="true" eOpposite="#//smartadapters/extension/Constraint/adapter"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntityAlternative" eSuperTypes="#//smartadapters/extension/AdapterElement">
        <eStructuralFeatures xsi:type="ecore:EReference" name="xor" upperBound="-1"
            eType="#//smartadapters/extension/AdapterElement" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntityConjunction" eSuperTypes="#//smartadapters/extension/AdapterElement">
        <eStructuralFeatures xsi:type="ecore:EReference" name="and" upperBound="-1"
            eType="#//smartadapters/extension/AdapterElement" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Constraint" abstract="true">
        <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eParameters name="d" eType="#//smartadapters/extension/Derivation"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adapter" lowerBound="1"
            eType="#//smartadapters/extension/DerivableAdapter" eOpposite="#//smartadapters/extension/DerivableAdapter/constraints"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="MutualExclusion" eSuperTypes="#//smartadapters/extension/Constraint">
        <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
          <eAnnotations source="kermeta" references="#//smartadapters/extension/Constraint/check">
            <details key="body" value="do&#xA;&#x9;var c : kermeta::standard::Set&lt;org::smartadapters::extension::AdapterElement> init kermeta::standard::Set&lt;org::smartadapters::extension::AdapterElement>.new&#xA;&#x9;c.addAll(d.selectedOptions)&#xA;&#x9;d.elements.each{e | c.add(e.selectedVariant)}&#xA;&#x9;result := (c.intersection(entities).size) &lt;= (1)&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::extension::Constraint"/>
          </eAnnotations>
          <eParameters name="d" eType="#//smartadapters/extension/Derivation"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="entities" lowerBound="2"
            upperBound="-1" eType="#//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Dependency" eSuperTypes="#//smartadapters/extension/Constraint">
        <eOperations name="check" eType="ecore:EDataType ../domain/metamodel@runtime.ecore#//Boolean">
          <eAnnotations source="kermeta" references="#//smartadapters/extension/Constraint/check">
            <details key="body" value="do&#xA;&#x9;var c : kermeta::standard::Collection&lt;org::smartadapters::extension::AdapterElement> init kermeta::standard::Set&lt;org::smartadapters::extension::AdapterElement>.new&#xA;&#x9;c.addAll(d.selectedOptions)&#xA;&#x9;d.elements.each{e | c.add(e.selectedVariant)}&#xA;&#x9;result := (not (c.contains(source))) or (c.containsAll(self.dependencies))&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::extension::Constraint"/>
          </eAnnotations>
          <eParameters name="d" eType="#//smartadapters/extension/Derivation"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
            eType="#//smartadapters/extension/AdapterElement"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="dependencies" lowerBound="1"
            upperBound="-1" eType="#//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Derivation">
        <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
            eType="#//smartadapters/extension/DerivationElement"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selectedOptions" upperBound="-1"
            eType="#//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DerivationElement">
        <eStructuralFeatures xsi:type="ecore:EReference" name="alternative" lowerBound="1"
            eType="#//smartadapters/extension/EntityAlternative"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selectedVariant" lowerBound="1"
            eType="#//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
