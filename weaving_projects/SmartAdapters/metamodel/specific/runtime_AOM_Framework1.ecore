<?xml version="1.0" encoding="ASCII"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="org" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/" nsPrefix="org">
  <eClassifiers xsi:type="ecore:EDataType" name="_KermetaSpecialTypesAlias_" instanceClassName="java.lang.Object"/>
  <eSubpackages name="smartadapters" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/org/smartadapters" nsPrefix="smartadapters">
    <eSubpackages name="core" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/org/smartadapters/core" nsPrefix="core">
      <eClassifiers xsi:type="ecore:EClass" name="Adapter">
        <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
        <eOperations name="initConvert">
          <eAnnotations source="kermeta">
            <details key="body" value="do&#xA;&#x9;converter := org::smartadapters::utils::Converter.new&#xA;&#x9;convert := kermeta::utils::Hashtable&lt;kermeta::language::structure::Class, kermeta::language::structure::Class>.new&#xA;&#x9;convert.put(pattern::runtime::System, runtime::System)&#xA;&#x9;convert.put(pattern::runtime::DataType, runtime::DataType)&#xA;&#x9;convert.put(pattern::runtime::instance::PrimitiveInstance, runtime::instance::PrimitiveInstance)&#xA;&#x9;convert.put(pattern::runtime::instance::CompositeInstance, runtime::instance::CompositeInstance)&#xA;&#x9;convert.put(pattern::runtime::instance::ValuedAttribute, runtime::instance::ValuedAttribute)&#xA;&#x9;convert.put(pattern::runtime::instance::TransmissionBinding, runtime::instance::TransmissionBinding)&#xA;&#x9;convert.put(pattern::runtime::instance::DelegationBinding, runtime::instance::DelegationBinding)&#xA;&#x9;convert.put(pattern::runtime::type::PrimitiveType, runtime::type::PrimitiveType)&#xA;&#x9;convert.put(pattern::runtime::type::CompositeType, runtime::type::CompositeType)&#xA;&#x9;convert.put(pattern::runtime::type::Operation, runtime::type::Operation)&#xA;&#x9;convert.put(pattern::runtime::type::Parameter, runtime::type::Parameter)&#xA;&#x9;convert.put(pattern::runtime::type::FunctionalService, runtime::type::FunctionalService)&#xA;&#x9;convert.put(pattern::runtime::type::ControlService, runtime::type::ControlService)&#xA;&#x9;convert.put(pattern::runtime::type::Port, runtime::type::Port)&#xA;&#x9;convert.put(pattern::runtime::type::Attribute, runtime::type::Attribute)&#xA;&#x9;convert.put(pattern::runtime::type::PrimitivePort, runtime::type::PrimitivePort)&#xA;&#x9;converter.initConverter(convert)&#xA;end"/>
            <details key="documentation" value="/**&#xA;    * Associates concrete meta-classes from MM\' to concrete meta-classes from MM&#xA;    */"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="aspect" lowerBound="1" eType="//smartadapters/core/Aspect" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adapt" upperBound="-1" eType="//smartadapters/core/Adaptation" containment="true" eOpposite="//smartadapters/core/Adaptation/adapter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Aspect">
        <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="template" containment="true">
          <eType xsi:type="ecore:EClass" href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//ModelPattern"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="structure" lowerBound="1" containment="true">
          <eType xsi:type="ecore:EClass" href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PModel"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="persistent" upperBound="-1">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   persistent refers to aspectual PObject that must not be&#xD;&#xA;   cloned between two bindings&#xD;&#xA;   TODO : contraints...&#xD;&#xA;   */"/>
          </eAnnotations>
          <eType xsi:type="ecore:EClass" href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Adaptation" abstract="true" eSuperTypes="//smartadapters/extension/AdapterElement">
        <eOperations name="check">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
            <details key="documentation" value="/**&#xD;&#xA;   Execute the adaptation for a given binding&#xD;&#xA;   Sub-classes must implement this method&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="checking" value="check"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adapter" lowerBound="1" eType="//smartadapters/core/Adapter" eOpposite="//smartadapters/core/Adapter/adapt"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="cloneAdaptation" abstract="true" eSuperTypes="//smartadapters/core/Adaptation">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="//smartadapters/core/uniqueType">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="createAdaptation" abstract="true" eSuperTypes="//smartadapters/core/Adaptation">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="//smartadapters/core/uniqueType">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="setAdaptation" abstract="true" eSuperTypes="//smartadapters/core/Adaptation"/>
      <eClassifiers xsi:type="ecore:EClass" name="unsetAdaptation" abstract="true" eSuperTypes="//smartadapters/core/Adaptation"/>
      <eClassifiers xsi:type="ecore:EClass" name="makeUnique" eSuperTypes="//smartadapters/core/Adaptation">
        <eOperations name="check">
          <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
            <details key="body" value="do&#xA;&#x9;var res : kermeta::standard::Boolean init false&#xA;&#x9;if adapter.aspect.structure.isNotEqual(void) then&#xA;&#x9;&#x9;if adapter.aspect.structure.content.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;res := (element.isNotEqual(void)) and (adapter.aspect.structure.content.contains(element))&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;&#x9;result := res&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
          </eAnnotations>
          <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
            <details key="body" value="do&#xA;&#x9;adapter.aspect.persistent.add(element)&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1">
          <eType xsi:type="ecore:EClass" href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="uniqueType">
        <eLiterals name="unique" literal="unique"/>
        <eLiterals name="non_unique" value="1" literal="non_unique"/>
        <eLiterals name="onDemand" value="2" literal="onDemand"/>
      </eClassifiers>
      <eSubpackages name="adaptations" nsURI="platform:/resource/SmartAdapters/metamodel/specific/runtime_AOM_Framework.ecore#/org/smartadapters/core/adaptations" nsPrefix="adaptations">
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeNamedElement" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::NamedElement&#xA;   * All the references expect NamedElementToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := NamedElementToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempNamedElement : runtime::NamedElement&#xA;&#x9;tempNamedElement ?= ad.getRealObject(NamedElementToSet, false)&#xA;&#x9;tempNamedElement.name ?= ad.setSingleProperty(refname, tempNamedElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeNamedElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeNamedElement.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.NamedElementToUnset := self.NamedElementToSet&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="NamedElementToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/NamedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeNamedElement" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::NamedElement&#xA;   * All the references expect NamedElementToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := NamedElementToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempNamedElement : runtime::NamedElement&#xA;&#x9;tempNamedElement ?= ad.getRealObject(NamedElementToUnset, false)&#xA;&#x9;tempNamedElement.name ?= ad.unsetSingleProperty(refname, tempNamedElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeNamedElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeNamedElement.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.NamedElementToSet := self.NamedElementToUnset&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="NamedElementToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/NamedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeModelElement" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::ModelElement&#xA;   * All the references expect ModelElementToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ModelElementToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempModelElement : runtime::ModelElement&#xA;&#x9;tempModelElement ?= ad.getRealObject(ModelElementToSet, false)&#xA;&#x9;tempModelElement.name ?= ad.setSingleProperty(refname, tempModelElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeModelElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeModelElement.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ModelElementToUnset := self.ModelElementToSet&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ModelElementToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/ModelElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeModelElement" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::ModelElement&#xA;   * All the references expect ModelElementToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ModelElementToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempModelElement : runtime::ModelElement&#xA;&#x9;tempModelElement ?= ad.getRealObject(ModelElementToUnset, false)&#xA;&#x9;tempModelElement.name ?= ad.unsetSingleProperty(refname, tempModelElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeModelElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeModelElement.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ModelElementToSet := self.ModelElementToUnset&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ModelElementToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/ModelElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeSystem" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::System from scratch&#xA;   * This new element is handled by refering to newSystem&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newSystem.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newSystem, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newSystem" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/System"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeSystem" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::System from an existing one&#xA;   * This cloned element is handled by refering to clonedSystem&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := SystemToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedSystem, SystemToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="SystemToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/System"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedSystem" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/System"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeSystem" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::System&#xA;   * All the references expect SystemToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := SystemToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempSystem : runtime::System&#xA;&#x9;tempSystem ?= ad.getRealObject(SystemToSet, false)&#xA;&#x9;tempSystem.root ?= ad.setSingleProperty(refroot, tempSystem.root)&#xA;&#x9;ad.setMultipleProperty(tempSystem.services, refservices)&#xA;&#x9;ad.setMultipleProperty(tempSystem.types, reftypes)&#xA;&#x9;ad.setMultipleProperty(tempSystem.dataTypes, refdataTypes)&#xA;&#x9;tempSystem.name ?= ad.setSingleProperty(refname, tempSystem.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeSystem&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeSystem.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.SystemToUnset := self.SystemToSet&#xA;&#x9;&#x9;unset.refroot := self.refroot&#xA;&#x9;&#x9;unset.refservices.clear&#xA;&#x9;&#x9;unset.refservices.addAll(self.refservices)&#xA;&#x9;&#x9;unset.reftypes.clear&#xA;&#x9;&#x9;unset.reftypes.addAll(self.reftypes)&#xA;&#x9;&#x9;unset.refdataTypes.clear&#xA;&#x9;&#x9;unset.refdataTypes.addAll(self.refdataTypes)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="SystemToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/System"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refroot">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservices" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Service"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftypes" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdataTypes" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeSystem" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::System&#xA;   * All the references expect SystemToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := SystemToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempSystem : runtime::System&#xA;&#x9;tempSystem ?= ad.getRealObject(SystemToUnset, false)&#xA;&#x9;tempSystem.root ?= ad.unsetSingleProperty(refroot, tempSystem.root)&#xA;&#x9;ad.unsetMultipleProperty(tempSystem.services, refservices)&#xA;&#x9;ad.unsetMultipleProperty(tempSystem.types, reftypes)&#xA;&#x9;ad.unsetMultipleProperty(tempSystem.dataTypes, refdataTypes)&#xA;&#x9;tempSystem.name ?= ad.unsetSingleProperty(refname, tempSystem.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeSystem&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeSystem.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.SystemToSet := self.SystemToUnset&#xA;&#x9;&#x9;~set.refroot := self.refroot&#xA;&#x9;&#x9;~set.refservices.clear&#xA;&#x9;&#x9;~set.refservices.addAll(self.refservices)&#xA;&#x9;&#x9;~set.reftypes.clear&#xA;&#x9;&#x9;~set.reftypes.addAll(self.reftypes)&#xA;&#x9;&#x9;~set.refdataTypes.clear&#xA;&#x9;&#x9;~set.refdataTypes.addAll(self.refdataTypes)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="SystemToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/System"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refroot">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservices" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Service"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftypes" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdataTypes" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeDataType" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::DataType from scratch&#xA;   * This new element is handled by refering to newDataType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newDataType.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newDataType, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newDataType" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeDataType" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::DataType from an existing one&#xA;   * This cloned element is handled by refering to clonedDataType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DataTypeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedDataType, DataTypeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DataTypeToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedDataType" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeDataType" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::DataType&#xA;   * All the references expect DataTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DataTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempDataType : runtime::DataType&#xA;&#x9;tempDataType ?= ad.getRealObject(DataTypeToSet, false)&#xA;&#x9;tempDataType.name ?= ad.setSingleProperty(refname, tempDataType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeDataType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeDataType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.DataTypeToUnset := self.DataTypeToSet&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DataTypeToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeDataType" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::DataType&#xA;   * All the references expect DataTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DataTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempDataType : runtime::DataType&#xA;&#x9;tempDataType ?= ad.getRealObject(DataTypeToUnset, false)&#xA;&#x9;tempDataType.name ?= ad.unsetSingleProperty(refname, tempDataType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeDataType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeDataType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.DataTypeToSet := self.DataTypeToUnset&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DataTypeToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeTypedElement" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::TypedElement&#xA;   * All the references expect TypedElementToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TypedElementToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempTypedElement : runtime::TypedElement&#xA;&#x9;tempTypedElement ?= ad.getRealObject(TypedElementToSet, false)&#xA;&#x9;tempTypedElement.type ?= ad.setSingleProperty(reftype, tempTypedElement.type)&#xA;&#x9;tempTypedElement.name ?= ad.setSingleProperty(refname, tempTypedElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeTypedElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeTypedElement.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.TypedElementToUnset := self.TypedElementToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TypedElementToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/TypedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeTypedElement" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::TypedElement&#xA;   * All the references expect TypedElementToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TypedElementToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempTypedElement : runtime::TypedElement&#xA;&#x9;tempTypedElement ?= ad.getRealObject(TypedElementToUnset, false)&#xA;&#x9;tempTypedElement.type ?= ad.unsetSingleProperty(reftype, tempTypedElement.type)&#xA;&#x9;tempTypedElement.name ?= ad.unsetSingleProperty(refname, tempTypedElement.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeTypedElement&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeTypedElement.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.TypedElementToSet := self.TypedElementToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TypedElementToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/TypedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceComponentInstance" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::ComponentInstance&#xA;   * All the references expect ComponentInstanceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentInstanceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentInstance : runtime::instance::ComponentInstance&#xA;&#x9;tempComponentInstance ?= ad.getRealObject(ComponentInstanceToSet, false)&#xA;&#x9;tempComponentInstance.type ?= ad.setSingleProperty(reftype, tempComponentInstance.type)&#xA;&#x9;tempComponentInstance.state ?= ad.setSingleProperty(refstate, tempComponentInstance.state)&#xA;&#x9;tempComponentInstance.superComponent ?= ad.setSingleProperty(refsuperComponent, tempComponentInstance.superComponent)&#xA;&#x9;ad.setMultipleProperty(tempComponentInstance.~attribute, refattribute)&#xA;&#x9;ad.setMultipleProperty(tempComponentInstance.binding, refbinding)&#xA;&#x9;tempComponentInstance.controllerDesc ?= ad.setSingleProperty(refcontrollerDesc, tempComponentInstance.controllerDesc)&#xA;&#x9;tempComponentInstance.contentDesc ?= ad.setSingleProperty(refcontentDesc, tempComponentInstance.contentDesc)&#xA;&#x9;tempComponentInstance.name ?= ad.setSingleProperty(refname, tempComponentInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceComponentInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceComponentInstance.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ComponentInstanceToUnset := self.ComponentInstanceToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refstate := self.refstate&#xA;&#x9;&#x9;unset.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;unset.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentInstanceToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/InstanceState"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceComponentInstance" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::ComponentInstance&#xA;   * All the references expect ComponentInstanceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentInstanceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentInstance : runtime::instance::ComponentInstance&#xA;&#x9;tempComponentInstance ?= ad.getRealObject(ComponentInstanceToUnset, false)&#xA;&#x9;tempComponentInstance.type ?= ad.unsetSingleProperty(reftype, tempComponentInstance.type)&#xA;&#x9;tempComponentInstance.state ?= ad.unsetSingleProperty(refstate, tempComponentInstance.state)&#xA;&#x9;tempComponentInstance.superComponent ?= ad.unsetSingleProperty(refsuperComponent, tempComponentInstance.superComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentInstance.~attribute, refattribute)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentInstance.binding, refbinding)&#xA;&#x9;tempComponentInstance.controllerDesc ?= ad.unsetSingleProperty(refcontrollerDesc, tempComponentInstance.controllerDesc)&#xA;&#x9;tempComponentInstance.contentDesc ?= ad.unsetSingleProperty(refcontentDesc, tempComponentInstance.contentDesc)&#xA;&#x9;tempComponentInstance.name ?= ad.unsetSingleProperty(refname, tempComponentInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceComponentInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceComponentInstance.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ComponentInstanceToSet := self.ComponentInstanceToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refstate := self.refstate&#xA;&#x9;&#x9;~set.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;~set.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentInstanceToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/InstanceState"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstancePrimitiveInstance" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::PrimitiveInstance from scratch&#xA;   * This new element is handled by refering to newPrimitiveInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPrimitiveInstance.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPrimitiveInstance, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPrimitiveInstance" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/PrimitiveInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstancePrimitiveInstance" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::PrimitiveInstance from an existing one&#xA;   * This cloned element is handled by refering to clonedPrimitiveInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveInstanceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPrimitiveInstance, PrimitiveInstanceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveInstanceToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/PrimitiveInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPrimitiveInstance" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/PrimitiveInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstancePrimitiveInstance" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::PrimitiveInstance&#xA;   * All the references expect PrimitiveInstanceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveInstanceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveInstance : runtime::instance::PrimitiveInstance&#xA;&#x9;tempPrimitiveInstance ?= ad.getRealObject(PrimitiveInstanceToSet, false)&#xA;&#x9;tempPrimitiveInstance.type ?= ad.setSingleProperty(reftype, tempPrimitiveInstance.type)&#xA;&#x9;tempPrimitiveInstance.state ?= ad.setSingleProperty(refstate, tempPrimitiveInstance.state)&#xA;&#x9;tempPrimitiveInstance.superComponent ?= ad.setSingleProperty(refsuperComponent, tempPrimitiveInstance.superComponent)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveInstance.~attribute, refattribute)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveInstance.binding, refbinding)&#xA;&#x9;tempPrimitiveInstance.controllerDesc ?= ad.setSingleProperty(refcontrollerDesc, tempPrimitiveInstance.controllerDesc)&#xA;&#x9;tempPrimitiveInstance.contentDesc ?= ad.setSingleProperty(refcontentDesc, tempPrimitiveInstance.contentDesc)&#xA;&#x9;tempPrimitiveInstance.name ?= ad.setSingleProperty(refname, tempPrimitiveInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstancePrimitiveInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstancePrimitiveInstance.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PrimitiveInstanceToUnset := self.PrimitiveInstanceToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refstate := self.refstate&#xA;&#x9;&#x9;unset.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;unset.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveInstanceToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/PrimitiveInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/InstanceState"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstancePrimitiveInstance" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::PrimitiveInstance&#xA;   * All the references expect PrimitiveInstanceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveInstanceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveInstance : runtime::instance::PrimitiveInstance&#xA;&#x9;tempPrimitiveInstance ?= ad.getRealObject(PrimitiveInstanceToUnset, false)&#xA;&#x9;tempPrimitiveInstance.type ?= ad.unsetSingleProperty(reftype, tempPrimitiveInstance.type)&#xA;&#x9;tempPrimitiveInstance.state ?= ad.unsetSingleProperty(refstate, tempPrimitiveInstance.state)&#xA;&#x9;tempPrimitiveInstance.superComponent ?= ad.unsetSingleProperty(refsuperComponent, tempPrimitiveInstance.superComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveInstance.~attribute, refattribute)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveInstance.binding, refbinding)&#xA;&#x9;tempPrimitiveInstance.controllerDesc ?= ad.unsetSingleProperty(refcontrollerDesc, tempPrimitiveInstance.controllerDesc)&#xA;&#x9;tempPrimitiveInstance.contentDesc ?= ad.unsetSingleProperty(refcontentDesc, tempPrimitiveInstance.contentDesc)&#xA;&#x9;tempPrimitiveInstance.name ?= ad.unsetSingleProperty(refname, tempPrimitiveInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstancePrimitiveInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstancePrimitiveInstance.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PrimitiveInstanceToSet := self.PrimitiveInstanceToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refstate := self.refstate&#xA;&#x9;&#x9;~set.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;~set.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveInstanceToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/PrimitiveInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/InstanceState"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceCompositeInstance" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::CompositeInstance from scratch&#xA;   * This new element is handled by refering to newCompositeInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newCompositeInstance.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newCompositeInstance, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newCompositeInstance" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceCompositeInstance" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::CompositeInstance from an existing one&#xA;   * This cloned element is handled by refering to clonedCompositeInstance&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeInstanceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedCompositeInstance, CompositeInstanceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeInstanceToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedCompositeInstance" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceCompositeInstance" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::CompositeInstance&#xA;   * All the references expect CompositeInstanceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeInstanceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeInstance : runtime::instance::CompositeInstance&#xA;&#x9;tempCompositeInstance ?= ad.getRealObject(CompositeInstanceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.subComponent, refsubComponent)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.delegation, refdelegation)&#xA;&#x9;tempCompositeInstance.type ?= ad.setSingleProperty(reftype, tempCompositeInstance.type)&#xA;&#x9;tempCompositeInstance.state ?= ad.setSingleProperty(refstate, tempCompositeInstance.state)&#xA;&#x9;tempCompositeInstance.superComponent ?= ad.setSingleProperty(refsuperComponent, tempCompositeInstance.superComponent)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.~attribute, refattribute)&#xA;&#x9;ad.setMultipleProperty(tempCompositeInstance.binding, refbinding)&#xA;&#x9;tempCompositeInstance.controllerDesc ?= ad.setSingleProperty(refcontrollerDesc, tempCompositeInstance.controllerDesc)&#xA;&#x9;tempCompositeInstance.contentDesc ?= ad.setSingleProperty(refcontentDesc, tempCompositeInstance.contentDesc)&#xA;&#x9;tempCompositeInstance.name ?= ad.setSingleProperty(refname, tempCompositeInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceCompositeInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceCompositeInstance.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.CompositeInstanceToUnset := self.CompositeInstanceToSet&#xA;&#x9;&#x9;unset.refsubComponent.clear&#xA;&#x9;&#x9;unset.refsubComponent.addAll(self.refsubComponent)&#xA;&#x9;&#x9;unset.refdelegation.clear&#xA;&#x9;&#x9;unset.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refstate := self.refstate&#xA;&#x9;&#x9;unset.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;unset.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeInstanceToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubComponent" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/InstanceState"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceCompositeInstance" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::CompositeInstance&#xA;   * All the references expect CompositeInstanceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeInstanceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeInstance : runtime::instance::CompositeInstance&#xA;&#x9;tempCompositeInstance ?= ad.getRealObject(CompositeInstanceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.subComponent, refsubComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.delegation, refdelegation)&#xA;&#x9;tempCompositeInstance.type ?= ad.unsetSingleProperty(reftype, tempCompositeInstance.type)&#xA;&#x9;tempCompositeInstance.state ?= ad.unsetSingleProperty(refstate, tempCompositeInstance.state)&#xA;&#x9;tempCompositeInstance.superComponent ?= ad.unsetSingleProperty(refsuperComponent, tempCompositeInstance.superComponent)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.~attribute, refattribute)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeInstance.binding, refbinding)&#xA;&#x9;tempCompositeInstance.controllerDesc ?= ad.unsetSingleProperty(refcontrollerDesc, tempCompositeInstance.controllerDesc)&#xA;&#x9;tempCompositeInstance.contentDesc ?= ad.unsetSingleProperty(refcontentDesc, tempCompositeInstance.contentDesc)&#xA;&#x9;tempCompositeInstance.name ?= ad.unsetSingleProperty(refname, tempCompositeInstance.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceCompositeInstance&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceCompositeInstance.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.CompositeInstanceToSet := self.CompositeInstanceToUnset&#xA;&#x9;&#x9;~set.refsubComponent.clear&#xA;&#x9;&#x9;~set.refsubComponent.addAll(self.refsubComponent)&#xA;&#x9;&#x9;~set.refdelegation.clear&#xA;&#x9;&#x9;~set.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refstate := self.refstate&#xA;&#x9;&#x9;~set.refsuperComponent := self.refsuperComponent&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refcontrollerDesc := self.refcontrollerDesc&#xA;&#x9;&#x9;~set.refcontentDesc := self.refcontentDesc&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeInstanceToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubComponent" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refstate">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/InstanceState"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsuperComponent">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/CompositeInstance"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontrollerDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refcontentDesc">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceValuedAttribute" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::ValuedAttribute from scratch&#xA;   * This new element is handled by refering to newValuedAttribute&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newValuedAttribute.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newValuedAttribute, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newValuedAttribute" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceValuedAttribute" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::ValuedAttribute from an existing one&#xA;   * This cloned element is handled by refering to clonedValuedAttribute&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ValuedAttributeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedValuedAttribute, ValuedAttributeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ValuedAttributeToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedValuedAttribute" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceValuedAttribute" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::ValuedAttribute&#xA;   * All the references expect ValuedAttributeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ValuedAttributeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempValuedAttribute : runtime::instance::ValuedAttribute&#xA;&#x9;tempValuedAttribute ?= ad.getRealObject(ValuedAttributeToSet, false)&#xA;&#x9;tempValuedAttribute.~attribute ?= ad.setSingleProperty(refattribute, tempValuedAttribute.~attribute)&#xA;&#x9;tempValuedAttribute.~value ?= ad.setSingleProperty(refvalue, tempValuedAttribute.~value)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceValuedAttribute&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceValuedAttribute.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ValuedAttributeToUnset := self.ValuedAttributeToSet&#xA;&#x9;&#x9;unset.refattribute := self.refattribute&#xA;&#x9;&#x9;unset.refvalue := self.refvalue&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ValuedAttributeToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refvalue">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceValuedAttribute" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::ValuedAttribute&#xA;   * All the references expect ValuedAttributeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ValuedAttributeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempValuedAttribute : runtime::instance::ValuedAttribute&#xA;&#x9;tempValuedAttribute ?= ad.getRealObject(ValuedAttributeToUnset, false)&#xA;&#x9;tempValuedAttribute.~attribute ?= ad.unsetSingleProperty(refattribute, tempValuedAttribute.~attribute)&#xA;&#x9;tempValuedAttribute.~value ?= ad.unsetSingleProperty(refvalue, tempValuedAttribute.~value)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceValuedAttribute&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceValuedAttribute.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ValuedAttributeToSet := self.ValuedAttributeToUnset&#xA;&#x9;&#x9;~set.refattribute := self.refattribute&#xA;&#x9;&#x9;~set.refvalue := self.refvalue&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ValuedAttributeToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ValuedAttribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refvalue">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceBinding" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::Binding&#xA;   * All the references expect BindingToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := BindingToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempBinding : runtime::instance::Binding&#xA;&#x9;tempBinding ?= ad.getRealObject(BindingToSet, false)&#xA;&#x9;tempBinding.serverInstance ?= ad.setSingleProperty(refserverInstance, tempBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceBinding.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.BindingToUnset := self.BindingToSet&#xA;&#x9;&#x9;unset.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="BindingToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/Binding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceBinding" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::Binding&#xA;   * All the references expect BindingToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := BindingToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempBinding : runtime::instance::Binding&#xA;&#x9;tempBinding ?= ad.getRealObject(BindingToUnset, false)&#xA;&#x9;tempBinding.serverInstance ?= ad.unsetSingleProperty(refserverInstance, tempBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceBinding.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.BindingToSet := self.BindingToUnset&#xA;&#x9;&#x9;~set.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="BindingToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/Binding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceTransmissionBinding" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::TransmissionBinding from scratch&#xA;   * This new element is handled by refering to newTransmissionBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newTransmissionBinding.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newTransmissionBinding, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newTransmissionBinding" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceTransmissionBinding" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::TransmissionBinding from an existing one&#xA;   * This cloned element is handled by refering to clonedTransmissionBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TransmissionBindingToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedTransmissionBinding, TransmissionBindingToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TransmissionBindingToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedTransmissionBinding" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceTransmissionBinding" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::TransmissionBinding&#xA;   * All the references expect TransmissionBindingToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TransmissionBindingToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempTransmissionBinding : runtime::instance::TransmissionBinding&#xA;&#x9;tempTransmissionBinding ?= ad.getRealObject(TransmissionBindingToSet, false)&#xA;&#x9;tempTransmissionBinding.client ?= ad.setSingleProperty(refclient, tempTransmissionBinding.client)&#xA;&#x9;tempTransmissionBinding.server ?= ad.setSingleProperty(refserver, tempTransmissionBinding.server)&#xA;&#x9;tempTransmissionBinding.serverInstance ?= ad.setSingleProperty(refserverInstance, tempTransmissionBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceTransmissionBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceTransmissionBinding.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.TransmissionBindingToUnset := self.TransmissionBindingToSet&#xA;&#x9;&#x9;unset.refclient := self.refclient&#xA;&#x9;&#x9;unset.refserver := self.refserver&#xA;&#x9;&#x9;unset.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TransmissionBindingToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refclient">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserver">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceTransmissionBinding" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::TransmissionBinding&#xA;   * All the references expect TransmissionBindingToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := TransmissionBindingToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempTransmissionBinding : runtime::instance::TransmissionBinding&#xA;&#x9;tempTransmissionBinding ?= ad.getRealObject(TransmissionBindingToUnset, false)&#xA;&#x9;tempTransmissionBinding.client ?= ad.unsetSingleProperty(refclient, tempTransmissionBinding.client)&#xA;&#x9;tempTransmissionBinding.server ?= ad.unsetSingleProperty(refserver, tempTransmissionBinding.server)&#xA;&#x9;tempTransmissionBinding.serverInstance ?= ad.unsetSingleProperty(refserverInstance, tempTransmissionBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceTransmissionBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceTransmissionBinding.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.TransmissionBindingToSet := self.TransmissionBindingToUnset&#xA;&#x9;&#x9;~set.refclient := self.refclient&#xA;&#x9;&#x9;~set.refserver := self.refserver&#xA;&#x9;&#x9;~set.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="TransmissionBindingToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refclient">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserver">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimeinstanceDelegationBinding" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::DelegationBinding from scratch&#xA;   * This new element is handled by refering to newDelegationBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newDelegationBinding.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newDelegationBinding, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newDelegationBinding" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimeinstanceDelegationBinding" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::instance::DelegationBinding from an existing one&#xA;   * This cloned element is handled by refering to clonedDelegationBinding&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DelegationBindingToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedDelegationBinding, DelegationBindingToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DelegationBindingToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedDelegationBinding" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimeinstanceDelegationBinding" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::instance::DelegationBinding&#xA;   * All the references expect DelegationBindingToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DelegationBindingToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempDelegationBinding : runtime::instance::DelegationBinding&#xA;&#x9;tempDelegationBinding ?= ad.getRealObject(DelegationBindingToSet, false)&#xA;&#x9;tempDelegationBinding.source ?= ad.setSingleProperty(refsource, tempDelegationBinding.source)&#xA;&#x9;tempDelegationBinding.exported ?= ad.setSingleProperty(refexported, tempDelegationBinding.exported)&#xA;&#x9;tempDelegationBinding.serverInstance ?= ad.setSingleProperty(refserverInstance, tempDelegationBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimeinstanceDelegationBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimeinstanceDelegationBinding.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.DelegationBindingToUnset := self.DelegationBindingToSet&#xA;&#x9;&#x9;unset.refsource := self.refsource&#xA;&#x9;&#x9;unset.refexported := self.refexported&#xA;&#x9;&#x9;unset.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DelegationBindingToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsource">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refexported">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimeinstanceDelegationBinding" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::instance::DelegationBinding&#xA;   * All the references expect DelegationBindingToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := DelegationBindingToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempDelegationBinding : runtime::instance::DelegationBinding&#xA;&#x9;tempDelegationBinding ?= ad.getRealObject(DelegationBindingToUnset, false)&#xA;&#x9;tempDelegationBinding.source ?= ad.unsetSingleProperty(refsource, tempDelegationBinding.source)&#xA;&#x9;tempDelegationBinding.exported ?= ad.unsetSingleProperty(refexported, tempDelegationBinding.exported)&#xA;&#x9;tempDelegationBinding.serverInstance ?= ad.unsetSingleProperty(refserverInstance, tempDelegationBinding.serverInstance)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimeinstanceDelegationBinding&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimeinstanceDelegationBinding.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.DelegationBindingToSet := self.DelegationBindingToUnset&#xA;&#x9;&#x9;~set.refsource := self.refsource&#xA;&#x9;&#x9;~set.refexported := self.refexported&#xA;&#x9;&#x9;~set.refserverInstance := self.refserverInstance&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="DelegationBindingToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsource">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refexported">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refserverInstance">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/ComponentInstance"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeComponentType" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::ComponentType&#xA;   * All the references expect ComponentTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentType : runtime::type::ComponentType&#xA;&#x9;tempComponentType ?= ad.getRealObject(ComponentTypeToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempComponentType.port, refport)&#xA;&#x9;ad.setMultipleProperty(tempComponentType.~attribute, refattribute)&#xA;&#x9;tempComponentType.name ?= ad.setSingleProperty(refname, tempComponentType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeComponentType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeComponentType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ComponentTypeToUnset := self.ComponentTypeToSet&#xA;&#x9;&#x9;unset.refport.clear&#xA;&#x9;&#x9;unset.refport.addAll(self.refport)&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentTypeToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeComponentType" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::ComponentType&#xA;   * All the references expect ComponentTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ComponentTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempComponentType : runtime::type::ComponentType&#xA;&#x9;tempComponentType ?= ad.getRealObject(ComponentTypeToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentType.port, refport)&#xA;&#x9;ad.unsetMultipleProperty(tempComponentType.~attribute, refattribute)&#xA;&#x9;tempComponentType.name ?= ad.unsetSingleProperty(refname, tempComponentType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeComponentType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeComponentType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ComponentTypeToSet := self.ComponentTypeToUnset&#xA;&#x9;&#x9;~set.refport.clear&#xA;&#x9;&#x9;~set.refport.addAll(self.refport)&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentTypeToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ComponentType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypePrimitiveType" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::PrimitiveType from scratch&#xA;   * This new element is handled by refering to newPrimitiveType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPrimitiveType.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPrimitiveType, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPrimitiveType" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitiveType"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypePrimitiveType" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::PrimitiveType from an existing one&#xA;   * This cloned element is handled by refering to clonedPrimitiveType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveTypeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPrimitiveType, PrimitiveTypeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveTypeToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitiveType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPrimitiveType" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitiveType"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypePrimitiveType" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::PrimitiveType&#xA;   * All the references expect PrimitiveTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveType : runtime::type::PrimitiveType&#xA;&#x9;tempPrimitiveType ?= ad.getRealObject(PrimitiveTypeToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveType.binding, refbinding)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveType.port, refport)&#xA;&#x9;ad.setMultipleProperty(tempPrimitiveType.~attribute, refattribute)&#xA;&#x9;tempPrimitiveType.name ?= ad.setSingleProperty(refname, tempPrimitiveType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypePrimitiveType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypePrimitiveType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PrimitiveTypeToUnset := self.PrimitiveTypeToSet&#xA;&#x9;&#x9;unset.refbinding.clear&#xA;&#x9;&#x9;unset.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;unset.refport.clear&#xA;&#x9;&#x9;unset.refport.addAll(self.refport)&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveTypeToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitiveType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypePrimitiveType" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::PrimitiveType&#xA;   * All the references expect PrimitiveTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitiveTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitiveType : runtime::type::PrimitiveType&#xA;&#x9;tempPrimitiveType ?= ad.getRealObject(PrimitiveTypeToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveType.binding, refbinding)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveType.port, refport)&#xA;&#x9;ad.unsetMultipleProperty(tempPrimitiveType.~attribute, refattribute)&#xA;&#x9;tempPrimitiveType.name ?= ad.unsetSingleProperty(refname, tempPrimitiveType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypePrimitiveType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypePrimitiveType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PrimitiveTypeToSet := self.PrimitiveTypeToUnset&#xA;&#x9;&#x9;~set.refbinding.clear&#xA;&#x9;&#x9;~set.refbinding.addAll(self.refbinding)&#xA;&#x9;&#x9;~set.refport.clear&#xA;&#x9;&#x9;~set.refport.addAll(self.refport)&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitiveTypeToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitiveType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refbinding" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/TransmissionBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeCompositeType" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::CompositeType from scratch&#xA;   * This new element is handled by refering to newCompositeType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newCompositeType.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newCompositeType, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newCompositeType" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeCompositeType" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::CompositeType from an existing one&#xA;   * This cloned element is handled by refering to clonedCompositeType&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeTypeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedCompositeType, CompositeTypeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeTypeToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedCompositeType" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeCompositeType" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::CompositeType&#xA;   * All the references expect CompositeTypeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeTypeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeType : runtime::type::CompositeType&#xA;&#x9;tempCompositeType ?= ad.getRealObject(CompositeTypeToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.subTypes, refsubTypes)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.delegation, refdelegation)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.port, refport)&#xA;&#x9;ad.setMultipleProperty(tempCompositeType.~attribute, refattribute)&#xA;&#x9;tempCompositeType.name ?= ad.setSingleProperty(refname, tempCompositeType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeCompositeType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeCompositeType.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.CompositeTypeToUnset := self.CompositeTypeToSet&#xA;&#x9;&#x9;unset.refsubTypes.clear&#xA;&#x9;&#x9;unset.refsubTypes.addAll(self.refsubTypes)&#xA;&#x9;&#x9;unset.refdelegation.clear&#xA;&#x9;&#x9;unset.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;unset.refport.clear&#xA;&#x9;&#x9;unset.refport.addAll(self.refport)&#xA;&#x9;&#x9;unset.refattribute.clear&#xA;&#x9;&#x9;unset.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeTypeToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubTypes" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeCompositeType" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::CompositeType&#xA;   * All the references expect CompositeTypeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := CompositeTypeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempCompositeType : runtime::type::CompositeType&#xA;&#x9;tempCompositeType ?= ad.getRealObject(CompositeTypeToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.subTypes, refsubTypes)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.delegation, refdelegation)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.port, refport)&#xA;&#x9;ad.unsetMultipleProperty(tempCompositeType.~attribute, refattribute)&#xA;&#x9;tempCompositeType.name ?= ad.unsetSingleProperty(refname, tempCompositeType.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeCompositeType&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeCompositeType.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.CompositeTypeToSet := self.CompositeTypeToUnset&#xA;&#x9;&#x9;~set.refsubTypes.clear&#xA;&#x9;&#x9;~set.refsubTypes.addAll(self.refsubTypes)&#xA;&#x9;&#x9;~set.refdelegation.clear&#xA;&#x9;&#x9;~set.refdelegation.addAll(self.refdelegation)&#xA;&#x9;&#x9;~set.refport.clear&#xA;&#x9;&#x9;~set.refport.addAll(self.refport)&#xA;&#x9;&#x9;~set.refattribute.clear&#xA;&#x9;&#x9;~set.refattribute.addAll(self.refattribute)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="CompositeTypeToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsubTypes" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/CompositeType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refdelegation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/instance/DelegationBinding"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refport" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refattribute" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeService" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Service&#xA;   * All the references expect ServiceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ServiceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempService : runtime::type::Service&#xA;&#x9;tempService ?= ad.getRealObject(ServiceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempService.~operation, refoperation)&#xA;&#x9;tempService.name ?= ad.setSingleProperty(refname, tempService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeService.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ServiceToUnset := self.ServiceToSet&#xA;&#x9;&#x9;unset.refoperation.clear&#xA;&#x9;&#x9;unset.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ServiceToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Service"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeService" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Service&#xA;   * All the references expect ServiceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ServiceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempService : runtime::type::Service&#xA;&#x9;tempService ?= ad.getRealObject(ServiceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempService.~operation, refoperation)&#xA;&#x9;tempService.name ?= ad.unsetSingleProperty(refname, tempService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeService.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ServiceToSet := self.ServiceToUnset&#xA;&#x9;&#x9;~set.refoperation.clear&#xA;&#x9;&#x9;~set.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ServiceToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Service"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeOperation" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Operation from scratch&#xA;   * This new element is handled by refering to newOperation&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newOperation.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newOperation, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newOperation" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeOperation" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Operation from an existing one&#xA;   * This cloned element is handled by refering to clonedOperation&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := OperationToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedOperation, OperationToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="OperationToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedOperation" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeOperation" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Operation&#xA;   * All the references expect OperationToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := OperationToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempOperation : runtime::type::Operation&#xA;&#x9;tempOperation ?= ad.getRealObject(OperationToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempOperation.input, refinput)&#xA;&#x9;ad.setMultipleProperty(tempOperation.output, refoutput)&#xA;&#x9;tempOperation.name ?= ad.setSingleProperty(refname, tempOperation.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeOperation&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeOperation.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.OperationToUnset := self.OperationToSet&#xA;&#x9;&#x9;unset.refinput.clear&#xA;&#x9;&#x9;unset.refinput.addAll(self.refinput)&#xA;&#x9;&#x9;unset.refoutput.clear&#xA;&#x9;&#x9;unset.refoutput.addAll(self.refoutput)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="OperationToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refinput" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoutput" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeOperation" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Operation&#xA;   * All the references expect OperationToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := OperationToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempOperation : runtime::type::Operation&#xA;&#x9;tempOperation ?= ad.getRealObject(OperationToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempOperation.input, refinput)&#xA;&#x9;ad.unsetMultipleProperty(tempOperation.output, refoutput)&#xA;&#x9;tempOperation.name ?= ad.unsetSingleProperty(refname, tempOperation.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeOperation&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeOperation.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.OperationToSet := self.OperationToUnset&#xA;&#x9;&#x9;~set.refinput.clear&#xA;&#x9;&#x9;~set.refinput.addAll(self.refinput)&#xA;&#x9;&#x9;~set.refoutput.clear&#xA;&#x9;&#x9;~set.refoutput.addAll(self.refoutput)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="OperationToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refinput" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoutput" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeParameter" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Parameter from scratch&#xA;   * This new element is handled by refering to newParameter&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newParameter.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newParameter, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newParameter" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeParameter" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Parameter from an existing one&#xA;   * This cloned element is handled by refering to clonedParameter&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ParameterToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedParameter, ParameterToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ParameterToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedParameter" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeParameter" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Parameter&#xA;   * All the references expect ParameterToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ParameterToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempParameter : runtime::type::Parameter&#xA;&#x9;tempParameter ?= ad.getRealObject(ParameterToSet, false)&#xA;&#x9;tempParameter.type ?= ad.setSingleProperty(reftype, tempParameter.type)&#xA;&#x9;tempParameter.name ?= ad.setSingleProperty(refname, tempParameter.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeParameter&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeParameter.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ParameterToUnset := self.ParameterToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ParameterToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeParameter" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Parameter&#xA;   * All the references expect ParameterToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ParameterToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempParameter : runtime::type::Parameter&#xA;&#x9;tempParameter ?= ad.getRealObject(ParameterToUnset, false)&#xA;&#x9;tempParameter.type ?= ad.unsetSingleProperty(reftype, tempParameter.type)&#xA;&#x9;tempParameter.name ?= ad.unsetSingleProperty(refname, tempParameter.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeParameter&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeParameter.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ParameterToSet := self.ParameterToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ParameterToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Parameter"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeFunctionalService" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::FunctionalService from scratch&#xA;   * This new element is handled by refering to newFunctionalService&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newFunctionalService.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newFunctionalService, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newFunctionalService" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/FunctionalService"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeFunctionalService" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::FunctionalService from an existing one&#xA;   * This cloned element is handled by refering to clonedFunctionalService&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := FunctionalServiceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedFunctionalService, FunctionalServiceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="FunctionalServiceToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/FunctionalService"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedFunctionalService" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/FunctionalService"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeFunctionalService" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::FunctionalService&#xA;   * All the references expect FunctionalServiceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := FunctionalServiceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempFunctionalService : runtime::type::FunctionalService&#xA;&#x9;tempFunctionalService ?= ad.getRealObject(FunctionalServiceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempFunctionalService.~operation, refoperation)&#xA;&#x9;tempFunctionalService.name ?= ad.setSingleProperty(refname, tempFunctionalService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeFunctionalService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeFunctionalService.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.FunctionalServiceToUnset := self.FunctionalServiceToSet&#xA;&#x9;&#x9;unset.refoperation.clear&#xA;&#x9;&#x9;unset.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="FunctionalServiceToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/FunctionalService"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeFunctionalService" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::FunctionalService&#xA;   * All the references expect FunctionalServiceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := FunctionalServiceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempFunctionalService : runtime::type::FunctionalService&#xA;&#x9;tempFunctionalService ?= ad.getRealObject(FunctionalServiceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempFunctionalService.~operation, refoperation)&#xA;&#x9;tempFunctionalService.name ?= ad.unsetSingleProperty(refname, tempFunctionalService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeFunctionalService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeFunctionalService.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.FunctionalServiceToSet := self.FunctionalServiceToUnset&#xA;&#x9;&#x9;~set.refoperation.clear&#xA;&#x9;&#x9;~set.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="FunctionalServiceToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/FunctionalService"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeControlService" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::ControlService from scratch&#xA;   * This new element is handled by refering to newControlService&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newControlService.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newControlService, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newControlService" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ControlService"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeControlService" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::ControlService from an existing one&#xA;   * This cloned element is handled by refering to clonedControlService&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ControlServiceToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedControlService, ControlServiceToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ControlServiceToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ControlService"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedControlService" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ControlService"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeControlService" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::ControlService&#xA;   * All the references expect ControlServiceToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ControlServiceToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempControlService : runtime::type::ControlService&#xA;&#x9;tempControlService ?= ad.getRealObject(ControlServiceToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempControlService.~operation, refoperation)&#xA;&#x9;tempControlService.name ?= ad.setSingleProperty(refname, tempControlService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeControlService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeControlService.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.ControlServiceToUnset := self.ControlServiceToSet&#xA;&#x9;&#x9;unset.refoperation.clear&#xA;&#x9;&#x9;unset.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ControlServiceToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ControlService"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeControlService" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::ControlService&#xA;   * All the references expect ControlServiceToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := ControlServiceToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempControlService : runtime::type::ControlService&#xA;&#x9;tempControlService ?= ad.getRealObject(ControlServiceToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempControlService.~operation, refoperation)&#xA;&#x9;tempControlService.name ?= ad.unsetSingleProperty(refname, tempControlService.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeControlService&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeControlService.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.ControlServiceToSet := self.ControlServiceToUnset&#xA;&#x9;&#x9;~set.refoperation.clear&#xA;&#x9;&#x9;~set.refoperation.addAll(self.refoperation)&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ControlServiceToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/ControlService"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refoperation" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypePort" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Port from scratch&#xA;   * This new element is handled by refering to newPort&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPort.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPort, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPort" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypePort" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Port from an existing one&#xA;   * This cloned element is handled by refering to clonedPort&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PortToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPort, PortToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PortToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPort" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypePort" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Port&#xA;   * All the references expect PortToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PortToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPort : runtime::type::Port&#xA;&#x9;tempPort ?= ad.getRealObject(PortToSet, false)&#xA;&#x9;ad.setMultipleProperty(tempPort.sub, refsub)&#xA;&#x9;tempPort.isOptional ?= ad.setSingleProperty(refisOptional, tempPort.isOptional)&#xA;&#x9;tempPort.name ?= ad.setSingleProperty(refname, tempPort.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypePort&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypePort.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PortToUnset := self.PortToSet&#xA;&#x9;&#x9;unset.refsub.clear&#xA;&#x9;&#x9;unset.refsub.addAll(self.refsub)&#xA;&#x9;&#x9;unset.refisOptional := self.refisOptional&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PortToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsub" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refisOptional">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/Boolean"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypePort" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Port&#xA;   * All the references expect PortToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PortToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPort : runtime::type::Port&#xA;&#x9;tempPort ?= ad.getRealObject(PortToUnset, false)&#xA;&#x9;ad.unsetMultipleProperty(tempPort.sub, refsub)&#xA;&#x9;tempPort.isOptional ?= ad.unsetSingleProperty(refisOptional, tempPort.isOptional)&#xA;&#x9;tempPort.name ?= ad.unsetSingleProperty(refname, tempPort.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypePort&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypePort.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PortToSet := self.PortToUnset&#xA;&#x9;&#x9;~set.refsub.clear&#xA;&#x9;&#x9;~set.refsub.addAll(self.refsub)&#xA;&#x9;&#x9;~set.refisOptional := self.refisOptional&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PortToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Port"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refsub" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refisOptional">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/Boolean"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypeAttribute" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Attribute from scratch&#xA;   * This new element is handled by refering to newAttribute&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newAttribute.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newAttribute, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newAttribute" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypeAttribute" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::Attribute from an existing one&#xA;   * This cloned element is handled by refering to clonedAttribute&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := AttributeToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedAttribute, AttributeToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="AttributeToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedAttribute" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypeAttribute" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::Attribute&#xA;   * All the references expect AttributeToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := AttributeToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempAttribute : runtime::type::Attribute&#xA;&#x9;tempAttribute ?= ad.getRealObject(AttributeToSet, false)&#xA;&#x9;tempAttribute.type ?= ad.setSingleProperty(reftype, tempAttribute.type)&#xA;&#x9;tempAttribute.name ?= ad.setSingleProperty(refname, tempAttribute.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypeAttribute&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypeAttribute.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.AttributeToUnset := self.AttributeToSet&#xA;&#x9;&#x9;unset.reftype := self.reftype&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="AttributeToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypeAttribute" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::Attribute&#xA;   * All the references expect AttributeToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := AttributeToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempAttribute : runtime::type::Attribute&#xA;&#x9;tempAttribute ?= ad.getRealObject(AttributeToUnset, false)&#xA;&#x9;tempAttribute.type ?= ad.unsetSingleProperty(reftype, tempAttribute.type)&#xA;&#x9;tempAttribute.name ?= ad.unsetSingleProperty(refname, tempAttribute.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypeAttribute&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypeAttribute.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.AttributeToSet := self.AttributeToUnset&#xA;&#x9;&#x9;~set.reftype := self.reftype&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="AttributeToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Attribute"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="reftype">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/DataType"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CreateruntimetypePrimitivePort" eSuperTypes="//smartadapters/core/createAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::PrimitivePort from scratch&#xA;   * This new element is handled by refering to newPrimitivePort&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := newPrimitivePort.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(newPrimitivePort, void, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newPrimitivePort" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CloneruntimetypePrimitivePort" eSuperTypes="//smartadapters/core/cloneAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Creates a new runtime::type::PrimitivePort from an existing one&#xA;   * This cloned element is handled by refering to clonedPrimitivePort&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitivePortToClone.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;adapter.cloneAgain(clonedPrimitivePort, PrimitivePortToClone, isUnique)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitivePortToClone">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="clonedPrimitivePort" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SetruntimetypePrimitivePort" eSuperTypes="//smartadapters/core/setAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Sets any property of runtime::type::PrimitivePort&#xA;   * All the references expect PrimitivePortToSet may be void&#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitivePortToSet.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitivePort : runtime::type::PrimitivePort&#xA;&#x9;tempPrimitivePort ?= ad.getRealObject(PrimitivePortToSet, false)&#xA;&#x9;tempPrimitivePort.service ?= ad.setSingleProperty(refservice, tempPrimitivePort.service)&#xA;&#x9;tempPrimitivePort.role ?= ad.setSingleProperty(refrole, tempPrimitivePort.role)&#xA;&#x9;tempPrimitivePort.name ?= ad.setSingleProperty(refname, tempPrimitivePort.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var unset : org::smartadapters::core::adaptations::UnsetruntimetypePrimitivePort&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;unset := org::smartadapters::core::adaptations::UnsetruntimetypePrimitivePort.new&#xA;&#x9;&#x9;&#x9;unset.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := unset&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;unset ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;unset.PrimitivePortToUnset := self.PrimitivePortToSet&#xA;&#x9;&#x9;unset.refservice := self.refservice&#xA;&#x9;&#x9;unset.refrole := self.refrole&#xA;&#x9;&#x9;unset.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitivePortToSet">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservice">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Service"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refrole">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PortRole"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnsetruntimetypePrimitivePort" eSuperTypes="//smartadapters/core/unsetAdaptation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Unsets any property of runtime::type::PrimitivePort&#xA;   * All the references expect PrimitivePortToUnset may be void &#xA;   */"/>
          </eAnnotations>
          <eOperations name="check">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/check">
              <details key="body" value="do&#xA;&#x9;result := PrimitivePortToUnset.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eOperations>
          <eOperations name="execute">
            <eAnnotations source="kermeta" references="//smartadapters/core/Adaptation/execute">
              <details key="body" value="do&#xA;&#x9;var ad : org::smartadapters::core::Adapter init getAdapter&#xA;&#x9;var tempPrimitivePort : runtime::type::PrimitivePort&#xA;&#x9;tempPrimitivePort ?= ad.getRealObject(PrimitivePortToUnset, false)&#xA;&#x9;tempPrimitivePort.service ?= ad.unsetSingleProperty(refservice, tempPrimitivePort.service)&#xA;&#x9;tempPrimitivePort.role ?= ad.unsetSingleProperty(refrole, tempPrimitivePort.role)&#xA;&#x9;tempPrimitivePort.name ?= ad.unsetSingleProperty(refname, tempPrimitivePort.name)&#xA;&#x9;if reverse then&#xA;&#x9;&#x9;var ~set : org::smartadapters::core::adaptations::SetruntimetypePrimitivePort&#xA;&#x9;&#x9;if self.reverse.equals(void) then&#xA;&#x9;&#x9;&#x9;~set := org::smartadapters::core::adaptations::SetruntimetypePrimitivePort.new&#xA;&#x9;&#x9;&#x9;~set.reverse := self&#xA;&#x9;&#x9;&#x9;self.reverse := ~set&#xA;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;~set ?= self.reverse&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;~set.PrimitivePortToSet := self.PrimitivePortToUnset&#xA;&#x9;&#x9;~set.refservice := self.refservice&#xA;&#x9;&#x9;~set.refrole := self.refrole&#xA;&#x9;&#x9;~set.refname := self.refname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
            </eAnnotations>
            <eParameters name="reverse">
              <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="PrimitivePortToUnset">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PrimitivePort"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="refservice">
            <eType xsi:type="ecore:EClass" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/Service"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refrole">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EEnum" href="../domain/metamodel@runtimePattern.ecore#//runtime/type/PortRole"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="refname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../domain/metamodel@runtimePattern.ecore#//runtime/String"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="extension" nsURI="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdaptersBase.ecore#/org/smartadapters/extension" nsPrefix="extension">
      <eClassifiers xsi:type="ecore:EClass" name="AdapterElement">
        <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOptional">
          <eAnnotations source="kermeta">
            <details key="isComposite" value="true"/>
          </eAnnotations>
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DerivableAdapter" eSuperTypes="//smartadapters/core/Adapter">
        <eStructuralFeatures xsi:type="ecore:EReference" name="alternatives" upperBound="-1" eType="//smartadapters/extension/EntityAlternative" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constraints" upperBound="-1" eType="//smartadapters/extension/Constraint" containment="true" eOpposite="//smartadapters/extension/Constraint/adapter"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntityAlternative" eSuperTypes="//smartadapters/extension/AdapterElement">
        <eStructuralFeatures xsi:type="ecore:EReference" name="xor" upperBound="-1" eType="//smartadapters/extension/AdapterElement" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EntityConjunction" eSuperTypes="//smartadapters/extension/AdapterElement">
        <eStructuralFeatures xsi:type="ecore:EReference" name="and" upperBound="-1" eType="//smartadapters/extension/AdapterElement" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Constraint" abstract="true">
        <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
        <eOperations name="check">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          <eParameters name="d" eType="//smartadapters/extension/Derivation"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="adapter" lowerBound="1" eType="//smartadapters/extension/DerivableAdapter" eOpposite="//smartadapters/extension/DerivableAdapter/constraints"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="MutualExclusion" eSuperTypes="//smartadapters/extension/Constraint">
        <eOperations name="check">
          <eAnnotations source="kermeta" references="//smartadapters/extension/Constraint/check">
            <details key="body" value="do&#xA;&#x9;var c : kermeta::standard::Set&lt;org::smartadapters::extension::AdapterElement> init kermeta::standard::Set&lt;org::smartadapters::extension::AdapterElement>.new&#xA;&#x9;c.addAll(d.selectedOptions)&#xA;&#x9;d.elements.each{e | c.add(e.selectedVariant)}&#xA;&#x9;result := (c.intersection(entities).size) &lt;= (1)&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::extension::Constraint"/>
          </eAnnotations>
          <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          <eParameters name="d" eType="//smartadapters/extension/Derivation"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="entities" lowerBound="2" upperBound="-1" eType="//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Dependency" eSuperTypes="//smartadapters/extension/Constraint">
        <eOperations name="check">
          <eAnnotations source="kermeta" references="//smartadapters/extension/Constraint/check">
            <details key="body" value="do&#xA;&#x9;var c : kermeta::standard::Collection&lt;org::smartadapters::extension::AdapterElement> init kermeta::standard::Set&lt;org::smartadapters::extension::AdapterElement>.new&#xA;&#x9;c.addAll(d.selectedOptions)&#xA;&#x9;d.elements.each{e | c.add(e.selectedVariant)}&#xA;&#x9;result := (not (c.contains(source))) or (c.containsAll(self.dependencies))&#xA;end"/>
            <details key="superOperation" value="org::smartadapters::extension::Constraint"/>
          </eAnnotations>
          <eType xsi:type="ecore:EClass" href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore#/1/standard/Boolean"/>
          <eParameters name="d" eType="//smartadapters/extension/Derivation"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1" eType="//smartadapters/extension/AdapterElement"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="dependencies" lowerBound="1" upperBound="-1" eType="//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Derivation">
        <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1" eType="//smartadapters/extension/DerivationElement"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selectedOptions" upperBound="-1" eType="//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DerivationElement">
        <eSuperTypes href="../../../../plugin/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore#/1/language/structure/Object"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="alternative" lowerBound="1" eType="//smartadapters/extension/EntityAlternative"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selectedVariant" lowerBound="1" eType="//smartadapters/extension/AdapterElement"/>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
