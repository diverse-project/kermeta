<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="CompilationUnit">
    <details key="require" value="platform:/resource/SmartAdapters/metamodel/generic/genericSmartAdapters.kmt|platform:/resource/SmartAdapters/metamodel/domain/FSMMM.ecore|platform:/resource/SmartAdapters/metamodel/domain/FSMMMPattern.ecore|"/>
    <details key="using" value="kermeta::standard|kermeta::utils|patternframework|org::smartadapters::core|org::smartadapters::extension|ecore|org|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="org" nsURI="platform:/resource/SmartAdapters/metamodel/specific/FSM_AOM_Framework.ecore#/org" nsPrefix="org">
    <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
    <eClassifiers xsi:type="ecore:EDataType" name="_KermetaSpecialTypesAlias_" instanceClassName="java.lang.Object"/>
    <eSubpackages name="smartadapters" nsURI="platform:/resource/SmartAdapters/metamodel/specific/FSM_AOM_Framework.ecore#/org/smartadapters" nsPrefix="smartadapters">
      <eSubpackages name="core" nsURI="platform:/resource/SmartAdapters/metamodel/specific/FSM_AOM_Framework.ecore#/org/smartadapters/core" nsPrefix="core">
        <eClassifiers xsi:type="ecore:EClass" name="Adapter">
          <eAnnotations source="kermeta">
            <details key="aspect" value="true"/>
          </eAnnotations>
          <eOperations name="initConvert">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;stdio.write(&quot;Mapping MM' to MM...&quot;)&#xA;&#x9;convert.put(pattern::FSM::State, FSM::State)&#xA;&#x9;convert.put(pattern::FSM::Transition, FSM::Transition)&#xA;&#x9;convert.put(pattern::FSM::Fsm, FSM::Fsm)&#xA;&#x9;stdio.writeln(&quot;OK!&quot;)&#xA;end"/>
            </eAnnotations>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="adaptations" nsURI="platform:/resource/SmartAdapters/metamodel/specific/FSM_AOM_Framework.ecore#/org/smartadapters/adaptations" nsPrefix="adaptations">
        <eClassifiers xsi:type="ecore:EClass" name="createState">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/createAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := newState.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var realState : FSM::State&#xA;&#x9;if (adapter.created.getValue(newState).equals(void)) or (not (isUnique.equals(org::smartadapters::core::uniqueType.unique))) then&#xA;&#x9;&#x9;realState ?= kermeta::standard::Object.clone(newState)&#xA;&#x9;&#x9;adapter.created.put(newState, realState)&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;var clone : kermeta::standard::Boolean init false&#xA;&#x9;&#x9;if isUnique.equals(org::smartadapters::core::uniqueType.non_unique) then&#xA;&#x9;&#x9;&#x9;var input : kermeta::standard::String init stdio.read(&quot;clone &quot;.plus(newState.toString).plus(&quot; (true/false) :&quot;))&#xA;&#x9;&#x9;&#x9;clone := input.toBoolean&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;if (isUnique.equals(org::smartadapters::core::uniqueType.non_unique)) or (clone) then&#xA;&#x9;&#x9;&#x9;realState ?= adapter.converter.convert(kermeta::standard::Object.clone(newState), adapter.convert)&#xA;&#x9;&#x9;&#x9;adapter.created.put(newState, realState)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newState">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="cloneState">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/cloneAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := newState.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var clonedState : FSM::State&#xA;&#x9;var temp : FSM::State&#xA;&#x9;temp ?= adapter.getRealObject(newState, false)&#xA;&#x9;if isUnique.equals(org::smartadapters::core::uniqueType.unique) then&#xA;&#x9;&#x9;if not (adapter.cloned.exists{o | o.equals(temp)}) then&#xA;&#x9;&#x9;&#x9;clonedState ?= kermeta::standard::Object.clone(temp)&#xA;&#x9;&#x9;&#x9;adapter.clone.put(realState, clonedState)&#xA;&#x9;&#x9;&#x9;adapter.cloned.add(temp)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;var clone : kermeta::standard::Boolean init false&#xA;&#x9;&#x9;if isUnique.equals(org::smartadapters::core::uniqueType.non_unique) then&#xA;&#x9;&#x9;&#x9;var input : kermeta::standard::String init stdio.read(&quot;clone &quot;.plus(newState.toString).plus(&quot; (true/false) :&quot;))&#xA;&#x9;&#x9;&#x9;clone := input.toBoolean&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;if (isUnique.equals(org::smartadapters::core::uniqueType.non_unique)) or (clone) then&#xA;&#x9;&#x9;&#x9;clonedState ?= kermeta::standard::Object.clone(temp)&#xA;&#x9;&#x9;&#x9;adapter.clone.put(realState, clonedState)&#xA;&#x9;&#x9;&#x9;adapter.cloned.add(temp)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newState">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="realState" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="setState">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/setAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := aState.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var tempState : FSM::State&#xA;&#x9;tempState ?= adapter.getRealObject(aState, false)&#xA;&#x9;var tempname : ecore::EString&#xA;&#x9;tempname ?= adapter.getRealObject(aname, false)&#xA;&#x9;if tempname.isNotEqual(void) then&#xA;&#x9;&#x9;tempState.name := tempname&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="aState">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="aname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="unsetState">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/unsetAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := aState.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var tempState : FSM::State&#xA;&#x9;tempState ?= adapter.getRealObject(aState, false)&#xA;&#x9;var tempname : ecore::EString&#xA;&#x9;tempname ?= adapter.getRealObject(aname, false)&#xA;&#x9;if tempname.isNotEqual(void) then&#xA;&#x9;&#x9;tempState.name := void&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="aState">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="aname">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="createTransition">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/createAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := newTransition.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var realTransition : FSM::Transition&#xA;&#x9;if (adapter.created.getValue(newTransition).equals(void)) or (not (isUnique.equals(org::smartadapters::core::uniqueType.unique))) then&#xA;&#x9;&#x9;realTransition ?= kermeta::standard::Object.clone(newTransition)&#xA;&#x9;&#x9;adapter.created.put(newTransition, realTransition)&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;var clone : kermeta::standard::Boolean init false&#xA;&#x9;&#x9;if isUnique.equals(org::smartadapters::core::uniqueType.non_unique) then&#xA;&#x9;&#x9;&#x9;var input : kermeta::standard::String init stdio.read(&quot;clone &quot;.plus(newTransition.toString).plus(&quot; (true/false) :&quot;))&#xA;&#x9;&#x9;&#x9;clone := input.toBoolean&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;if (isUnique.equals(org::smartadapters::core::uniqueType.non_unique)) or (clone) then&#xA;&#x9;&#x9;&#x9;realTransition ?= adapter.converter.convert(kermeta::standard::Object.clone(newTransition), adapter.convert)&#xA;&#x9;&#x9;&#x9;adapter.created.put(newTransition, realTransition)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newTransition" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="cloneTransition">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/cloneAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := newTransition.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var clonedTransition : FSM::Transition&#xA;&#x9;var temp : FSM::Transition&#xA;&#x9;temp ?= adapter.getRealObject(newTransition, false)&#xA;&#x9;if isUnique.equals(org::smartadapters::core::uniqueType.unique) then&#xA;&#x9;&#x9;if not (adapter.cloned.exists{o | o.equals(temp)}) then&#xA;&#x9;&#x9;&#x9;clonedTransition ?= kermeta::standard::Object.clone(temp)&#xA;&#x9;&#x9;&#x9;adapter.clone.put(realTransition, clonedTransition)&#xA;&#x9;&#x9;&#x9;adapter.cloned.add(temp)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;var clone : kermeta::standard::Boolean init false&#xA;&#x9;&#x9;if isUnique.equals(org::smartadapters::core::uniqueType.non_unique) then&#xA;&#x9;&#x9;&#x9;var input : kermeta::standard::String init stdio.read(&quot;clone &quot;.plus(newTransition.toString).plus(&quot; (true/false) :&quot;))&#xA;&#x9;&#x9;&#x9;clone := input.toBoolean&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;&#x9;if (isUnique.equals(org::smartadapters::core::uniqueType.non_unique)) or (clone) then&#xA;&#x9;&#x9;&#x9;clonedTransition ?= kermeta::standard::Object.clone(temp)&#xA;&#x9;&#x9;&#x9;adapter.clone.put(realTransition, clonedTransition)&#xA;&#x9;&#x9;&#x9;adapter.cloned.add(temp)&#xA;&#xA;&#x9;&#x9;end&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="newTransition">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="realTransition" containment="true">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="setTransition">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/setAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := aTransition.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var tempTransition : FSM::Transition&#xA;&#x9;tempTransition ?= adapter.getRealObject(aTransition, false)&#xA;&#x9;var tempsource : FSM::State&#xA;&#x9;tempsource ?= adapter.getRealObject(asource, false)&#xA;&#x9;if tempsource.isNotEqual(void) then&#xA;&#x9;&#x9;tempTransition.source := tempsource&#xA;&#xA;&#x9;end&#xA;&#x9;var temptarget : FSM::State&#xA;&#x9;temptarget ?= adapter.getRealObject(atarget, false)&#xA;&#x9;if temptarget.isNotEqual(void) then&#xA;&#x9;&#x9;tempTransition.target := temptarget&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="aTransition">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="asource">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="atarget">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="unsetTransition">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/unsetAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := aTransition.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var tempTransition : FSM::Transition&#xA;&#x9;tempTransition ?= adapter.getRealObject(aTransition, false)&#xA;&#x9;var tempsource : FSM::State&#xA;&#x9;tempsource ?= adapter.getRealObject(asource, false)&#xA;&#x9;if tempsource.isNotEqual(void) then&#xA;&#x9;&#x9;tempTransition.source := tempsource&#xA;&#xA;&#x9;end&#xA;&#x9;var temptarget : FSM::State&#xA;&#x9;temptarget ?= adapter.getRealObject(atarget, false)&#xA;&#x9;if temptarget.isNotEqual(void) then&#xA;&#x9;&#x9;tempTransition.target := void&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="aTransition">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="asource">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="atarget">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="setFsm">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/setAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := aFsm.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var tempFsm : FSM::Fsm&#xA;&#x9;tempFsm ?= adapter.getRealObject(aFsm, false)&#xA;&#x9;var tempstates : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;tempstates ?= adapter.getRealObject(astates, true)&#xA;&#x9;if tempstates.isNotEqual(void) then&#xA;&#x9;&#x9;tempstates.each{o | do&#xA;&#x9;&#x9;&#x9;&#x9;var temp : FSM::State&#xA;&#x9;&#x9;&#x9;&#x9;temp ?= o&#xA;&#x9;&#x9;&#x9;&#x9;if temp.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;tempFsm.states.add(temp)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;&#x9;var temptransitions : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;temptransitions ?= adapter.getRealObject(atransitions, true)&#xA;&#x9;if temptransitions.isNotEqual(void) then&#xA;&#x9;&#x9;temptransitions.each{o | do&#xA;&#x9;&#x9;&#x9;&#x9;var temp : FSM::Transition&#xA;&#x9;&#x9;&#x9;&#x9;temp ?= o&#xA;&#x9;&#x9;&#x9;&#x9;if temp.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;tempFsm.transitions.add(temp)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="aFsm">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Fsm"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="astates" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="atransitions" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="unsetFsm">
          <eSuperTypes href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/unsetAdaptation"/>
          <eOperations name="check" eType="/1/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := aFsm.isNotEqual(void)&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/check"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="execute" ordered="false">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var tempFsm : FSM::Fsm&#xA;&#x9;tempFsm ?= adapter.getRealObject(aFsm, false)&#xA;&#x9;var tempstates : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;tempstates ?= adapter.getRealObject(astates, true)&#xA;&#x9;if tempstates.isNotEqual(void) then&#xA;&#x9;&#x9;tempstates.each{o | do&#xA;&#x9;&#x9;&#x9;&#x9;var temp : FSM::State&#xA;&#x9;&#x9;&#x9;&#x9;temp ?= o&#xA;&#x9;&#x9;&#x9;&#x9;if temp.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;tempFsm.states.add(temp)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;&#x9;var temptransitions : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;temptransitions ?= adapter.getRealObject(atransitions, true)&#xA;&#x9;if temptransitions.isNotEqual(void) then&#xA;&#x9;&#x9;temptransitions.each{o | do&#xA;&#x9;&#x9;&#x9;&#x9;var temp : FSM::Transition&#xA;&#x9;&#x9;&#x9;&#x9;temp ?= o&#xA;&#x9;&#x9;&#x9;&#x9;if temp.isNotEqual(void) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;tempFsm.transitions.remove(temp)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="superOperation" value="org::smartadapters::core::Adaptation"/>
              <references href="../generic/genericSmartAdaptersBase.ecore#/1/smartadapters/core/Adaptation/execute"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="aFsm">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Fsm"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="astates" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/State"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="atransitions" upperBound="-1">
            <eType xsi:type="ecore:EClass" href="../domain/FSMMMPattern.ecore#/1/FSM/Transition"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EAnnotation source="dependentResource">
    <references href="../generic/genericSmartAdapters.ecore#/0"/>
    <references href="../generic/genericSmartAdapters.ecore#/1"/>
    <references href="../generic/genericSmartAdaptersBase.ecore#/0"/>
    <references href="../generic/genericSmartAdaptersBase.ecore#/1"/>
    <references href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#/0"/>
    <references href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#/1"/>
    <references href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#/2"/>
    <references href="../../program/weaving/converter.ecore#/0"/>
    <references href="../../program/weaving/converter.ecore#/1"/>
    <references href="../domain/FSMMM.ecore#/0"/>
    <references href="../domain/FSMMM.ecore#/1"/>
    <references href="../domain/FSMMMPattern.ecore#/0"/>
    <references href="../domain/FSMMMPattern.ecore#/1"/>
    <references href="../domain/FSMMMPattern.ecore#/2"/>
  </ecore:EAnnotation>
</xmi:XMI>
