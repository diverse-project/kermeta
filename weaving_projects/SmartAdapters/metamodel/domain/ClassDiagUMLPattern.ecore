<?xml version="1.0" encoding="ASCII"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="pattern" nsURI="platform:/resource/SmartAdapters/metamodel/domain/ClassDiagUMLPattern.ecore" nsPrefix="pattern">
  <eSubpackages name="uml" nsURI="platform:/resource/SmartAdapters/metamodel/domain/ClassDiagUMLPattern.ecore#/uml" nsPrefix="uml">
    <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="int">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An integer is a primitive type representing integer values."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A Boolean type is used for logical expression, consisting of the predefined values true and false."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="int">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An unlimited natural is a primitive type representing unlimited natural values."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="//uml/Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A comment is a textual annotation that can be attached to a set of elements."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies a string that is the comment."/>
        </eAnnotations>
        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
          <details key="kind" value="element"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" ordered="false" upperBound="-1" eType="//uml/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Element(s) being commented."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StructuredClassifier" eSuperTypes="//uml/Classifier">
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" ordered="false" upperBound="-1" eType="//uml/Property" volatile="true" transient="true" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the properties specifying instances that the classifier owns by composition. This association is derived, selecting those owned properties where isComposite is true."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An element is a constituent of a model. As such, it has the capability of owning other elements."/>
      </eAnnotations>
      <eSuperTypes href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject"/>
      <eOperations name="not_own_self">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An element may not directly or indirectly own itself.&#xD;&#xA;not self.allOwnedElements()->includes(self)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="has_owner">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Elements that must be owned must have an owner.&#xD;&#xA;self.mustBeOwned() implies owner->notEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="destroy" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Destroys this element by removing all cross references to/from it and removing it from its containing resource or object."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="hasKeyword" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether this element has the specified keyword."/>
        </eAnnotations>
        <eParameters name="keyword" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getKeywords" ordered="false" upperBound="-1" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the keywords for this element."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="addKeyword" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Adds the specified keyword to this element."/>
        </eAnnotations>
        <eParameters name="keyword" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="removeKeyword" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Removes the specified keyword from this element."/>
        </eAnnotations>
        <eParameters name="keyword" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getNearestPackage" ordered="false" eType="//uml/Package">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the nearest package that owns (either directly or indirectly) this element, or the element itself (if it is a package)."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getModel" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the model that owns (either directly or indirectly) this element."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isStereotypeApplicable" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether the specified stereotype is applicable to this element."/>
        </eAnnotations>
        <eParameters name="stereotype" ordered="false"/>
      </eOperations>
      <eOperations name="isStereotypeRequired" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether the specified stereotype is required for this element."/>
        </eAnnotations>
        <eParameters name="stereotype" ordered="false"/>
      </eOperations>
      <eOperations name="isStereotypeApplied" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether the specified stereotype is applied to this element."/>
        </eAnnotations>
        <eParameters name="stereotype" ordered="false"/>
      </eOperations>
      <eOperations name="getApplicableStereotypes" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the stereotypes that are applicable to this element, including those that are required and/or may already be applied."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getApplicableStereotype" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the stereotype with the specified qualified name that is applicable to this element, or null if no such stereotype is applicable."/>
        </eAnnotations>
        <eParameters name="qualifiedName" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getRequiredStereotypes" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the stereotypes that are required for this element."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getRequiredStereotype" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the stereotype with the specified qualified name that is required for this element, or null if no such stereotype is required."/>
        </eAnnotations>
        <eParameters name="qualifiedName" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getAppliedStereotypes" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the stereotypes that are applied to this element."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAppliedStereotype" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is  applied."/>
        </eAnnotations>
        <eParameters name="qualifiedName" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getAppliedSubstereotypes" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the substereotypes of the specified stereotype that are applied to this element."/>
        </eAnnotations>
        <eParameters name="stereotype" ordered="false"/>
      </eOperations>
      <eOperations name="getAppliedSubstereotype" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the substereotype of the specified stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is applied."/>
        </eAnnotations>
        <eParameters name="stereotype" ordered="false"/>
        <eParameters name="qualifiedName" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="hasValue" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether this element has a (non-default) value for the property with the specified name in the specified stereotype."/>
        </eAnnotations>
        <eParameters name="stereotype" ordered="false"/>
        <eParameters name="propertyName" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getRelationships" ordered="false" upperBound="-1" eType="//uml/Relationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the relationships in which this element is involved."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getSourceDirectedRelationships" ordered="false" upperBound="-1" eType="//uml/DirectedRelationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the directed relationships for which this element is a source."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getTargetDirectedRelationships" ordered="false" upperBound="-1" eType="//uml/DirectedRelationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the directed relationships for which this element is a target."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="allOwnedElements" ordered="false" upperBound="-1" eType="//uml/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allOwnedElements() gives all of the direct and indirect owned elements of an element.&#xD;&#xA;result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="mustBeOwned" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.&#xD;&#xA;result = true"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedElement" ordered="false" upperBound="-1" eType="//uml/Element" changeable="false" volatile="true" transient="true" derived="true" eOpposite="//uml/Element/owner">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Elements owned by this element."/>
        </eAnnotations>
        <eAnnotations source="union"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="owner" ordered="false" eType="//uml/Element" changeable="false" volatile="true" transient="true" derived="true" eOpposite="//uml/Element/ownedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Element that owns this element."/>
        </eAnnotations>
        <eAnnotations source="union"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedComment" ordered="false" upperBound="-1" eType="//uml/Comment" containment="true">
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Comments owned by this element."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="//uml/Namespace //uml/PackageableElement">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="mustBeOwned" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query mustBeOwned() indicates whether elements of this type must have an owner.&#xD;&#xA;result = false"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/Element/mustBeOwned"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A package is used to group elements, and provides a namespace for the grouped elements.&#xD;&#xA;A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.&#xD;&#xA;Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter."/>
      </eAnnotations>
      <eOperations name="elements_public_or_private">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If an element that is owned by a package has visibility, it is public or private.&#xD;&#xA;self.ownedElements->forAll(e | e.visibility->notEmpty() implies e.visbility = #public or e.visibility = #private)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="createOwnedClass" ordered="false" eType="//uml/Class">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a(n) (abstract) class with the specified name as an owned type of this package."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="isAbstract" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="createOwnedEnumeration" ordered="false" eType="//uml/Enumeration">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a enumeration with the specified name as an owned type of this package."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="createOwnedPrimitiveType" ordered="false" eType="//uml/PrimitiveType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a primitive type with the specified name as an owned type of this package."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="createOwnedInterface" ordered="false" eType="//uml/Interface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates an interface with the specified name as an owned type of this package."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="isProfileApplied" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether the specified profile is applied to this package."/>
        </eAnnotations>
        <eParameters name="profile" ordered="false"/>
      </eOperations>
      <eOperations name="getAppliedProfiles" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the profiles that are applied to this package."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAllAppliedProfiles" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves all the profiles that are applied to this package, including profiles applied to its nesting package(s)."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAppliedProfile" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the profile with the specified qualified name that is applied to this package, or null if no such profile is applied."/>
        </eAnnotations>
        <eParameters name="qualifiedName" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="getAppliedProfile" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the profile with the specified qualified name that is applied to this package or any of its nesting packages (if indicated), or null if no such profile is applied."/>
        </eAnnotations>
        <eParameters name="qualifiedName" ordered="false" eType="//uml/String"/>
        <eParameters name="recurse" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="getAllProfileApplications" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves all the profile applications for this package, including profile applications for its nesting package(s)."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getProfileApplication" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the application of the specified profile to this package, or null if no such profile is applied."/>
        </eAnnotations>
        <eParameters name="profile" ordered="false"/>
      </eOperations>
      <eOperations name="getProfileApplication" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the application of the specified profile to this package or any of its nesting packages (if indicated), or null if no such profile is applied."/>
        </eAnnotations>
        <eParameters name="profile" ordered="false"/>
        <eParameters name="recurse" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="isModelLibrary" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether this package is a model library."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="visibleMembers" ordered="false" upperBound="-1" eType="//uml/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query visibleMembers() defines which members of a Package can be accessed outside it.&#xD;&#xA;result = member->select( m | self.makesVisible(m))"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="makesVisible" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.&#xD;&#xA;self.member->includes(el)&#xD;&#xA;result = (ownedMember->includes(el)) or&#xA;(elementImport->select(ei|ei.importedElement = #public)->collect(ei|ei.importedElement)->includes(el)) or&#xA;(packageImport->select(pi|pi.visibility = #public)->collect(pi|pi.importedPackage.member->includes(el))->notEmpty())"/>
        </eAnnotations>
        <eParameters name="el" ordered="false" eType="//uml/NamedElement"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedType" ordered="false" upperBound="-1" eType="//uml/Type" volatile="true" transient="true" derived="true" eOpposite="//uml/Type/package">
        <eAnnotations source="subsets" references="//uml/Package/packagedElement"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the packaged elements that are Types."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="packagedElement" ordered="false" upperBound="-1" eType="//uml/PackageableElement" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the packageable elements that are owned by this Package."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" ordered="false" upperBound="-1" eType="//uml/Package" volatile="true" transient="true" derived="true" eOpposite="//uml/Package/nestingPackage">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the packaged elements that are Packages."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Package/packagedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" ordered="false" eType="//uml/Package" volatile="true" transient="true" derived="true" eOpposite="//uml/Package/nestedPackage">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Package that owns this Package."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PackageableElement" eSuperTypes="//uml/NamedElement">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EAttribute" name="visibility" ordered="false" eType="//uml/VisibilityKind" defaultValueLiteral="public">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates that packageable elements must always have a visibility, i.e., visibility is not optional."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/NamedElement/visibility"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A packageable element indicates a named element that may be owned directly by a package.&#xD;&#xA;Packageable elements are able to serve as a template parameter."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NamedElement" eSuperTypes="//uml/Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A named element is an element in a model that may have a name.&#xD;&#xA;A named element supports using a string expression to specify its name. This allows names of model elements to involve template parameters. The actual name is evaluated from the string expression only when it is sensible to do so (e.g., when a template is bound)."/>
      </eAnnotations>
      <eOperations name="has_no_qualified_name">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If there is no name, or one of the containing namespaces has no name, there is no qualified name.&#xD;&#xA;(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;&#xA;  implies self.qualifiedName->isEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="has_qualified_name">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xD;&#xA;(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="visibility_needs_ownership">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a NamedElement is not owned by a Namespace, it does not have a visibility.&#xD;&#xA;namespace->isEmpty() implies visibility->isEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="createDependency" ordered="false" eType="//uml/Dependency">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a dependency between this named element and the specified supplier, owned by this named element's nearest package."/>
        </eAnnotations>
        <eParameters name="supplier" ordered="false" eType="//uml/NamedElement"/>
      </eOperations>
      <eOperations name="getLabel" ordered="false" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves a localized label for this named element."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getLabel" ordered="false" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves a label for this named element, localized if indicated."/>
        </eAnnotations>
        <eParameters name="localize" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="getQualifiedName" ordered="false" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xD;&#xA;result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()&#xA;then &#xA;    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))&#xA;else&#xA;    Set{}&#xA;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="allNamespaces" upperBound="-1" eType="//uml/Namespace">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.&#xD;&#xA;result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isDistinguishableFrom" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.&#xD;&#xA;result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif"/>
        </eAnnotations>
        <eParameters name="n" ordered="false" eType="//uml/NamedElement"/>
        <eParameters name="ns" ordered="false" eType="//uml/Namespace"/>
      </eOperations>
      <eOperations name="separator" ordered="false" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query separator() gives the string that is used to separate names when constructing a qualified name.&#xD;&#xA;result = '::'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="allOwningPackages" ordered="false" upperBound="-1" eType="//uml/Package">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allOwningPackages() returns all the directly or indirectly owning packages.&#xD;&#xA;result = self.namespace->select(p | p.oclIsKindOf(Package))->union(p.allOwningPackages())"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The name of the NamedElement."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false" eType="//uml/VisibilityKind" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" ordered="false" eType="//uml/String" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="clientDependency" ordered="false" upperBound="-1" eType="//uml/Dependency" eOpposite="//uml/Dependency/client">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates the dependencies that reference the client."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" ordered="false" eType="//uml/Namespace" changeable="false" volatile="true" transient="true" derived="true" eOpposite="//uml/Namespace/ownedMember">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the namespace that owns the NamedElement."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/owner"/>
        <eAnnotations source="union"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="nameExpression" ordered="false" eType="//uml/StringExpression" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The string expression used to define the name of this named element."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model."/>
      </eAnnotations>
      <eLiterals name="public">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A public element is visible to all elements that can access the contents of the namespace that owns it."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="private" value="1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A private element is only visible inside the namespace that owns it."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="protected" value="2">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A protected element is visible to elements that have a generalization relationship to the namespace that owns it."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="package" value="3">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible."/>
        </eAnnotations>
      </eLiterals>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Dependency" eSuperTypes="//uml/PackageableElement //uml/DirectedRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s)."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="supplier" ordered="false" upperBound="-1" eType="//uml/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/DirectedRelationship/target"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="client" ordered="false" upperBound="-1" eType="//uml/NamedElement" eOpposite="//uml/NamedElement/clientDependency">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/DirectedRelationship/source"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DirectedRelationship" eSuperTypes="//uml/Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false" upperBound="-1" eType="//uml/Element" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the sources of the DirectedRelationship."/>
        </eAnnotations>
        <eAnnotations source="union"/>
        <eAnnotations source="subsets" references="//uml/Relationship/relatedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false" upperBound="-1" eType="//uml/Element" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the targets of the DirectedRelationship."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Relationship/relatedElement"/>
        <eAnnotations source="union"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Relationship" eSuperTypes="//uml/Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Relationship is an abstract concept that specifies some kind of relationship between elements."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" ordered="false" upperBound="-1" eType="//uml/Element" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the elements related by the Relationship."/>
        </eAnnotations>
        <eAnnotations source="union"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Namespace" eSuperTypes="//uml/NamedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A namespace is an element in a model that contains a set of named elements that can be identified by name."/>
      </eAnnotations>
      <eOperations name="members_distinguishable">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="All the members of a Namespace are distinguishable within it.&#xD;&#xA;membersAreDistinguishable()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="createElementImport" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates an import of the specified element into this namespace with the specified visibility."/>
        </eAnnotations>
        <eParameters name="element" ordered="false" eType="//uml/PackageableElement"/>
        <eParameters name="visibility" ordered="false" eType="//uml/VisibilityKind"/>
      </eOperations>
      <eOperations name="createPackageImport" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates an import of the specified package into this namespace with the specified visibility."/>
        </eAnnotations>
        <eParameters name="package_" ordered="false" eType="//uml/Package"/>
        <eParameters name="visibility" ordered="false" eType="//uml/VisibilityKind"/>
      </eOperations>
      <eOperations name="getImportedElements" ordered="false" upperBound="-1" eType="//uml/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the elements imported by this namespace."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getImportedPackages" ordered="false" upperBound="-1" eType="//uml/Package">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the packages imported by this namespace."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getImportedMembers" ordered="false" upperBound="-1" eType="//uml/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.&#xD;&#xA;result = self.importMembers(self.elementImport.importedElement.asSet()-&#xA;>union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getNamesOfMember" ordered="false" upperBound="-1" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xD;&#xA;The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xD;&#xA;result = if self.ownedMember ->includes(element)&#xA;then Set{}->include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in&#xA;  if elementImports->notEmpty()&#xA;  then elementImports->collect(el | el.getName())&#xA;  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif"/>
        </eAnnotations>
        <eParameters name="element" ordered="false" eType="//uml/NamedElement"/>
      </eOperations>
      <eOperations name="membersAreDistinguishable" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.&#xD;&#xA;result = self.member->forAll( memb |&#xA;self.member->excluding(memb)->forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="importMembers" ordered="false" upperBound="-1" eType="//uml/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.&#xD;&#xA;result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem |&#xA;mem.imp.isDistinguishableFrom(mem, self)))"/>
        </eAnnotations>
        <eParameters name="imps" ordered="false" upperBound="-1" eType="//uml/PackageableElement"/>
      </eOperations>
      <eOperations name="excludeCollisions" ordered="false" upperBound="-1" eType="//uml/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.&#xD;&#xA;result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))"/>
        </eAnnotations>
        <eParameters name="imps" ordered="false" upperBound="-1" eType="//uml/PackageableElement"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="member" ordered="false" upperBound="-1" eType="//uml/NamedElement" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="union"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="importedMember" ordered="false" upperBound="-1" eType="//uml/PackageableElement" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/member"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" ordered="false" upperBound="-1" eType="//uml/NamedElement" changeable="false" volatile="true" transient="true" derived="true" eOpposite="//uml/NamedElement/namespace">
        <eAnnotations source="subsets" references="//uml/Namespace/member //uml/Element/ownedElement"/>
        <eAnnotations source="union"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A collection of NamedElements owned by the Namespace."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ValueSpecification" eSuperTypes="//uml/PackageableElement //uml/TypedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.&#xD;&#xA;ValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isCompatibleWith" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for ValueSpecification, the type must be conformant with the type of the specified parameterable element.&#xD;&#xA;&#xD;&#xA;result = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type)"/>
          </eAnnotations>
          <eAnnotations source="redefines"/>
          <eParameters name="p" ordered="false" lowerBound="1"/>
        </contents>
      </eAnnotations>
      <eOperations name="isComputable" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.&#xD;&#xA;result = false"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="integerValue" ordered="false" eType="//uml/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query integerValue() gives a single Integer value when one can be computed.&#xD;&#xA;result = Set{}"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="booleanValue" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query booleanValue() gives a single Boolean value when one can be computed.&#xD;&#xA;result = Set{}"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="stringValue" ordered="false" eType="//uml/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query stringValue() gives a single String value when one can be computed.&#xD;&#xA;result = Set{}"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="unlimitedValue" ordered="false" eType="//uml/UnlimitedNatural">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.&#xD;&#xA;result = Set{}"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isNull" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isNull() returns true when it can be computed that the value is null.&#xD;&#xA;result = false"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypedElement" eSuperTypes="//uml/NamedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A typed element is a kind of named element that represents an element with a type.&#xD;&#xA;A typed element has a type."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" eType="//uml/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This information is derived from the return result for this Operation.&#xD;&#xA;The type of the TypedElement."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="//uml/PackageableElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A type is a named element that is used as the type for a typed element. A type can be contained in a package.&#xD;&#xA;A type constrains the values represented by a typed element."/>
      </eAnnotations>
      <eOperations name="createAssociation" ordered="false" eType="//uml/Association">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a(n) (binary) association between this type and the specified other type, with the specified navigabilities, aggregations, names, lower bounds, and upper bounds, and owned by this type's nearest package."/>
        </eAnnotations>
        <eParameters name="end1IsNavigable" ordered="false" eType="//uml/Boolean"/>
        <eParameters name="end1Aggregation" ordered="false" eType="//uml/AggregationKind"/>
        <eParameters name="end1Name" ordered="false" eType="//uml/String"/>
        <eParameters name="end1Lower" ordered="false" eType="//uml/Integer"/>
        <eParameters name="end1Upper" ordered="false" eType="//uml/UnlimitedNatural"/>
        <eParameters name="end1Type" ordered="false" eType="//uml/Type"/>
        <eParameters name="end2IsNavigable" ordered="false" eType="//uml/Boolean"/>
        <eParameters name="end2Aggregation" ordered="false" eType="//uml/AggregationKind"/>
        <eParameters name="end2Name" ordered="false" eType="//uml/String"/>
        <eParameters name="end2Lower" ordered="false" eType="//uml/Integer"/>
        <eParameters name="end2Upper" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eOperations name="getAssociations" ordered="false" upperBound="-1" eType="//uml/Association">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the associations in which this type is involved."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="conformsTo" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.&#xD;&#xA;result = false"/>
        </eAnnotations>
        <eParameters name="other" ordered="false" eType="//uml/Type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="package" ordered="false" eType="//uml/Package" volatile="true" transient="true" derived="true" eOpposite="//uml/Package/ownedType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the owning package of this classifier, if any."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="//uml/Classifier //uml/Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link."/>
      </eAnnotations>
      <eOperations name="specialized_end_number">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An association specializing another association has the same number of ends as the other association.&#xD;&#xA;self.parents()->forAll(p | p.memberEnd.size() = self.memberEnd.size())"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="specialized_end_types">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="When an association specializes another association, every end of the specific association corresponds to an end of the general association, and the specific end reaches the same type or a subtype of the more general end.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="binary_associations">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Only binary associations can be aggregations.&#xD;&#xA;self.memberEnd->exists(aggregation &lt;> Aggregation::none) implies self.memberEnd->size() = 2"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="association_ends">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Association ends of associations with more than two ends must be owned by the association.&#xD;&#xA;if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="isBinary" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether this association is a binary association, i.e. whether it has exactly two member ends."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getEndTypes" upperBound="-1" eType="//uml/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="endType is derived from the types of the member ends.&#xD;&#xA;result = self.memberEnd->collect(e | e.type)"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedEnd" upperBound="-1" eType="//uml/Property" containment="true" eOpposite="//uml/Property/owningAssociation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The ends that are owned by the association itself."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Association/memberEnd //uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="memberEnd" upperBound="-1" eType="//uml/Property" eOpposite="//uml/Property/association">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Each end represents participation of instances of the classifier connected to the end in links of the association."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/member"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies whether the association is derived from other model elements such as other associations or constraints."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="endType" upperBound="-1" eType="//uml/Type" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the classifiers that are used as types of the ends of the association."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Relationship/relatedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="navigableOwnedEnd" ordered="false" upperBound="-1" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The navigable ends that are owned by the association itself."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Association/ownedEnd"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Classifier" eSuperTypes="//uml/Namespace //uml/Type">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isTemplate" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="redefines"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isTemplate() returns whether this templateable element is actually a template.&#xD;&#xA;result = oclAsType(TemplatableElement).isTemplate() or general->exists(g | g.isTemplate())"/>
          </eAnnotations>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.&#xD;&#xA;A classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.&#xD;&#xA;A classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.&#xD;&#xA;Classifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter."/>
      </eAnnotations>
      <eOperations name="no_cycles_in_generalization">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.&#xD;&#xA;not self.allParents()->includes(self)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="generalization_hierarchies">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.&#xD;&#xA;not self.allParents()->includes(self)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="specialize_type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A classifier may only specialize classifiers of a valid type.&#xD;&#xA;self.parents()->forAll(c | self.maySpecializeType(c))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="maps_to_generalization_set">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances also be its subclasses.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getAllAttributes" ordered="false" upperBound="-1" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves all the attributes of this classifier, including those inherited from its parents."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getOperations" ordered="false" upperBound="-1" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the operations of this classifier."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAllOperations" ordered="false" upperBound="-1" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves all the operations of this classifier, including those inherited from its parents."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getOperation" ordered="false" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the first operation with the specified name, parameter names, and parameter types from this classifier."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="parameterNames" ordered="false" upperBound="-1" eType="//uml/String"/>
        <eParameters name="parameterTypes" ordered="false" upperBound="-1" eType="//uml/Type"/>
      </eOperations>
      <eOperations name="getOperation" ordered="false" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the first operation with the specified name, parameter names, and parameter types from this classifier, ignoring case if indicated."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="parameterNames" ordered="false" upperBound="-1" eType="//uml/String"/>
        <eParameters name="parameterTypes" ordered="false" upperBound="-1" eType="//uml/Type"/>
        <eParameters name="ignoreCase" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="getUsedInterfaces" ordered="false" upperBound="-1" eType="//uml/Interface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the interfaces on which this classifier has a usage dependency."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAllUsedInterfaces" ordered="false" upperBound="-1" eType="//uml/Interface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves all the interfaces on which this classifier or any of its parents has a usage dependency."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getGenerals" ordered="false" upperBound="-1" eType="//uml/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The general classifiers are the classifiers referenced by the generalization relationships.&#xD;&#xA;result = self.parents()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getInheritedMembers" ordered="false" upperBound="-1" eType="//uml/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The inheritedMember association is derived by inheriting the inheritable members of the parents.&#xD;&#xA;result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="allFeatures" ordered="false" upperBound="-1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.&#xD;&#xA;result = member->select(oclIsKindOf(Feature))"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="parents" ordered="false" upperBound="-1" eType="//uml/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xD;&#xA;result = generalization.general"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="inheritableMembers" ordered="false" upperBound="-1" eType="//uml/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.&#xD;&#xA;c.allParents()->includes(self)&#xD;&#xA;result = member->select(m | c.hasVisibilityOf(m))"/>
        </eAnnotations>
        <eParameters name="c" ordered="false" eType="//uml/Classifier"/>
      </eOperations>
      <eOperations name="hasVisibilityOf" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.&#xD;&#xA;self.allParents()->collect(c | c.member)->includes(n)&#xD;&#xA;result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true"/>
        </eAnnotations>
        <eParameters name="n" ordered="false" eType="//uml/NamedElement"/>
      </eOperations>
      <eOperations name="conformsTo" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="redefines" references="//uml/Type/conformsTo"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.&#xD;&#xA;result = (self=other) or (self.allParents()->includes(other))"/>
        </eAnnotations>
        <eParameters name="other" ordered="false" eType="//uml/Classifier"/>
      </eOperations>
      <eOperations name="inherit" ordered="false" upperBound="-1" eType="//uml/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The inherit operation is overridden to exclude redefined properties.&#xD;&#xA;The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.&#xD;&#xA;result = inhs"/>
        </eAnnotations>
        <eParameters name="inhs" ordered="false" upperBound="-1" eType="//uml/NamedElement"/>
      </eOperations>
      <eOperations name="maySpecializeType" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.&#xD;&#xA;result = self.oclIsKindOf(c.oclType)"/>
        </eAnnotations>
        <eParameters name="c" ordered="false" eType="//uml/Classifier"/>
      </eOperations>
      <eOperations name="allParents" ordered="false" upperBound="-1" eType="//uml/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.&#xD;&#xA;result = self.parents()->union(self.parents()->collect(p | p.allParents())"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.&#xD;&#xA;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="generalization" ordered="false" upperBound="-1" eType="//uml/Generalization" containment="true" eOpposite="//uml/Generalization/specific">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="powertypeExtent" ordered="false" upperBound="-1" eType="//uml/GeneralizationSet" eOpposite="//uml/GeneralizationSet/powertype">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Designates the GeneralizationSet of which the associated Classifier is a power type."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedMember" ordered="false" upperBound="-1" eType="//uml/NamedElement" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="subsets" references="//uml/Namespace/member"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies all elements inherited by this classifier from the general classifiers."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedClassifier" ordered="false" upperBound="-1" eType="//uml/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Classifiers that are redefined by this Classifier."/>
        </eAnnotations>
        <eAnnotations source="subsets"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false" upperBound="-1" eType="//uml/Classifier" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the general classifier in the Generalization relationship.&#xD;&#xA;Specifies the general Classifiers for this Classifier."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" ordered="false" upperBound="-1" eType="//uml/Property" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier."/>
        </eAnnotations>
        <eAnnotations source="union"/>
        <eAnnotations source="subsets"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Generalization" eSuperTypes="//uml/DirectedRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.&#xD;&#xA;A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier."/>
      </eAnnotations>
      <eOperations name="generalization_same_classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Every Generalization associated with a given GeneralizationSet must have the same general Classifier. That is, all Generalizations for a particular GeneralizationSet must have the same superclass.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSubstitutable" ordered="false" eType="//uml/Boolean" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false" eType="//uml/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the general classifier in the Generalization relationship."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/DirectedRelationship/target"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="generalizationSet" ordered="false" upperBound="-1" eType="//uml/GeneralizationSet" eOpposite="//uml/GeneralizationSet/generalization">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Designates a set in which instances of Generalization is considered members."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="specific" ordered="false" eType="//uml/Classifier" eOpposite="//uml/Classifier/generalization">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the specializing classifier in the Generalization relationship."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/DirectedRelationship/source //uml/Element/owner"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="GeneralizationSet" eSuperTypes="//uml/PackageableElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A generalization set is a packageable element whose instances define collections of subsets of generalization relationships."/>
      </eAnnotations>
      <eOperations name="generalization_same_classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Every Generalization associated with a particular GeneralizationSet must have the same general Classifier.&#xD;&#xA;generalization->collect(g | g.general)->asSet()->size() &lt;= 1"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="maps_to_generalization_set">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances be its subclasses.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCovering" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDisjoint" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="powertype" ordered="false" eType="//uml/Classifier" eOpposite="//uml/Classifier/powertypeExtent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Designates the Classifier that is defined as the power type for the associated GeneralizationSet."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="generalization" ordered="false" upperBound="-1" eType="//uml/Generalization" eOpposite="//uml/Generalization/generalizationSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Designates the instances of Generalization which are members of a given GeneralizationSet."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OpaqueExpression" eSuperTypes="//uml/ValueSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.&#xD;&#xA;Provides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false" lowerBound="1" eType="//uml/String">
          <eAnnotations source="redefines" references="//uml/ValueSpecification/stringValue"/>
        </contents>
      </eAnnotations>
      <eOperations name="language_body_size">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If the language attribute is not empty, then the size of the body and language arrays must be the same.&#xD;&#xA;language->notEmpty() implies (body->size() = language->size())"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="only_return_result_parameters">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The behavior may only have return result parameters.&#xD;&#xA;self.behavior.notEmpty() implies&#xD;&#xA;  self.behavior.ownedParameters->select(p | p.direction&lt;>#return)->isEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="one_return_result_parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The behavior must have exactly one return result parameter.&#xD;&#xA;self.behavior.notEmpty() implies&#xD;&#xA;  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getResult" ordered="false" eType="//uml/Parameter"/>
      <eOperations name="value" ordered="false" eType="//uml/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query value() gives an integer value for an expression intended to produce one.&#xD;&#xA;self.isIntegral()&#xD;&#xA;true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isIntegral" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isIntegral() tells whether an expression is intended to produce an integer.&#xD;&#xA;result = false"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isPositive" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isPositive() tells whether an integer expression has a positive value.&#xD;&#xA;self.isIntegral()&#xD;&#xA;result = false"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isNonNegative" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isNonNegative() tells whether an integer expression has a non-negative value.&#xD;&#xA;self.isIntegral()&#xD;&#xA;result = false"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" upperBound="-1" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The text of the expression, possibly in multiple languages."/>
        </eAnnotations>
        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
          <details key="kind" value="element"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" upperBound="-1" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false" eType="//uml/Parameter" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="behavior" ordered="false" eType="//uml/Behavior">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the behavior of the opaque expression."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="//uml/ConnectableElement //uml/MultiplicityElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.&#xD;&#xA;Parameters are allowed to be treated as connectable elements.&#xD;&#xA;Parameters have support for streaming, exceptions, and parameter sets."/>
      </eAnnotations>
      <eOperations name="connector_end">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A parameter may only be associated with a connector end within the context of a collaboration.&#xD;&#xA;self.end.notEmpty() implies self.collaboration.notEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="stream_and_exception">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A parameter cannot be a stream and exception at the same time.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="not_exception">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An input parameter cannot be an exception.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="reentrant_behaviors">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Reentrant behaviors cannot have stream parameters.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="in_and_out">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Only in and inout parameters may have a delete effect. Only out, inout, and return parameters may have a create effect.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getDefault" ordered="false" eType="//uml/String"/>
      <eOperations name="isSetDefault" ordered="false" eType="//uml/Boolean"/>
      <eOperations name="setDefault" ordered="false">
        <eParameters name="newDefault" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="unsetDefault" ordered="false"/>
      <eOperations name="setBooleanDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this parameter to the specified Boolean value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="setIntegerDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this parameter to the specified integer value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/Integer"/>
      </eOperations>
      <eOperations name="setStringDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this parameter to the specified string value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="setUnlimitedNaturalDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this parameter to the specified unlimited natural value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eOperations name="setNullDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this parameter to the null value."/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameterSet" ordered="false" upperBound="-1" eType="//uml/ParameterSet" eOpposite="//uml/ParameterSet/parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The parameter sets containing the parameter. See ParameterSet."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="operation" ordered="false" eType="//uml/Operation" changeable="false" volatile="true" transient="true">
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Operation owning this parameter."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" ordered="false" eType="//uml/ParameterDirectionKind" defaultValueLiteral="in">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates whether a parameter is being sent into or out of a behavioral element."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" ordered="false" eType="//uml/String" volatile="true" transient="true" unsettable="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies a String that represents a value to be used when no argument is supplied for the Parameter."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="defaultValue" ordered="false" eType="//uml/ValueSpecification" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isException" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Tells whether an output parameter may emit a value to the exclusion of the other outputs."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isStream" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter post values while the behavior is executing."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="effect" ordered="false" eType="//uml/ParameterEffectKind" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the effect that the owner of the parameter has on values passed in or out of the parameter."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="//uml/Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."/>
      </eAnnotations>
      <eOperations name="upper_gt_0">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A multiplicity must define at least one valid cardinality that is greater than zero.&#xD;&#xA;upperBound()->notEmpty() implies upperBound() > 0"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="lower_ge_0">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The lower bound must be a non-negative integer literal.&#xD;&#xA;lowerBound()->notEmpty() implies lowerBound() >= 0"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="upper_ge_lower">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The upper bound must be greater than or equal to the lower bound.&#xD;&#xA;(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="value_specification_no_side_effects">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a non-literal ValueSpecification is used for the lower or upper bound, then evaluating that specification must not have side effects.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="value_specification_constant">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a non-literal ValueSpecification is used for the lower or upper bound, then that specification must be a constant expression.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="setLower" ordered="false">
        <eParameters name="newLower" ordered="false" eType="//uml/Integer"/>
      </eOperations>
      <eOperations name="setUpper" ordered="false">
        <eParameters name="newUpper" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eOperations name="getLower" ordered="false" eType="//uml/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The derived lower attribute must equal the lowerBound.&#xD;&#xA;result = lowerBound()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getUpper" ordered="false" eType="//uml/UnlimitedNatural">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The derived upper attribute must equal the upperBound.&#xD;&#xA;result = upperBound()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isMultivalued" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xD;&#xA;upperBound()->notEmpty()&#xD;&#xA;result = upperBound() > 1"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="includesCardinality" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xD;&#xA;upperBound()->notEmpty() and lowerBound()->notEmpty()&#xD;&#xA;result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
        </eAnnotations>
        <eParameters name="C" ordered="false" eType="//uml/Integer"/>
      </eOperations>
      <eOperations name="includesMultiplicity" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xD;&#xA;self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()&#xD;&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
        </eAnnotations>
        <eParameters name="M" ordered="false" eType="//uml/MultiplicityElement"/>
      </eOperations>
      <eOperations name="lowerBound" ordered="false" eType="//uml/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xD;&#xA;result = if lowerValue->isEmpty() then 1 else lowerValue.integerValue() endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="upperBound" ordered="false" eType="//uml/UnlimitedNatural">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xD;&#xA;result = if upperValue->isEmpty() then 1 else upperValue.unlimitedValue() endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="compatibleWith" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.&#xD;&#xA;result = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i))"/>
        </eAnnotations>
        <eParameters name="other" ordered="false" eType="//uml/MultiplicityElement"/>
      </eOperations>
      <eOperations name="is" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The operation is determines if the upper and lower bound of the ranges are the ones given.&#xD;&#xA;result = (lowerbound = self.lowerbound and upperbound = self.upperbound)"/>
        </eAnnotations>
        <eParameters name="lowerbound" ordered="false" eType="//uml/Integer"/>
        <eParameters name="upperbound" ordered="false" eType="//uml/Integer"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false" eType="//uml/Boolean" defaultValueLiteral="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false" eType="//uml/UnlimitedNatural" volatile="true" transient="true" defaultValueLiteral="1" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the upper bound of the multiplicity interval."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false" eType="//uml/Integer" volatile="true" transient="true" defaultValueLiteral="1" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the lower bound of the multiplicity interval."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="upperValue" ordered="false" eType="//uml/ValueSpecification" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The specification of the upper bound for this multiplicity."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="lowerValue" ordered="false" eType="//uml/ValueSpecification" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The specification of the lower bound for this multiplicity."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ConnectableElement" eSuperTypes="//uml/TypedElement">
      <eAnnotations source="duplicates"/>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.&#xD;&#xA;A connectable element may be exposed as a connectable element template parameter."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="end" upperBound="-1" eType="//uml/ConnectorEnd" eOpposite="//uml/ConnectorEnd/role">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Denotes a connector that attaches to this connectable element."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ConnectorEnd" eSuperTypes="//uml/MultiplicityElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A connector end is an endpoint of a connector, which attaches the connector to a connectable element. Each connector end is part of one connector."/>
      </eAnnotations>
      <eOperations name="multiplicity">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The multiplicity of the connector end may not be more general than the multiplicity of the association typing the owning connector.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="part_with_port_empty">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a connector end is attached to a port of the containing classifier, partWithPort will be empty.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="role_and_part_with_port">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a connector end references both a role and a partWithPort, then the role must be a port that is defined by the type of the partWithPort.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="self_part_with_port">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The property held in self.partWithPort must not be a Port.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getDefiningEnd" ordered="false" eType="//uml/Property"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="definingEnd" ordered="false" eType="//uml/Property" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.&#xD;&#xA;"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="partWithPort" ordered="false" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates the role of the internal structure of a classifier with the port to which the connector end is attached."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="role" ordered="false" eType="//uml/ConnectableElement" eOpposite="//uml/ConnectableElement/end">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.&#xD;&#xA;"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="//uml/StructuralFeature //uml/ConnectableElement">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isConsistentWith" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="redefines"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived.&#xD;&#xA;redefinee.isRedefinitionContextValid(self)&#xD;&#xA;result = redefinee.oclIsKindOf(Property) and &#xA;  let prop : Property = redefinee.oclAsType(Property) in &#xA;  (prop.type.conformsTo(self.type) and &#xA;  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and &#xA;  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and &#xA;  (self.isDerived implies prop.isDerived) and&#xA;  (self.isComposite implies prop.isComposite))"/>
          </eAnnotations>
          <eParameters name="redefinee" ordered="false" lowerBound="1"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="isCompatibleWith" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for properties, the type must be conformant with the type of the specified parameterable element.&#xD;&#xA;&#xD;&#xA;result = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type)"/>
          </eAnnotations>
          <eAnnotations source="redefines"/>
          <eParameters name="p" ordered="false" lowerBound="1"/>
        </contents>
        <contents xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false" lowerBound="1" eType="//uml/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isReadOnly is true, the attribute may not be written to after initialization.&#xD;&#xA;If true, the attribute may only be read, and not written."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/StructuralFeature/isReadOnly"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.&#xD;&#xA;A property represents a set of instances that are owned by a containing classifier instance.&#xD;&#xA;A property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.&#xD;&#xA;Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property's type.&#xD;&#xA;Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."/>
      </eAnnotations>
      <eOperations name="multiplicity_of_composite">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A multiplicity of a composite aggregation must not have an upper bound greater than 1.&#xD;&#xA;A multiplicity on an aggregate end of a composite aggregation must not have an upper bound greater than 1.&#xD;&#xA;isComposite implies (upperBound()->isEmpty() or upperBound() &lt;= 1)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="subsetting_context_conforms">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.&#xD;&#xA;self.subsettedProperty->notEmpty() implies&#xA;  (self.subsettingContext()->notEmpty() and self.subsettingContext()->forAll (sc |&#xA;    self.subsettedProperty->forAll(sp |&#xA;      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="redefined_property_inherited">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A redefined property must be inherited from a more general classifier containing the redefining property.&#xD;&#xA;if (redefinedProperty->notEmpty()) then&#xD;&#xA;  (redefinitionContext->notEmpty() and&#xD;&#xA;      redefinedProperty->forAll(rp|&#xD;&#xA;        ((redefinitionContext->collect(fc|&#xD;&#xA;          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="subsetting_rules">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.&#xD;&#xA;self.subsettedProperty->forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="navigable_readonly">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Only a navigable property can be marked as readOnly.&#xD;&#xA;isReadOnly implies isNavigable()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="derived_union_is_derived">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A derived union is derived.&#xD;&#xA;isDerivedUnion implies isDerived"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="derived_union_is_read_only">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A derived union is read only.&#xD;&#xA;isDerivedUnion implies isReadOnly"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="subsetted_property_names">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A property may not subset a property with the same name.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="deployment_target">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A Property can be a DeploymentTarget if it is a kind of Node and functions as a part in the internal structure of an encompassing Node.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="binding_to_attribute">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A binding of a property template parameter representing an attribute must be to an attribute.&#xD;&#xA;(isAttribute(self) and (templateParameterSubstitution->notEmpty())&#xD;&#xA;  implies (templateParameterSubstitution->forAll(ts | isAttribute(ts.formal)))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getDefault" ordered="false" eType="//uml/String"/>
      <eOperations name="isSetDefault" ordered="false" eType="//uml/Boolean"/>
      <eOperations name="setDefault" ordered="false">
        <eParameters name="newDefault" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="setIsComposite" ordered="false">
        <eParameters name="newIsComposite" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="setOpposite" ordered="false">
        <eParameters name="newOpposite" ordered="false" eType="//uml/Property"/>
      </eOperations>
      <eOperations name="unsetDefault" ordered="false"/>
      <eOperations name="setIsNavigable" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the navigability of this property as indicated."/>
        </eAnnotations>
        <eParameters name="isNavigable" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="getOtherEnd" ordered="false" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the other end of the (binary) association in which this property is a member end."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="setBooleanDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this property to the specified Boolean value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="setIntegerDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this property to the specified integer value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/Integer"/>
      </eOperations>
      <eOperations name="setStringDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this property to the specified string value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/String"/>
      </eOperations>
      <eOperations name="setUnlimitedNaturalDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this property to the specified unlimited natural value."/>
        </eAnnotations>
        <eParameters name="value" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eOperations name="setNullDefaultValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Sets the default value for this property to the null value."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isAttribute" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isAttribute() is true if the Property is defined as an attribute of some classifier.&#xD;&#xA;result = Classifier.allInstances->exists(c | c.attribute->includes(p))"/>
        </eAnnotations>
        <eParameters name="p" ordered="false" eType="//uml/Property"/>
      </eOperations>
      <eOperations name="getOpposite" ordered="false" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.&#xD;&#xA;result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2&#xA;  then&#xA;    let otherEnd = (association.memberEnd - self)->any() in&#xA;      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif&#xA;    else Set {}&#xA;    endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isComposite" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The value of isComposite is true only if aggregation is composite.&#xD;&#xA;result = (self.aggregation = #composite)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="subsettingContext" ordered="false" upperBound="-1" eType="//uml/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.&#xD;&#xA;result = if association->notEmpty()&#xA;then association.endType-type&#xA;else if classifier->notEmpty() then Set{classifier} else Set{} endif&#xA;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isNavigable" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isNavigable() indicates whether it is possible to navigate across the property.&#xD;&#xA;result = not classifier->isEmpty() or association.owningAssociation.navigableOwnedEnd->includes(self)"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="class" ordered="false" eType="//uml/Class" changeable="false" volatile="true" transient="true">
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Class that owns the Property."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="datatype" ordered="false" eType="//uml/DataType" eOpposite="//uml/DataType/ownedAttribute">
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The DataType that owns this Property."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If isDerived is true, the value of the attribute is derived from information elsewhere.&#xD;&#xA;Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerivedUnion" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies whether the property is derived as the union of all of the properties that are constrained to subset it."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" ordered="false" eType="//uml/String" volatile="true" transient="true" unsettable="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies a String that represents a value to be used when no argument is supplied for the Property.&#xD;&#xA;A String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="aggregation" ordered="false" eType="//uml/AggregationKind" defaultValueLiteral="none">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the kind of aggregation that applies to the Property."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false" eType="//uml/Boolean" volatile="true" transient="true" defaultValueLiteral="false" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.&#xD;&#xA;This is a derived value, indicating whether the aggregation of the Property is composite or not."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedProperty" ordered="false" upperBound="-1" eType="//uml/Property">
        <eAnnotations source="subsets"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the properties that are redefined by this property."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="owningAssociation" ordered="false" eType="//uml/Association" eOpposite="//uml/Association/ownedEnd">
        <eAnnotations source="subsets" references="//uml/Property/association //uml/NamedElement/namespace"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the owning association of this property, if any."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="defaultValue" ordered="false" eType="//uml/ValueSpecification" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" ordered="false" eType="//uml/Property" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="subsettedProperty" ordered="false" upperBound="-1" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the properties of which this property is constrained to be a subset."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="association" ordered="false" eType="//uml/Association" eOpposite="//uml/Association/memberEnd">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the association of which this property is a member, if any."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" upperBound="-1" eType="//uml/Property" containment="true" eOpposite="//uml/Property/associationEnd">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An optional list of ordered qualifier attributes for the end. If the list is empty, then the Association is not qualified."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd" ordered="false" eType="//uml/Property" eOpposite="//uml/Property/qualifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Designates the optional association end that owns a qualifier attribute."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/owner"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="//uml/BehavioralFeature">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isConsistentWith" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="redefines"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'.&#xD;&#xA;A redefining operation is consistent with a redefined operation if it has the same number of owned parameters, and the type of each owned parameter conforms to the type of the corresponding redefined parameter. &#xD;&#xA;redefinee.isRedefinitionContextValid(self)&#xD;&#xA;result = (redefinee.oclIsKindOf(Operation) and&#xA;let op: Operation = redefinee.oclAsType(Operation) in&#xA;self.ownedParameter.size() = op.ownedParameter.size() and&#xA;forAll(i | op.ownedParameter[i].type.conformsTo(self.ownedParameter[i].type))&#xA;)"/>
          </eAnnotations>
          <eParameters name="redefinee" ordered="false" lowerBound="1"/>
        </contents>
        <contents xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1" eType="//uml/Parameter" containment="true" eOpposite="//uml/Parameter/operation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the ordered set of formal parameters of this BehavioralFeature.&#xD;&#xA;Specifies the parameters owned by this Operation."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/BehavioralFeature/ownedParameter"/>
        </contents>
        <contents xsi:type="ecore:EReference" name="raisedException" ordered="false" upperBound="-1" eType="//uml/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Types representing exceptions that may be raised during an invocation of this operation."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/BehavioralFeature/raisedException"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.&#xD;&#xA;An operation may invoke both the execution of method behaviors as well as other behavioral responses.&#xD;&#xA;Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."/>
      </eAnnotations>
      <eOperations name="at_most_one_return">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'&#xD;&#xA;self.ownedParameter->select(par | par.direction = #return)->size() &lt;= 1"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="only_body_for_query">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A bodyCondition can only be specified for a query operation.&#xD;&#xA;bodyCondition->notEmpty() implies isQuery"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getLower" ordered="false" eType="//uml/Integer"/>
      <eOperations name="getUpper" ordered="false" eType="//uml/UnlimitedNatural"/>
      <eOperations name="setIsOrdered" ordered="false">
        <eParameters name="newIsOrdered" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="setIsUnique" ordered="false">
        <eParameters name="newIsUnique" ordered="false" eType="//uml/Boolean"/>
      </eOperations>
      <eOperations name="setLower" ordered="false">
        <eParameters name="newLower" ordered="false" eType="//uml/Integer"/>
      </eOperations>
      <eOperations name="setType" ordered="false">
        <eParameters name="newType" ordered="false" eType="//uml/Type"/>
      </eOperations>
      <eOperations name="setUpper" ordered="false">
        <eParameters name="newUpper" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eOperations name="getReturnResult" ordered="false" eType="//uml/Parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the (only) return result parameter for this operation."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isOrdered" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false.&#xD;&#xA;result = if returnResult()->notEmpty() then returnResult()->any().isOrdered else false endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isUnique" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.&#xD;&#xA;result = if returnResult()->notEmpty() then returnResult()->any().isUnique else true endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="lowerBound" ordered="false" eType="//uml/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.&#xD;&#xA;result = if returnResult()->notEmpty() then returnResult()->any().lower else Set{} endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="upperBound" ordered="false" eType="//uml/UnlimitedNatural">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.&#xD;&#xA;result = if returnResult()->notEmpty() then returnResult()->any().upper else Set{} endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getType" ordered="false" eType="//uml/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type is not defined.&#xD;&#xA;result = if returnResult()->notEmpty() then returnResult()->any().type else Set{} endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="returnResult" ordered="false" upperBound="-1" eType="//uml/Parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set&#xD;&#xA;result = ownedParameter->select (par | par.direction = #return)"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="interface" ordered="false" eType="//uml/Interface" eOpposite="//uml/Interface/ownedOperation">
        <eAnnotations source="subsets"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Interface that owns this Operation."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="class" ordered="false" eType="//uml/Class" eOpposite="//uml/Class/ownedOperation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The class that owns the operation."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isQuery" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false" eType="//uml/Boolean" volatile="true" transient="true" defaultValueLiteral="false" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This information is derived from the return result for this Operation.&#xD;&#xA;Specifies whether the return parameter is ordered or not, if present."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false" eType="//uml/Boolean" volatile="true" transient="true" defaultValueLiteral="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This information is derived from the return result for this Operation.&#xD;&#xA;Specifies whether the return parameter is unique or not, if present."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false" eType="//uml/Integer" volatile="true" transient="true" defaultValueLiteral="1" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This information is derived from the return result for this Operation.&#xD;&#xA;Specifies the lower multiplicity of the return parameter, if present."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false" eType="//uml/UnlimitedNatural" volatile="true" transient="true" defaultValueLiteral="1" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This information is derived from the return result for this Operation.&#xD;&#xA;Specifies the upper multiplicity of the return parameter, if present."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedOperation" ordered="false" upperBound="-1" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Operations that are redefined by this Operation."/>
        </eAnnotations>
        <eAnnotations source="subsets"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="datatype" ordered="false" eType="//uml/DataType" eOpposite="//uml/DataType/ownedOperation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The DataType that owns this Operation."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" eType="//uml/Type" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This information is derived from the return result for this Operation.&#xD;&#xA;Specifies the return result of the operation, if present."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BehavioralFeature" eSuperTypes="//uml/Namespace">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isDistinguishableFrom" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="redefines" references="//uml/NamedElement/isDistinguishableFrom"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures.&#xD;&#xA;result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()&#xA;  then Set{}->including(self)->including(n)->isUnique(bf | bf.ownedParameter->collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif"/>
          </eAnnotations>
          <eParameters name="n" ordered="false" lowerBound="1" eType="//uml/NamedElement"/>
          <eParameters name="ns" ordered="false" lowerBound="1" eType="//uml/Namespace"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.&#xD;&#xA;A behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.&#xD;&#xA;A behavioral feature owns zero or more parameter sets."/>
      </eAnnotations>
      <eOperations name="createReturnResult" ordered="false" eType="//uml/Parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a return result parameter with the specified name and type."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="type" ordered="false" eType="//uml/Type"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1" eType="//uml/Parameter" containment="true">
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the ordered set of formal parameters of this BehavioralFeature."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="method" ordered="false" upperBound="-1" eType="//uml/Behavior" eOpposite="//uml/Behavior/specification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior)."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException" ordered="false" upperBound="-1" eType="//uml/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Types representing exceptions that may be raised during an invocation of this feature.&#xD;&#xA;The signals that the behavioral feature raises as exceptions."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameterSet" ordered="false" upperBound="-1" eType="//uml/ParameterSet" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The ParameterSets owned by this BehavioralFeature."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Behavior" eSuperTypes="//uml/Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.&#xD;&#xA;A behavior owns zero or more parameter sets."/>
      </eAnnotations>
      <eOperations name="parameters_match">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The parameters of the behavior must match the parameters of the implemented behavioral feature.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="feature_of_context_classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The implemented behavioral feature must be a feature (possibly inherited) of the context classifier of the behavior.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="must_realize">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If the implemented behavioral feature has been redefined in the ancestors of the owner of the behavior, then the behavior must realize the latest redefining behavioral feature.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="most_one_behaviour">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="There may be at most one behavior for a given pairing of classifier (as owner of the behavior) and behavioral feature (as specification of the behavior).&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getContext" ordered="false" eType="//uml/BehavioredClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReentrant" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Tells whether the behavior can be invoked while it is still executing from a previous invocation."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedBehavior" ordered="false" upperBound="-1" eType="//uml/Behavior">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References a behavior that this behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the behavior implements a behavioral feature, it replaces the redefined behavior. If the behavior is a classifier behavior, it extends the redefined behavior."/>
        </eAnnotations>
        <eAnnotations source="subsets"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1" eType="//uml/Parameter" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.&#xD;&#xA;"/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="context" ordered="false" eType="//uml/BehavioredClassifier" changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="subsets"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameterSet" ordered="false" upperBound="-1" eType="//uml/ParameterSet" containment="true">
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The ParameterSets owned by this Behavior."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="specification" ordered="false" eType="//uml/BehavioralFeature" eOpposite="//uml/BehavioralFeature/method">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. If a behavior does not have a specification, it is directly associated with a classifier (i.e., it is the behavior of the classifier as a whole)."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="//uml/BehavioredClassifier //uml/StructuredClassifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A class describes a set of objects that share the same specifications of features, constraints, and semantics.&#xD;&#xA;A class may be designated as active (i.e., each of its instances having its own thread of control) or passive (i.e., each of its instances executing within the context of some other object). A class may also specify which signals the instances of this class handle.&#xD;&#xA;A class has the capability to have an internal structure and ports.&#xD;&#xA;Class has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="inherit" ordered="false" upperBound="-1" eType="//uml/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The inherit operation is overridden to exclude redefined properties.&#xD;&#xA;result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/Classifier/inherit"/>
          <eParameters name="inhs" ordered="false" upperBound="-1" eType="//uml/NamedElement"/>
        </contents>
        <contents xsi:type="ecore:EAttribute" name="isAbstract" ordered="false" lowerBound="1" eType="//uml/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="True when a class is abstract.&#xD;&#xA;If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/Classifier/isAbstract"/>
        </contents>
        <contents xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1" eType="//uml/Property" containment="true" eOpposite="//uml/Property/class">
          <eAnnotations source="redefines"/>
          <eAnnotations source="subsets" references="//uml/Classifier/attribute //uml/Namespace/ownedMember"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The attributes (i.e. the properties) owned by the class."/>
          </eAnnotations>
        </contents>
      </eAnnotations>
      <eOperations name="passive_class">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A passive class may not own receptions.&#xD;&#xA;not self.isActive implies self.ownedReception.isEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getExtensions" ordered="false" upperBound="-1"/>
      <eOperations name="createOwnedOperation" ordered="false" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this class."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="parameterNames" ordered="false" upperBound="-1" eType="//uml/String"/>
        <eParameters name="parameterTypes" ordered="false" upperBound="-1" eType="//uml/Type"/>
        <eParameters name="returnType" ordered="false" eType="//uml/Type"/>
      </eOperations>
      <eOperations name="isMetaclass" ordered="false" eType="//uml/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether this class is a metaclass."/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="nestedClassifier" upperBound="-1" eType="//uml/Classifier" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References all the Classifiers that are defined (nested) within the Class."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1" eType="//uml/Operation" containment="true" eOpposite="//uml/Operation/class">
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The operations owned by the class."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" ordered="false" upperBound="-1" eType="//uml/Class" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This gives the superclasses of a class."/>
        </eAnnotations>
        <eAnnotations source="redefines" references="//uml/Classifier/general"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isActive" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BehavioredClassifier" eSuperTypes="//uml/Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A behaviored classifier may have an interface realization.&#xD;&#xA;A classifier can have behavior specifications defined in its namespace. One of these may specify the behavior of the classifier itself."/>
      </eAnnotations>
      <eOperations name="class_behavior">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a behavior is classifier behavior, it does not have a specification.&#xD;&#xA;self.classifierBehavior.notEmpty() implies self.specification.isEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="getImplementedInterfaces" ordered="false" upperBound="-1" eType="//uml/Interface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves the interfaces on which this behaviored classifier has an interface realization dependency."/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAllImplementedInterfaces" ordered="false" upperBound="-1" eType="//uml/Interface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Retrieves all the interfaces on which this behaviored classifier or any of its parents has an interface realization dependency."/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedBehavior" ordered="false" upperBound="-1" eType="//uml/Behavior" containment="true">
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References behavior specifications owned by a classifier."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="classifierBehavior" ordered="false" eType="//uml/Behavior">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A behavior specification that specifies the behavior of the classifier itself."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/BehavioredClassifier/ownedBehavior"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="interfaceRealization" ordered="false" upperBound="-1" eType="//uml/InterfaceRealization" containment="true" eOpposite="//uml/InterfaceRealization/implementingClassifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The set of InterfaceRealizations owned by the BehavioredClassifier. Interface realizations reference the Interfaces of which the BehavioredClassifier is an implementation."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement //uml/NamedElement/clientDependency"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InterfaceRealization">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An interface realization is a specialized realization relationship between a classifier and an interface. This relationship signifies that the realizing classifier conforms to the contract specified by the interface."/>
      </eAnnotations>
      <eSuperTypes href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contract" ordered="false" eType="//uml/Interface">
        <eAnnotations source="subsets" references="//uml/Dependency/supplier"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Interface specifying the conformance contract."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementingClassifier" ordered="false" eType="//uml/BehavioredClassifier" eOpposite="//uml/BehavioredClassifier/interfaceRealization">
        <eAnnotations source="subsets" references="//uml/Dependency/client"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points)."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Interface" eSuperTypes="//uml/Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.&#xD;&#xA;Interfaces may include receptions (in addition to operations).&#xD;&#xA;Since an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface."/>
      </eAnnotations>
      <eOperations name="visibility">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The visibility of all features owned by an interface must be public.&#xD;&#xA;self.feature->forAll(f | f.visibility = #public)"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="createOwnedOperation" ordered="false" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this interface."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="parameterNames" ordered="false" upperBound="-1" eType="//uml/String"/>
        <eParameters name="parameterTypes" ordered="false" upperBound="-1" eType="//uml/Type"/>
        <eParameters name="returnType" ordered="false" eType="//uml/Type"/>
      </eOperations>
      <eOperations name="createOwnedAttribute" ordered="false" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this interface."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="type" ordered="false" eType="//uml/Type"/>
        <eParameters name="lower" ordered="false" eType="//uml/Integer"/>
        <eParameters name="upper" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1" eType="//uml/Property" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The attributes (i.e. the properties) owned by the class."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Classifier/attribute //uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1" eType="//uml/Operation" containment="true" eOpposite="//uml/Operation/interface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The operations owned by the class."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="nestedClassifier" upperBound="-1" eType="//uml/Classifier" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References all the Classifiers that are defined (nested) within the Class."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedInterface" ordered="false" upperBound="-1" eType="//uml/Interface">
        <eAnnotations source="subsets"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References all the Interfaces redefined by this Interface."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ParameterSet" eSuperTypes="//uml/NamedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A parameter set is an element that provides alternative sets of inputs or outputs that a behavior may use."/>
      </eAnnotations>
      <eOperations name="same_parameterized_entity">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The parameters in a parameter set must all be inputs or all be outputs of the same parameterized entity, and the parameter set is owned by that entity.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="input">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a behavior has input parameters that are in a parameter set, then any inputs that are not in a parameter set must be streaming. Same for output parameters.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="two_parameter_sets">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Two parameter sets cannot have exactly the same set of parameters.&#xD;&#xA;true"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" ordered="false" upperBound="-1" eType="//uml/Parameter" eOpposite="//uml/Parameter/parameterSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Parameters in the parameter set."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="//uml/Classifier">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="inherit" ordered="false" upperBound="-1" eType="//uml/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The inherit operation is overridden to exclude redefined properties.&#xD;&#xA;result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/Classifier/inherit"/>
          <eParameters name="inhs" ordered="false" upperBound="-1" eType="//uml/NamedElement"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types."/>
      </eAnnotations>
      <eOperations name="createOwnedOperation" ordered="false" eType="//uml/Operation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this data type."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="parameterNames" ordered="false" upperBound="-1" eType="//uml/String"/>
        <eParameters name="parameterTypes" ordered="false" upperBound="-1" eType="//uml/Type"/>
        <eParameters name="returnType" ordered="false" eType="//uml/Type"/>
      </eOperations>
      <eOperations name="createOwnedAttribute" ordered="false" eType="//uml/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this data type."/>
        </eAnnotations>
        <eParameters name="name" ordered="false" eType="//uml/String"/>
        <eParameters name="type" ordered="false" eType="//uml/Type"/>
        <eParameters name="lower" ordered="false" eType="//uml/Integer"/>
        <eParameters name="upper" ordered="false" eType="//uml/UnlimitedNatural"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1" eType="//uml/Property" containment="true" eOpposite="//uml/Property/datatype">
        <eAnnotations source="subsets" references="//uml/Classifier/attribute //uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Attributes owned by the DataType."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1" eType="//uml/Operation" containment="true" eOpposite="//uml/Operation/datatype">
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Operations owned by the DataType."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StructuralFeature" eSuperTypes="//uml/TypedElement //uml/MultiplicityElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.&#xD;&#xA;By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="States whether the feature's value may be modified by a client."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="AggregationKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property."/>
      </eAnnotations>
      <eLiterals name="none">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the property has no aggregation."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="shared" value="1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the property has a shared aggregation."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="composite" value="2">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts)."/>
        </eAnnotations>
      </eLiterals>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ParameterDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters."/>
      </eAnnotations>
      <eLiterals name="in">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that parameter values are passed into the behavioral element by the caller."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="inout" value="1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="out" value="2">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that parameter values are passed from a behavioral element out to the caller."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="return" value="3">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that parameter values are passed as return values from a behavioral element back to the caller."/>
        </eAnnotations>
      </eLiterals>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ParameterEffectKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The datatype ParameterEffectKind is an enumeration that indicates the effect of a behavior on values passed in or out of its parameters."/>
      </eAnnotations>
      <eLiterals name="create">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the behavior creates values."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="read" value="1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the behavior reads values."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="update" value="2">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the behavior updates values."/>
        </eAnnotations>
      </eLiterals>
      <eLiterals name="delete" value="3">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates that the behavior deletes values."/>
        </eAnnotations>
      </eLiterals>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StringExpression" eSuperTypes="//uml/Expression">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An expression that specifies a string value that is derived by concatenating a set of sub string expressions, some of which might be template parameters."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false" lowerBound="1" eType="//uml/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.&#xD;&#xA;&#xD;&#xA;result = if subExpression->notEmpty()&#xA;then subExpression->iterate(se; stringValue = &#x91;| stringValue.concat(se.stringValue()))&#xA;else operand->iterate()(op; stringValue = &#x91; | stringValue.concat(op.value))"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/stringValue"/>
        </contents>
      </eAnnotations>
      <eOperations name="operands">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="All the operands of a StringExpression must be LiteralStrings&#xD;&#xA;operand->forAll (op | op.oclIsKindOf (LiteralString))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="subexpressions">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to&#xA;define a collating sequence between operands and subexpressions).&#xA;&#xD;&#xA;if subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty()"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="subExpression" ordered="false" upperBound="-1" eType="//uml/StringExpression" containment="true" eOpposite="//uml/StringExpression/owningExpression">
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The StringExpressions that constitute this StringExpression."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="owningExpression" ordered="false" eType="//uml/StringExpression" eOpposite="//uml/StringExpression/subExpression">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The string expression of which this expression is a substring."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/owner"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="//uml/ValueSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.&#xD;&#xA;An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" ordered="false" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The symbol associated with the node in the expression tree."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="operand" upperBound="-1" eType="//uml/ValueSpecification" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies a sequence of operands."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="//uml/Element/ownedElement"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="//uml/DataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An enumeration is a data type whose values are enumerated in the model as enumeration literals."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1" eType="//uml/EnumerationLiteral" containment="true" eOpposite="//uml/EnumerationLiteral/enumeration">
        <eAnnotations source="subsets" references="//uml/Namespace/ownedMember"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The ordered set of literals for this Enumeration."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An enumeration literal is a user-defined data value for an enumeration."/>
      </eAnnotations>
      <eSuperTypes href="../../../fr.irisa.triskell.kermeta.patternmatching/src/kermeta/pattern/metamodel/PatternFramework.ecore#//PObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" ordered="false" eType="//uml/Enumeration" eOpposite="//uml/Enumeration/ownedLiteral">
        <eAnnotations source="subsets" references="//uml/NamedElement/namespace"/>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The Enumeration that this EnumerationLiteral is a member of."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="//uml/DataType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralSpecification" eSuperTypes="//uml/ValueSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A literal specification identifies a literal constant being modeled."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralInteger" eSuperTypes="//uml/LiteralSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A literal integer is a specification of an integer value."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false" lowerBound="1" eType="//uml/String">
          <eAnnotations source="redefines" references="//uml/ValueSpecification/stringValue"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/isComputable"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="integerValue" ordered="false" lowerBound="1" eType="//uml/Integer">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query integerValue() gives the value.&#xD;&#xA;result = value"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/integerValue"/>
        </contents>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false" eType="//uml/Integer" defaultValueLiteral="0">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The specified Integer value."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralString" eSuperTypes="//uml/LiteralSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A literal string is a specification of a string value."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/isComputable"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false" lowerBound="1" eType="//uml/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query stringValue() gives the value.&#xD;&#xA;result = value"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/stringValue"/>
        </contents>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The specified String value."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralBoolean" eSuperTypes="//uml/LiteralSpecification">
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false" lowerBound="1" eType="//uml/String">
          <eAnnotations source="redefines" references="//uml/ValueSpecification/stringValue"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/isComputable"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="booleanValue" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query booleanValue() gives the value.&#xD;&#xA;result = value"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/booleanValue"/>
        </contents>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A literal Boolean is a specification of a Boolean value."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false" eType="//uml/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The specified Boolean value."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralNull" eSuperTypes="//uml/LiteralSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A literal null specifies the lack of a value."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="redefines" references="//uml/ValueSpecification/isComputable"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
          </eAnnotations>
        </contents>
        <contents xsi:type="ecore:EOperation" name="isNull" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isNull() returns true.&#xD;&#xA;result = true"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/isNull"/>
        </contents>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="LiteralUnlimitedNatural" eSuperTypes="//uml/LiteralSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A literal unlimited natural is a specification of an unlimited natural number."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false" lowerBound="1" eType="//uml/String">
          <eAnnotations source="redefines" references="//uml/ValueSpecification/stringValue"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false" lowerBound="1" eType="//uml/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="//uml/ValueSpecification/isComputable"/>
        </contents>
        <contents xsi:type="ecore:EOperation" name="unlimitedValue" ordered="false" lowerBound="1" eType="//uml/UnlimitedNatural">
          <eAnnotations source="redefines" references="//uml/ValueSpecification/unlimitedValue"/>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query unlimitedValue() gives the value.&#xD;&#xA;result = value"/>
          </eAnnotations>
        </contents>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false" eType="//uml/UnlimitedNatural" defaultValueLiteral="0">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The specified UnlimitedNatural value."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OpaqueBehavior" eSuperTypes="//uml/Behavior">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An behavior with implementation-specific semantics."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" upperBound="-1" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies the behavior in one or more languages."/>
        </eAnnotations>
        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
          <details key="kind" value="element"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" upperBound="-1" eType="//uml/String" unsettable="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Languages the body strings use in the same order as the body strings."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FunctionBehavior" eSuperTypes="//uml/OpaqueBehavior">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A function behavior is an opaque behavior that does not access or modify any objects or other external data."/>
      </eAnnotations>
      <eOperations name="one_output_parameter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A function behavior has at least one output parameter.&#xD;&#xA;self.ownedParameters->&#xD;&#xA;  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
      <eOperations name="types_of_parameters">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The types of parameters are all data types, which may not nest anything but other datatypes.&#xD;&#xA;def: hasAllDataTypeAttributes(d : DataType) : Boolean =&#xD;&#xA;  d.ownedAttribute->forAll(a |&#xD;&#xA;    a.type.oclIsTypeOf(DataType) and&#xD;&#xA;      hasAllDataTypeAttributes(a.type))&#xD;&#xA;self.ownedParameters->forAll(p | p.type.notEmpty() and&#xD;&#xA;  p.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p))"/>
        </eAnnotations>
        <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
        <eParameters name="diagnostics">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
        </eParameters>
        <eParameters name="context">
          <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
        </eParameters>
      </eOperations>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
