/* $Id: test3_3.kmt,v 1.1 2008-05-30 08:20:21 bmorin Exp $
 * Creation date: March 19, 2008
 * License:
 * Copyright: IRISA / INRIA Rennes Bretagne Atlantique
 * Authors: Brice Morin bmorin@irisa.fr
 */
@mainClass "test::TestRuntime3_3"
@mainOperation "main"


package test;
require kermeta

//Loading the platform adapter (here, the example 1 for the Fractal platform)
//just change this require to adapt another platform and/or another application
require "platform:/resource/SmartAdapters/program/adapter/FractalAdapterExample2.kmt"

using kermeta::standard 
using kermeta::utils
using org::kermeta::runtime::adapter

class TestRuntime3_3
{
	operation main() : Void is do 
		stdio.writeln("K> ###START###")
		var modelUri : String init "platform:/resource/SmartAdapters/examples/runtime/model/referenceModel.art"
		var wovenModelUri : String init "platform:/resource/SmartAdapters/examples/runtime/model/woven2.art"
		var finalModelUri : String init "platform:/resource/SmartAdapters/examples/runtime/model/result2.art"
		var metamodelUri : String init "platform:/resource/SmartAdapters/metamodel/domain/metamodel@runtime.ecore"
					
		var platformAdapter : PlatformAdapter init PlatformAdapter.new 
		platformAdapter.~init
		
		stdio.writeln("K> Starting the system...")
		platformAdapter.run
		stdio.writeln("K> OK!")

		stdio.writeln("K> Generating and saving the model...")
		platformAdapter.saveModel(modelUri)
		stdio.writeln("K> OK!")
		
		stdio.writeln("K> Loading the model...")
		wovenModelUri := wovenModelUri.replace("platform:/resource","C:/work/dev/Kermeta")
		platformAdapter.loadUpdateModel(wovenModelUri)
		stdio.writeln("K> OK!")

		stdio.writeln("K> Generating and saving the model...")
		platformAdapter.saveModel(finalModelUri)
		stdio.writeln("K> OK!")
		
		stdio.writeln("K> ###END###")
	end
}