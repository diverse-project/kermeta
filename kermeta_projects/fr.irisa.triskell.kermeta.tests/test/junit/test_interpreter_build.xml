<!-- $Id$ -->
<project name="run interpreter tests" default="all" basedir=".">

	<description>
        Run interpreter tests
    </description>

	<property name="report.dir" location="../../reports" />
	<property name="eclipse.home" location="c:/eclipse3.5/eclipse" />
	<property name="cobertura.dir" location="\\nas1a\triskell\bin\multiplatform\cobertura-1.7" />
	<property name="dot.or.bin" value="bin"/>
	<!-- <property name="dot.or.bin" value="@dot"/> -->
	<property name="dot.or.buildclass" value="build/class"/>
	<!-- <property name="dot.or.buildclass" value="@dot"/> -->
		


	<property name="build.bin" location="../../bin" />
	<property name="src" location="../../src" />
	<property name="test.src" location="../../test/junit" />
	<property name="coverage.dir" location="${report.dir}/coverage" />
	<property name="coverage.xml.dir" location="${report.dir}/coverage/xml" />
	<property name="coverage.html.dir" location="${report.dir}/coverage/html" />

	<property name="instrumented.dir" location="../instrumented" />
	<property name="cobertura.lib.dir" location="${cobertura.dir}/lib" />


	<property name="kermeta.t.class" location="..\..\build\class" />
	<property name="kermeta.model.jar" location="..\..\..\fr.irisa.triskell.kermeta.model\${dot.or.buildclass}" />
	<property name="kermeta.io.jar" location="..\..\..\fr.irisa.triskell.kermeta.io\${dot.or.buildclass}" />
	<!-- <property name="kermeta.io.loader.jar" location="..\..\..\org.kermeta.io.loader\${dot.or.bin}" /> -->
	<property name="kermeta.interest.jar" location="..\..\..\org.kermeta.interest\${dot.or.bin}" />
	<property name="kermeta.interpreter.jar" location="..\..\..\fr.irisa.triskell.kermeta.interpreter\${dot.or.buildclass}" />
	<property name="triskell.eclipse.util.jar" location="..\..\..\fr.irisa.triskell.eclipse.util\${dot.or.bin}" />
	<property name="kermeta.merger.jar" location="..\..\..\org.kermeta.merger\${dot.or.bin}" />
	<property name="kermeta.log4j.util.jar" location="..\..\..\org.kermeta.log4j.util\${dot.or.bin}" />
	<property name="traceability.jar" location="..\..\..\fr.irisa.triskell.traceability.model\${dot.or.bin}" />
	<property name="kermeta.tests.jar" location="..\..\..\fr.irisa.triskell.kermeta.tests\${dot.or.bin}" />
	<property name="ecoretools.registration.jar" location="..\..\..\org.eclipse.emf.ecoretools.registration\${dot.or.bin}"/>

		<property name="log4j.jar" location="${eclipse.home}/plugins/org.apache.log4j_1.2.13.v200903072027.jar" />
		<property name="antlr.jar" location="..\..\..\org.antlr.antlr2\${dot.or.bin}"/>
		<!--<property name="ldt-core.jar" location="..\..\..\fr.irisa.triskell.kermeta\lib\thirdparty\ldt-core.jar" />-->
	<!--<property name="emfatic-core.jar" location="..\..\..\org.eclipse.gymnast.runtime.core\${dot.or.bin}"/>-->
	<property name="emfatic-core.jar" location="..\..\..\org.eclipse.gymnast.runtime.core\${dot.or.bin}"/>

		<property name="emf.common.jar" location="${eclipse.home}/plugins/org.eclipse.emf.common_2.5.0.v200906151043.jar" />
		<property name="emf.ecore.jar" location="${eclipse.home}/plugins/org.eclipse.emf.ecore_2.5.0.v200906151043.jar" />
		<property name="emf.ecore.xmi.jar" location="${eclipse.home}/plugins/org.eclipse.emf.ecore.xmi_2.5.0.v200906151043.jar" />
		<property name="emf.validation.jar" location="${eclipse.home}/plugins/org.eclipse.emf.validation_1.3.0.v200901271722.jar" />
		<property name="debug.core.jar" location="${eclipse.home}/plugins/org.eclipse.debug.core_3.5.0.v20090526-1600.jar" />
		<property name="equinox.common.jar" location="${eclipse.home}/plugins/org.eclipse.equinox.common_3.5.0.v20090520-1800.jar" />
		<property name="equinox.registry.jar" location="${eclipse.home}/plugins/org.eclipse.equinox.registry_3.4.100.v20090520-1800.jar" />
		<property name="equinox.preferences.jar" location="${eclipse.home}/plugins/org.eclipse.equinox.preferences_3.2.300.v20090520-1800.jar" />
		<property name="osgi.jar" location="${eclipse.home}/plugins/org.eclipse.osgi_3.5.0.v20090520.jar" />
		<property name="core.runtime.jar" location="${eclipse.home}/plugins/org.eclipse.core.runtime_3.5.0.v20090525.jar" />
		<property name="core.jobs.jar" location="${eclipse.home}/plugins/org.eclipse.core.jobs_3.4.100.v20090429-1800.jar" />
		<property name="core.resources.jar" location="${eclipse.home}/plugins/org.eclipse.core.resources_3.5.0.v20090512.jar" />
		<property name="ui.workbench.jar" location="${eclipse.home}/plugins/org.eclipse.ui.workbench_3.5.0.I20090603-2000.jar" />
		<property name="ui.console.jar" location="${eclipse.home}/plugins/org.eclipse.ui.console_3.4.0.v20090513.jar" />
		<property name="jface.jar" location="${eclipse.home}/plugins/org.eclipse.jface_3.5.0.I20090525-2000.jar" />
		<property name="swt.jar" location="${eclipse.home}/plugins/org.eclipse.swt.gtk.linux.x86_3.5.0.v3550b.jar" />
		<property name="emf.compare.jar" location="${eclipse.home}/plugins/org.eclipse.emf.compare_1.0.0.v200906160908.jar" />
		<property name="emf.compare.diff.jar" location="${eclipse.home}/plugins/org.eclipse.emf.compare.diff_1.0.0.v200906160908.jar" />
		<property name="emf.compare.match.jar" location="${eclipse.home}/plugins/org.eclipse.emf.compare.match_1.0.0.v200906160908.jar" />
	<property name="junit4.jar" location="${eclipse.home}/plugins/org.junit4_4.5.0.v20090423/junit.jar" />
	<!--<property name="junit4.jar" location="file://C:/eclipse3.4_v1.2.0/eclipse/plugins/org.junit_3.8.2.v20080602-1318/junit.jar" />-->
	<property name="hamcrest.core.jar" location="${eclipse.home}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar" />
	<property name="apache.commons.logging.jar" location="..\..\..\org.kermeta.log4j.util\lib\thirdparty\commons-logging-1.1.1\commons-logging-1.1.1.jar" />
	<property name="apache.commons.logging.adapters.jar" location="..\..\..\org.kermeta.log4j.util\lib\thirdparty\commons-logging-1.1.1\commons-logging-adapters-1.1.1.jar" />
	<property name="apache.commons.logging.api.jar" location="..\..\..\org.kermeta.log4j.util\lib\thirdparty\commons-logging-1.1.1\commons-logging-api-1.1.1.jar" />
					
	
	<path id="interpreter.class.path">
		<pathelement location="${kermeta.model.jar}" />
		<pathelement location="${kermeta.interpreter.jar}" />
		<pathelement location="${kermeta.io.jar}" />
		<!-- <pathelement location="${kermeta.io.loader.jar}" /> -->
		<pathelement location="${kermeta.merger.jar}" />
		<pathelement location="${kermeta.interest.jar}" />
		<pathelement location="${kermeta.model.jar}" />
		<pathelement location="${kermeta.log4j.util.jar}" />
		<pathelement location="${kermeta.tests.jar}" />
		<pathelement location="${triskell.eclipse.util.jar}" />
		<pathelement location="${traceability.jar}" />
	    <pathelement location="${ecoretools.registration.jar}"/>
		<pathelement location="${debug.core.jar}" />
		<pathelement location="${emf.common.jar}" />
		<pathelement location="${emf.ecore.jar}" />
		<pathelement location="${emf.ecore.xmi.jar}" />
		<pathelement location="${emf.validation.jar}" />
		<pathelement location="${emf.compare.jar}" />
		<pathelement location="${emf.compare.diff.jar}" />
		<pathelement location="${emf.compare.match.jar}" />
		<pathelement location="${equinox.common.jar}" />
		<pathelement location="${equinox.registry.jar}" />
		<pathelement location="${equinox.preferences.jar}" />
		<pathelement location="${osgi.jar}" />
		<pathelement location="${core.runtime.jar}" />
		<pathelement location="${core.resources.jar}" />
		<pathelement location="${ui.workbench.jar}" />
		<pathelement location="${ui.console.jar}" />
		<pathelement location="${jface.jar}" />
		<pathelement location="${swt.jar}" />
		<pathelement location="${core.jobs.jar}" />
		<pathelement location="${log4j.jar}" />
		<pathelement location="${junit4.jar}" />
		<pathelement location="${hamcrest.core.jar}" />
		<pathelement location="${apache.commons.logging.jar}" />
		<pathelement location="${apache.commons.logging.adapters.jar}" />
		<pathelement location="${apache.commons.logging.api.jar}" />
		<pathelement location="${antlr.jar}" />
	    <pathelement location="${emfatic-core.jar}"/>
		<pathelement path="${java.class.path}" />
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
		</fileset>
		<fileset dir="${cobertura.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!--<path id="cobertura_classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
		</fileset>
		<fileset dir="${cobertura.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>-->

	<taskdef classpathref="interpreter.class.path" resource="tasks.properties" />

	<!--<target name="all" depends="compile_java,instrument,test,coverage-report" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports." />-->
	<target name="all" depends="test" description="run the tests and generate JUnit reports." />


	<target name="compile_java">
		<mkdir dir="${build.bin}" />
		<echo>${eclipse.home}</echo>
		<echo>${kermeta.interpreter.jar}</echo>
		<javac srcdir="${src}:${test.src}" destdir="${build.bin}" debug="true">
			<classpath>
				<!--<pathelement path="${MTLcompiler.path}/bin"/>-->
				<path refid="interpreter.class.path" />
			</classpath>
		</javac>
	</target>

	<target name="instrument" depends="compile_java">
		<!--
			Remove the coverage data file and any old instrumentation.
		-->
		<delete file="cobertura.ser" />
		<delete dir="${instrumented.dir}" />
		<mkdir dir="${coverage.dir}" />

		<!--
			Instrument the application classes, writing the
			instrumented classes into ${build.instrumented.dir}.
		-->
		<cobertura-instrument datafile="${coverage.dir}/basic_coverage.ser" todir="${instrumented.dir}">

			<!--
				The following line causes instrument to ignore any
				source line containing a reference to log4j, for the
				purposes of coverage reporting.
			-->
			<ignore regex="org.apache.log4j.*" />

			<fileset dir="${build.bin}">
				<!--
					Instrument all the application classes, but
					don't instrument the test classes.
				-->
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>
	<target name="coverage-check">
		<cobertura-check branchrate="34" totallinerate="100" />
	</target>

	<target name="coverage-report">
		<!--
			Generate an XML file containing the coverage data using
			the "srcdir" attribute.
		-->
		<cobertura-report datafile="${coverage.dir}/basic_coverage.ser" srcdir="${src}" destdir="${coverage.xml.dir}" format="xml" />
		<!--
			Generate a series of HTML files containing the coverage
			data in a user-readable form using nested source filesets.
		-->
		<cobertura-report datafile="${coverage.dir}/basic_coverage.ser" destdir="${coverage.html.dir}">
			<fileset dir="${src}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>

	<target name="test" description="run interpreter tests"> <!--  depends="compile_java"> -->
		<mkdir dir="${report.dir}" />
		<mkdir dir="${report.dir}/html" />
		<echo>${hamcrest.core.jar} </echo>
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" fork="yes">
			<jvmarg value="-Xms40m" />
			<jvmarg value="-Xmx512m" />
			<!--<classpath location="${instrumented.dir}" />-->
			<classpath>
				<pathelement location="${instrumented.dir}" />
				<pathelement location="${kermeta.interpreter.class}" />

				<pathelement location="${hamcrest.core.jar}" />
				<!-- this entry is normally not usefull because duplicate with the instrumented dir, 
		    	however for some unkown reason, sometimes some classes are not build correctly-->
				<path refid="interpreter.class.path" />
			</classpath>
			<!--
				The instrumented classes reference classes used by the
				Cobertura runtime, so Cobertura and its dependencies
				must be on your classpath.
			-->
			<!--<classpath refid="cobertura_classpath" />-->

			<formatter type="plain" />
			<test name="kermeta_interpreter.test.JunitTestSuite" haltonfailure="no" todir="${report.dir}" outfile="TEST-interpreter-result">
				<formatter type="xml" />
			</test>
			<!-- <test name="kermeta_interpreter.emf_test.JunitTestSuite" haltonfailure="no" todir="${report.dir}" outfile="TEST-emf-result">
				<formatter type="xml" /> 
			</test> this test is run separately -->
			<test name="kermeta_interpreter.constraint_test.JunitTestSuite" haltonfailure="no" todir="${report.dir}" outfile="TEST-constraint-result">
				<formatter type="xml" />
			</test>
			<test name="kermeta_interpreter.jar_test.JunitTestSuite" haltonfailure="no" todir="${report.dir}" outfile="TEST-jar-result">
				<formatter type="xml" />
			</test>
			<!--<batchtest todir="${reports.xml.dir}" unless="testcase">
			<fileset dir="${src}">
				<include name="**/*Test.java" />
			</fileset>
		  </batchtest>-->
		</junit>
		<junit printsummary="yes" haltonfailure="no" showoutput="no" fork="yes">
			<jvmarg value="-Xms40m" />
			<jvmarg value="-Xmx512m" />
			<!--<classpath location="${instrumented.dir}" />-->
			<classpath>
				<pathelement location="${instrumented.dir}" />
				<pathelement location="${kermeta.interpreter.class}" />
				<!-- this entry is normally not usefull because duplicate with the instrumented dir, 
				    	however for some unkown reason, sometimes some classes are not build correctly-->
				<path refid="interpreter.class.path" />
			</classpath>
			<!--
						The instrumented classes reference classes used by the
						Cobertura runtime, so Cobertura and its dependencies
						must be on your classpath.-->
			<!--<classpath refid="cobertura_classpath" />-->

			<formatter type="plain" />

			<test name="kermeta_interpreter.emf_test.JunitTestSuite" haltonfailure="no" todir="${report.dir}" outfile="TEST-emf-result">
				<formatter type="xml" />
			</test>

			<!--<batchtest todir="${reports.xml.dir}" unless="testcase">
					<fileset dir="${src}">
						<include name="**/*Test.java" />
					</fileset>
				  </batchtest>-->
		</junit>
		<echo>Generate intermediate report</echo>
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${report.dir}/html" />
		</junitreport>
	</target>
</project>
