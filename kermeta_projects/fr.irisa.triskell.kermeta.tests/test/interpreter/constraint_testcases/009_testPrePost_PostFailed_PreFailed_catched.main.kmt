// $Id: 009_testPrePost_PostFailed_PreFailed_catched.main.kmt,v 1.3 2008-07-31 16:11:48 dvojtise Exp $
@mainClass "prepost_PostFailed_PreFailed::Main"
@mainOperation "main"


package prepost_PostFailed_PreFailed;

require kermeta

using kermeta::standard
using kermeta::exceptions
using kermeta::kunit


class Main inherits MainParent, TestCase 
{
	reference b : Boolean
	reference strMain : Boolean
	
	operation main() : Void is do
    	var tr : TestRunner init TestRunner.new
		tr.run(Main)
		tr.printTestResult
    end
	
    operation test0() : Void is
     do
        str := "truc"
        strParent := "trucParent"
        b := true	
 		strMain := true
 
 		// to make the execution fail:
 		strMain := false
        b := false
  	
 		
        do
        	truc("truc")
        	assert(false)
        	rescue (err : ConstraintViolatedPre)
        		stdio.writeln(err.toString)
        		stdio.writeln(err.message)
        		assert(true)
        	rescue (err : ConstraintViolatedPost) //will have no result because the execution of truc() will stop has soon as the precondition will be violated
        		stdio.writeln(err.toString)
        		stdio.writeln(err.message)
        		assert(false)
        end      
     end
     
     method truc(param : String)
     pre lapre is b
     post lapost is do strMain end
     post lapost2 is do strParent@pre == "trucParent" and str == param end
     is
     do   	
        stdio.writeln("test")
        str := param
        b := false
     end
     
}

class MainParent
{
	reference strParent : String 
	reference str : String
	
	operation truc(param : String) 
	pre lapreparent1 is do str == "truc" end
	post lapostparent1 is do strParent == "trucParent"  and str == "truc" end
	is
	abstract
	
}

