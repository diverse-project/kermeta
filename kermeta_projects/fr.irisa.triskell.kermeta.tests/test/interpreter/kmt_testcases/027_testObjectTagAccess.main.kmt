/* $Id: 027_testObjectTagAccess.main.kmt,v 1.3 2007-10-12 13:29:19 dvojtise Exp $
 * Creation date: August 23, 2007
 * License:	EPL
 * Copyright:
 * Authors:
 *     Didier Vojtisek
 */
@mainClass "testTagAccess::TestTagReflexiveAccess"
@mainOperation "main"

package testTagAccess;

require kermeta

using kermeta::standard
using kermeta::utils
using kermeta::reflection
using kermeta::kunit


/**
 * checks various access the tag attribute inherited from Object
 */
 @bla "fff"
class TestTagReflexiveAccess inherits kermeta::kunit::TestCase {

	operation main() : Void is do
		var tr : TestRunner init TestRunner.new
		tr.run(TestTagReflexiveAccess)
		tr.printTestResult
	end
	
	operation testTag() : Void is do
		
		var anObjectWithTag : Object
		anObjectWithTag := self.getMetaClass 
		stdio.writeln(anObjectWithTag.tag.size.toString)
		stdio.writeln(anObjectWithTag.ownedTag.size.toString)
		assert(anObjectWithTag.ownedTag.size == 2)  // one tag from @bla, one from the documentation
		assert(anObjectWithTag.tag.size == 2)  // one tag from @bla, one from the documentation
		
		// try using another way to access the metaclass
		anObjectWithTag := TestTagReflexiveAccess 
		stdio.writeln(anObjectWithTag.tag.size.toString)
		stdio.writeln(anObjectWithTag.ownedTag.size.toString)
		assert(anObjectWithTag.ownedTag.size == 2)  // one tag from @bla, one from the documentation
		assert(anObjectWithTag.tag.size == 2)  // one tag from @bla, one from the documentation
		
	end
}



