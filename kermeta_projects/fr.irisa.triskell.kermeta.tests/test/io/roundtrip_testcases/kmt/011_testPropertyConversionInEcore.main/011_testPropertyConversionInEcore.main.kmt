@uri "http://TestProperty"
package testPropertyConversion;

require "http://www.eclipse.org/emf/2002/Ecore"
require "platform:/plugin/fr.irisa.triskell.kermeta.tests/test/io/roundtrip_testcases/kmt/011_testPropertyConversionInEcore.main/011b_testStringConversionInEcore.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/language/dynamic_expression.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/language/structure.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/reflection/reflection.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/standard/primitive_types.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/exceptions/exceptions.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/standard/collections.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/utils/hashtable.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/language/behavior.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/Standard.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/persistence/resource.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/language/reflective_collections.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/kunit/kunit.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/kunit/assert.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/utils/stack.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/io/std_io.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/io/file_io.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/standard/java.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/ecore/ecore_compatibility.ecore"
require "platform:/resource/fr.irisa.triskell.kermeta.io/src/kermeta/utils/StringBuffer.ecore"
class TestProperty
{
	reference testStringMain : testString::Main

}
class TestPropertyAndOperation
{
	reference testStringMain : testString::Main

	operation main(a : kermeta::interpreter::DynamicExpression) : Void is
		do
			var b : kermeta::interpreter::DynamicExpression
			b := a
			var testDependency : testString::Main init testString::Main.new
		end

}
