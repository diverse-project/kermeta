<para>Problem:</para>
<para>To load the user model (conforms to a metamodel in ecore), we are using the uri-registry mechanism from EMF.</para>
<para/>
<para>In the context where an user has its own generated source code, then the both uri: this one generated by the user and this one generated by the compiler are the same.
If the two plugins are deployed then some conflicts will appear.</para>
<para>A primary approach is to ignore if the user has generated its own source code.
Also we consider the uri generated by the compiler as the reference.</para>
<para/>
<para>Several solutions could be considered:</para>
<para>using the plugin extension: factory_override</para>

<para>From Eclipse: (http://dev.eclipse.org/newslists/news.eclipse.tools.emf/msg22892.html)</para>
<para>This extension point is used to register an overriding Ecore factory implementation against a namespace URI (Uniform Resource Identifier) in EMF's global package registry, EPackage.Registry.INSTANCE. When the corresponding Ecore package is initialized, the package registry is consulted for the registered factory implementation to override the default that would otherwise be used.</para>

<para>uri - A URI that uniquely identifies an Ecore package for which this factory in an override.</para>
<para>class - A fully qualified Java classname of an overriding factory implementation.</para>