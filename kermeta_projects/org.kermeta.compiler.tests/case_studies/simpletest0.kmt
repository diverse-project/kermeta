/* $Id: simpletest0.kmt,v 1.1 2008-10-03 14:26:45 cfaucher Exp $ 
 * Creation : August 18, 2008
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            cfaucher <cfaucher@irisa.fr>
 */
@mainClass "simpletest::Main"
@mainOperation "main"

@uri "http://www.kermeta.org/simpletest"
package simpletest;

require kermeta
require "http://www.kermeta.org/fsm"

using kermeta::persistence
using fsm

class Main {

	operation main() : Void is do
		
		stdio.writeln("Beginning of the test")
		
		if 1==1 then
			stdio.writeln("1==1")
		end
		
		if true then
			stdio.writeln("true")
		end
		
		var theFSM : FSM init load("platform:/resource/org.kermeta.simpletest.compiled/models/sample1.fsm")
		
		stdio.writeln(theFSM.toString())
		
		theFSM.ownedState.each{ s |
			stdio.writeln(s.name)
		}
		
		var newState : State init State.new()
		newState.name := "newState"
		theFSM.ownedState.add(newState)
		
		stdio.writeln("\nAdding the NewState")
		theFSM.ownedState.each{ s |
			stdio.writeln(s.name)
		}
		
		save(theFSM, "platform:/resource/org.kermeta.simpletest.compiled/models/sample1.new.fsm")
		
		stdio.writeln("End of the test")
	end
	
	operation load(modelInputPath : String) : FSM is do
		var modelResource : Resource init EMFRepository.new.createResource(modelInputPath, "http://www.kermeta.org/fsm")		
	    modelResource.load()
	    result := modelResource.instances.one.asType(FSM)
	end
	
	operation save(root : FSM, modelInputPath : String) : Void is do
		var modelResource : Resource init EMFRepository.new.createResource(modelInputPath, "http://www.kermeta.org/fsm")
	    modelResource.add(root)
	    modelResource.save()
	end
	
}