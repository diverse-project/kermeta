/**
 * <copyright>
 * </copyright>
 *
 * $Id: OperationValidator.java,v 1.1 2007-07-11 14:41:54 cfaucher Exp $
 */
package fr.irisa.triskell.kermeta.language.structure.validation;

import fr.irisa.triskell.kermeta.language.behavior.Expression;

import fr.irisa.triskell.kermeta.language.structure.ClassDefinition;
import fr.irisa.triskell.kermeta.language.structure.Constraint;
import fr.irisa.triskell.kermeta.language.structure.Operation;

import fr.irisa.triskell.kermeta.language.structure.Parameter;
import fr.irisa.triskell.kermeta.language.structure.Type;
import fr.irisa.triskell.kermeta.language.structure.TypeVariable;
import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link fr.irisa.triskell.kermeta.language.structure.Operation}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface OperationValidator {
	boolean validate();

	boolean validateIsAbstract(boolean value);
	boolean validateRaisedException(EList value);
	boolean validateOwnedParameter(EList value);
	boolean validatePre(EList value);
	boolean validatePost(EList value);
	boolean validateBody(Expression value);
	boolean validateSuperOperation(Operation value);
	boolean validateOwningClass(ClassDefinition value);
	boolean validateTypeParameter(EList value);
}
