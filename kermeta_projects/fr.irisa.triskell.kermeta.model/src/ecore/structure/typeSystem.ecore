<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ftm">
  <eSubpackages name="structure">
    <eClassifiers xsi:type="ecore:EClass" name="Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base class definition for the &lt;b>use&lt;/b> of a type."/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable" eSuperTypes="#//structure/TypeVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="To be written"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NamedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="TypedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="Property">
      <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#//structure/ClassDefinition"
          eOpposite="#//structure/ClassDefinition/ownedAttribute">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="ClassDefinition that owns the Property"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Operation">
      <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#//structure/ClassDefinition"
          eOpposite="#//structure/ClassDefinition/ownedOperation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="ClassDefinition owning the Operation"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
          eType="#//structure/TypeVariable">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="TypeParameters of the Operation"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition" eSuperTypes="#//structure/GenericTypeDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The definition of a class definition :)&#xA; &lt;pre>class A&#xA;{ &#xA;  attribute s : String&#xA;}&#xA;  &lt;/pre> is a class definition; in :&#xA;&lt;pre>&#xA;main() : A is do end&#xA;&lt;/pre>&#xA;A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#//structure/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Boolean stating whether the ClassDefinition is abstract (which means that&#xA;no instance can be allocated)"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
          eType="#//structure/Property" containment="true" eOpposite="#//structure/Property/owningClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Attributes, References, and derived Properties owned by this ClassDefinition."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
          eType="#//structure/Operation" containment="true" eOpposite="#//structure/Operation/owningClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Operations owned by this ClassDefinition."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1"
          eType="#//structure/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Classes from which this ClassDefinition inherits."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="boolean"/>
    <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//structure/ParameterizedType"/>
    <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding" eSuperTypes="#//structure/Object">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Definition of a binding between a TypeVariable and a Type"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
          eType="#//structure/TypeVariable">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="TypeVariable"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="#//structure/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Assigned Type"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FunctionType" eSuperTypes="#//structure/Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Type used to define the use of lambda expressions.&#xA; Uses :&#xA; &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xA;     var test : Boolean init true&#xA;     from var it : Iterator&lt;G> init iterator&#xA;     until it.isOff&#xA;     loop&#xA;        test := test and func(it.next)&#xA;     end&#xA;     result := test&#xA; end&#xA; &lt;/pre>&#xA; *&#xA; In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xA; Boolean, with a parameter of type G and a return type of type Boolean&#xA; The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#//structure/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Parameters of the function (a ProductType for multiple parameters)"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#//structure/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Result type of the function"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ProductType" eSuperTypes="#//structure/Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Type corresponding to a set of Types&#xA;Only used in the context of FunctionType"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" unique="false"
          upperBound="-1" eType="#//structure/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Types "/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//structure/TypeDefinitionContainer"/>
    <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="#//structure/NamedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xA;this class)"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="#//structure/Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Class definition for the &lt;pre>Void&lt;/pre> type"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="#//structure/TypeDefinition"/>
    <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" abstract="true"
        eSuperTypes="#//structure/Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Abstraction for Parameterized types, namely, Class and ModelType"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding" upperBound="-1"
          eType="#//structure/TypeVariableBinding" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Bindings between type variables and provided types "/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" lowerBound="1"
          eType="#//structure/GenericTypeDefinition">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Definition of the Type"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition" abstract="true"
        eSuperTypes="#//structure/TypeDefinition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Abstracts the definition of generic type definitions (i.e. type definitions that&#xA;can be parameterized), namely, for ClassDefinition and ModelTypeDefinition."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
          eType="#//structure/TypeVariable" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Type variables defined for the GenericTypeDefinition"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer" abstract="true"
        eSuperTypes="#//structure/NamedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xA;element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xA;package definition."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeDefinition"
          upperBound="-1" eType="#//structure/TypeDefinition" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Contained TypeDefinitions"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true" eSuperTypes="#//structure/Type #//structure/NamedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Definition of a type variable for generic types :  &#xA;in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="supertype" eType="#//structure/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Reference to the supertype, if any"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Require"/>
    <eClassifiers xsi:type="ecore:EClass" name="Using"/>
  </eSubpackages>
</ecore:EPackage>
