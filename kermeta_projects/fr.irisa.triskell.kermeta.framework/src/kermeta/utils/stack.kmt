/* *************************************************
 * Franck FLEUREY - 23/02/2005
 * Triskell Research Group
 * IRISA / University of Rennes 1 (France)
 * Distributed under the terms of the EPL licence
 *
 * Implementation of Metacore stack types.
 *************************************************** */

/** 
 * Contains special classes (Hashtable, Stack) that are not contained in Kermeta
 * metamodel
 */
 @uri "http://www.kermeta.org/kermeta/utils"
package kermeta::utils;

require "../Standard.kmt"

using kermeta::standard

/**
 * An implementation of stack
 * <img src="platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png"/>
 */
class Stack<G> inherits Sequence<G>
{
	/**
	 * Pushes an element into the stack
	 */
	operation push(element : G) : Void is do
		self.addAt(0, element)
	end
	
	/**
	 * Gets the element at the top of the stack
	 */
	operation peek() : G is do
		result := self.first
	end
	
	/**
	 * Get and remove the element at the top of the stack
	 */
	operation pop() : G is do
		result := peek
		self.removeAt(0)
	end
}
