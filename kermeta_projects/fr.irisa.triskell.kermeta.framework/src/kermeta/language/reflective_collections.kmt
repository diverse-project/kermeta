/**
 * Contains the implementation of Kermeta reflective collections.
 * <img src="platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_package.png"/>
 */
  @uri "http://www.kermeta.org/kermeta/1_2_0//kermeta/language"
package kermeta::language;

require "../Standard.kmt"
require "structure.kmt"

using kermeta::standard

/* *************************************************
 * $Id: reflective_collections.kmt,v 1.17 2008-08-21 15:48:23 cfaucher Exp $
 * Franck FLEUREY - 17/02/2005
 * Triskell Research Group
 * IRISA / University of Rennes 1 (France)
 * Distributed under the terms of the EPL licence
 ************************************************* */
 
/**
 * ReflectiveCollection is a special collection that is used to define the type 
 * of attributes that have an upper multiplicity > 1 in a class. It indeed handles
 * the update of opposite property if such an attribute has got one.
 */
class ReflectiveCollection<G> inherits Set<G>
{
	/**
	 * Overrides kermeta::standard::Set<G>.add(G)
	 * Add an element to this collection and update its opposite property if it exists.
	 */
	method add(element : G) : Void is do
		@compiledJavaExtern "org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(this, element)"
		extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveCollection.add(self, element)
	end
	
	/**
	 * Overrides kermeta::standard::Set<G>.remove(G)
	 */
	method remove(element : G) : Void is do
		@compiledJavaExtern "org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(this, element)"
		extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveCollection.remove(self, element)
	end
	
	/**
	 * Overrides kermeta::standard::Collection<G>.clear(G)
	 */
	method clear() : Void is do
		@compiledJavaExtern "org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(this)"
		extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveCollection.clear(self)
	end
}


/**
 * ReflectiveSequence is an ordered ReflectiveCollection.
 */
class ReflectiveSequence<G> inherits OrderedSet<G>, ReflectiveCollection<G> {

	/**
	 * Overrides kermeta::language::ReflectiveCollection<G>.add(G)
	 */
	method add(element : G) : Void from ReflectiveCollection is do
		super(element)
	end
	
	/**
	 * Overrides kermeta::language::ReflectiveCollection<G>.remove(G)
	 */
	method remove(element : G) : Void from ReflectiveCollection is do
		super(element)
	end
	
	/**
	 * Overrides kermeta::language::ReflectiveCollection<G>.clear()
	 */
	method clear() : Void from ReflectiveCollection is do
		super()
	end

	/**
	 * Overrides kermeta::standard::OrderedSet.addAt(Integer)
	 */	
	method addAt(index : Integer, element : G) : Void is do
		@compiledJavaExtern "org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.addAt(this, index, element)"
		extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveSequence.addAt(self, index, element)
	end
	
	/**
	 * Overrides kermeta::standard::OrderedSet.removeAt(Integer)
	 */
	method removeAt(index : Integer) : Void is do
		@compiledJavaExtern "org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.removeAt(this, index)"
		extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveSequence.removeAt(self, index)
	end

	/**
	 * Overrides kermeta::standard::OrderedSet.equals(Object)
	 */
	method equals(element: Object) : Boolean from kermeta::standard::OrderedSet is do
		result := super(element)
	end
}
