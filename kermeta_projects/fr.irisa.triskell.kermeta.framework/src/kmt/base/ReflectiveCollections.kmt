package kermeta::standard::reflection;

require "Collections.kmt"

using kermeta::standard

/***************************************************
 * Franck FLEUREY - 17/02/2005
 * Triskell Research Group
 * IRISA / University of Rennes 1 (France)
 * Distributed under the terms of the GPL licence
 *
 * Implementation of Metacore reflective collections.
 *************************************************** */
 
/**
 * ReflectiveCollection
 */
abstract class ReflectiveCollection<G> inherits Set<G>
{
	method add(element : G) : Void is do
		extern fr::irisa::triskell::kermeta::runtime::basetypes::ReflectiveCollection.add(element)
	end
	
	method remove(element : G) : Void is do
		extern fr::irisa::triskell::kermeta::runtime::basetypes::ReflectiveCollection.remove(element)
	end
	
	method clear() : Void is do
		extern fr::irisa::triskell::kermeta::runtime::basetypes::ReflectiveCollection.clear()
	end
}

/**
 * ReflectiveSequence
 */
abstract class ReflectiveSequence<G> inherits OrderedSet<G>, ReflectiveCollection<G> {
	
	method add(element : G) : Void select ReflectiveCollection is do
		super()
	end
	
	method remove(element : G) : Void select ReflectiveCollection is do
		super()
	end
	
	method clear() : Void select ReflectiveCollection is do
		super()
	end
	
	method addAt(index : Integer, element : G) : Void is do
		extern fr::irisa::triskell::kermeta::runtime::basetypes::ReflectiveSequence.addAt(index, element)
	end
	
	method removeAt(index : Integer) : Void is do
		extern fr::irisa::triskell::kermeta::runtime::basetypes::ReflectiveSequence.removeAt(index)
	end
	
	method elementAt(index : Integer) : G is do
		result ?= extern fr::irisa::triskell::kermeta::runtime::basetypes::ReflectiveSequence.elementAt(index)
	end

}

