<?xml version="1.0" encoding="ASCII"?>
<kermeta_language_structure:ModelingUnit xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:kermeta_language_behavior="http://www.kermeta.org/kermeta//language/behavior"
    xmlns:kermeta_language_structure="http://www.kermeta.org/kermeta//language/structure" referencedModelingUnits="../standard/collections.km#/ ../standard/primitive_types.km#/ ../Standard.km#/ ../language/behavior.km#/ ../language/structure.km#/ #/ ../persistence/resource.km#/ ../language/reflective_collections.km#/ ../kunit/kunit.km#/ ../kunit/assert.km#/ ../utils/hashtable.km#/ ../utils/stack.km#/ ../io/std_io.km#/ ../io/file_io.km#/ ../exceptions/exceptions.km#/ ../language/dynamic_expression.km#/ ../standard/java.km#/">
  <packages name="kermeta">
    <nestedPackage name="reflection">
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" name="String"
          instanceType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Object"
          isAbstract="true">
        <ownedTag value="/** &#xD;&#xA; * Object definition: all entities of Kermeta metamodel explicitely inherit from Object&#xD;&#xA; */"/>
        <ownedAttribute name="ownedTag" type="#//@packages.0/reflection/Object/ownedTag/@containedType.0"
            upper="-1" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Tag"/>
        </ownedAttribute>
        <ownedAttribute name="tag" type="#//@packages.0/reflection/Object/tag/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Tag/object">
          <ownedTag value="/**&#xD;&#xA;  * Tags are used to put comments/documentation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Tag"/>
        </ownedAttribute>
        <ownedOperation name="getMetaClass" type="#//@packages.0/reflection/Object/getMetaClass/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Class object that is the metaclass of current Object&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Class"/>
        </ownedOperation>
        <ownedOperation name="container" type="#//@packages.0/reflection/Object/container/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Object that contains current Object, void if the Object has&#xD;&#xA;  * no container&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        </ownedOperation>
        <ownedOperation name="checkInvariants" type="#//@packages.0/reflection/Object/checkInvariants/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
        </ownedOperation>
        <ownedOperation name="checkAllInvariants" type="#//@packages.0/reflection/Object/checkAllInvariants/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Recursively runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;  * and its supertypes&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
        </ownedOperation>
        <ownedOperation name="equals" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * semantic equality,&#xD;&#xA;  * if you wish to test for object identity you need to use the method oid&#xD;&#xA;  * ex: x.oid == y.oid&#xD;&#xA;  * by default, (ie. if not overloaded), the equals method for class Object implements &#xD;&#xA;  * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xD;&#xA;  * reference values x and y, this method returns true if and only if x and y refer to the same &#xD;&#xA;  * object (x.oid == y.oid has the value true). &#xD;&#xA;  *&#xD;&#xA;  * note1: the operator == is mapped to this &#xD;&#xA;  * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xD;&#xA;  */"/>
          <ownedParameter name="element" type="#//@packages.0/reflection/Object/equals/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="isNotEqual" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * See kermeta::reflection::Object.equals(Object)&#xD;&#xA;  */"/>
          <ownedParameter name="element" type="#//@packages.0/reflection/Object/isNotEqual/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="isKindOf" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the current Object is an instance of the given Class&#xD;&#xA;  */"/>
          <ownedParameter name="cl" type="#//@packages.0/reflection/Object/isKindOf/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Class"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="isInstanceOf" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the current Object conforms to given Type&#xD;&#xA;  */"/>
          <ownedParameter name="type" type="#//@packages.0/reflection/Object/isInstanceOf/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="asType" type="#//@packages.0/reflection/Object/asType/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Implementation of OCL like cast. It returns self if the object object conforms to the type givent as parameter.&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          <ownedParameter name="type" type="#//@packages.0/reflection/Object/asType/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Class"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="get" type="#//@packages.0/reflection/Object/get/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/** &#xD;&#xA;  * Returns the instances of the given property for this Object.&#xD;&#xA;  *&#xD;&#xA;  * Example : &#xD;&#xA;  * &lt;pre>&#xD;&#xA;  * class A { reference attr : String }&#xD;&#xA;  * &lt;/pre>&#xD;&#xA;  * Using A :&#xD;&#xA;  * &lt;pre>&#xD;&#xA;  * operation getAProp() is do&#xD;&#xA;  *    var a : A&#xD;&#xA;  *    var s : String&#xD;&#xA;  *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xD;&#xA;  *    s ?= a.get(the_attr)&#xD;&#xA;  * end&#xD;&#xA;  * &lt;/pre>&#xD;&#xA;  * The user has to cast&#xD;&#xA;  * the result of this method according to the type and the upper multiplicity&#xD;&#xA;  * of this property. If upper multiplicity > 1, than the effective type of the &#xD;&#xA;  * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xD;&#xA;  * the name of the given Property (i.e the type of the property instance).&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          <ownedParameter name="property" type="#//@packages.0/reflection/Object/get/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="set" type="#//@packages.0/reflection/Object/set/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="property" type="#//@packages.0/reflection/Object/set/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          </ownedParameter>
          <ownedParameter name="element" type="#//@packages.0/reflection/Object/set/@ownedParameter.1/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="isSet" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <ownedParameter name="property" type="#//@packages.0/reflection/Object/isSet/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="unset" type="#//@packages.0/reflection/Object/unset/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="property" type="#//@packages.0/reflection/Object/unset/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="oid" type="#//@packages.0/reflection/Integer" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the unique Oid of the Object&#xD;&#xA;  */"/>
        </ownedOperation>
        <ownedOperation name="toString" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the String representation of the Object&#xD;&#xA;  */"/>
        </ownedOperation>
        <ownedOperation name="isFrozen" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the Object is currently in a&#xD;&#xA;  * frozen state&#xD;&#xA;  */"/>
        </ownedOperation>
        <ownedOperation name="freeze" type="#//@packages.0/reflection/Object/freeze/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Freeze the Object&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
        </ownedOperation>
        <ownedOperation name="isVoid" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the Object is Void&#xD;&#xA;  */"/>
        </ownedOperation>
        <ownedOperation name="hashcode" type="#//@packages.0/reflection/Integer" isOrdered="true"
            upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * code used in hashtable in order to identify an object in the hashtable keys&#xD;&#xA;  * This system is similar to the hashcode used in java. Please refer to java documentation&#xD;&#xA;  * for more information about hashcode&#xD;&#xA;  */"/>
        </ownedOperation>
        <ownedOperation name="containingResource" type="#//@packages.0/reflection/Object/containingResource/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Resource currently containing (directly or indirectly) the Object &#xD;&#xA;  * or void if the object belongs to no Resource&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../persistence/resource.km#//@packages.0/persistence/Resource"/>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" name="Boolean"
          instanceType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0">
        <ownedTag value="/** Alias for kermeta::standard::Boolean */"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" name="Integer"
          instanceType="#//@packages.0/reflection/Integer/@containedType.0">
        <ownedTag value="/** Alias for kermeta::standard::Integer */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/primitive_types.km#//@packages.0/standard/Integer"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" name="UnlimitedNatural"
          instanceType="../standard/primitive_types.km#//@packages.0/standard/UnlimitedNatural">
        <ownedTag value="/** Alias for kermeta::standard::UnlimitedNatural */"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ParameterizedType"
          isAbstract="true" superType="#//@packages.0/reflection/ParameterizedType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Abstraction for Parameterized types, namely, Class and ModelType&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        <ownedAttribute name="typeDefinition" type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
            isOrdered="true" lower="1" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Definition of the Type&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="typeParamBinding" type="#//@packages.0/reflection/ParameterizedType/typeParamBinding/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Bindings between type variables and provided types &#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariableBinding"/>
        </ownedAttribute>
        <ownedAttribute name="virtualTypeBinding" type="#//@packages.0/reflection/ParameterizedType/virtualTypeBinding/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariableBinding"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Class"
          isAbstract="true" superType="#//@packages.0/reflection/Class/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Type corresponding to the &lt;b>use&lt;/b> of a ClassDefinition (see ClassDefinition)&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ParameterizedType"/>
        <ownedAttribute name="ownedAttribute" type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Attributes, References, and derived Properties owned by&#xD;&#xA;  * the ClassDefinition of this Class.&#xD;&#xA;  */"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
              <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                  type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0"
                identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
              <type type="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0"
                  isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0"
                isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0"
                  name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                  name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@containedType.0"
                  name="ownedAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0"
                    name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="ownedOperation" type="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Operations owned by the ClassDefinition of this Class.&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
              <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                  type="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0"
                identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
              <type type="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0"
                  isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0"
                isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0"
                  name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                  name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0"
                  name="result">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"/>
                </containedType>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@containedType.0"
                  name="ownedOperation" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedOperation">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0"
                    name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="superClass" type="#//@packages.0/reflection/Class/superClass/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Classes of which the ClassDefinition of this Class inherits.&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Class"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
              <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                  type="#//@packages.0/reflection/Class/superClass/@containedType.0"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0"
                identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
              <type type="#//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0"
                  isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0"
                isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0"
                  name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                  name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@statement.2/@target/@containedType.0"
                  name="result">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="#//@packages.0/reflection/Class/superClass/@containedType.0"/>
                </containedType>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@containedType.0"
                  name="superType" staticProperty="#//@packages.0/reflection/ClassDefinition/superType">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0"
                    name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="isAbstract" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether ClassDefinition of this Class is abstract.&#xD;&#xA;  */"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0"
                identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
              <type type="#//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0"
                  isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0"
                isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0"
                  name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                  name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                  name="isAbstract" staticProperty="#//@packages.0/reflection/ClassDefinition/isAbstract">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0"
                    name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="name" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the name of the ClassDefinition of this Class&#xD;&#xA;  */"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                  name="name" staticProperty="#//@packages.0/reflection/NamedElement/name">
                <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                    name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedOperation name="new" type="#//@packages.0/reflection/Class/new/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Instantiates a new occurence for this Class&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        </ownedOperation>
        <ownedOperation name="toString" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" superOperation="#//@packages.0/reflection/Object/toString">
          <ownedTag value="/**&#xD;&#xA;  * Returns the String representation of this class. &#xD;&#xA;  *  Note : throws an exception if this class has no classDefinition&#xD;&#xA;  *  or if the classDefinition is not well constructed.&#xD;&#xA;  */"/>
          <body xsi:type="kermeta_language_behavior:Block" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                  name="name" staticProperty="#//@packages.0/reflection/NamedElement/name">
                <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                    name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition">
                  <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/Class/toString/@body/@statement.0/@value/@target/@target/@containedType.0">
                    <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Class"/>
                  </target>
                </target>
              </value>
            </statement>
          </body>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ModelType"
          isAbstract="true" superType="#//@packages.0/reflection/ModelType/@containedType.0 #//@packages.0/reflection/ModelType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Type of a model, consisting of a set of included type definitions&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        <ownedAttribute name="includedTypeDefinition" type="#//@packages.0/reflection/ModelType/includedTypeDefinition/@containedType.0"
            upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
        <ownedOperation name="new" type="#//@packages.0/reflection/ModelType/new/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Model"/>
        </ownedOperation>
        <ownedOperation name="isModelTypeOf" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <ownedParameter name="model" type="#//@packages.0/reflection/ModelType/isModelTypeOf/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Model"/>
          </ownedParameter>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Model"
          isAbstract="true" superType="#//@packages.0/reflection/Model/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Is the holder of a set of model elements (Object) that are compatible with the ModelType that has &#xD;&#xA; * instanciated this Model.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="contents" type="#//@packages.0/reflection/Model/contents/@containedType.0"
            upper="-1" isReadOnly="true">
          <ownedTag value="/**&#xD;&#xA;  * Contents of this model ...&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        </ownedAttribute>
        <ownedOperation name="filter" type="#//@packages.0/reflection/Model/filter/@containedType.0"
            upper="-1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Returns a set of all the elements of the model that are instance of the given Type&#xD;&#xA;   */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          <ownedParameter name="vtype" type="#//@packages.0/reflection/Model/filter/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="add" type="#//@packages.0/reflection/Model/add/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xD;&#xA;   */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="obj" type="#//@packages.0/reflection/Model/add/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="remove" type="#//@packages.0/reflection/Model/remove/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Remove an object from the model&#xD;&#xA;   */"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="obj" type="#//@packages.0/reflection/Model/remove/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="addAllCompatible" type="#//@packages.0/reflection/Model/addAllCompatible/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA;   * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xD;&#xA;   */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Collection">
            <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Collection/G"
                type="#//@packages.0/reflection/Model/addAllCompatible/@containedType.0/@typeParamBinding.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
            </typeParamBinding>
          </containedType>
          <ownedParameter name="objectsToAdd" type="#//@packages.0/reflection/Model/addAllCompatible/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Collection">
              <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Collection/G"
                  type="#//@packages.0/reflection/Model/addAllCompatible/@ownedParameter.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
              </typeParamBinding>
            </containedType>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="addCompatible" type="#//@packages.0/reflection/Model/addCompatible/@containedType.0"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA;   * Returns the object if it has been added (One can check that some element have been ignored or not)&#xD;&#xA;   * return Void if not added&#xD;&#xA;   */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          <ownedParameter name="objectsToAdd" type="#//@packages.0/reflection/Model/addCompatible/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="MultiplicityElement"
          isAbstract="true" superType="#//@packages.0/reflection/MultiplicityElement/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; *  Model elements with a multiplicity [lower..upper] inherit this class&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypedElement"/>
        <ownedAttribute name="isOrdered" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the element is ordered&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="isUnique" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether duplicated elements are allowed&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="lower" type="#//@packages.0/reflection/Integer" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Min cardinality of the element&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="upper" type="#//@packages.0/reflection/UnlimitedNatural"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Max cardinality of the element, '-1' for '*'&#xD;&#xA;  */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Constraint"
          isAbstract="true" superType="#//@packages.0/reflection/Constraint/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Constraint is part of a contract implementation in a Class definition or an operation.&#xD;&#xA; * Three kinds of constraints are available : pre, post, and inv (invariant constraint)&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
        <ownedAttribute name="invOwner" type="#//@packages.0/reflection/Constraint/invOwner/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/ClassDefinition/inv">
          <ownedTag value="/**&#xD;&#xA;  * Owning ClassDefinition if Constraint corresponds to invariant&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute name="preOwner" type="#//@packages.0/reflection/Constraint/preOwner/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/Operation/pre">
          <ownedTag value="/**&#xD;&#xA;  * Owning Operation if Constraint corresponds to pre-condition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
        </ownedAttribute>
        <ownedAttribute name="postOwner" type="#//@packages.0/reflection/Constraint/postOwner/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/Operation/post">
          <ownedTag value="/**&#xD;&#xA;  * Owning Operation if Constraint corresponds to post-condition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Operation"
          isAbstract="true" superType="#//@packages.0/reflection/Operation/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Every one knows what an operation is.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/MultiplicityElement"/>
        <ownedAttribute name="isAbstract" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the Operation is abstract&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="pre" type="#//@packages.0/reflection/Operation/pre/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Constraint/preOwner" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Pre-conditions of the Operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Constraint"/>
        </ownedAttribute>
        <ownedAttribute name="post" type="#//@packages.0/reflection/Operation/post/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Constraint/postOwner" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Post-conditions of the Operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Constraint"/>
        </ownedAttribute>
        <ownedAttribute name="superOperation" type="#//@packages.0/reflection/Operation/superOperation/@containedType.0"
            isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Super-operation of the Operation, if any&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
        </ownedAttribute>
        <ownedAttribute name="owningClass" type="#//@packages.0/reflection/Operation/owningClass/@containedType.0"
            isOrdered="true" lower="1" upper="1" opposite="#//@packages.0/reflection/ClassDefinition/ownedOperation">
          <ownedTag value="/**&#xD;&#xA;  * ClassDefinition owning the Operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute name="typeParameter" type="#//@packages.0/reflection/Operation/typeParameter/@containedType.0"
            upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * TypeParameters of the Operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariable"/>
        </ownedAttribute>
        <ownedAttribute name="raisedException" type="#//@packages.0/reflection/Operation/raisedException/@containedType.0"
            upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * Exceptions raised by the Operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
        <ownedAttribute name="ownedParameter" type="#//@packages.0/reflection/Operation/ownedParameter/@containedType.0"
            isOrdered="true" upper="-1" opposite="#//@packages.0/reflection/Parameter/operation"
            isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Parameters of the Operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Parameter"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Tag"
          isAbstract="true" superType="#//@packages.0/reflection/Tag/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Tag is intended to be used to add documentation on a  model element,&#xD;&#xA; * or add some textual information that cannot be expressed with any&#xD;&#xA; * model element definition.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="object" type="#//@packages.0/reflection/Tag/object/@containedType.0"
            lower="1" upper="-1" opposite="#//@packages.0/reflection/Object/tag">
          <ownedTag value="/**&#xD;&#xA;  * Objects to which the Tag is attached to&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        </ownedAttribute>
        <ownedAttribute name="name" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Name of the Tag&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="value" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * String value of the Tag&#xD;&#xA;  */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Property"
          isAbstract="true" superType="#//@packages.0/reflection/Property/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xD;&#xA; *  - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xD;&#xA; *  - Property with isComposite == false : EReference&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/MultiplicityElement"/>
        <ownedAttribute name="owningClass" type="#//@packages.0/reflection/Property/owningClass/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/ClassDefinition/ownedAttribute">
          <ownedTag value="/**&#xD;&#xA;  * ClassDefinition that owns the Property&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute name="opposite" type="#//@packages.0/reflection/Property/opposite/@containedType.0"
            isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Opposite Property of the Property, void if the Property has no opposite&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
        </ownedAttribute>
        <ownedAttribute name="isReadOnly" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the Property is read-only&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="default" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="isComposite" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="isDerived" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="isID" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the property allows to identify its containing Object&#xD;&#xA;  */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="TypeContainer"
          isAbstract="true" superType="#//@packages.0/reflection/TypeContainer/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Phantom class : EMF reflexive editors need that any element of a metamodel &#xD;&#xA; * has a direct or indirect containment relationship with the root model element of&#xD;&#xA; * the metamodel. This class resolves this technical requirement.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="containedType" type="#//@packages.0/reflection/TypeContainer/containedType/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Type/typeContainer" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Contained types&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="VirtualTypeContainer"
          isAbstract="true" superType="#//@packages.0/reflection/VirtualTypeContainer/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="virtualType" type="#//@packages.0/reflection/VirtualTypeContainer/virtualType/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/VirtualType/modelType"
            isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/VirtualType"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="GenericTypeDefinition"
          isAbstract="true" superType="#//@packages.0/reflection/GenericTypeDefinition/@containedType.0">
        <ownedTag value="/** &#xD;&#xA; * Abstracts the definition of generic type definitions (i.e. type definitions that&#xD;&#xA; * can be parameterized), namely, for ClassDefinition and ModelTypeDefinition.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        <ownedAttribute name="typeParameter" type="#//@packages.0/reflection/GenericTypeDefinition/typeParameter/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Type variables defined for the GenericTypeDefinition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariable"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ClassDefinition"
          isAbstract="true" superType="#//@packages.0/reflection/ClassDefinition/@containedType.0 #//@packages.0/reflection/ClassDefinition/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * The definition of a class definition :)&#xD;&#xA; *  &lt;pre>class A&#xD;&#xA; *{ &#xD;&#xA; *   attribute s : String&#xD;&#xA; *}&#xD;&#xA; *   &lt;/pre> is a class definition; in :&#xD;&#xA; * &lt;pre>&#xD;&#xA; * main() : A is do end&#xD;&#xA; * &lt;/pre>&#xD;&#xA; * A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/GenericTypeDefinition"/>
        <ownedAttribute name="isAbstract" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the ClassDefinition is abstract (which means that&#xD;&#xA;  * no instance can be allocated)&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="ownedAttribute" type="#//@packages.0/reflection/ClassDefinition/ownedAttribute/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Property/owningClass" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Attributes, References, and derived Properties owned by this ClassDefinition.&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
        </ownedAttribute>
        <ownedAttribute name="ownedOperation" type="#//@packages.0/reflection/ClassDefinition/ownedOperation/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Operation/owningClass"
            isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Operations owned by this ClassDefinition.&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
        </ownedAttribute>
        <ownedAttribute name="inv" type="#//@packages.0/reflection/ClassDefinition/inv/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Constraint/invOwner" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Invariants defined for this ClassDefinition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Constraint"/>
        </ownedAttribute>
        <ownedAttribute name="superType" type="#//@packages.0/reflection/ClassDefinition/superType/@containedType.0"
            upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * Classes from which this ClassDefinition inherits.&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Class"/>
        </ownedAttribute>
        <ownedAttribute name="allAttribute" type="#//@packages.0/reflection/ClassDefinition/allAttribute/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns all the Attributes, References, derived Properties of this &#xD;&#xA;  * ClassDefinition including the inherited ones&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../language/structure.km#//@packages.0/language/structure/Class"/>
                  <typeref type="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@containedType.0"
                name="addAll" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/addAll">
              <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.1/@parameters.0/@containedType.0"
                  name="ownedAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.1/@parameters.0/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="#//@packages.0/reflection/Class/superClass/@containedType.0"/>
                </containedType>
                <parameters name="t"/>
                <body xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
                  <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                      identifier="cDef">
                    <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                    <type type="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                        isOrdered="true" upper="1"/>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                      isCast="true">
                    <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                        name="cDef"/>
                    <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                        name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition">
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/superClass/@containedType.0"
                          name="t"/>
                    </value>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                      name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
                    <parameters xsi:type="kermeta_language_behavior:LambdaExpression"
                        staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0">
                      <containedType xsi:type="kermeta_language_structure:FunctionType"
                          left="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0/@containedType.0"
                          right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                        <containedType xsi:type="kermeta_language_structure:ProductType"
                            type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                      </containedType>
                      <parameters name="p"/>
                      <body xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                          name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                        <parameters xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="p"/>
                        <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                            name="result"/>
                      </body>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@target/@containedType.0"
                        name="allAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/allAttribute">
                      <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                        <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                            type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                      </containedType>
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                          name="cDef"/>
                    </target>
                  </statement>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="superType" staticProperty="#//@packages.0/reflection/ClassDefinition/superType">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="#//@packages.0/reflection/Class/superClass/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.1/@parameters.0/@target/@containedType.0"/>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="ownedCompositeAttribute" type="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns only the Attributes (isComposite and not isDerived) owned by&#xD;&#xA;  * the ClassDefinition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.1/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.1/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <parameters name="oa"/>
                <body xsi:type="kermeta_language_behavior:Conditional" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <thenBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                    <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                        name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                      <parameters xsi:type="kermeta_language_behavior:CallVariable"
                          staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                      <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                          name="result"/>
                    </statement>
                  </thenBody>
                  <condition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/forAll/@body/@statement.1/@body/@containedType.0"
                      name="and" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/and">
                    <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isDerived" staticProperty="#//@packages.0/reflection/Property/isDerived">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                        name="isComposite" staticProperty="#//@packages.0/reflection/Property/isComposite">
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                    </target>
                  </condition>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.1/@target/@containedType.0"
                  name="ownedAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/ownedCompositeAttribute/@getterBody/@statement.1/@target/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="allCompositeAttribute" type="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns only all the Attributes (isComposite and not isDerived) of&#xD;&#xA;  * this ClassDefinition including the inherited ones&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.1/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.1/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <parameters name="oa"/>
                <body xsi:type="kermeta_language_behavior:Conditional" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <thenBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                    <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                        name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                      <parameters xsi:type="kermeta_language_behavior:CallVariable"
                          staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                      <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                          name="result"/>
                    </statement>
                  </thenBody>
                  <condition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/forAll/@body/@statement.1/@body/@containedType.0"
                      name="and" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/and">
                    <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isDerived" staticProperty="#//@packages.0/reflection/Property/isDerived">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                        name="isComposite" staticProperty="#//@packages.0/reflection/Property/isComposite">
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                    </target>
                  </condition>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.1/@target/@containedType.0"
                  name="allAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/allAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allCompositeAttribute/@getterBody/@statement.1/@target/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="ownedAttributeAsReference" type="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns only the References (not isComposite and not isDerived) owned by&#xD;&#xA;  * this ClassDefinition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.1/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.1/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <parameters name="oa"/>
                <body xsi:type="kermeta_language_behavior:Conditional" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <thenBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                    <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                        name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                      <parameters xsi:type="kermeta_language_behavior:CallVariable"
                          staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                      <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                          name="result"/>
                    </statement>
                  </thenBody>
                  <condition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/forAll/@body/@statement.1/@body/@containedType.0"
                      name="and" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/and">
                    <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isDerived" staticProperty="#//@packages.0/reflection/Property/isDerived">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isComposite" staticProperty="#//@packages.0/reflection/Property/isComposite">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </target>
                  </condition>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.1/@target/@containedType.0"
                  name="ownedAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsReference/@getterBody/@statement.1/@target/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="allAttributeAsReference" type="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns only all the References (not isComposite and not isDerived) of&#xD;&#xA;  * this ClassDefinition including the inherited ones&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.1/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.1/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <parameters name="oa"/>
                <body xsi:type="kermeta_language_behavior:Conditional" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <thenBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                    <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                        name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                      <parameters xsi:type="kermeta_language_behavior:CallVariable"
                          staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                      <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                          name="result"/>
                    </statement>
                  </thenBody>
                  <condition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/forAll/@body/@statement.1/@body/@containedType.0"
                      name="and" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/and">
                    <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isDerived" staticProperty="#//@packages.0/reflection/Property/isDerived">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isComposite" staticProperty="#//@packages.0/reflection/Property/isComposite">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </target>
                  </condition>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.1/@target/@containedType.0"
                  name="allAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/allAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsReference/@getterBody/@statement.1/@target/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="ownedAttributeAsProperty" type="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns only the Properties (not isComposite and isDerived) owned by&#xD;&#xA;  * this ClassDefinition&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.1/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.1/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <parameters name="oa"/>
                <body xsi:type="kermeta_language_behavior:Conditional" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <thenBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                    <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                        name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                      <parameters xsi:type="kermeta_language_behavior:CallVariable"
                          staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                      <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                          name="result"/>
                    </statement>
                  </thenBody>
                  <condition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/forAll/@body/@statement.1/@body/@containedType.0"
                      name="and" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/and">
                    <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                        name="isDerived" staticProperty="#//@packages.0/reflection/Property/isDerived">
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isComposite" staticProperty="#//@packages.0/reflection/Property/isComposite">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </target>
                  </condition>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.1/@target/@containedType.0"
                  name="ownedAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/ownedAttributeAsProperty/@getterBody/@statement.1/@target/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="allAttributeAsProperty" type="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns only all the Properties (not isComposite and isDerived) of&#xD;&#xA;  * this ClassDefinition including the inherited ones&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Property"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.1/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.1/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <parameters name="oa"/>
                <body xsi:type="kermeta_language_behavior:Conditional" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                  <thenBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                    <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                        name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                      <parameters xsi:type="kermeta_language_behavior:CallVariable"
                          staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                      <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0"
                          name="result"/>
                    </statement>
                  </thenBody>
                  <condition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/forAll/@body/@statement.1/@body/@containedType.0"
                      name="and" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/and">
                    <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                        name="isDerived" staticProperty="#//@packages.0/reflection/Property/isDerived">
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                          name="oa"/>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
                        name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@condition/@containedType.0"
                          name="isComposite" staticProperty="#//@packages.0/reflection/Property/isComposite">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"
                            name="oa"/>
                      </target>
                    </target>
                  </condition>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.1/@target/@containedType.0"
                  name="allAttribute" staticProperty="#//@packages.0/reflection/ClassDefinition/allAttribute">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allAttributeAsProperty/@getterBody/@statement.1/@target/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute name="allOperation" type="#//@packages.0/reflection/ClassDefinition/allOperation/@containedType.0"
            upper="-1" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns all the Operations of this ClassDefinition&#xD;&#xA;  * including the inherited ones&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                    type="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
                </typeParamBinding>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0"
                  name="new" staticOperation="../language/structure.km#//@packages.0/language/structure/Class/new">
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0"
                      upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@containedType.0"
                name="addAll" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/addAll">
              <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.1/@parameters.0/@containedType.0"
                  name="ownedOperation" staticProperty="#//@packages.0/reflection/ClassDefinition/ownedOperation">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.1/@parameters.0/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                </target>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0"
                  name="result"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType"
                    left="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@containedType.0/@containedType.0"
                    right="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType"
                      type="#//@packages.0/reflection/Class/superClass/@containedType.0"/>
                </containedType>
                <parameters name="t"/>
                <body xsi:type="kermeta_language_behavior:Block" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0">
                  <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                      identifier="cDef">
                    <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
                    <type type="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                        isOrdered="true" upper="1"/>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                      isCast="true">
                    <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                        name="cDef"/>
                    <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"
                        name="typeDefinition" staticProperty="#//@packages.0/reflection/ParameterizedType/typeDefinition">
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/Class/superClass/@containedType.0"
                          name="t"/>
                    </value>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"
                      name="each" staticOperation="../standard/collections.km#//@packages.0/standard/Collection/each">
                    <parameters xsi:type="kermeta_language_behavior:LambdaExpression"
                        staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0">
                      <containedType xsi:type="kermeta_language_structure:FunctionType"
                          left="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0/@containedType.0"
                          right="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0">
                        <containedType xsi:type="kermeta_language_structure:ProductType"
                            type="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"/>
                      </containedType>
                      <parameters name="p"/>
                      <body xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"
                          name="add" staticOperation="../standard/collections.km#//@packages.0/standard/Set/add">
                        <parameters xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"
                            name="p"/>
                        <target xsi:type="kermeta_language_behavior:CallResult" staticType="#//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0"
                            name="result"/>
                      </body>
                    </parameters>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@target/@containedType.0"
                        name="allOperation" staticProperty="#//@packages.0/reflection/ClassDefinition/allOperation">
                      <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                        <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                            type="#//@packages.0/reflection/Class/ownedOperation/@containedType.0"/>
                      </containedType>
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0"
                          name="cDef"/>
                    </target>
                  </statement>
                </body>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@target/@containedType.0"
                  name="superType" staticProperty="#//@packages.0/reflection/ClassDefinition/superType">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/collections.km#//@packages.0/standard/Set">
                  <typeParamBinding variable="kermeta_language_structure:ObjectTypeVariable ../standard/collections.km#//@packages.0/standard/Set/G"
                      type="#//@packages.0/reflection/Class/superClass/@containedType.0"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.1/@parameters.0/@target/@containedType.0"/>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="TypedElement"
          isAbstract="true" superType="#//@packages.0/reflection/TypedElement/@containedType.0 #//@packages.0/reflection/TypedElement/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Abstraction of the notion of typed element : each element &#xD;&#xA; * that is typed inherits this class.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
        <ownedAttribute name="type" type="../language/structure.km#//@packages.0/language/structure/Object/set/@body/@statement.0/@condition/@parameters.0/@containedType.0"
            isOrdered="true" lower="1" upper="1">
          <ownedTag value="/**&#xD;&#xA;     * Type of the model element&#xD;&#xA;     */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="TypeVariable"
          isAbstract="true" superType="#//@packages.0/reflection/TypeVariable/@containedType.0 #//@packages.0/reflection/TypeVariable/@containedType.1 #//@packages.0/reflection/TypeVariable/@containedType.2">
        <ownedTag value="/**&#xD;&#xA; * Definition of a type variable for generic types :  &#xD;&#xA; * in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
        <ownedAttribute name="supertype" type="#//@packages.0/reflection/TypeVariable/supertype/@containedType.0"
            isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Reference to the supertype, if any&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ObjectTypeVariable"
          isAbstract="true" superType="#//@packages.0/reflection/ObjectTypeVariable/@containedType.0 #//@packages.0/reflection/ObjectTypeVariable/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariable"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="VirtualType"
          isAbstract="true" superType="#//@packages.0/reflection/VirtualType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ObjectTypeVariable"/>
        <ownedAttribute name="classDefinition" type="#//@packages.0/reflection/VirtualType/classDefinition/@containedType.0"
            isOrdered="true" lower="1" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute name="modelType" type="#//@packages.0/reflection/VirtualType/modelType/@containedType.0"
            isOrdered="true" lower="1" upper="1" opposite="#//@packages.0/reflection/VirtualTypeContainer/virtualType">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/VirtualTypeContainer"/>
        </ownedAttribute>
        <ownedAttribute name="typeParamBinding" type="#//@packages.0/reflection/VirtualType/typeParamBinding/@containedType.0"
            isOrdered="true" upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariableBinding"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ModelTypeVariable"
          isAbstract="true" superType="#//@packages.0/reflection/ModelTypeVariable/@containedType.0 #//@packages.0/reflection/ModelTypeVariable/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariable"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/VirtualTypeContainer"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ProductType"
          isAbstract="true" superType="#//@packages.0/reflection/ProductType/@containedType.0 #//@packages.0/reflection/ProductType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Type corresponding to a set of Types&#xD;&#xA; * Only used in the context of FunctionType&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        <ownedAttribute name="type" type="#//@packages.0/reflection/ProductType/type/@containedType.0"
            lower="1" upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * Types &#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="FunctionType"
          isAbstract="true" superType="#//@packages.0/reflection/FunctionType/@containedType.0 #//@packages.0/reflection/FunctionType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Type used to define the use of lambda expressions.&#xD;&#xA; *  Uses :&#xD;&#xA; *  &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xD;&#xA; *      var test : Boolean init true&#xD;&#xA; *      from var it : Iterator&lt;G> init iterator&#xD;&#xA; *      until it.isOff&#xD;&#xA; *      loop&#xD;&#xA; *         test := test and func(it.next)&#xD;&#xA; *      end&#xD;&#xA; *      result := test&#xD;&#xA; *  end&#xD;&#xA; *  &lt;/pre>&#xD;&#xA; *&#xD;&#xA; *  In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xD;&#xA; *  Boolean, with a parameter of type G and a return type of type Boolean&#xD;&#xA; *  The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        <ownedAttribute name="left" type="#//@packages.0/reflection/FunctionType/left/@containedType.0"
            isOrdered="true" lower="1" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Parameters of the function (a ProductType for multiple parameters)&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
        <ownedAttribute name="right" type="#//@packages.0/reflection/FunctionType/right/@containedType.0"
            isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Result type of the function&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
        <inv name="resultType">
          <body xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"
              name="not" staticOperation="../standard/primitive_types.km#//@packages.0/standard/Boolean/not">
            <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@body/@statement.1/@initialization/@value/@parameters.0/@containedType.0/@containedType.1"
                name="isKindOf" staticOperation="../language/structure.km#//@packages.0/language/structure/Object/isKindOf">
              <parameters xsi:type="kermeta_language_behavior:TypeLiteral" staticType="#//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                <typeref type="#//@packages.0/reflection/FunctionType/resultType/@body/@target/@parameters.0/@typeref/@containedType.0"
                    upper="1">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ProductType"/>
                </typeref>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="#//@packages.0/reflection/FunctionType/right/@containedType.0"
                  name="right" staticProperty="#//@packages.0/reflection/FunctionType/right"/>
            </target>
          </body>
        </inv>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Type"
          isAbstract="true" superType="#//@packages.0/reflection/Type/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Base class definition for the &lt;b>use&lt;/b> of a type.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="typeContainer" type="#//@packages.0/reflection/Type/typeContainer/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/TypeContainer/containedType">
          <ownedTag value="/**&#xD;&#xA;  * Owning TypeContainer, if any&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        </ownedAttribute>
        <ownedOperation name="isInstance" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <ownedParameter name="element" type="#//@packages.0/reflection/Type/isInstance/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation name="hasSubType" type="#//@packages.0/reflection/Boolean"
            isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <ownedParameter name="element" type="#//@packages.0/reflection/Type/hasSubType/@ownedParameter.0/@containedType.0"
              isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="TypeVariableBinding"
          isAbstract="true" superType="#//@packages.0/reflection/TypeVariableBinding/@containedType.0 #//@packages.0/reflection/TypeVariableBinding/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Definition of a binding between a TypeVariable and a Type&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="variable" type="#//@packages.0/reflection/TypeVariableBinding/variable/@containedType.0"
            isOrdered="true" lower="1" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * TypeVariable&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeVariable"/>
        </ownedAttribute>
        <ownedAttribute name="type" type="#//@packages.0/reflection/TypeVariableBinding/type/@containedType.0"
            isOrdered="true" lower="1" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Assigned Type&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="PrimitiveType"
          isAbstract="true" superType="#//@packages.0/reflection/PrimitiveType/@containedType.0 #//@packages.0/reflection/PrimitiveType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA; * type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA; * &lt;pre>alias MyString : kermeta::standard::String&lt;/pre>&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/DataType"/>
        <ownedAttribute name="instanceType" type="#//@packages.0/reflection/PrimitiveType/instanceType/@containedType.0"
            isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="NamedElement"
          isAbstract="true" superType="#//@packages.0/reflection/NamedElement/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Any element that contain a  name (example : Operation, Property) inherit this&#xD;&#xA; * class.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="name" type="#//@packages.0/reflection/String" isOrdered="true"
            lower="1" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;     * Name of this named element&#xD;&#xA;     */"/>
        </ownedAttribute>
        <ownedOperation name="qualifiedName" type="#//@packages.0/reflection/String"
            isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Returns the qualified name of this named element. Qualified name is &#xD;&#xA;  * the list of the names of the packages hierarchically ordered, delimited by&#xD;&#xA;  * a &quot;::&quot;, followed by the name of this named element.&#xD;&#xA;  */"/>
          <body xsi:type="kermeta_language_behavior:Block" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="kermeta_language_structure:ClassDefinition ../standard/primitive_types.km#//@packages.0/standard/Void"/>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                identifier="elem">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
              <initialization xsi:type="kermeta_language_behavior:SelfExpression"
                  staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@initialization/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
              </initialization>
              <type type="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                  isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                  name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                  name="name" staticProperty="#//@packages.0/reflection/NamedElement/name">
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@initialization/@containedType.0"/>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Loop" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@containedType.0">
              <initialization xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                  isCast="true">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                    name="elem"/>
                <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/container/@containedType.0"
                    name="container" staticOperation="../language/structure.km#//@packages.0/language/structure/Object/container">
                  <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                      name="elem"/>
                </value>
              </initialization>
              <body xsi:type="kermeta_language_behavior:Block" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0">
                <statement xsi:type="kermeta_language_behavior:Assignment" staticType="../standard/primitive_types.km#//@packages.0/standard/String/plus/@containedType.0">
                  <target xsi:type="kermeta_language_behavior:CallResult" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                      name="result"/>
                  <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/primitive_types.km#//@packages.0/standard/String/plus/@containedType.0"
                      name="plus" staticOperation="../standard/primitive_types.km#//@packages.0/standard/String/plus">
                    <parameters xsi:type="kermeta_language_behavior:CallResult" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                        name="result"/>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/primitive_types.km#//@packages.0/standard/String/plus/@containedType.0"
                        name="plus" staticOperation="../standard/primitive_types.km#//@packages.0/standard/String/plus">
                      <parameters xsi:type="kermeta_language_behavior:StringLiteral"
                          staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.2/@body/@statement.0/@value/@target/@parameters.0/@containedType.0"
                          value="::">
                        <containedType xsi:type="kermeta_language_structure:Class"
                            typeDefinition="kermeta_language_structure:ClassDefinition ../standard/primitive_types.km#//@packages.0/standard/String"/>
                      </parameters>
                      <target xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"
                          name="name" staticProperty="#//@packages.0/reflection/NamedElement/name">
                        <target xsi:type="kermeta_language_behavior:CallVariable"
                            staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                            name="elem"/>
                      </target>
                    </target>
                  </value>
                </statement>
                <statement xsi:type="kermeta_language_behavior:Assignment" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                    isCast="true">
                  <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                      name="elem"/>
                  <value xsi:type="kermeta_language_behavior:CallFeature" staticType="../language/structure.km#//@packages.0/language/structure/Object/container/@containedType.0"
                      name="container" staticOperation="../language/structure.km#//@packages.0/language/structure/Object/container">
                    <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                        name="elem"/>
                  </value>
                </statement>
              </body>
              <stopCondition xsi:type="kermeta_language_behavior:CallFeature" staticType="../standard/collections.km#//@packages.0/standard/Collection/remove/@body/@statement.1/@initialization/@value/@parameters.0/@containedType.0/@containedType.1"
                  name="equals" staticOperation="../language/structure.km#//@packages.0/language/structure/Object/equals">
                <parameters xsi:type="kermeta_language_behavior:VoidLiteral" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@containedType.0"/>
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="#//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0"
                    name="elem"/>
              </stopCondition>
            </statement>
          </body>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="SelfType"
          isAbstract="true" superType="#//@packages.0/reflection/SelfType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Self type : DEPRECATED&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="TypeDefinitionContainer"
          isAbstract="true" superType="#//@packages.0/reflection/TypeDefinitionContainer/@containedType.0">
        <ownedTag value="/** &#xD;&#xA; * Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xD;&#xA; * element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xD;&#xA; * package definition.&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
        <ownedAttribute name="ownedTypeDefinition" type="#//@packages.0/reflection/TypeDefinitionContainer/ownedTypeDefinition/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Contained TypeDefinitions&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Package"
          isAbstract="true" superType="#//@packages.0/reflection/Package/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Package in kermeta. Each kermeta model must have a root package. &#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinitionContainer"/>
        <ownedAttribute name="nestedPackage" type="#//@packages.0/reflection/Package/nestedPackage/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/Package/nestingPackage"
            isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Nested Packages contained by the Package&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Package"/>
        </ownedAttribute>
        <ownedAttribute name="nestingPackage" type="#//@packages.0/reflection/Package/nestingPackage/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/Package/nestedPackage">
          <ownedTag value="/**&#xD;&#xA;  * Owning Package, if any&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Package"/>
        </ownedAttribute>
        <ownedAttribute name="uri" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Uri of the Package&#xD;&#xA;  */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="ModelingUnit"
          isAbstract="true">
        <ownedTag value="/**&#xD;&#xA; * The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xD;&#xA; * It also reference others modeling unit.&#xD;&#xA; */"/>
        <ownedAttribute name="packages" type="#//@packages.0/reflection/ModelingUnit/packages/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Contained root Packages&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Package"/>
        </ownedAttribute>
        <ownedAttribute name="requires" type="#//@packages.0/reflection/ModelingUnit/requires/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Require"/>
        </ownedAttribute>
        <ownedAttribute name="usings" type="#//@packages.0/reflection/ModelingUnit/usings/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Using"/>
        </ownedAttribute>
        <ownedAttribute name="referencedModelingUnits" type="#//@packages.0/reflection/ModelingUnit/referencedModelingUnits/@containedType.0"
            upper="-1">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/ModelingUnit"/>
        </ownedAttribute>
        <ownedAttribute name="ownedTags" type="#//@packages.0/reflection/ModelingUnit/ownedTags/@containedType.0"
            upper="-1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Tag"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Require"
          isAbstract="true" superType="#//@packages.0/reflection/Require/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="uri" type="#//@packages.0/reflection/String" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Using"
          isAbstract="true" superType="#//@packages.0/reflection/Using/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Object"/>
        <ownedAttribute name="qualifiedName" type="#//@packages.0/reflection/String"
            isOrdered="true" upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="TypeDefinition"
          isAbstract="true" superType="#//@packages.0/reflection/TypeDefinition/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xD;&#xA; * this class)&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
        <ownedAttribute name="isAspect" type="#//@packages.0/reflection/Boolean" isOrdered="true"
            upper="1" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * This boolean allows to tell if this Type definition is an aspect or not&#xD;&#xA;  * If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xD;&#xA;  * TypeDefinition that has exactly the same qualified name&#xD;&#xA;  */"/>
        </ownedAttribute>
        <ownedAttribute name="baseAspects" type="#//@packages.0/reflection/TypeDefinition/baseAspects/@containedType.0"
            isOrdered="true" upper="-1" opposite="#//@packages.0/reflection/TypeDefinition/aspects">
          <ownedTag value="/**&#xD;&#xA;  * References to the base classes&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
        <ownedAttribute name="aspects" type="#//@packages.0/reflection/TypeDefinition/aspects/@containedType.0"
            isOrdered="true" upper="-1" opposite="#//@packages.0/reflection/TypeDefinition/baseAspects">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="VoidType"
          isAbstract="true" superType="#//@packages.0/reflection/VoidType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Class definition for the &lt;pre>Void&lt;/pre> type&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="DataType"
          isAbstract="true" superType="#//@packages.0/reflection/DataType/@containedType.0 #//@packages.0/reflection/DataType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Special type definition for Enumeration, PrimitiveType&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/TypeDefinition"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Type"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Enumeration"
          isAbstract="true" superType="#//@packages.0/reflection/Enumeration/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Definition for Enumeration&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/DataType"/>
        <ownedAttribute name="ownedLiteral" type="#//@packages.0/reflection/Enumeration/ownedLiteral/@containedType.0"
            upper="-1" opposite="#//@packages.0/reflection/EnumerationLiteral/enumeration"
            isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Owned items in an Enumeration&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/EnumerationLiteral"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="EnumerationLiteral"
          isAbstract="true" superType="#//@packages.0/reflection/EnumerationLiteral/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Item definition for enumeration&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/NamedElement"/>
        <ownedAttribute name="enumeration" type="#//@packages.0/reflection/EnumerationLiteral/enumeration/@containedType.0"
            isOrdered="true" lower="1" upper="1" opposite="#//@packages.0/reflection/Enumeration/ownedLiteral">
          <ownedTag value="/**&#xD;&#xA;  * Owning Enumeration&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Enumeration"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" name="Parameter"
          isAbstract="true" superType="#//@packages.0/reflection/Parameter/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Definition for operation parameter&#xD;&#xA; */"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/MultiplicityElement"/>
        <ownedAttribute name="operation" type="#//@packages.0/reflection/Parameter/operation/@containedType.0"
            isOrdered="true" upper="1" opposite="#//@packages.0/reflection/Operation/ownedParameter">
          <ownedTag value="/**&#xD;&#xA;  * Owning operation&#xD;&#xA;  */"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="#//@packages.0/reflection/Operation"/>
        </ownedAttribute>
      </ownedTypeDefinition>
    </nestedPackage>
  </packages>
  <requires uri="../standard/collections.kmt">
    <ownedTag value="/**&#xD;&#xA; * Contains all the abstract classes used in the reflection mechanism. Implements the &lt;b>derived&#xD;&#xA; * properties&lt;/b> contained in the classes; declares the abstract operations.&#xD;&#xA; * Concrete implementation is in kermeta.language.structure.&#xD;&#xA; */"/>
  </requires>
  <requires uri="../persistence/resource.kmt"/>
</kermeta_language_structure:ModelingUnit>
