<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="CompilationUnit">
    <details key="require" value="../Standard.kmt|behavior.kmt|"/>
    <details key="using" value="kermeta::language::structure|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="file:/home/paco/Desktop/KermetaCVS/fr.irisa.triskell.kermeta.framework/dist/language/structure.ecore#/" nsPrefix="kermeta">
    <eSubpackages name="language" nsURI="file:/home/paco/Desktop/KermetaCVS/fr.irisa.triskell.kermeta.framework/dist/language/structure.ecore#//language" nsPrefix="language">
      <eSubpackages name="structure" nsURI="file:/home/paco/Desktop/KermetaCVS/fr.irisa.triskell.kermeta.framework/dist/language/structure.ecore#//language/structure" nsPrefix="structure">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Contains the concrete implementation (including the operation bodies) &#xA; * of the classes of the &lt;code>kermeta::reflection&lt;/code> package.&#xA; * If you need more documentation, please take a look at the&#xA; * &lt;code>kermeta::reflection&lt;/code> package which is more complete.&#xA; * &lt;img src=&quot;./figures/language_structure_package.png&quot;>&#xA; */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Alias to kermeta::standard::String */"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Alias to kermeta::standard::Boolean */"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Alias to kermeta::standard::Integer */"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Real" instanceClassName="java.lang.Double">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Alias to kermeta::standard::Real */"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Integer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Alias to kermeta::standard::UnlimitedNatural */"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Object&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Object"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="getMetaClass">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.getMetaClass(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.getMetaClass()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/getMetaClass"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Class"/>
          </eOperations>
          <eOperations name="container">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Object.container(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.container()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/container"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.checkInvariants(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.checkInvariants()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/checkInvariants"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;if self.isNotEqual(void) then&#xA;&#x9;&#x9;self.checkInvariants&#xA;&#x9;&#x9;self.getMetaClass.ownedAttribute.each{subObj | if subObj.isComposite then&#xA;&#x9;&#x9;&#x9;&#x9;if (self.get(subObj).getMetaClass.typeDefinition.name.equals(&quot;ReflectiveSequence&quot;)) or (self.get(subObj).getMetaClass.typeDefinition.name.equals(&quot;ReflectiveCollection&quot;)) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var subObjInstances : kermeta::standard::Collection&lt;kermeta::reflection::Object>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;subObjInstances ?= self.get(subObj)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;subObjInstances.each{aSubObjInstances | aSubObjInstances.checkAllInvariants}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;self.get(subObj).checkAllInvariants&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.checkAllInvariants()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/checkAllInvariants"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eOperations>
          <eOperations name="equals" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.equals(self, element)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.equals()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/equals"/>
            </eAnnotations>
            <eParameters name="element">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="isNotEqual" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := not (equals(element))&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.isNotEqual()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/isNotEqual"/>
            </eAnnotations>
            <eParameters name="element">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="isKindOf" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := self.getMetaClass.equals(cl)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.isKindOf(Class)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/isKindOf"/>
            </eAnnotations>
            <eParameters name="cl">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Class"/>
            </eParameters>
          </eOperations>
          <eOperations name="get">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Object.get(self, ~property)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.get(Property)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/get"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Property"/>
            </eParameters>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;if element.isInstanceOf(~property.type) then&#xA;&#x9;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.~set(self, ~property, element)&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;var e : kermeta::exceptions::IncompatibleTypeError init kermeta::exceptions::IncompatibleTypeError.new&#xA;&#x9;&#x9;e.message := &quot;IncompatibleTypeError : Cannot set property &quot;.plus(~property.name).plus(&quot; of object &quot;).plus(self.toString).plus(&quot; to &quot;).plus(element.toString).plus(&quot;.&quot;)&#xA;&#x9;&#x9;raise e&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.set(Property)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/set"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Property"/>
            </eParameters>
            <eParameters name="element">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="isSet" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.isSet(self, ~property)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.isSet(Property)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/isSet"/>
            </eAnnotations>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Property"/>
            </eParameters>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.unSet(self, ~property)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.unset(Property)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/unset"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Property"/>
            </eParameters>
          </eOperations>
          <eOperations name="oid" eType="/1/language/structure/Integer">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.oid(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.oid()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/oid"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="toString" eType="/1/language/structure/String">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := &quot;[&quot;.plus(self.getMetaClass.typeDefinition.qualifiedName).plus(&quot;:&quot;).plus(oid.toString).plus(&quot;]&quot;)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.toString()&#xA;   * Returns a String of form [qn:oid] where 'qn' is the qualified name of&#xA;   * the object type, and oid the unique ID of the object&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/toString"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFrozen" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.isFrozen(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.isFrozen()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/isFrozen"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isVoid" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := false&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.isVoid()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/isVoid"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode" eType="/1/language/structure/Integer">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.hashcode(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.hashcode()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/hashcode"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.freeze(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.freeze()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/freeze"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eOperations>
          <eOperations name="asType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;if isInstanceOf(type) then&#xA;&#x9;&#x9;result := self&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;raise kermeta::exceptions::TypeCastError.new&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.asType(Class)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/asType"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            <eParameters name="type">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Class"/>
            </eParameters>
          </eOperations>
          <eOperations name="isInstanceOf" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.isInstanceOf(self, type)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Object.isInstanceOf(Type)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/isInstanceOf"/>
            </eAnnotations>
            <eParameters name="type">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Type"/>
            </eParameters>
          </eOperations>
          <eOperations name="containingResource">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.getContainingResource(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Object.containingResource()&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Object"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Object/containingResource"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../persistence/resource.ecore#/1/persistence/Resource"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ParametrizedType&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ParameterizedType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitParameterizedType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ParameterizedType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ParameterizedType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ModelType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="#/1/language/structure/TypeDefinition"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ModelType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitModelType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ModelType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ModelType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="new">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::ModelType.newObject(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::ModelType.new()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::ModelType"/>
              <references href="../reflection/reflection.ecore#/1/reflection/ModelType/new"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Model"/>
          </eOperations>
          <eOperations name="isModelTypeOf" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::ModelType.isModelTypeOf(self, m)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::ModelType.isModelTypeOf(Model)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::ModelType"/>
              <references href="../reflection/reflection.ecore#/1/reflection/ModelType/isModelTypeOf"/>
            </eAnnotations>
            <eParameters name="m">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Model"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Class&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/ParameterizedType"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Class"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="new">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Class.newObject(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::reflection::Class.new()&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Class"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Class/new"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
          </eOperations>
          <eOperations name="clone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/clone">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Class.cloneObject(self, objectToClone)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::language::structure::Type.clone(Object)&#xA;   */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/deepClone">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Class.deepCloneObject(self, objectToClone)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::language::structure::Type.deepClone(Object)&#xA;   */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="hasSubType" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Class.hasSubType(self, object)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::language::structure::Type.hasSubType(Type)&#xA;   */"/>
              <details key="superOperation" value="kermeta::reflection::Type"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Type/hasSubType"/>
            </eAnnotations>
            <eParameters name="object">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Type"/>
            </eParameters>
          </eOperations>
          <eOperations name="equals" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta" references="/1/language/structure/Object/equals">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Class.equals(self, other)&#xA;end"/>
              <details key="documentation" value="/**&#xA;   * Implements kermeta::language::structure::Object.equals(Object)&#xA;   */"/>
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eParameters name="other">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/ParameterizedType/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitClass(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::ParameterizedType"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Class/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Class/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::MultiplicityElement&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/MultiplicityElement"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/TypedElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitMultiplicityElement(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::TypedElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/MultiplicityElement/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/MultiplicityElement/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Constraint">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Constraint&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Constraint"/>
          <eSuperTypes href="#/1/language/structure/NamedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Operation"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/NamedElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitConstraint(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::NamedElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Constraint/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Constraint/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="/1/language/structure/ConstraintLanguage">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;   * Language in which the constraint is expressed&#xA;   */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" eType="/1/language/structure/ConstraintType">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;   * Type of the Constraint (precond/postcond/inv)&#xA;   */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;   * Body of the constraint, expressed as a KerMeta expression&#xA;   */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="behavior.ecore#/1/language/behavior/Expression"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintLanguage">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Enumeration listing supported constraint languages&#xA; */"/>
          </eAnnotations>
          <eLiterals name="kermeta" literal="kermeta"/>
          <eLiterals name="ocl" value="1" literal="ocl"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Enumeration liting the different kinds of constraints&#xA; */"/>
          </eAnnotations>
          <eLiterals name="pre" literal="pre"/>
          <eLiterals name="post" value="1" literal="post"/>
          <eLiterals name="inv" value="2" literal="inv"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Operation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Operation&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/MultiplicityElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Operation"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/MultiplicityElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitOperation(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::MultiplicityElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Operation/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Operation/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;   * Body of the Operation, expressed as a KerMeta expression&#xA;   */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="behavior.ecore#/1/language/behavior/Expression"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Tag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Tag&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Tag"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTag(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Tag/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Tag/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Property&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/MultiplicityElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Property"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/MultiplicityElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitProperty(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::MultiplicityElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Property/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Property/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="getterBody" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;   * To be written ################################&#xA;   */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="behavior.ecore#/1/language/behavior/Expression"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="setterBody" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;   * To be written ####################################&#xA;   */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="behavior.ecore#/1/language/behavior/Expression"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeContainer" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::TypeContainer&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/TypeContainer"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualTypeContainer" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::VirtualTypeContainer&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/VirtualTypeContainer"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::GenericTypeDefinition&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeDefinition"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/GenericTypeDefinition"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/TypeDefinition/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitGenericTypeDefinition(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::TypeDefinition"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/GenericTypeDefinition/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/GenericTypeDefinition/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ClassDefinition&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/GenericTypeDefinition"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ClassDefinition"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/GenericTypeDefinition/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitClassDefinition(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::GenericTypeDefinition"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ClassDefinition/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ClassDefinition/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::TypedElement&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/NamedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/TypedElement"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/NamedElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTypedElement(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::NamedElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/TypedElement/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/TypedElement/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::TypeVariable&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="#/1/language/structure/NamedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/TypeVariable"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ObjectTypeVariable&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/TypeVariable"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ObjectTypeVariable"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitObjectTypeVariable(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ObjectTypeVariable/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ObjectTypeVariable/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::VirtualType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/ObjectTypeVariable"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/VirtualType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/ObjectTypeVariable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitVirtualType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::ObjectTypeVariable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/VirtualType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/VirtualType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ModelTypeVariable&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeVariable"/>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/VirtualTypeContainer"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ModelTypeVariable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitModelTypeVariable(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ModelTypeVariable/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ModelTypeVariable/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Model&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Model"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitModel(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Model/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Model/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="filter" ordered="false" upperBound="-1">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := contents.~select{o | typeName.isInstance(o)}.asSet&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Model.filter(Type)&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Model"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Model/filter"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            <eParameters name="typeName">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Type"/>
            </eParameters>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;contents&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Model.add(self, obj)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Model.add(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Model"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Model/add"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eParameters name="obj">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveCollection.remove(contents, obj)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Model.remove(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Model"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Model/remove"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eParameters name="obj">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := kermeta::standard::Set&lt;kermeta::language::structure::Object>.new&#xA;&#x9;objectsToAdd.each{obj | do&#xA;&#x9;&#x9;&#x9;var addedObject : kermeta::reflection::Object init addCompatible(obj)&#xA;&#x9;&#x9;&#x9;if not (addedObject.isVoid) then&#xA;&#x9;&#x9;&#x9;&#x9;result.add(obj)&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end}&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Model.addAllCompatible(Collection&lt;Object>)&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Model"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Model/addAllCompatible"/>
            </eAnnotations>
            <eGenericType>
              <eTypeArguments eClassifier="/1/language/structure/Object"/>
              <eClassifier xsi:type="ecore:EClass" href="../standard/collections.ecore#/1/standard/Collection"/>
            </eGenericType>
            <eParameters name="objectsToAdd">
              <eType xsi:type="ecore:EClass" href="../standard/collections.ecore#/1/standard/Collection"/>
            </eParameters>
          </eOperations>
          <eOperations name="addCompatible">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;contents&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Model.addCompatible(self, objectToAdd)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Model.addCompatible(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Model"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Model/addCompatible"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            <eParameters name="objectToAdd">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ProductType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ProductType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ProductType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitProductType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ProductType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ProductType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::FunctionType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/FunctionType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitFunctionType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/FunctionType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/FunctionType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Type&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Type"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="clone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="/**&#xA;  * Returns a copy of passed Object built by recursively copying attribute&#xA;  * properties, and referencing original reference properties values&#xA;  */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="/**&#xA;  * Returns a copy of passed Object built by recursively copying values of&#xA;  * all properties, no matter the property kind&#xA;  */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="isInstance" eType="/1/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := element.isInstanceOf(self)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::reflection::Type.isInstance(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::reflection::Type"/>
              <references href="../reflection/reflection.ecore#/1/reflection/Type/isInstance"/>
            </eAnnotations>
            <eParameters name="element">
              <eType xsi:type="ecore:EClass" href="../reflection/reflection.ecore#/1/reflection/Object"/>
            </eParameters>
          </eOperations>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Type/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Type/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::TypeVariableBinding&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/TypeVariableBinding"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTypeVariableBinding(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/TypeVariableBinding/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/TypeVariableBinding/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::PrimitiveType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeContainer"/>
          <eSuperTypes href="#/1/language/structure/DataType"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/PrimitiveType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/DataType/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitPrimitiveType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::DataType"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/PrimitiveType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/PrimitiveType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="clone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta" references="/1/language/structure/DataType/clone">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::language::structure::Type.clone(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::DataType"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::NamedElement&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Object"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/NamedElement"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitNamedElement(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/NamedElement/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/NamedElement/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::TypeDefinitionContainer&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/NamedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/TypeDefinitionContainer"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/NamedElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTypeDefinitionContainer(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::NamedElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/TypeDefinitionContainer/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/TypeDefinitionContainer/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Package">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Package&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeDefinitionContainer"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Package"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/TypeDefinitionContainer/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitPackage(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::TypeDefinitionContainer"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Package/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Package/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelingUnit">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::ModelingUnit&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/ModelingUnit"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitModelingUnit(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/ModelingUnit/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/ModelingUnit/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Filter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Filter&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Filter"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitFilter(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Filter/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Filter/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Require" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Extends kermeta::reflection::Require with visitor pattern&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Require"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitRequire(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Require/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Require/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Using" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Extends kermeta::reflection::Using with visitor pattern&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Using"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitUsing(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::KMStructureVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Using/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Using/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::TypeDefinition&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/NamedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/TypeDefinition"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/NamedElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTypeDefinition(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::NamedElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/TypeDefinition/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/TypeDefinition/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::VoidType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/VoidType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitVoidType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/VoidType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/VoidType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DataType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::DataType&#xA; */"/>
            <details key="isSemanticallyAbstract" value="clone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/TypeDefinition"/>
          <eSuperTypes href="#/1/language/structure/Type"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/DataType"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitDataType(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/DataType/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/DataType/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="clone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta" references="/1/language/structure/Type/clone">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::language::structure::Type.clone(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Enumeration&#xA; */"/>
            <details key="isSemanticallyAbstract" value="deepClone"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/DataType"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Enumeration"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/DataType/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitEnumeration(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::DataType"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Enumeration/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Enumeration/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="clone" eType="/1/language/structure/Object">
            <eAnnotations source="kermeta" references="/1/language/structure/DataType/clone">
              <details key="body" value="do&#xA;&#x9;raise &quot;NOT IMPLEMENTED&quot;&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implements kermeta::language::structure::Type.clone(Object)&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::DataType"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::EnumerationLiteral&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/NamedElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/EnumerationLiteral"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/NamedElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitEnumerationLiteral(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::NamedElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/EnumerationLiteral/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/EnumerationLiteral/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implements kermeta::reflection::Parameter&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="#/1/language/structure/MultiplicityElement"/>
          <eSuperTypes href="../reflection/reflection.ecore#/1/reflection/Parameter"/>
          <eSuperTypes href="#/1/language/structure/KMStructureVisitable"/>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta" references="/1/language/structure/MultiplicityElement/acceptKMStructureVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitParameter(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::structure::MultiplicityElement"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/Parameter/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/Parameter/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="KMStructureVisitor" abstract="true" eSuperTypes="/1/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Implementation of the Visitor pattern for the model elements contained in structure package&#xA; */"/>
          </eAnnotations>
          <eTypeParameters name="ContextType"/>
          <eTypeParameters name="ResultType"/>
          <eOperations name="visitClass">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Class"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitMultiplicityElement">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/MultiplicityElement"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitOperation">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Operation"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTag">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Tag"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitProperty">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Property"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitClassDefinition">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ClassDefinition"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTypedElement">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/TypedElement"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitObjectTypeVariable">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ObjectTypeVariable"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitVirtualType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/VirtualType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitModelTypeVariable">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ModelTypeVariable"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitModel">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Model"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitProductType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ProductType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitFunctionType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/FunctionType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Type"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTypeVariableBinding">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/TypeVariableBinding"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitPrimitiveType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/PrimitiveType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitNamedElement">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/NamedElement"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitPackage">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Package"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTypeDefinition">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/TypeDefinition"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitVoidType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/VoidType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitDataType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/DataType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitEnumeration">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Enumeration"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitEnumerationLiteral">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/EnumerationLiteral"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitParameter">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Parameter"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitGenericTypeDefinition">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/GenericTypeDefinition"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitParameterizedType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ParameterizedType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitModelType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ModelType"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTypeDefinitionContainer">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/TypeDefinitionContainer"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitConstraint">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Constraint"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitModelingUnit">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/ModelingUnit"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitRequire">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Require"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitUsing">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Using"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitFilter">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
              <details key="documentation" value="/** Implementation of the Visitor pattern : 'visit(node)' method */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/structure/Filter"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="KMStructureVisitable" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * All the classes defined in this &lt;code>kermeta::language::structure&lt;/code> package &#xA; * inherit this class. Part of Visitor pattern implementation.&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMStructureVisitor">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="/**&#xA;  * 'accept()' method of the GoF 'Visitor' design pattern&#xA;  */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/structure/KMStructureVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/structure/KMStructureVisitable/acceptKMStructureVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EAnnotation source="dependentResource">
    <references href="../Standard.ecore#/0"/>
    <references href="../Standard.ecore#/1"/>
    <references href="../Standard.ecore#/2"/>
    <references href="../standard/collections.ecore#/0"/>
    <references href="../standard/collections.ecore#/1"/>
    <references href="../standard/primitive_types.ecore#/0"/>
    <references href="../standard/primitive_types.ecore#/1"/>
    <references href="behavior.ecore#/0"/>
    <references href="behavior.ecore#/1"/>
    <references href="../reflection/reflection.ecore#/0"/>
    <references href="../reflection/reflection.ecore#/1"/>
    <references href="../reflection/reflection.ecore#/2"/>
    <references href="../persistence/resource.ecore#/0"/>
    <references href="../persistence/resource.ecore#/1"/>
    <references href="reflective_collections.ecore#/0"/>
    <references href="reflective_collections.ecore#/1"/>
    <references href="reflective_collections.ecore#/2"/>
    <references href="../kunit/kunit.ecore#/0"/>
    <references href="../kunit/kunit.ecore#/1"/>
    <references href="../kunit/assert.ecore#/0"/>
    <references href="../kunit/assert.ecore#/1"/>
    <references href="../utils/hashtable.ecore#/0"/>
    <references href="../utils/hashtable.ecore#/1"/>
    <references href="../utils/stack.ecore#/0"/>
    <references href="../utils/stack.ecore#/1"/>
    <references href="../io/std_io.ecore#/0"/>
    <references href="../io/std_io.ecore#/1"/>
    <references href="../io/std_io.ecore#/2"/>
    <references href="../io/file_io.ecore#/0"/>
    <references href="../io/file_io.ecore#/1"/>
    <references href="../io/file_io.ecore#/2"/>
    <references href="../exceptions/exceptions.ecore#/0"/>
    <references href="../exceptions/exceptions.ecore#/1"/>
    <references href="dynamic_expression.ecore#/0"/>
    <references href="dynamic_expression.ecore#/1"/>
    <references href="../standard/java.ecore#/0"/>
    <references href="../standard/java.ecore#/1"/>
    <references href="../standard/java.ecore#/2"/>
    <references href="../ecore/ecore_compatibility.ecore#/0"/>
    <references href="../ecore/ecore_compatibility.ecore#/1"/>
    <references href="../ecore/ecore_compatibility.ecore#/2"/>
    <references href="../utils/StringBuffer.ecore#/0"/>
    <references href="../utils/StringBuffer.ecore#/1"/>
    <references href="../utils/StringBuffer.ecore#/2"/>
  </ecore:EAnnotation>
</xmi:XMI>
