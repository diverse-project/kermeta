<?xml version="1.0" encoding="ASCII"?>
<kermeta_language_structure:ModelingUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:kermeta_language_structure="http://www.kermeta.org/kermeta//language/structure">
  <packages name="kermeta">
    <nestedPackage tag="//@packages.0/exceptions/@ownedTags.0" name="exceptions" uri="http://www.kermeta.org/kermeta/exceptions">
      <ownedTags value="/** &#xD;&#xA; * Contains the definition of a Kermeta exception and a few basic exceptions.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/exceptions_package.png&quot;>&#xD;&#xA; */" object="//@packages.0/exceptions"/>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/Exception/@ownedTags.0" name="Exception" superType="//@packages.0/exceptions/Exception/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * Generic exceptions&#xD;&#xA; * The main class from which all the exception inherit&#xD;&#xA; */" object="//@packages.0/exceptions/Exception"/>
        <containedType xsi:type="kermeta_language_structure:Class">
          <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../language/structure.km#//@packages.0/language/structure/Object"/>
        </containedType>
        <ownedAttribute tag="//@packages.0/exceptions/Exception/message/@ownedTags.0" name="message" isOrdered="true" upper="1" isComposite="true" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTags value="/** The message attached to the exception     */" object="//@packages.0/exceptions/Exception/message"/>
          <type href="../language/structure.km#//@packages.0/language/structure/Object/set/@body/@statement.0/@elseBody/@statement.1/@target/@containedType.0"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/exceptions/Exception/nestedException/@ownedTags.0" name="nestedException" type="//@packages.0/exceptions/Exception/nestedException/@containedType.0" isOrdered="true" upper="1" isComposite="true" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTags value="/** Any nested exception     */" object="//@packages.0/exceptions/Exception/nestedException"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/exceptions/Exception/stackTrace/@ownedTags.0" name="stackTrace" isOrdered="true" upper="1" isComposite="true" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTags value="/**&#xD;&#xA;     * The stack trace as a String&#xD;&#xA;     * Filled by the interpreted when the exception is raised&#xD;&#xA;     */" object="//@packages.0/exceptions/Exception/stackTrace"/>
          <type href="../kunit/kunit.km#//@packages.0/kunit/Error/toString/@body/@statement.3/@thenBody/@statement.0/@value/@parameters.0/@containedType.0"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/RuntimeError/@ownedTags.0" name="RuntimeError" superType="//@packages.0/exceptions/RuntimeError/@containedType.0">
        <ownedTags value="/** Exception for interpreter exceptions */" object="//@packages.0/exceptions/RuntimeError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
        <ownedAttribute tag="//@packages.0/exceptions/RuntimeError/expression/@ownedTags.0" name="expression" type="//@packages.0/exceptions/RuntimeError/expression/@containedType.0" isOrdered="true" upper="1" isComposite="true" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTags value="/** The code that raised the exception */" object="//@packages.0/exceptions/RuntimeError/expression"/>
          <containedType xsi:type="kermeta_language_structure:Class">
            <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../language/behavior.km#//@packages.0/language/behavior/Expression"/>
          </containedType>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/CallOnVoidTarget/@ownedTags.0" name="CallOnVoidTarget" superType="//@packages.0/exceptions/CallOnVoidTarget/@containedType.0">
        <ownedTags value="/** Occurs when a feature is called on void */" object="//@packages.0/exceptions/CallOnVoidTarget"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/RuntimeError"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/TypeCastError/@ownedTags.0" name="TypeCastError" superType="//@packages.0/exceptions/TypeCastError/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * Occurs when a cast (Object::asType operation) fails&#xD;&#xA; */" object="//@packages.0/exceptions/TypeCastError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/RuntimeError"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/NotImplementedException/@ownedTags.0" name="NotImplementedException" superType="//@packages.0/exceptions/NotImplementedException/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * Use this exception whenyou want to forbid the access to an unimplemented operation &#xD;&#xA; * and invite to implement it&#xD;&#xA; */" object="//@packages.0/exceptions/NotImplementedException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/RuntimeError"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/UpperBoundReachedError/@ownedTags.0" name="UpperBoundReachedError" superType="//@packages.0/exceptions/UpperBoundReachedError/@containedType.0">
        <ownedTags value="/** &#xD;&#xA; * Use this exception when user tries to add an element to a property which type is collection&#xD;&#xA; * which has an upper bound != -1 ( ie *)&#xD;&#xA; */" object="//@packages.0/exceptions/UpperBoundReachedError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/RuntimeError"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/AbstractClassInstantiationError/@ownedTags.0" name="AbstractClassInstantiationError" superType="//@packages.0/exceptions/AbstractClassInstantiationError/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * Creation on an abstract class. Usually this is detected by the type-checker. The only&#xD;&#xA; * case where this happens is when instantiating a type variable, whose bound type turns&#xD;&#xA; * out to be abstract.&#xD;&#xA; */" object="//@packages.0/exceptions/AbstractClassInstantiationError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/RuntimeError"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/IncompatibleTypeError/@ownedTags.0" name="IncompatibleTypeError" superType="//@packages.0/exceptions/IncompatibleTypeError/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * Raised by the Object::set operation if the type of the &#xD;&#xA; * Object to set has an incompatible type.&#xD;&#xA; */" object="//@packages.0/exceptions/IncompatibleTypeError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/RuntimeError"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/DivisionByZero/@ownedTags.0" name="DivisionByZero" superType="//@packages.0/exceptions/DivisionByZero/@containedType.0">
        <ownedTags value="/** well-known attempt to divide with a zero valued divider */" object="//@packages.0/exceptions/DivisionByZero"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/OverflowError/@ownedTags.0" name="OverflowError" superType="//@packages.0/exceptions/OverflowError/@containedType.0">
        <ownedTags value="/** the figure oversteps the capacity of the numeric variable */" object="//@packages.0/exceptions/OverflowError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/VoidOperandError/@ownedTags.0" name="VoidOperandError" superType="//@packages.0/exceptions/VoidOperandError/@containedType.0">
        <ownedTags value="/** one of the required operands is void */" object="//@packages.0/exceptions/VoidOperandError"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/StringIndexOutOfBound/@ownedTags.0" name="StringIndexOutOfBound" superType="//@packages.0/exceptions/StringIndexOutOfBound/@containedType.0">
        <ownedTags value="/** the data overstep the size of the string variable */" object="//@packages.0/exceptions/StringIndexOutOfBound"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/StringFormatException/@ownedTags.0" name="StringFormatException" superType="//@packages.0/exceptions/StringFormatException/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */" object="//@packages.0/exceptions/StringFormatException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/IndexOutOfBound/@ownedTags.0" name="IndexOutOfBound" superType="//@packages.0/exceptions/IndexOutOfBound/@containedType.0">
        <ownedTags value="/** Occurs when trying to access out of bounds elements */" object="//@packages.0/exceptions/IndexOutOfBound"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/EmptyCollection/@ownedTags.0" name="EmptyCollection" superType="//@packages.0/exceptions/EmptyCollection/@containedType.0">
        <ownedTags value="/** Occurs when trying to access element on an empty collection */" object="//@packages.0/exceptions/EmptyCollection"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/IteratorIsOff/@ownedTags.0" name="IteratorIsOff" superType="//@packages.0/exceptions/IteratorIsOff/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * Occurs when calling next() operation while iterator is already&#xD;&#xA; * positioned on the last element of a collection&#xD;&#xA; */" object="//@packages.0/exceptions/IteratorIsOff"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/IOException/@ownedTags.0" name="IOException" superType="//@packages.0/exceptions/IOException/@containedType.0">
        <ownedTags value="/** an interaction with the underlying system failed */" object="//@packages.0/exceptions/IOException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/FileNotFoundException/@ownedTags.0" name="FileNotFoundException" superType="//@packages.0/exceptions/FileNotFoundException/@containedType.0">
        <ownedTags value="/** the file has not be found on the underlying system */" object="//@packages.0/exceptions/FileNotFoundException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/IOException"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ConstraintViolatedPre/@ownedTags.0" name="ConstraintViolatedPre" superType="//@packages.0/exceptions/ConstraintViolatedPre/@containedType.0">
        <ownedTags value="/** the pre-condition is not satisfied */" object="//@packages.0/exceptions/ConstraintViolatedPre"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ConstraintViolatedPost/@ownedTags.0" name="ConstraintViolatedPost" superType="//@packages.0/exceptions/ConstraintViolatedPost/@containedType.0">
        <ownedTags value="/** the post-condition is not satisfied */" object="//@packages.0/exceptions/ConstraintViolatedPost"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ConstraintViolatedInv/@ownedTags.0" name="ConstraintViolatedInv" superType="//@packages.0/exceptions/ConstraintViolatedInv/@containedType.0">
        <ownedTags value="/** some fixes declared in the invariant condition ave been changed */" object="//@packages.0/exceptions/ConstraintViolatedInv"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ResourceLoadException/@ownedTags.0" name="ResourceLoadException" superType="//@packages.0/exceptions/ResourceLoadException/@containedType.0">
        <ownedTags value="/** Occurs when Resource loading fails for some reasons */" object="//@packages.0/exceptions/ResourceLoadException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ResourceSaveException/@ownedTags.0" name="ResourceSaveException" superType="//@packages.0/exceptions/ResourceSaveException/@containedType.0">
        <ownedTags value="/** Occurs when Resource saving fails for some reasons */" object="//@packages.0/exceptions/ResourceSaveException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ResourceCreateException/@ownedTags.0" name="ResourceCreateException" superType="//@packages.0/exceptions/ResourceCreateException/@containedType.0">
        <ownedTags value="/** Occurs when trying to crate a Resource already existing in the Repository */" object="//@packages.0/exceptions/ResourceCreateException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/ResourceUnconformityException/@ownedTags.0" name="ResourceUnconformityException" superType="//@packages.0/exceptions/ResourceUnconformityException/@containedType.0">
        <ownedTags value="/** Raised when user tries to add an object that is not conform to the metamodel */" object="//@packages.0/exceptions/ResourceUnconformityException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/exceptions/DynamicExpressionException/@ownedTags.0" name="DynamicExpressionException" superType="//@packages.0/exceptions/DynamicExpressionException/@containedType.0">
        <ownedTags value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */" object="//@packages.0/exceptions/DynamicExpressionException"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/exceptions/Exception"/>
      </ownedTypeDefinition>
    </nestedPackage>
  </packages>
  <requires uri="../Standard.kmt"/>
  <usings qualifiedName="kermeta::standard"/>
  <usings qualifiedName="kermeta::utils"/>
  <usings qualifiedName="kermeta::exceptions"/>
  <referencedModelingUnits href="../Standard.km#/"/>
  <referencedModelingUnits href="../standard/collections.km#/"/>
  <referencedModelingUnits href="../standard/primitive_types.km#/"/>
  <referencedModelingUnits href="../language/behavior.km#/"/>
  <referencedModelingUnits href="../language/structure.km#/"/>
  <referencedModelingUnits href="../reflection/reflection.km#/"/>
  <referencedModelingUnits href="../persistence/resource.km#/"/>
  <referencedModelingUnits href="../language/reflective_collections.km#/"/>
  <referencedModelingUnits href="../kunit/kunit.km#/"/>
  <referencedModelingUnits href="../kunit/assert.km#/"/>
  <referencedModelingUnits href="../utils/utils.km#/"/>
  <referencedModelingUnits href="../utils/StringBuffer.km#/"/>
  <referencedModelingUnits href="../utils/hashtable.km#/"/>
  <referencedModelingUnits href="../utils/stack.km#/"/>
  <referencedModelingUnits href="../io/std_io.km#/"/>
  <referencedModelingUnits href="../io/file_io.km#/"/>
  <referencedModelingUnits href="../language/dynamic_expression.km#/"/>
  <referencedModelingUnits href="../standard/java.km#/"/>
  <referencedModelingUnits href="../ecore/ecore_compatibility.km#/"/>
</kermeta_language_structure:ModelingUnit>
