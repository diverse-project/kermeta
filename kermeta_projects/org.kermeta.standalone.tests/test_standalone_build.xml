<!-- $Id$ -->
<project name="run standalone interpreter tests" default="all" basedir=".">
	
	<description>
        Run interpreter tests
    </description>
	
    <property name="report.dir" location="./reports"/>
	<property name="eclipse.home" location="c:/eclipse3.3/eclipse"/>
	<property name="dist.location" location="../fr.irisa.triskell.kermeta.standalone\dist\no_thirdparty_in_main_jar"/>
		
	<property name="build.bin" location="./build/bin"/>
	<property name="src" location="./src"/>	

	
	
	<property name="kermeta.standalone.jar" location="${dist.location}\kermeta_standalone.jar"/>
	
	<property name="log4j.jar" location="${dist.location}/thirdparty/log4j.jar"/>
	<property name="slf4j-log4j.jar" location="${dist.location}/thirdparty/slf4j-log4j.jar"/>
	<property name="slf4j-api.jar" location="${dist.location}/thirdparty/slf4j-api.jar"/>
	<property name="antlr.jar" location="${dist.location}/thirdparty/antlr.jar"/>
	
	<property name="emf.common.jar" location="${dist.location}/thirdparty/eclipse/emf/common.jar"/>
	<property name="emf.ecore.jar" location="${dist.location}/thirdparty/eclipse/emf/ecore.jar"/>
	<property name="emf.ecore.xmi.jar" location="${dist.location}/thirdparty/eclipse/emf/ecore.xmi.jar"/>
	<property name="equinox.common.jar" location="${dist.location}/thirdparty/eclipse/equinox.common.jar"/>
	<property name="osgi.jar" location="${dist.location}/thirdparty/eclipse/osgi.jar"/>	
	<property name="core.runtime.jar" location="${dist.location}/thirdparty/eclipse/core.runtime.jar"/>
	<property name="junit4.jar" location="${eclipse.home}/plugins/org.junit4_4.5.0.v20090423/junit.jar" />
	<property name="apache.commons.logging.jar" location="${dist.location}/thirdparty/commons-logging.jar" />
	<property name="hamcrest.core.jar" location="${dist.location}/thirdparty/hamcrest.core.jar" />
								
	<path id="standalone.class.path">
	    <pathelement location="${kermeta.standalone.jar}"/>
	    <pathelement location="${emf.common.jar}"/>
	    <pathelement location="${emf.ecore.jar}"/>
	    <pathelement location="${emf.ecore.xmi.jar}"/>
		<pathelement location="${equinox.common.jar}"/>
	    <pathelement location="${osgi.jar}"/>
	    <pathelement location="${core.runtime.jar}"/>
	    <pathelement location="${log4j.jar}"/>
	    <pathelement location="${slf4j-api.jar}"/>
	    <pathelement location="${slf4j-log4j.jar}"/>
		<pathelement location="${junit4.jar}" />
		<pathelement location="${apache.commons.logging.jar}" />
		<pathelement location="${hamcrest.core.jar}" />
	    <pathelement location="${antlr.jar}"/>
    	<pathelement path="${java.class.path}"/>
	</path>

		
	<target name="all" depends="compile_java,test" description="Compile and run the tests."/>

	<target name="check.required-properties">
	  
	    <condition property="tmp:dist.location" value="true">
	        <and>
	            <!-- check that we really point at the dist directory -->
	            <available file="${dist.location}" type="dir" />
	            <available file="${kermeta.standalone.jar}" type="file" />
	        </and>
	    </condition>
	    <fail message="### 'dist.location' does not point at correct distribution directory: ${dist.location}"
	        unless="tmp:dist.location"/>
	</target>
	
	<target name="compile_java" depends="check.required-properties">
	    <mkdir dir="${build.bin}"/> 
		<javac srcdir="${src}" 
    	    destdir="${build.bin}"
   			debug="true">
   			<classpath >
   				<!--<pathelement path="${MTLcompiler.path}/bin"/>-->
   				<path refid="standalone.class.path"/> 
   			</classpath>
   		</javac>
	</target>
	
	
	<target name="test" 
		description="run standalone tests" depends="check.required-properties, compile_java">
	    <mkdir dir="${report.dir}"/> 
	    <mkdir dir="${report.dir}/html"/>
		<junit printsummary="yes" haltonfailure="no" fork="yes" showoutput="false" 
			dir=".">
		  	<classpath>
		  		<pathelement location="${build.bin}"/>
				<path refid="standalone.class.path"/> 
		  	</classpath>

		  	<formatter type="plain"/>

		  	<test name="org.kermeta.standalone.tests.commandline.AllCommandlineTests" haltonfailure="no" todir="${report.dir}" outfile="TEST-standalone-commandline-result">
		    	<formatter type="xml"/>
		  	</test>			
  
		</junit>
		<echo>Generate intermediate report</echo>
		<antcall target="genreport"/>
	</target>
	<target name="genreport" >
		<junitreport todir="${report.dir}">
		  <fileset dir="${report.dir}">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <!--<report format="frames" todir="${report.dir}/html" styledir="./report_stylesheet"/>-->
		  <report format="frames" todir="${report.dir}/html"  styledir="/udd/triskell/bin/multiplatform/apache-ant-1.7.0/etc"/>
		</junitreport>
		<!-- generate the Build date -->
		<tstamp>
			<format property="TODAY_UK" pattern="d-MMMM-yyyy" locale="en"/>
		</tstamp>
		<filter token="BUILD.DATE" value="${TODAY_UK}"/>
		<copy file="${report.dir}/html/overview-summary.html" 
					tofile="${report.dir}/html/overview-summary_tmp.html"
					filtering="true"
					overwrite="true"/>

		<copy file="${report.dir}/html/overview-summary_tmp.html" 
					tofile="${report.dir}/html/overview-summary.html"
					filtering="true"
					overwrite="true"/>
	</target>
</project>
