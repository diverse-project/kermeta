<?xml version="1.0" encoding="ASCII"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="traceability" nsURI="platform:/resource/TestKermeta/save_Trace/Traceability.ecore" nsPrefix="traceability">
  <eAnnotations source="kermeta.req">
    <details key="platform:/plugin/fr.irisa.triskell.kermeta/lib/framework.km" value="platform:/plugin/fr.irisa.triskell.kermeta/lib/framework.km"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="TraceModel">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace model.&#xD;&#xA; * This is a set of traces, references and messages.&#xD;&#xA; */"/>
    </eAnnotations>
    <eOperations name="addTrace" ordered="false">
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;&#x9;messages.addAll(msgs)&#xA;&#x9;references.addAll(inRefs)&#xA;&#x9;references.addAll(outRefs)&#xA;&#x9;var newTrace : traceability::Trace init traceability::Trace.new&#xA;&#x9;newTrace.description.addAll(msgs)&#xA;&#x9;newTrace.sourceReferences.addAll(inRefs)&#xA;&#x9;newTrace.targetReferences.addAll(outRefs)&#xA;&#x9;traces.add(newTrace)&#xA;&#x9;optimizedReferencesOnly := false&#xA;end"/>
        <details key="documentation" value="/**&#xD;&#xA;  * This operation adds a new trace to the trace model with references duplication,&#xD;&#xA;  * which breaks the trace model optimized status&#xD;&#xA;  */"/>
      </eAnnotations>
      <eParameters name="inRefs" ordered="false" upperBound="-1" eType="//Reference"/>
      <eParameters name="outRefs" ordered="false" upperBound="-1" eType="//Reference"/>
      <eParameters name="msgs" ordered="false" upperBound="-1" eType="//Message"/>
    </eOperations>
    <eOperations name="addOptimizedTrace" ordered="false">
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;&#x9;messages.addAll(msgs)&#xA;&#x9;var srcRefs : set traceability::Reference[0..*] init kermeta::standard::Set&lt;traceability::Reference>.new&#xA;&#x9;inRefs.each{r | do&#xA;&#x9;&#x9;&#x9;var crtRef : traceability::Reference init findReference(r)&#xA;&#x9;&#x9;&#x9;if crtRef.equals(void) then&#xA;&#x9;&#x9;&#x9;&#x9;references.add(r)&#xA;&#x9;&#x9;&#x9;&#x9;crtRef := r&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;srcRefs.add(crtRef)&#xA;&#x9;&#x9;end}&#xA;&#x9;var tgtRefs : set traceability::Reference[0..*] init kermeta::standard::Set&lt;traceability::Reference>.new&#xA;&#x9;outRefs.each{r | do&#xA;&#x9;&#x9;&#x9;var crtRef : traceability::Reference init findReference(r)&#xA;&#x9;&#x9;&#x9;if crtRef.equals(void) then&#xA;&#x9;&#x9;&#x9;&#x9;references.add(r)&#xA;&#x9;&#x9;&#x9;&#x9;crtRef := r&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;tgtRefs.add(crtRef)&#xA;&#x9;&#x9;end}&#xA;&#x9;var newTrace : traceability::Trace init traceability::Trace.new&#xA;&#x9;newTrace.description.addAll(msgs)&#xA;&#x9;newTrace.sourceReferences.addAll(srcRefs)&#xA;&#x9;newTrace.targetReferences.addAll(tgtRefs)&#xA;&#x9;traces.add(newTrace)&#xA;end"/>
        <details key="documentation" value="/**&#xD;&#xA;  * This operation adds a new trace to the trace model with references optimization&#xD;&#xA;  */"/>
      </eAnnotations>
      <eParameters name="inRefs" ordered="false" upperBound="-1" eType="//Reference"/>
      <eParameters name="outRefs" ordered="false" upperBound="-1" eType="//Reference"/>
      <eParameters name="msgs" ordered="false" upperBound="-1" eType="//Message"/>
    </eOperations>
    <eOperations name="findReference" eType="//Reference">
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;&#x9;result := void&#xA;&#x9;var found : kermeta::standard::Boolean init false&#xA;&#x9;from var ref_It : kermeta::standard::Iterator&lt;traceability::Reference> init references.iterator&#xA;&#x9;until found.~or(ref_It.isOff)&#xA;&#x9;loop&#xA;&#x9;&#x9;var crtRef : traceability::Reference init ref_It.next&#xA;&#x9;&#x9;if crtRef.isSameAs(ref) then&#xA;&#x9;&#x9;&#x9;found := true&#xA;&#x9;&#x9;&#x9;result := crtRef&#xA;&#xA;&#x9;&#x9;end&#xA;&#x9;end&#xA;end"/>
        <details key="documentation" value="/**&#xD;&#xA;  * This operation searches a reference among the set of references already&#xD;&#xA;  * contained by the trace model.&#xD;&#xA;  * Search is based on the isSameAs operation implemented by reference elements&#xD;&#xA;  */"/>
      </eAnnotations>
      <eParameters name="ref" eType="//Reference"/>
    </eOperations>
    <eOperations name="optimize" ordered="false">
      <eAnnotations source="kermeta">
        <details key="body" value="do&#xA;&#x9;var refsColl : set kermeta::standard::Set&lt;traceability::Reference>[0..*] init kermeta::standard::Set&lt;kermeta::standard::Set&lt;traceability::Reference>>.new&#xA;&#x9;optimizedReferencesOnly := true&#xA;end"/>
        <details key="documentation" value="/**&#xD;&#xA;  * This operation optimizes the set of contained references my merging simlar&#xD;&#xA;  * references into a single one.&#xD;&#xA;  * Concerned traces are updated consequently&#xD;&#xA;  */"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="optimizedReferencesOnly" lowerBound="1" eType="//Boolean">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** If true, means that the references are unique within the trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="traces" ordered="false" upperBound="-1" eType="//Trace" containment="true" eOpposite="//Trace/traceMdl">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Set of traces contained by the trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="references" ordered="false" upperBound="-1" eType="//Reference" containment="true" eOpposite="//Reference/traceMdl">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Set of references to the traced objects of the trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="messages" ordered="false" upperBound="-1" eType="//Message" containment="true" eOpposite="//Message/traceMdl">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Set of messages contained by the trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Message">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace message, used to add some information to traces.&#xD;&#xA; * Typically, in order to known what had generated a given trace or provide a user&#xD;&#xA; * friendly message to the user.&#xD;&#xA; */"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="//String">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** Language of the message (english, french, etc.) */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="//String">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** Message kind */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="//String">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="traces" upperBound="-1" eType="//Trace" eOpposite="//Trace/description">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the traces the message is associated with */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1" eType="//TraceModel" eOpposite="//TraceModel/messages">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the containing trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Trace">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace element&#xD;&#xA; */"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceReferences" upperBound="-1" eType="//Reference" eOpposite="//Reference/targetTraces">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the references to the trace incoming elements */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetReferences" upperBound="-1" eType="//Reference" eOpposite="//Reference/sourceTraces">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the references to the trace outgoing elements */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="description" upperBound="-1" eType="//Message" eOpposite="//Message/traces">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the messages describing the trace */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1" eType="//TraceModel" eOpposite="//TraceModel/traces">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the containing trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Reference" abstract="true">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This abstract class represents a reference to a concrete object&#xD;&#xA; */"/>
    </eAnnotations>
    <eOperations name="isSameAs" eType="//Boolean">
      <eAnnotations source="kermeta">
        <details key="isAbstract" value="true"/>
        <details key="documentation" value="/**&#xD;&#xA;  * This operation defines equivalency between ModelReference elements&#xD;&#xA;  */"/>
      </eAnnotations>
      <eParameters name="obj" eType="//Object"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetTraces" upperBound="-1" eType="//Trace" eOpposite="//Trace/sourceReferences">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the reference target traces */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceTraces" upperBound="-1" eType="//Trace" eOpposite="//Trace/targetReferences">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the reference source traces */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1" eType="//TraceModel" eOpposite="//TraceModel/references">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Link to the containing trace model */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FileReference" abstract="true" eSuperTypes="//Reference">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a concrete object contained by a file&#xD;&#xA; */"/>
    </eAnnotations>
    <eOperations name="isSameAs" eType="//Boolean">
      <eAnnotations source="kermeta" references="//Reference/isSameAs">
        <details key="body" value="do&#xA;&#x9;result := false&#xA;&#x9;if obj.isNotEqual(void).~and(traceability::FileReference.isInstance(obj)) then&#xA;&#x9;&#x9;var fileRef : traceability::FileReference&#xA;&#x9;&#x9;fileRef ?= obj&#xA;&#x9;&#x9;result := self.fileURI.equals(fileRef.fileURI)&#xA;&#xA;&#x9;end&#xA;end"/>
        <details key="superOperation" value="traceability::Reference"/>
      </eAnnotations>
      <eParameters name="obj" eType="//Object"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="fileURI" lowerBound="1" eType="//String">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** URI of the file containing the referred concrete object */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextReference" eSuperTypes="//FileReference">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a textual file concrete object&#xD;&#xA; */"/>
    </eAnnotations>
    <eAnnotations source="kermeta.inv">
      <details key="consistantTextRef" value="do&#xA;&#x9;lineEndAt.isGreater(lineBeginAt).~or(lineBeginAt.equals(lineEndAt).~and(charEndAt.isGreaterOrEqual(charBeginAt)))&#xA;end"/>
    </eAnnotations>
    <eOperations name="isSameAs" eType="//Boolean">
      <eAnnotations source="kermeta" references="//FileReference/isSameAs">
        <details key="body" value="do&#xA;&#x9;result := false&#xA;&#x9;if obj.isNotEqual(void).~and(obj.getMetaClass.equals(traceability::TextReference)) then&#xA;&#x9;&#x9;var txtRef : traceability::TextReference&#xA;&#x9;&#x9;txtRef ?= obj&#xA;&#x9;&#x9;result := super(obj).~and(self.lineBeginAt.equals(txtRef.lineBeginAt)).~and(self.lineEndAt.equals(txtRef.lineEndAt)).~and(self.charBeginAt.equals(txtRef.charBeginAt)).~and(self.charEndAt.equals(txtRef.charEndAt))&#xA;&#xA;&#x9;end&#xA;end"/>
        <details key="superOperation" value="traceability::FileReference"/>
      </eAnnotations>
      <eParameters name="obj" eType="//Object"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineBeginAt" lowerBound="1" eType="//Integer">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** Starting line number */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="charBeginAt" lowerBound="1" eType="//Integer">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** Starting character number */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineEndAt" lowerBound="1" eType="//Integer">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** Ending line number */"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="charEndAt" lowerBound="1" eType="//Integer">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** Ending character number */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="XMLReference" eSuperTypes="//FileReference">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a XML concrete object&#xD;&#xA; */"/>
    </eAnnotations>
    <eOperations name="isSameAs" eType="//Boolean">
      <eAnnotations source="kermeta" references="//FileReference/isSameAs">
        <details key="body" value="do&#xA;&#x9;result := false&#xA;&#x9;if obj.isNotEqual(void).~and(obj.getMetaClass.equals(traceability::XMLReference)) then&#xA;&#x9;&#x9;var xmlRef : traceability::XMLReference&#xA;&#x9;&#x9;xmlRef ?= obj&#xA;&#x9;&#x9;result := super(obj).~and(self.xPointer.equals(xmlRef.xPointer))&#xA;&#xA;&#x9;end&#xA;end"/>
        <details key="superOperation" value="traceability::FileReference"/>
      </eAnnotations>
      <eParameters name="obj" eType="//Object"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="xPointer" lowerBound="1" eType="//String">
      <eAnnotations source="kermeta">
        <details key="isComposite" value="true"/>
        <details key="documentation" value="/** XML link to the referred XML concrete object */"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ModelReference" eSuperTypes="//Reference">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a model element&#xD;&#xA; */"/>
    </eAnnotations>
    <eOperations name="isSameAs" eType="//Boolean">
      <eAnnotations source="kermeta" references="//Reference/isSameAs">
        <details key="body" value="do&#xA;&#x9;result := false&#xA;&#x9;if obj.isNotEqual(void).~and(obj.getMetaClass.equals(traceability::ModelReference)) then&#xA;&#x9;&#x9;var mdlRef : traceability::ModelReference&#xA;&#x9;&#x9;mdlRef ?= obj&#xA;&#x9;&#x9;result := self.refObject.equals(mdlRef.refObject)&#xA;&#xA;&#x9;end&#xA;end"/>
        <details key="superOperation" value="traceability::Reference"/>
      </eAnnotations>
      <eParameters name="obj" eType="//Object"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refObject">
      <eType xsi:type="ecore:EClass" href="http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
  <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceClassName="java.lang.Object"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer"/>
</ecore:EPackage>
