/* $Id: $
 * Creation date: June 22, 2007
 * License:
 * Copyright:
 * Authors:
 */
@mainClass "root_package::Main"
@mainOperation "main"


package root_package;


require kermeta

using kermeta::standard
using kermeta::kunit

class Main inherits TestCase
{
	
	
	operation main() : Void
	is do 
		var tr : TestRunner init TestRunner.new
		tr.run(Main)
		tr.printTestResult
	end
	
	operation test0() : Void is do
		var variable : Toto
		var variable2 : Toto
		var variablename : String
		
		stdio.writeln("Variable:")
		
		variable := Toto.new
		variable.name := "avant"
		
		variable2 := Toto.new
		variable2.name := "before"
		
		variablename := "antes"
		changetoto(variable, variable2, variablename)
	end
	
	operation changetoto(variable : Toto, variable2 : Toto, variablename : String) : Void
	post lapost1 is do		stdio.writeln("1, should be 'apres' :" + variable.name)
		assert(variable.name == "apres")
		true	end
	post lapost2 is do		stdio.writeln("2, should be in theory 'avant' but kermeta can only insure that it is 'avant', note that it is ok because 'variable' has not been affected with an other object:" + variable.name@pre)
		assert(variable.name@pre == "avant")
		true	end
	post lapost3 is do		stdio.writeln("3, should be 'apres' :" + variable@pre.name)
		assert(variable@pre.name == "apres")
		true	end
	post lapost4 is do		stdio.writeln("4, should be 'avant' :" + variable@pre.name@pre)
		assert(variable@pre.name@pre == "avant")
		true	end
	post lapost5 is do		stdio.writeln("5, should be 'apres' :" + variable2.name)
		assert(variable2.name == "apres")
		true	end
	post lapost6 is do		stdio.writeln("6, should be in theory 'avant' but kermeta can only insure that it is 'before' :" + variable2.name@pre)
		assert(variable2.name@pre == "before")
		true	end
	post lapost7 is do		stdio.writeln("7, should be 'after' :" + variable2@pre.name)
		assert(variable2@pre.name == "after")
		true	end
	post lapost8 is do		stdio.writeln("8, should be 'before' :" + variable2@pre.name@pre)
		assert(variable2@pre.name@pre == "before")
		true	end
	post lapost9 is do		stdio.writeln("9, should be 'despues' :" + variablename)
		assert(variablename == "despues")
		true	end
	post lapost10 is do		stdio.writeln("10, should be 'antes' :" + variablename@pre)
		assert(variablename@pre == "antes")
		true	end
	is do
		stdio.writeln("a, should be 'avant' :" + variable.name)
		stdio.writeln("b, should be 'before' :" + variable2.name)		
		stdio.writeln("c, should be 'antes' :" + variablename)
		
		variable.name := "apres"
		variable2.name := "after"
		variable2 := variable
		variablename := "despues"
		
		stdio.writeln("e, should be 'apres' :" + variable.name)
		stdio.writeln("f, should be 'apres' :" + variable2.name)		
		stdio.writeln("g, should be 'despues' :" + variablename)
	end
	
}

class Toto
{
	reference name : String
}