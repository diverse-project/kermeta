@mainClass "testInvariant::Main"
@mainOperation "main"


package testInvariant;

require "030_testInv_fail_catched.main.kmt"
 
using kermeta::standard
using kermeta::exceptions
using kermeta::kunit

@aspect "true"
class Main inherits TestCase, superMain, superMain2 {
  
 
    inv stringTata is  do 
    	stdio.writeln( "Inv stringTata : " + stringTata )
    	stringTata == "titi" 
    end
        
	reference stringTata : String 

 
 	operation main() : Void is do 
		var tr : TestRunner init TestRunner.new
		tr.run(Main)
		tr.printTestResult
	end

	method setUp() is do
		stringTata := "titi"
        superstrTata := "supertiti" 
        superstr2Tata := "supertiti2"
	end

    operation test4() is do
    
    	var check : Boolean init false
    
        str := "titi"
        superstr := "supertiti"
        superstr2 := "supertiti2"
        
        stringTata := "titi"
        superstrTata := "supertiti"
        superstr2Tata := "supertiti2"

        do
	        self.checkInvariants
    		check := true
    		stdio.writeln("OK for test4")
        rescue (err : ConstraintViolatedInv)
        end
        
		assert( check )
        
 	end
 
    operation test5() is do
    
    	var check : Boolean init false
    
        str := "titi"
        superstr := "supertiti"
        superstr2 := "supertiti2"
        
        stringTata := "no titi"
        superstrTata := "supertiti"
        superstr2Tata := "supertiti2"

        do
	        self.checkInvariants
        rescue (err : ConstraintViolatedInv)
        	check := true
        	stdio.writeln("OK for test5")
		end
        
		assert( check )
        
 	end
 	
 	operation test6() is do
 	
 		var check : Boolean init false
 	
        str := "titi"
        superstr := "supertiti"
        superstr2 := "supertiti2"
        
        stringTata := "titi"
        superstrTata := "no supertiti"
        superstr2Tata := "supertiti2"
        
        do
        	self.checkInvariants
        rescue (err : ConstraintViolatedInv)
			check := true
			stdio.writeln("OK for test6")
        end
       
		assert( check )

    end
    
    
     operation test7() is do
 	
 		var check : Boolean init false
 	
        str := "titi"
        superstr := "supertiti"
        superstr2 := "supertiti2"
        
        stringTata := "titi"
        superstrTata := "supertiti"
        superstr2Tata := "no supertiti2"
        
        do
        	self.checkInvariants
        rescue (err : ConstraintViolatedInv)
			check := true
			stdio.writeln("OK for test7")
        end
       
		assert( check )

    end
}

@aspect "true"
class superMain
{
	reference superstrTata : String
	
	inv superMainInvTata is do
		stdio.writeln( "Inv superMainInvTata : " + superstrTata )
		superstrTata == "supertiti"
	end
}

@aspect "true"
class superMain2
{
	reference superstr2Tata : String
	
	inv superMain2InvTata is do 
		stdio.writeln( "Inv superMain2InvTata : " + superstr2Tata )
		superstr2Tata == "supertiti2" 
	end

}