@mainClass "testLoadEcoreFile::Main"
@mainOperation "main"


package testLoadEcoreFile;


require kermeta
require "ecore.kmt"
using kermeta::persistence
using kermeta::standard
using ecore

class Main
{
    operation main() : Void is do 
        var inputModel : Set<ecore::EPackage> init loadClassModel
        

        
        stdio.write("Beg\\in\n tr\nuc")
        inputModel.each{ p | printPackageContent(p) }
        stdio.write("\nEnd\n")        
        
      
    end
    
    operation printPackageContent(aPackage : EPackage)  is do 
    	stdio.writeln("Package " + aPackage.name)
    	aPackage.eClassifiers.each{c | stdio.writeln(  "   Class " + c.name)}         
    end
    
    operation loadClassModel() : Set<EPackage> is do             
   		var repository : EMFRepository init EMFRepository.new             
   		var resource : Resource init repository.createResource("../test/kmt_testcases/input_test_models/fsm.ecore","../test/kmt_testcases/input_test_models/Ecore.ecore")
   		resource.load()      
       
       	result := Set<EPackage>.new
       	from var it : Iterator<Object> init resource.instances.iterator
       	until it.isOff
       	loop
           var next : Object init it.next
           if (EPackage.isInstance(next)) then 
           		var aPackage : EPackage 
           		aPackage ?= next
           		//stdio.writeln(aPackage.name)
           		result.add(aPackage)
           end
       	end     
   end
    
}