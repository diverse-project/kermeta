@testOperation ""
@mainClass "testArithm::Test_arithm"
@mainOperation "main_operation"

package testArithm;

require "../../lib/framework.km"

// arithmetic operations
class Test_arithm inherits kermeta::kunit::Test {

    operation main_operation() : kermeta::standard::Integer is do
        var r1 : kermeta::standard::Integer
        var r2 : kermeta::standard::Integer
        var r3 : kermeta::standard::Integer
        var rptm : kermeta::standard::Integer
        var r1_8 :  kermeta::standard::Integer
        var r2_8 :  kermeta::standard::Integer
        var r3_8 :  kermeta::standard::Integer
        var rptm : kermeta::standard::Integer
        var r1_m8 : kermeta::standard::Integer
        var r2_m8  : kermeta::standard::Integer
        var r3_m8  : kermeta::standard::Integer
        var rptm : kermeta::standard::Integer
        
        // melting
        rptm := operation_ptm(2)
        
        // plus
        r1 := operation1(0)
        r1_8 := operation1(8)
        r1_m8 := operation1(0-8)

        // minus
        r2 := operation2(0)
        r2_8 := operation2(8)
//        r2_m8 := testoperation2(-8)

        // times
        r3 := operation3(0)
        r3_8 := operation3(8)
//        r3_m8 := testoperation3(-8)

    end
    
    operation testOp10() : Void is do
    	stdio.write(operation1(0))
    	5+3
		5.equals(5)
    	//assert(operation1(0)==5)
    end
    operation testOp18() : Void is do
    	assert(operation1(8)==13)
    end
	operation testOp1_8() : Void is do
//		assert(operation1(0-8)==0-3)
	end
	
	operation testOp20() : Void is do
		assert(operation2(0)==5)
	end
	operation testOp28() : Void is do
//		assert(operation2(0)==0-3)
	end
	operation testOp2_8() : Void is do
//		assert(operation2(0-8)==13)
	end
	// 5*num
	operation testOp30() : Void is do
		assert(operation3(0)==0)
	end
	operation testOp38() : Void is do
		assert(operation3(8)==40)
	end
	operation testOp3_8() : Void is do
		assert(operation3(0-8)==0-40)
	end

	operation testCompareToNumeric() : Void is do
		assert(8.compareTo(8) == 0)
	end

    // plus times minus
    operation operation_ptm(num : kermeta::standard::Integer) : kermeta::standard::Integer is do
        var ~result : kermeta::standard::Integer
        var a : kermeta::standard::Integer
        a := 4
        ~result := ( 3 + a ) * num - 10
        result := ~result
    end

    // plus
    operation operation1(num : kermeta::standard::Integer) : kermeta::standard::Integer is do
        result := 5 + num
    
    end
    

    // minus
    operation operation2(num : kermeta::standard::Integer) : kermeta::standard::Integer is do
        result := 5 - num
    end

    // times
    operation operation3(num : kermeta::standard::Integer) : kermeta::standard::Integer is do
        result := 5 * num
    end

    // div
    operation operation4(num : kermeta::standard::Integer) : kermeta::standard::Integer is do
        result := 5 / num
    end


}


