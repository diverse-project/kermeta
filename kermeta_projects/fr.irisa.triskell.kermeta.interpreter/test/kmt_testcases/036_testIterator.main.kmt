@testOperation "yes"
@mainClass "testPackageTestIterator::TestIterator"
@mainOperation "main_operation"

package testPackageTestIterator;

require kermeta

alias Integer : kermeta::standard::Integer;
/*****************************************************************************
 * $Id: 036_testIterator.main.kmt,v 1.4 2005-05-16 17:39:16 ffleurey Exp $
 * Project : Kermeta (First iteration)
 * Creation date :  
 * File : testIterator.kmt
 * 		
 * License : GPL
 * Copyright : IRISA / Universite de Rennes 1
 * Creation date : Mar 14, 2005
 * Author : zdrey
 * Description : 
 *		test for Iterator
 *		use Integer, then String as single elements of a Set 
 ***************************************************************************
 */

class TestIterator inherits kermeta::kunit::Test
{    
	attribute aset : kermeta::standard::Set<Integer>

    // Main operation that embeds all the tests 
     operation main_operation() is do
     end
     
    //  test "hasNext" operation
	operation testhasNext() : Void is do
     	aset := kermeta::standard::Set<Integer>.new
		// to do : "setUp" testCase method!
     	//var it : kermeta::standard::Iterator<Integer> init kermeta::standard::Iterator<Integer>.new
     	aset.add(23)
     	var it : kermeta::standard::Iterator<Integer> init aset.iterator()
     	assert(it.hasNext == true)
     	
    end
    
    // test "next" operation with a void Set
    operation testnext() : Void is do
       	aset := kermeta::standard::Set<Integer>.new
       	var it : kermeta::standard::Iterator<Integer> init aset.iterator
//    	assert(it.next==void)
    end
    
    // test "next" operation
    operation testnextbis() : Void is do
       	aset := kermeta::standard::Set<Integer>.new
       	aset.add(23)
       	var it : kermeta::standard::Iterator<Integer> init aset.iterator
    	assert(it.next==23)
    end
    
     // test "isOff" operation with a void Set
    operation testisOff() : Void is do
       	aset := kermeta::standard::Set<Integer>.new
       	var it : kermeta::standard::Iterator<Integer> init aset.iterator
    	assert(it.isOff==true)
    end
    
    // test "isOff" operation when it is true
    operation testisOffbis() : Void is do
       	aset := kermeta::standard::Set<Integer>.new
       	aset.add(23)
     	var it : kermeta::standard::Iterator<Integer> init aset.iterator()
        it.next()
    	assert(it.isOff == true)
    end
    
    // test "isOff" operation when it is false
    operation testisOffter() : Void is do
       	aset := kermeta::standard::Set<Integer>.new
       	aset.add(23)
     	var it : kermeta::standard::Iterator<Integer> init aset.iterator()
    	assert(it.isOff == false)
    end
    
    
    
    
    

}
