@mainClass "testPackageTestParametricClass::TestParametricClass"
@mainOperation "test_main_operation"

package testPackageTestParametricClass;

require kermeta

using kermeta::standard
 
 class ParamClass<T,U>
 {
 	attribute x : T
 	attribute y : U
 	
 	operation set_x(elt : T) is do
 		x := elt
 	end

 	operation set_y(elt : U) is do
 		y := elt
 	end

 	operation get_x() : T is do
 		result := x
 	end

 	operation get_y() : U is do
 		result := y
 	end
 }

class TestParametricClass inherits kermeta::kunit::TestCase
{    

	property names : String[*]

	operation test1() is do
		var l : Collection<String> init Bag<String>.new
		// check the metaclass
		assert(l.isKindOf(Bag<String>))
	end
	
	operation test2() is do
		var l : Collection<String> init Bag<String>.new
		// check sub-typing poliy
		assert(Collection<String>.isInstance(l))
	end

	operation test3() is do
		assert(Collection<String>.isInstance(names))
	end

     operation test_main_operation() is do
     	var P1 : ParamClass<Integer,String> 
     	var P2 : ParamClass<String,Integer>
     	
     	P1 := ParamClass<Integer,String>.new
     	P2 := ParamClass<String,Integer>.new
     	P1.set_x(3)
     	P1.set_y("three")
     	P2.set_x("five")
     	P2.set_y(5)
     	assert(P1.get_x()==3)
     	assert(P1.get_y()=="three")
     	assert(P2.get_x()=="five")
     	assert(P2.get_y()==5)
     	P2.set_y(P1.get_x())
     	P2.set_x(P1.get_y())
     	assert(P2.get_x()=="three")
     	assert(P2.get_y()==3)
     end
     
}    
