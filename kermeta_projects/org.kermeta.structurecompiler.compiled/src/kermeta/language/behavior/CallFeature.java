/**
 * <copyright>
 * </copyright>
 *
 * $Id: CallFeature.java,v 1.6 2008-10-16 13:17:26 cfaucher Exp $
 */
package kermeta.language.behavior;

import kermeta.language.structure.EnumerationLiteral;
import kermeta.language.structure.FunctionType;
import kermeta.language.structure.Operation;
import kermeta.language.structure.Property;
import kermeta.language.structure.Type;

import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Call Feature</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getCalledFtResult <em>Called Ft Result</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature()
 * @model annotation="kermeta documentation='CallFeature is the model element that refers to the use of a feature, i.e either \na property or an operation in a statement. In <code>stdio.writeln(\"hello\")</code>, \n<code>writeln</code> is a CallFeature.'"
 * @generated
 */
public interface CallFeature extends CallExpression {
	/**
	 * Returns the value of the '<em><b>Is Atpre</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Is Atpre</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Atpre</em>' attribute.
	 * @see #setIsAtpre(Boolean)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_IsAtpre()
	 * @model default="false" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta documentation='Tells whether this CallFeature represents a call to @pre in a postcondition'"
	 * @generated
	 */
	Boolean getIsAtpre();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Atpre</em>' attribute.
	 * @see #getIsAtpre()
	 * @generated
	 */
	void setIsAtpre(Boolean value);

	/**
	 * Returns the value of the '<em><b>Called Ft Result</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Called Ft Result</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Called Ft Result</em>' attribute.
	 * @see #setCalledFtResult(String)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_CalledFtResult()
	 * @model dataType="kermeta.standard.JavaString"
	 * @generated
	 */
	String getCalledFtResult();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getCalledFtResult <em>Called Ft Result</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Called Ft Result</em>' attribute.
	 * @see #getCalledFtResult()
	 * @generated
	 */
	void setCalledFtResult(String value);

	/**
	 * Returns the value of the '<em><b>Static Operation</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Operation</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Operation</em>' reference.
	 * @see #setStaticOperation(Operation)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticOperation()
	 * @model annotation="kermeta documentation='The method which will be executed (operation case)\nand the result value passed to the caller'"
	 * @generated
	 */
	Operation getStaticOperation();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Operation</em>' reference.
	 * @see #getStaticOperation()
	 * @generated
	 */
	void setStaticOperation(Operation value);

	/**
	 * Returns the value of the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Target</em>' containment reference.
	 * @see #setTarget(Expression)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_Target()
	 * @model containment="true" resolveProxies="true"
	 *        annotation="kermeta documentation='Target Expression (the owner of the feature)'"
	 * @generated
	 */
	Expression getTarget();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Target</em>' containment reference.
	 * @see #getTarget()
	 * @generated
	 */
	void setTarget(Expression value);

	/**
	 * Returns the value of the '<em><b>Static Enum Literal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Enum Literal</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Enum Literal</em>' reference.
	 * @see #setStaticEnumLiteral(EnumerationLiteral)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticEnumLiteral()
	 * @model annotation="kermeta documentation='To be written'"
	 * @generated
	 */
	EnumerationLiteral getStaticEnumLiteral();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Enum Literal</em>' reference.
	 * @see #getStaticEnumLiteral()
	 * @generated
	 */
	void setStaticEnumLiteral(EnumerationLiteral value);

	/**
	 * Returns the value of the '<em><b>Static Property</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Property</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Property</em>' reference.
	 * @see #setStaticProperty(Property)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticProperty()
	 * @model annotation="kermeta documentation='The object which will be returned (property case)'"
	 * @generated
	 */
	Property getStaticProperty();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Property</em>' reference.
	 * @see #getStaticProperty()
	 * @generated
	 */
	void setStaticProperty(Property value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.FunctionType result = null;\n\n\t//BIft:detect\n\nkermeta.language.structure.Type result_ft129 = null;\n\n\tkermeta.language.structure.Type elem_ft129 = null;\n\n\tresult_ft129 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft129 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getContainedType()).iterator();\n\tjava.lang.Boolean idLoopCond_455 = false;\n\twhile( !idLoopCond_455 ) {\n\tidLoopCond_455 = kermeta.standard.helper.BooleanWrapper.or(it_ft129.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft129, null));\n\tif ( idLoopCond_455 ) {\n\t} else {\n\n\telem_ft129 = it_ft129.next();\n\n\tjava.lang.Boolean idIfCond_456 = false;\n//BIle:detector\nkermeta.language.structure.Type t_lbdExp129 = elem_ft129;\n\n\tidIfCond_456 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(t_lbdExp129, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n//EIle:detector\n\n\n\tif( idIfCond_456 ) {\n\n\tresult_ft129 = elem_ft129;\n}\n\n}\n\t}\n}\n\n\n//CE\nresult = (kermeta.language.structure.FunctionType) result_ft129;\n//EIft:detect\n\n\nreturn result;\n'"
	 * @generated
	 */
	FunctionType getFunctionType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.Boolean idIfCond_457 = false;\n\tidIfCond_457 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Object\"), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\"))))))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Type\"), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))))));\n\n\tif( idIfCond_457 ) {\n\n\tresult = true;\n}\n else {\n\n\tresult = false;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean fromUtil(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta superOperation='kermeta::language::behavior::CallExpression'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tsuper.createBehaviorJava(context);\n\n\tresult = \"\";\n\n\tjava.lang.Boolean ppCast = false;\n\n\tjava.lang.String cf_prop_suffix = \"\";\n\n\tjava.lang.Boolean idIfCond_458 = false;\n\tidIfCond_458 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getTarget());\n\n\tif( idIfCond_458 ) {\n\n\tthis.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.behavior.SelfExpression\")));\n}\n\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.String static_call = \"\";\n\n\tjava.lang.Boolean idIfCond_459 = false;\n\tidIfCond_459 = this.isCallFeatureAsStaticOperation();\n\n\tif( idIfCond_459 ) {\n\n\tjava.lang.Boolean idIfCond_460 = false;\n\tidIfCond_460 = this.callsFunctionType();\n\n\tif( idIfCond_460 ) {\n\n\tcontext.getTasks_stack().push(context.getFUNCTION_TYPE_COMPILATION_TASK());\n\n\tcontext.setAfterLbdExpActivation(false);\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.ClassDefinition> it_ft130 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.ClassDefinition>convertAsOrderedSet(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getTarget().getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getClassDefinitionAsTyped().getSubClassDefinitions()).iterator();\n\tjava.lang.Boolean idLoopCond_461 = false;\n\twhile( !idLoopCond_461 ) {\n\tidLoopCond_461 = it_ft130.isOff();\n\tif ( idLoopCond_461 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.ClassDefinition cd_lbdExp130 = it_ft130.next();\n\n\tjava.lang.Boolean idIfCond_462 = false;\n//BIft:exists\n\njava.lang.Boolean result_ft131 = null;\n\n\tjava.lang.Boolean test_ft131 = false;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft131 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_lbdExp130.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_463 = false;\n\twhile( !idLoopCond_463 ) {\n\tidLoopCond_463 = kermeta.standard.helper.BooleanWrapper.or(it_ft131.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft131, false));\n\tif ( idLoopCond_463 ) {\n\t} else {\n\njava.lang.Boolean result_lambda_ft131 = null;\n//BIle:func\nkermeta.language.structure.Operation op_lbdExp131 = it_ft131.next();\n\n\tresult_lambda_ft131 = kermeta.standard.helper.StringWrapper.equals(op_lbdExp131.getName(), this.getStaticOperation().getName());\n//EIle:func\n\n\ttest_ft131 = kermeta.standard.helper.BooleanWrapper.or(test_ft131, result_lambda_ft131);\n}\n\t}\n}\n\n\n\tresult_ft131 = test_ft131;\n\n//CEC\nidIfCond_462 = result_ft131;\n//EIft:exists\n\n\n\tif( idIfCond_462 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"//if( instanceof \", cd_lbdExp130.getName()), \" ) - \"), this.getStaticOperation().getName()));\n}\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tjava.lang.String ft_str = this.createStringFromFunctionType(context);\n\n\tcontext.getTasks_stack().pop();\n\n\tresult = ft_str;\n}\n else {\n\n\tjava.lang.Boolean idIfCond_464 = false;\n\tidIfCond_464 = this.fromUtil(context);\n\n\tif( idIfCond_464 ) {\n\n\tjava.lang.Boolean idIfCond_465 = false;\n\tidIfCond_465 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isValueType();\n\n\tif( idIfCond_465 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_466 = false;\n\tidIfCond_466 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_466 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\"))).qualifiedName(), \"::\", \".\"), \".helper.\"), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Wrapper.\"), fName);\n}\n\n}\n else {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.language.\", ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Util.\"), fName);\n\n\tjava.lang.Boolean idIfCond_467 = false;\n\tidIfCond_467 = kermeta.standard.helper.StringWrapper.equals(fName, \"asType\");\n\n\tif( idIfCond_467 ) {\n\n\tppCast = true;\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"(\", org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).first().createBehaviorJava(context)), \") \"), static_call);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_468 = false;\n\tidIfCond_468 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));\n\n\tif( idIfCond_468 ) {\n\n\tjava.lang.Boolean idIfCond_469 = false;\n\tidIfCond_469 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt.getStaticType()));\n\n\tif( idIfCond_469 ) {\n\n\tjava.lang.Boolean idIfCond_470 = false;\n\tidIfCond_470 = tgt.getStaticType().isValueType();\n\n\tif( idIfCond_470 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.basetypes.\", tgt.getStaticType().getTypeName()), \"Util.\"), fName);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_471 = false;\n\tidIfCond_471 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation().getBody())));\n\n\tif( idIfCond_471 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n}\n\n}\n\n}\n\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_472 = false;\n\tidIfCond_472 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, \"_new\"), this.isFromClass()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"))));\n\n\tif( idIfCond_472 ) {\n\n\tjava.lang.Boolean idIfCond_473 = false;\n\tidIfCond_473 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.isValueType(tgt.createBehaviorJava(context), context));\n\n\tif( idIfCond_473 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"((\"), tgt.createBehaviorJava(context)), \") \"), \"org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\\\"\"), tgt.createBehaviorJava(context)), \"\\\"))\");\n}\n else {\n\n\tresult = \"null\";\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_474 = false;\n\tidIfCond_474 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));\n\n\tif( idIfCond_474 ) {\n\n\tjava.lang.Boolean idIfCond_475 = false;\n\tidIfCond_475 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());\n\n\tif( idIfCond_475 ) {\n\n\tjava.lang.Boolean idIfCond_476 = false;\n\tidIfCond_476 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_476 ) {\n\n\tjava.lang.Boolean idIfCond_477 = false;\n\tidIfCond_477 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.TypeLiteral\")), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(tgt.getStaticType()), \"Enumeration\"));\n\n\tif( idIfCond_477 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\\\"\"), tgt.createBehaviorJava(context)), \"\\\")\");\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));\n}\n\n\n\tjava.lang.Boolean idIfCond_478 = false;\n\tidIfCond_478 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_478 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_479 = false;\n\tidIfCond_479 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));\n\n\tif( idIfCond_479 ) {\n\n\tjava.lang.String resultPrefix = \"\";\n\n\tjava.lang.Boolean idIfCond_480 = false;\n\tidIfCond_480 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Block\")));\n\n\tif( idIfCond_480 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_481 = false;\n\tidIfCond_481 = kermeta.standard.helper.BooleanWrapper.not(this.isParameter());\n\n\tif( idIfCond_481 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), context.getRETURN_EXPRESSION_TO_REPLACE()), this.getCalledFtResult());\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), this.getCalledFtResult());\n}\n\n}\n\n}\n\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getCalledFtResult()));\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_482 = false;\n\tidIfCond_482 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_482 ) {\n\n\tjava.lang.Boolean idIfCond_483 = false;\n\tidIfCond_483 = this.isCallFeatureAsStaticEnumLiteral();\n\n\tif( idIfCond_483 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"getByName(\\\"\"), fName), \"\\\")\");\n}\n else {\n\n\tjava.lang.Boolean idIfCond_484 = false;\n\tidIfCond_484 = this.isCallFeatureAsStaticProperty();\n\n\tif( idIfCond_484 ) {\n\n\tjava.lang.Boolean idIfCond_485 = false;\n\tidIfCond_485 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticProperty().getUpper(), 1);\n\n\tif( idIfCond_485 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_486 = false;\n\tidIfCond_486 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_486 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_487 = false;\n\tidIfCond_487 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_487 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_488 = false;\n\tidIfCond_488 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_488 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_489 = false;\n\tidIfCond_489 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_489 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.printGetAccessor()), \"()\"), cf_prop_suffix);\n\n\tcf_prop_suffix = \"\";\n}\n else {\n\n\tjava.lang.Boolean idIfCond_490 = false;\n\tidIfCond_490 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_490 ) {\n\n\tjava.lang.Boolean idIfCond_491 = false;\n\tidIfCond_491 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticOperation().getUpper(), 1);\n\n\tif( idIfCond_491 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_492 = false;\n\tidIfCond_492 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_492 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_493 = false;\n\tidIfCond_493 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_493 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_494 = false;\n\tidIfCond_494 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_494 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_495 = false;\n\tidIfCond_495 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_495 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getStaticOperation().getFinalName(), context));\n}\n else {\n\n\tjava.lang.Boolean idIfCond_496 = false;\n\tidIfCond_496 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));\n\n\tif( idIfCond_496 ) {\n\n\tjava.lang.Boolean idIfCond_497 = false;\n\tidIfCond_497 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_497 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Boolean idIfCond_498 = false;\n\tidIfCond_498 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cf_.getStaticOperation()));\n\n\tif( idIfCond_498 ) {\n\n\tjava.lang.Boolean idIfCond_499 = false;\n\tidIfCond_499 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), this.isParameter()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(cf_.getStaticOperation().getCompiledJavaExtern(), \"\"));\n\n\tif( idIfCond_499 ) {\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_500 = false;\n\tidIfCond_500 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cf_.getStaticProperty()));\n\n\tif( idIfCond_500 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_501 = false;\n\tidIfCond_501 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());\n\n\tif( idIfCond_501 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.replace(result, context.getRETURN_EXPRESSION_TO_REPLACE(), kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"));\n}\n else {\n\n\tjava.lang.String tmp_prefix = \"\";\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft132 = null;\n\n\tkermeta.language.behavior.Expression elem_ft132 = null;\n\n\tresult_ft132 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft132 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_503 = false;\n\twhile( !idLoopCond_503 ) {\n\tidLoopCond_503 = kermeta.standard.helper.BooleanWrapper.or(it_ft132.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft132, null));\n\tif ( idLoopCond_503 ) {\n\t} else {\n\n\telem_ft132 = it_ft132.next();\n\n\tjava.lang.Boolean idIfCond_504 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp132 = elem_ft132;\n\n\tidIfCond_504 = p_lbdExp132.callsFunctionType();\n//EIle:detector\n\n\n\tif( idIfCond_504 ) {\n\n\tresult_ft132 = elem_ft132;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_502 = false;\n\tidIfCond_502 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result_ft132));\n\n\tif( idIfCond_502 ) {\n\n\ttmp_prefix = context.getRETURN_EXPRESSION_TO_REPLACE();\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(tmp_prefix, static_call), \"(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_505 = false;\n\tidIfCond_505 = ppCast;\n\n\tif( idIfCond_505 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(\"(\", result);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_506 = false;\n\tidIfCond_506 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));\n\n\tif( idIfCond_506 ) {\n\n\tjava.lang.Boolean idIfCond_507 = false;\n\tidIfCond_507 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_507 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"(\");\n}\n else {\n\n\tstatic_call = \"\";\n\n\tjava.lang.Boolean idIfCond_508 = false;\n\tidIfCond_508 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));\n\n\tif( idIfCond_508 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n\n}\n\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.kermeta.CompilerHelperJava\")).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), \")\"), cf_prop_suffix);\n\n\tcontext.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tjava.lang.Boolean idIfCond_509 = false;\n\tidIfCond_509 = ppCast;\n\n\tif( idIfCond_509 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \")\");\n\n\tppCast = false;\n}\n\n}\n\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());\n\nreturn result;\n'"
	 * @generated
	 */
	String createBehaviorJava(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n\t * Unused for the moment\n\t \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = \"\";\n\n\tjava.lang.Integer i = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft133 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_510 = false;\n\twhile( !idLoopCond_510 ) {\n\tidLoopCond_510 = it_ft133.isOff();\n\tif ( idLoopCond_510 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.behavior.Expression param_lbdExp133 = it_ft133.next();\n\n\tjava.lang.Boolean idIfCond_511 = false;\n\tidIfCond_511 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param_lbdExp133, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n\n\tif( idIfCond_511 ) {\n\n\tjava.lang.Boolean idIfCond_512 = false;\n\tidIfCond_512 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param_lbdExp133, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_512 ) {\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft134 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param_lbdExp133, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))).getType()).iterator();\n\tjava.lang.Boolean idLoopCond_513 = false;\n\twhile( !idLoopCond_513 ) {\n\tidLoopCond_513 = it_ft134.isOff();\n\tif ( idLoopCond_513 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type t_lbdExp134 = it_ft134.next();\n\n\tjava.lang.Boolean idIfCond_514 = false;\n\tidIfCond_514 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);\n\n\tif( idIfCond_514 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n else {\n\n\ti = 1;\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, t_lbdExp134.getTypeQName());\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n}\n\n}\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tjava.lang.Boolean idIfCond_515 = false;\n\tidIfCond_515 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result, \"\");\n\n\tif( idIfCond_515 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"<\", result), \">\");\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String getParamBindings();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Type result = null;\n\n\tresult = null;\n\n\tjava.lang.Boolean idIfCond_516 = false;\n\tidIfCond_516 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getFunctionType()));\n\n\tif( idIfCond_516 ) {\n\n\tresult = this.getFunctionType().getRight();\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Type getFunctionTypeReturnType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_517 = false;\n\tidIfCond_517 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation()));\n\n\tif( idIfCond_517 ) {\n\n\tjava.lang.Boolean idIfCond_518 = false;\n\tidIfCond_518 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Class\");\n\n\tif( idIfCond_518 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromClass();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printGetAccessor();\n\nreturn result;\n'"
	 * @generated
	 */
	String printGetAccessor();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printSetAccessor();\n\nreturn result;\n'"
	 * @generated
	 */
	String printSetAccessor();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_519 = false;\n\tidIfCond_519 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_519 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft135 = null;\n\n\tkermeta.language.behavior.Expression elem_ft135 = null;\n\n\tresult_ft135 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft135 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_520 = false;\n\twhile( !idLoopCond_520 ) {\n\tidLoopCond_520 = kermeta.standard.helper.BooleanWrapper.or(it_ft135.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft135, null));\n\tif ( idLoopCond_520 ) {\n\t} else {\n\n\telem_ft135 = it_ft135.next();\n\n\tjava.lang.Boolean idIfCond_521 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp135 = elem_ft135;\n\n\tidIfCond_521 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(p_lbdExp135, this);\n//EIle:detector\n\n\n\tif( idIfCond_521 ) {\n\n\tresult_ft135 = elem_ft135;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nresult = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result_ft135));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tkermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>\"));\n\n\tjava.lang.Integer inc_tp = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft136 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();\n\tjava.lang.Boolean idLoopCond_522 = false;\n\twhile( !idLoopCond_522 ) {\n\tidLoopCond_522 = it_ft136.isOff();\n\tif ( idLoopCond_522 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type type__lbdExp136 = it_ft136.next();\n\n\tmap_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), type__lbdExp136);\n\n\tinc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tcontext.getFtMapTypeStack().push(map_type);\n\n\tcontext.pushFtSuffix();\n\n\tkermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.structure.Type\"));\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft137 = null;\n\n\tkermeta.language.behavior.Expression elem_ft137 = null;\n\n\tresult_ft137 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft137 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_524 = false;\n\twhile( !idLoopCond_524 ) {\n\tidLoopCond_524 = kermeta.standard.helper.BooleanWrapper.or(it_ft137.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft137, null));\n\tif ( idLoopCond_524 ) {\n\t} else {\n\n\telem_ft137 = it_ft137.next();\n\n\tjava.lang.Boolean idIfCond_525 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp137 = elem_ft137;\n\n\tidIfCond_525 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param_lbdExp137, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_525 ) {\n\n\tresult_ft137 = elem_ft137;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_523 = false;\n\tidIfCond_523 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result_ft137));\n\n\tif( idIfCond_523 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft138 = null;\n\n\tkermeta.language.behavior.Expression elem_ft138 = null;\n\n\tresult_ft138 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft138 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_526 = false;\n\twhile( !idLoopCond_526 ) {\n\tidLoopCond_526 = kermeta.standard.helper.BooleanWrapper.or(it_ft138.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft138, null));\n\tif ( idLoopCond_526 ) {\n\t} else {\n\n\telem_ft138 = it_ft138.next();\n\n\tjava.lang.Boolean idIfCond_527 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp138 = elem_ft138;\n\n\tidIfCond_527 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param_lbdExp138, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_527 ) {\n\n\tresult_ft138 = elem_ft138;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nkermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(result_ft138, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\")));\n\n\tcontext.getFtStack().push(theLambdaExp);\n\n\tthis.getStaticOperation().setLambdaExpression(theLambdaExp);\n\n\ttheLambdaExp.setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tthis.getStaticOperation().setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tjava.lang.Boolean idIfCond_528 = false;\n\tidIfCond_528 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n\n\tif( idIfCond_528 ) {\n\n\tkermeta.language.structure.FunctionType current_functionType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\")));\n\n\tjava.lang.Boolean idIfCond_529 = false;\n\tidIfCond_529 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_529 ) {\n\n\tcontext.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))));\n}\n\n\n\tftRightType = current_functionType.getRight();\n}\n\n}\n\n\n\tjava.lang.String ft_str = \"\";\n\n\tjava.lang.Boolean idIfCond_530 = false;\n\tidIfCond_530 = tgt.callsFunctionType();\n\n\tif( idIfCond_530 ) {\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());\n}\n else {\n\n\tcontext.setFtContextualSelf(tgt.createBehaviorJava(context));\n}\n\n\n\tcontext.setFtSuffixActivation(true);\n\n\tjava.lang.String callElement = \"\";\n\n\tjava.lang.Boolean idIfCond_531 = false;\n\tidIfCond_531 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"));\n\n\tif( idIfCond_531 ) {\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"))).getIdentifier(), context);\n}\n else {\n\n\tjava.lang.Boolean idIfCond_532 = false;\n\tidIfCond_532 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_532 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Please contact the development team if you have this case !\");\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))).getName(), context);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_533 = false;\n\tidIfCond_533 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, \"\");\n\n\tif( idIfCond_533 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"null;\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_534 = false;\n\tidIfCond_534 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"));\n\n\tif( idIfCond_534 ) {\n\n\tjava.lang.Boolean idIfCond_535 = false;\n\tidIfCond_535 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_535 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n\n\tjava.lang.Boolean idIfCond_536 = false;\n\tidIfCond_536 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_536 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), \"//BIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tjava.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtReturnType(type_ftReturnType);\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));\n\n\tjava.lang.Boolean idIfCond_537 = false;\n\tidIfCond_537 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, \"\");\n\n\tif( idIfCond_537 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CE\\n\");\n\n\tjava.lang.Boolean idIfCond_538 = false;\n\tidIfCond_538 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(context.getResultLastStatementId(), \"\");\n\n\tif( idIfCond_538 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n else {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = result\"), context.printFtSuffix()), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_539 = false;\n\tidIfCond_539 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\")));\n\n\tif( idIfCond_539 ) {\n\n\tjava.lang.Boolean idIfCond_540 = false;\n\tidIfCond_540 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_540 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CER\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getRETURN_EXPRESSION_TO_REPLACE()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_541 = false;\n\tidIfCond_541 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Conditional\")));\n\n\tif( idIfCond_541 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CEC\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_542 = false;\n\tidIfCond_542 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.structure.Operation\")).isVoidType(this.getStaticType().getTypeName())));\n\n\tif( idIfCond_542 ) {\n\n\tthis.setCalledFtResult(kermeta.standard.helper.StringWrapper.plus(\"result\", context.printFtSuffix()));\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, \"//EIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tcontext.getFtMapTypeStack().pop();\n\n\tcontext.getFtProductTypeStack().pop();\n\n\tcontext.getFtSuffix().pop();\n\n\tresult = ft_str;\n\nreturn result;\n'"
	 * @generated
	 */
	String createStringFromFunctionType(KM2EcoreContext context);

} // CallFeature
