/**
 * License: EPL
 * Copyright: IRISA / INRIA / Universite de Rennes 1
 * 
 * Generating with Kermeta <http://www.kermeta.org>
 *
 * $Id: CallFeature.java,v 1.12 2009-02-10 17:51:43 cfaucher Exp $
 */
package kermeta.language.behavior;

import kermeta.language.structure.EnumerationLiteral;
import kermeta.language.structure.FunctionType;
import kermeta.language.structure.Operation;
import kermeta.language.structure.Parameter;
import kermeta.language.structure.Property;
import kermeta.language.structure.Type;

import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Call Feature</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getCalledFtResult <em>Called Ft Result</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature()
 * @model annotation="kermeta documentation='CallFeature is the model element that refers to the use of a feature, i.e either \na property or an operation in a statement. In <code>stdio.writeln(\"hello\")</code>, \n<code>writeln</code> is a CallFeature.'"
 * @generated
 */
public interface CallFeature extends CallExpression {
	/**
	 * Returns the value of the '<em><b>Is Atpre</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Is Atpre</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Atpre</em>' attribute.
	 * @see #setIsAtpre(Boolean)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_IsAtpre()
	 * @model default="false" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta documentation='Tells whether this CallFeature represents a call to @pre in a postcondition'"
	 * @generated
	 */
	Boolean getIsAtpre();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Atpre</em>' attribute.
	 * @see #getIsAtpre()
	 * @generated
	 */
	void setIsAtpre(Boolean value);

	/**
	 * Returns the value of the '<em><b>Static Operation</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Operation</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Operation</em>' reference.
	 * @see #setStaticOperation(Operation)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticOperation()
	 * @model annotation="kermeta documentation='The method which will be executed (operation case)\nand the result value passed to the caller'"
	 * @generated
	 */
	Operation getStaticOperation();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Operation</em>' reference.
	 * @see #getStaticOperation()
	 * @generated
	 */
	void setStaticOperation(Operation value);

	/**
	 * Returns the value of the '<em><b>Called Ft Result</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Called Ft Result</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Called Ft Result</em>' attribute.
	 * @see #setCalledFtResult(String)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_CalledFtResult()
	 * @model dataType="kermeta.standard.JavaString"
	 * @generated
	 */
	String getCalledFtResult();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getCalledFtResult <em>Called Ft Result</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Called Ft Result</em>' attribute.
	 * @see #getCalledFtResult()
	 * @generated
	 */
	void setCalledFtResult(String value);

	/**
	 * Returns the value of the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Target</em>' containment reference.
	 * @see #setTarget(Expression)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_Target()
	 * @model containment="true" resolveProxies="true"
	 *        annotation="kermeta documentation='Target Expression (the owner of the feature)'"
	 * @generated
	 */
	Expression getTarget();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Target</em>' containment reference.
	 * @see #getTarget()
	 * @generated
	 */
	void setTarget(Expression value);

	/**
	 * Returns the value of the '<em><b>Static Enum Literal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Enum Literal</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Enum Literal</em>' reference.
	 * @see #setStaticEnumLiteral(EnumerationLiteral)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticEnumLiteral()
	 * @model annotation="kermeta documentation='To be written'"
	 * @generated
	 */
	EnumerationLiteral getStaticEnumLiteral();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Enum Literal</em>' reference.
	 * @see #getStaticEnumLiteral()
	 * @generated
	 */
	void setStaticEnumLiteral(EnumerationLiteral value);

	/**
	 * Returns the value of the '<em><b>Static Property</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Property</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Property</em>' reference.
	 * @see #setStaticProperty(Property)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticProperty()
	 * @model annotation="kermeta documentation='The object which will be returned (property case)'"
	 * @generated
	 */
	Property getStaticProperty();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Property</em>' reference.
	 * @see #getStaticProperty()
	 * @generated
	 */
	void setStaticProperty(Property value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.FunctionType result = null;\n\n\t//BIft:detect\n\nkermeta.language.structure.Type result_ft21 = null;\n\n\tkermeta.language.structure.Type elem_ft21 = null;\n\n\tresult_ft21 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft21 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getContainedType()).iterator();\n\tjava.lang.Boolean idLoopCond_170 = false;\n\twhile( !idLoopCond_170 ) {\n\tidLoopCond_170 = kermeta.standard.helper.BooleanWrapper.or(it_ft21.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft21, null));\n\tif ( idLoopCond_170 ) {\n\t} else {\n\n\telem_ft21 = it_ft21.next();\n\n\tjava.lang.Boolean idIfCond_171 = false;\n//BIle:detector\nkermeta.language.structure.Type t_lbdExp21 = elem_ft21;\n\n\tidIfCond_171 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp21, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n//EIle:detector\n\n\n\tif( idIfCond_171 ) {\n\n\tresult_ft21 = elem_ft21;\n}\n\n}\n\t}\n}\n\n\n//CE\nresult = (kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(result_ft21, \"kermeta.language.structure.FunctionType\");\n//EIft:detect\n\n\nreturn result;\n'"
	 * @generated
	 */
	FunctionType getFunctionType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta superOperation='kermeta::language::behavior::CallExpression'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tsuper.createBehaviorJava(context);\n\n\tresult = \"\";\n\n\tjava.lang.Boolean ppCast = false;\n\n\tjava.lang.String cf_prop_suffix = \"\";\n\n\tjava.lang.Boolean idIfCond_172 = false;\n\tidIfCond_172 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getTarget());\n\n\tif( idIfCond_172 ) {\n\n\tthis.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getSelfExpression())));\n}\n\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.String static_call = \"\";\n\n\tjava.lang.Boolean idIfCond_173 = false;\n\tidIfCond_173 = this.isCallFeatureAsStaticOperation();\n\n\tif( idIfCond_173 ) {\n\n\tjava.lang.Boolean idIfCond_174 = false;\n\tidIfCond_174 = this.callsFunctionType();\n\n\tif( idIfCond_174 ) {\n\n\tcontext.getTasks_stack().push(context.getFUNCTION_TYPE_COMPILATION_TASK());\n\n\tcontext.setAfterLbdExpActivation(false);\n\n\tjava.lang.String ft_str = this.createStringFromFunctionType(context);\n\n\tcontext.getTasks_stack().pop();\n\n\tresult = ft_str;\n}\n else {\n\n\tjava.lang.Boolean idIfCond_175 = false;\n\tidIfCond_175 = this.fromUtil(context);\n\n\tif( idIfCond_175 ) {\n\n\tjava.lang.Boolean idIfCond_176 = false;\n\tidIfCond_176 = this.getStaticOperation().ownedByValueType();\n\n\tif( idIfCond_176 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_177 = false;\n\tidIfCond_177 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_177 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation().getOwningClass()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\"))).qualifiedName(), \"::\", \".\"), \".helper.\"), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Wrapper.\"), fName);\n}\n\n}\n else {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_178 = false;\n\tidIfCond_178 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_178 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.language.\", this.getStaticOperation().getOwningClass().getName()), \"Util.\"), fName), \"Switcher\");\n}\n\n\n\tjava.lang.Boolean idIfCond_179 = false;\n\tidIfCond_179 = kermeta.standard.helper.StringWrapper.equals(fName, \"asType\");\n\n\tif( idIfCond_179 ) {\n\n\tppCast = true;\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"(\", org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).first().createBehaviorJava(context)), \") \"), static_call);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_180 = false;\n\tidIfCond_180 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt));\n\n\tif( idIfCond_180 ) {\n\n\tjava.lang.Boolean idIfCond_181 = false;\n\tidIfCond_181 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt.getStaticType()));\n\n\tif( idIfCond_181 ) {\n\n\tjava.lang.Boolean idIfCond_182 = false;\n\tidIfCond_182 = tgt.getStaticType().isValueType();\n\n\tif( idIfCond_182 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.basetypes.\", tgt.getStaticType().getTypeName()), \"Util.\"), fName);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_183 = false;\n\tidIfCond_183 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getOwningClass().isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStaticOperation().getBody())));\n\n\tif( idIfCond_183 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n}\n\n}\n\n}\n\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_184 = false;\n\tidIfCond_184 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, \"_new\"), this.isFromClass()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"))));\n\n\tif( idIfCond_184 ) {\n\n\tjava.lang.String type_label = tgt.createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_185 = false;\n\tidIfCond_185 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.isValueType(type_label, context));\n\n\tif( idIfCond_185 ) {\n\n\tjava.lang.String pojoType_label = \"\";\n\n\tjava.lang.Boolean idIfCond_186 = false;\n\tidIfCond_186 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"));\n\n\tif( idIfCond_186 ) {\n\n\tpojoType_label = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tgt.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getTypeDefinition().getFinalJavaClassQN();\n}\n\n\n\tjava.lang.Boolean idIfCond_187 = false;\n\tidIfCond_187 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(pojoType_label, \"\");\n\n\tif( idIfCond_187 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"new \", pojoType_label), \"()\");\n}\n else {\n\n\tjava.lang.String class_label = ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppEmfLikeGetEMF(type_label);\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"((\"), type_label), \") \"), \"org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"), class_label), \"))\");\n}\n\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"new \", type_label), \"()\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_188 = false;\n\tidIfCond_188 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt));\n\n\tif( idIfCond_188 ) {\n\n\tjava.lang.Boolean idIfCond_189 = false;\n\tidIfCond_189 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());\n\n\tif( idIfCond_189 ) {\n\n\tjava.lang.Boolean idIfCond_190 = false;\n\tidIfCond_190 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_190 ) {\n\n\tjava.lang.String tgt_staticType_str = \"\";\n\n\tjava.lang.Boolean idIfCond_191 = false;\n\tidIfCond_191 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt.getStaticType()));\n\n\tif( idIfCond_191 ) {\n\n\ttgt_staticType_str = org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(tgt.getStaticType());\n}\n\n\n\tjava.lang.Boolean idIfCond_192 = false;\n\tidIfCond_192 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.TypeLiteral\")), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tgt_staticType_str, \"Enumeration\"));\n\n\tif( idIfCond_192 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\\\"\"), tgt.createBehaviorJava(context)), \"\\\")\");\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));\n}\n\n\n\tjava.lang.Boolean idIfCond_193 = false;\n\tidIfCond_193 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_193 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_194 = false;\n\tidIfCond_194 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this).callsFunctionType()));\n\n\tif( idIfCond_194 ) {\n\n\tjava.lang.String resultPrefix = \"\";\n\n\tjava.lang.Boolean idIfCond_195 = false;\n\tidIfCond_195 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Block\")));\n\n\tif( idIfCond_195 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_196 = false;\n\tidIfCond_196 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Constraint\")));\n\n\tif( idIfCond_196 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_197 = false;\n\tidIfCond_197 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\")));\n\n\tif( idIfCond_197 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_198 = false;\n\tidIfCond_198 = kermeta.standard.helper.BooleanWrapper.not(this.isParameter());\n\n\tif( idIfCond_198 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), context.getRETURN_EXPRESSION_TO_REPLACE()), this.getCalledFtResult());\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), this.getCalledFtResult());\n}\n\n}\n\n}\n\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getCalledFtResult()));\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_199 = false;\n\tidIfCond_199 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_199 ) {\n\n\tjava.lang.Boolean idIfCond_200 = false;\n\tidIfCond_200 = this.isCallFeatureAsStaticEnumLiteral();\n\n\tif( idIfCond_200 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"getByName(\\\"\"), fName), \"\\\")\");\n}\n else {\n\n\tjava.lang.Boolean idIfCond_201 = false;\n\tidIfCond_201 = this.isCallFeatureAsStaticProperty();\n\n\tif( idIfCond_201 ) {\n\n\tjava.lang.Boolean idIfCond_202 = false;\n\tidIfCond_202 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getStaticProperty().getUpper(), 1), kermeta.standard.helper.BooleanWrapper.not(this.isParameterMany()));\n\n\tif( idIfCond_202 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_203 = false;\n\tidIfCond_203 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_203 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_204 = false;\n\tidIfCond_204 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_204 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_205 = false;\n\tidIfCond_205 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_205 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_206 = false;\n\tidIfCond_206 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_206 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.printGetAccessor(context)), \"()\"), cf_prop_suffix);\n\n\tcf_prop_suffix = \"\";\n}\n else {\n\n\tjava.lang.Boolean idIfCond_207 = false;\n\tidIfCond_207 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_207 ) {\n\n\tjava.lang.Boolean idIfCond_208 = false;\n\tidIfCond_208 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getStaticOperation().getUpper(), 1), kermeta.standard.helper.BooleanWrapper.not(this.isParameterMany()));\n\n\tif( idIfCond_208 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_209 = false;\n\tidIfCond_209 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_209 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_210 = false;\n\tidIfCond_210 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_210 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_211 = false;\n\tidIfCond_211 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_211 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_212 = false;\n\tidIfCond_212 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_212 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.getStaticOperation().getFinalName(context));\n}\n else {\n\n\tjava.lang.Boolean idIfCond_213 = false;\n\tidIfCond_213 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this).callsFunctionType()));\n\n\tif( idIfCond_213 ) {\n\n\tjava.lang.Boolean idIfCond_214 = false;\n\tidIfCond_214 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_214 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Boolean idIfCond_215 = false;\n\tidIfCond_215 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cf_.getStaticOperation()));\n\n\tif( idIfCond_215 ) {\n\n\tjava.lang.Boolean idIfCond_216 = false;\n\tidIfCond_216 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), this.isParameter()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(cf_.getStaticOperation().getCompiledJavaExtern(), \"\"));\n\n\tif( idIfCond_216 ) {\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_217 = false;\n\tidIfCond_217 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cf_.getStaticProperty()));\n\n\tif( idIfCond_217 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_218 = false;\n\tidIfCond_218 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());\n\n\tif( idIfCond_218 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.replace(result, context.getRETURN_EXPRESSION_TO_REPLACE(), kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"));\n}\n else {\n\n\tjava.lang.String tmp_prefix = \"\";\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft22 = null;\n\n\tkermeta.language.behavior.Expression elem_ft22 = null;\n\n\tresult_ft22 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft22 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_220 = false;\n\twhile( !idLoopCond_220 ) {\n\tidLoopCond_220 = kermeta.standard.helper.BooleanWrapper.or(it_ft22.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft22, null));\n\tif ( idLoopCond_220 ) {\n\t} else {\n\n\telem_ft22 = it_ft22.next();\n\n\tjava.lang.Boolean idIfCond_221 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp22 = elem_ft22;\n\n\tidIfCond_221 = p_lbdExp22.callsFunctionType();\n//EIle:detector\n\n\n\tif( idIfCond_221 ) {\n\n\tresult_ft22 = elem_ft22;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_219 = false;\n\tidIfCond_219 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft22));\n\n\tif( idIfCond_219 ) {\n\n\ttmp_prefix = context.getRETURN_EXPRESSION_TO_REPLACE();\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(tmp_prefix, static_call), \"(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_222 = false;\n\tidIfCond_222 = ppCast;\n\n\tif( idIfCond_222 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(\"(\", result);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_223 = false;\n\tidIfCond_223 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));\n\n\tif( idIfCond_223 ) {\n\n\tjava.lang.Boolean idIfCond_224 = false;\n\tidIfCond_224 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_224 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"(\");\n}\n else {\n\n\tstatic_call = \"\";\n\n\tjava.lang.Boolean idIfCond_225 = false;\n\tidIfCond_225 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));\n\n\tif( idIfCond_225 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n\n}\n\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), \")\"), cf_prop_suffix);\n\n\tcontext.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tjava.lang.Boolean idIfCond_226 = false;\n\tidIfCond_226 = ppCast;\n\n\tif( idIfCond_226 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \")\");\n\n\tppCast = false;\n}\n\n}\n\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());\n\nreturn result;\n'"
	 * @generated
	 */
	String createBehaviorJava(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean" fNameDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))));\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromUtil_MethodFragment(String fName, KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_227 = false;\n\tidIfCond_227 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStaticOperation()));\n\n\tif( idIfCond_227 ) {\n\n\tjava.lang.Boolean idIfCond_228 = false;\n\tidIfCond_228 = kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Class\");\n\n\tif( idIfCond_228 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromClass();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Parameter result = null;\n\n\tresult = null;\n\n\tjava.lang.Boolean idIfCond_229 = false;\n\tidIfCond_229 = this.isParameter();\n\n\tif( idIfCond_229 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft23 = null;\n\n\tkermeta.language.behavior.Expression elem_ft23 = null;\n\n\tresult_ft23 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft23 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_230 = false;\n\twhile( !idLoopCond_230 ) {\n\tidLoopCond_230 = kermeta.standard.helper.BooleanWrapper.or(it_ft23.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft23, null));\n\tif ( idLoopCond_230 ) {\n\t} else {\n\n\telem_ft23 = it_ft23.next();\n\n\tjava.lang.Boolean idIfCond_231 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp23 = elem_ft23;\n\n\ti = kermeta.standard.helper.IntegerWrapper.plus(i, 1);\n\n\tidIfCond_231 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp23, this);\n//EIle:detector\n\n\n\tif( idIfCond_231 ) {\n\n\tresult_ft23 = elem_ft23;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft23;\n//EIft:detect\n;\n\n\tresult = ((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Parameter\")));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Parameter getCallFeatureCorrespondingParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tkermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable()));\n\n\tjava.lang.Integer inc_tp = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft24 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();\n\tjava.lang.Boolean idLoopCond_232 = false;\n\twhile( !idLoopCond_232 ) {\n\tidLoopCond_232 = it_ft24.isOff();\n\tif ( idLoopCond_232 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type type__lbdExp24 = it_ft24.next();\n\n\tmap_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), type__lbdExp24);\n\n\tinc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tcontext.getFtMapTypeStack().push(map_type);\n\n\tcontext.pushFtSuffix();\n\n\tkermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType()));\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft25 = null;\n\n\tkermeta.language.behavior.Expression elem_ft25 = null;\n\n\tresult_ft25 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft25 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_234 = false;\n\twhile( !idLoopCond_234 ) {\n\tidLoopCond_234 = kermeta.standard.helper.BooleanWrapper.or(it_ft25.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft25, null));\n\tif ( idLoopCond_234 ) {\n\t} else {\n\n\telem_ft25 = it_ft25.next();\n\n\tjava.lang.Boolean idIfCond_235 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp25 = elem_ft25;\n\n\tidIfCond_235 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp25, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_235 ) {\n\n\tresult_ft25 = elem_ft25;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_233 = false;\n\tidIfCond_233 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft25));\n\n\tif( idIfCond_233 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft26 = null;\n\n\tkermeta.language.behavior.Expression elem_ft26 = null;\n\n\tresult_ft26 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft26 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_236 = false;\n\twhile( !idLoopCond_236 ) {\n\tidLoopCond_236 = kermeta.standard.helper.BooleanWrapper.or(it_ft26.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft26, null));\n\tif ( idLoopCond_236 ) {\n\t} else {\n\n\telem_ft26 = it_ft26.next();\n\n\tjava.lang.Boolean idIfCond_237 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp26 = elem_ft26;\n\n\tidIfCond_237 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp26, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_237 ) {\n\n\tresult_ft26 = elem_ft26;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nkermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(result_ft26, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\")));\n\n\tcontext.getFtStack().push(theLambdaExp);\n\n\tthis.getStaticOperation().setLambdaExpression(theLambdaExp);\n\n\ttheLambdaExp.setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tthis.getStaticOperation().setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tjava.lang.Boolean idIfCond_238 = false;\n\tidIfCond_238 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n\n\tif( idIfCond_238 ) {\n\n\tkermeta.language.structure.FunctionType current_functionType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\")));\n\n\tjava.lang.Boolean idIfCond_239 = false;\n\tidIfCond_239 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_239 ) {\n\n\tcontext.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))));\n}\n\n\n\tftRightType = current_functionType.getRight();\n}\n\n}\n\n\n\tjava.lang.String ft_str = \"\";\n\n\tjava.lang.Boolean idIfCond_240 = false;\n\tidIfCond_240 = tgt.callsFunctionType();\n\n\tif( idIfCond_240 ) {\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());\n}\n else {\n\n\tcontext.setFtContextualSelf(tgt.createBehaviorJava(context));\n}\n\n\n\tcontext.setFtSuffixActivation(true);\n\n\tjava.lang.String callElement = \"\";\n\n\tjava.lang.Boolean idIfCond_241 = false;\n\tidIfCond_241 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"));\n\n\tif( idIfCond_241 ) {\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"))).getIdentifier(), context);\n}\n else {\n\n\tjava.lang.Boolean idIfCond_242 = false;\n\tidIfCond_242 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_242 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Please contact the development team if you have this case !\");\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))).getName(), context);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_243 = false;\n\tidIfCond_243 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, \"\");\n\n\tif( idIfCond_243 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"null;\\n\");\n}\n\n\n\tjava.lang.String ppCastSuffix = \"\";\n\n\tjava.lang.String ppValueTypeCastSuffix = \"\";\n\n\tjava.lang.Boolean idIfCond_244 = false;\n\tidIfCond_244 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"));\n\n\tif( idIfCond_244 ) {\n\n\tppCastSuffix = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getCacheCastSuffix();\n\n\tppValueTypeCastSuffix = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getValueTypeCastSuffix();\n\n\tjava.lang.Boolean idIfCond_245 = false;\n\tidIfCond_245 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_245 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n\n\tjava.lang.Boolean idIfCond_246 = false;\n\tidIfCond_246 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_246 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), \"//BIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tjava.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtReturnType(type_ftReturnType);\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));\n\n\tjava.lang.Boolean idIfCond_247 = false;\n\tidIfCond_247 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, \"\");\n\n\tif( idIfCond_247 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CE\\n\");\n\n\tjava.lang.Boolean idIfCond_248 = false;\n\tidIfCond_248 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getResultLastStatementId(), \"\");\n\n\tif( idIfCond_248 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), ppValueTypeCastSuffix), ppCastSuffix), \";\\n\");\n}\n else {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = result\"), context.printFtSuffix()), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_249 = false;\n\tidIfCond_249 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\")));\n\n\tif( idIfCond_249 ) {\n\n\tjava.lang.Boolean idIfCond_250 = false;\n\tidIfCond_250 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_250 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CER\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getRETURN_EXPRESSION_TO_REPLACE()), \"result\"), context.printFtSuffix()), ppValueTypeCastSuffix), ppCastSuffix), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_251 = false;\n\tidIfCond_251 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\")));\n\n\tif( idIfCond_251 ) {\n\n\tjava.lang.String str_binding = kermeta.standard.helper.StringWrapper.replace(context.getResultLastStatementId(), \" = \", \"\");\n\n\tjava.lang.Boolean idIfCond_252 = false;\n\tidIfCond_252 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(str_binding, \"\");\n\n\tif( idIfCond_252 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CEVD\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = \"), str_binding), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_253 = false;\n\tidIfCond_253 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Conditional\")));\n\n\tif( idIfCond_253 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CEC\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_254 = false;\n\tidIfCond_254 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(this.getStaticType().getTypeName())));\n\n\tif( idIfCond_254 ) {\n\n\tthis.setCalledFtResult(kermeta.standard.helper.StringWrapper.plus(\"result\", context.printFtSuffix()));\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, \"//EIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tcontext.getFtMapTypeStack().pop();\n\n\tcontext.getFtProductTypeStack().pop();\n\n\tcontext.getFtSuffix().pop();\n\n\tresult = ft_str;\n\nreturn result;\n'"
	 * @generated
	 */
	String createStringFromFunctionType(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_255 = false;\n\tidIfCond_255 = this.isParameter();\n\n\tif( idIfCond_255 ) {\n\n\tjava.lang.Boolean idIfCond_256 = false;\n\tidIfCond_256 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).isCallFeatureTargetsValueTypeOperation());\n\n\tif( idIfCond_256 ) {\n\n\tkermeta.language.structure.Parameter param = this.getCallFeatureCorrespondingParameter();\n\n\tjava.lang.Boolean idIfCond_257 = false;\n\tidIfCond_257 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(param));\n\n\tif( idIfCond_257 ) {\n\n\tjava.lang.String left_type = param.getType().getTypeQName();\n\n\tjava.lang.Boolean idIfCond_258 = false;\n\tidIfCond_258 = kermeta.standard.helper.StringWrapper.equals(left_type, \"kermeta::language::structure::Object\");\n\n\tif( idIfCond_258 ) {\n\n\tjava.lang.Boolean idIfCond_259 = false;\n\tidIfCond_259 = this.getStaticType().isValueType();\n\n\tif( idIfCond_259 ) {\n\n\tresult = true;\n}\n\n}\n\n}\n\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean requireConversionValueTypeToObject(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_260 = false;\n\tidIfCond_260 = this.isParameter();\n\n\tif( idIfCond_260 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft27 = null;\n\n\tkermeta.language.behavior.Expression elem_ft27 = null;\n\n\tresult_ft27 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft27 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_261 = false;\n\twhile( !idLoopCond_261 ) {\n\tidLoopCond_261 = kermeta.standard.helper.BooleanWrapper.or(it_ft27.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft27, null));\n\tif ( idLoopCond_261 ) {\n\t} else {\n\n\telem_ft27 = it_ft27.next();\n\n\tjava.lang.Boolean idIfCond_262 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp27 = elem_ft27;\n\n\ti = kermeta.standard.helper.IntegerWrapper.plus(i, 1);\n\n\tidIfCond_262 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp27, this);\n//EIle:detector\n\n\n\tif( idIfCond_262 ) {\n\n\tresult_ft27 = elem_ft27;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft27;\n//EIft:detect\n;\n\n\tjava.lang.Boolean idIfCond_263 = false;\n\tidIfCond_263 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Parameter\"))).getUpper(), 1);\n\n\tif( idIfCond_263 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameterMany();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_264 = false;\n\tidIfCond_264 = this.isParameter();\n\n\tif( idIfCond_264 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft28 = null;\n\n\tkermeta.language.behavior.Expression elem_ft28 = null;\n\n\tresult_ft28 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft28 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_265 = false;\n\twhile( !idLoopCond_265 ) {\n\tidLoopCond_265 = kermeta.standard.helper.BooleanWrapper.or(it_ft28.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft28, null));\n\tif ( idLoopCond_265 ) {\n\t} else {\n\n\telem_ft28 = it_ft28.next();\n\n\tjava.lang.Boolean idIfCond_266 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp28 = elem_ft28;\n\n\ti = kermeta.standard.helper.IntegerWrapper.plus(i, 1);\n\n\tidIfCond_266 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp28, this);\n//EIle:detector\n\n\n\tif( idIfCond_266 ) {\n\n\tresult_ft28 = elem_ft28;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft28;\n//EIft:detect\n;\n\n\tjava.lang.Boolean idIfCond_267 = false;\n\tidIfCond_267 = kermeta.standard.helper.IntegerWrapper.equals(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Parameter\"))).getUpper(), 1);\n\n\tif( idIfCond_267 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameterSingle();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.Boolean idIfCond_268 = false;\n\tidIfCond_268 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(this.getStaticOperation().ownedByValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Object\"), this.isFromUtil_MethodFragment(fName, context))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Type\"), this.isFromUtil_MethodFragment(fName, context))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Class\"), this.isFromUtil_MethodFragment(fName, context)));\n\n\tif( idIfCond_268 ) {\n\n\tresult = true;\n}\n else {\n\n\tresult = false;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean fromUtil(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n\t * Unused for the moment\n\t \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = \"\";\n\n\tjava.lang.Integer i = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft29 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_269 = false;\n\twhile( !idLoopCond_269 ) {\n\tidLoopCond_269 = it_ft29.isOff();\n\tif ( idLoopCond_269 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.behavior.Expression param_lbdExp29 = it_ft29.next();\n\n\tjava.lang.Boolean idIfCond_270 = false;\n\tidIfCond_270 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp29, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n\n\tif( idIfCond_270 ) {\n\n\tjava.lang.Boolean idIfCond_271 = false;\n\tidIfCond_271 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(param_lbdExp29, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_271 ) {\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft30 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(param_lbdExp29, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))).getType()).iterator();\n\tjava.lang.Boolean idLoopCond_272 = false;\n\twhile( !idLoopCond_272 ) {\n\tidLoopCond_272 = it_ft30.isOff();\n\tif ( idLoopCond_272 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type t_lbdExp30 = it_ft30.next();\n\n\tjava.lang.Boolean idIfCond_273 = false;\n\tidIfCond_273 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);\n\n\tif( idIfCond_273 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n else {\n\n\ti = 1;\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, t_lbdExp30.getTypeQName());\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n}\n\n}\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tjava.lang.Boolean idIfCond_274 = false;\n\tidIfCond_274 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result, \"\");\n\n\tif( idIfCond_274 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"<\", result), \">\");\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String getParamBindings();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Type result = null;\n\n\tresult = null;\n\n\tjava.lang.Boolean idIfCond_275 = false;\n\tidIfCond_275 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getFunctionType()));\n\n\tif( idIfCond_275 ) {\n\n\tresult = this.getFunctionType().getRight();\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Type getFunctionTypeReturnType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printGetAccessor(context);\n\nreturn result;\n'"
	 * @generated
	 */
	String printGetAccessor(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_276 = false;\n\tidIfCond_276 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_276 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft31 = null;\n\n\tkermeta.language.behavior.Expression elem_ft31 = null;\n\n\tresult_ft31 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft31 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_277 = false;\n\twhile( !idLoopCond_277 ) {\n\tidLoopCond_277 = kermeta.standard.helper.BooleanWrapper.or(it_ft31.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft31, null));\n\tif ( idLoopCond_277 ) {\n\t} else {\n\n\telem_ft31 = it_ft31.next();\n\n\tjava.lang.Boolean idIfCond_278 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp31 = elem_ft31;\n\n\tidIfCond_278 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp31, this);\n//EIle:detector\n\n\n\tif( idIfCond_278 ) {\n\n\tresult_ft31 = elem_ft31;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nresult = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft31));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printSetAccessor(context);\n\nreturn result;\n'"
	 * @generated
	 */
	String printSetAccessor(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_279 = false;\n\tidIfCond_279 = this.getStaticOperation().ownedByValueType();\n\n\tif( idIfCond_279 ) {\n\n\tresult = true;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isCallFeatureTargetsValueTypeOperation();

} // CallFeature
