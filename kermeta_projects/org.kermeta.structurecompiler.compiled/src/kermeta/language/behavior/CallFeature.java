/**
 * <copyright>
 * </copyright>
 *
 * $Id: CallFeature.java,v 1.1 2008-09-04 15:40:22 cfaucher Exp $
 */
package kermeta.language.behavior;

import kermeta.language.structure.EnumerationLiteral;
import kermeta.language.structure.Operation;
import kermeta.language.structure.Property;

import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Call Feature</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature()
 * @model annotation="kermeta documentation='CallFeature is the model element that refers to the use of a feature, i.e either \na property or an operation in a statement. In <code>stdio.writeln(\"hello\")</code>, \n<code>writeln</code> is a CallFeature.'"
 * @generated
 */
public interface CallFeature extends CallExpression {
	/**
	 * Returns the value of the '<em><b>Static Operation</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Operation</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Operation</em>' reference.
	 * @see #setStaticOperation(Operation)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticOperation()
	 * @model annotation="kermeta documentation='The method which will be executed (operation case)\nand the result value passed to the caller'"
	 * @generated
	 */
	Operation getStaticOperation();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Operation</em>' reference.
	 * @see #getStaticOperation()
	 * @generated
	 */
	void setStaticOperation(Operation value);

	/**
	 * Returns the value of the '<em><b>Is Atpre</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Is Atpre</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Atpre</em>' attribute.
	 * @see #setIsAtpre(Boolean)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_IsAtpre()
	 * @model default="false" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta documentation='Tells whether this CallFeature represents a call to @pre in a postcondition'"
	 * @generated
	 */
	Boolean getIsAtpre();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Atpre</em>' attribute.
	 * @see #getIsAtpre()
	 * @generated
	 */
	void setIsAtpre(Boolean value);

	/**
	 * Returns the value of the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Target</em>' containment reference.
	 * @see #setTarget(Expression)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_Target()
	 * @model containment="true" resolveProxies="true"
	 *        annotation="kermeta documentation='Target Expression (the owner of the feature)'"
	 * @generated
	 */
	Expression getTarget();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Target</em>' containment reference.
	 * @see #getTarget()
	 * @generated
	 */
	void setTarget(Expression value);

	/**
	 * Returns the value of the '<em><b>Static Enum Literal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Enum Literal</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Enum Literal</em>' reference.
	 * @see #setStaticEnumLiteral(EnumerationLiteral)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticEnumLiteral()
	 * @model annotation="kermeta documentation='To be written'"
	 * @generated
	 */
	EnumerationLiteral getStaticEnumLiteral();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Enum Literal</em>' reference.
	 * @see #getStaticEnumLiteral()
	 * @generated
	 */
	void setStaticEnumLiteral(EnumerationLiteral value);

	/**
	 * Returns the value of the '<em><b>Static Property</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Property</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Property</em>' reference.
	 * @see #setStaticProperty(Property)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticProperty()
	 * @model annotation="kermeta documentation='The object which will be returned (property case)'"
	 * @generated
	 */
	Property getStaticProperty();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Property</em>' reference.
	 * @see #getStaticProperty()
	 * @generated
	 */
	void setStaticProperty(Property value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.Boolean idIfCond_320 = false;\n\tidIfCond_320 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Object\"), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\"))))))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Type\"), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))))));\n\n\tif( idIfCond_320 ) {\n\n\tresult = true;\n}\n else {\n\n\tresult = false;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean fromUtil(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta superOperation='kermeta::language::behavior::CallExpression'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tsuper.createBehaviorJava(context);\n\n\tresult = \"\";\n\n\tjava.lang.Boolean ppCast = false;\n\n\tjava.lang.String cf_prop_suffix = \"\";\n\n\tjava.lang.Boolean idIfCond_321 = false;\n\tidIfCond_321 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getTarget());\n\n\tif( idIfCond_321 ) {\n\n\tthis.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.behavior.SelfExpression\")));\n}\n\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.String static_call = \"\";\n\n\tjava.lang.Boolean idIfCond_322 = false;\n\tidIfCond_322 = this.isCallFeatureAsStaticOperation();\n\n\tif( idIfCond_322 ) {\n\n\tjava.lang.Boolean idIfCond_323 = false;\n\tidIfCond_323 = this.callsFunctionType();\n\n\tif( idIfCond_323 ) {\n\n\tjava.lang.String ft_str = this.createStringFromFunctionType(context);\n\n\tresult = ft_str;\n}\n else {\n\n\tjava.lang.Boolean idIfCond_324 = false;\n\tidIfCond_324 = this.fromUtil(context);\n\n\tif( idIfCond_324 ) {\n\n\tjava.lang.Boolean idIfCond_325 = false;\n\tidIfCond_325 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isValueType();\n\n\tif( idIfCond_325 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_326 = false;\n\tidIfCond_326 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_326 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\"))).qualifiedName(), \"::\", \"\\\\.\"), \".helper.\"), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Wrapper.\"), fName);\n}\n\n}\n else {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.language.\", ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Util.\"), fName);\n\n\tjava.lang.Boolean idIfCond_327 = false;\n\tidIfCond_327 = kermeta.standard.helper.StringWrapper.equals(fName, \"asType\");\n\n\tif( idIfCond_327 ) {\n\n\tppCast = true;\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"(\", org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).one().createBehaviorJava(context)), \") \"), static_call);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_328 = false;\n\tidIfCond_328 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));\n\n\tif( idIfCond_328 ) {\n\n\tjava.lang.Boolean idIfCond_329 = false;\n\tidIfCond_329 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt.getStaticType()));\n\n\tif( idIfCond_329 ) {\n\n\tjava.lang.Boolean idIfCond_330 = false;\n\tidIfCond_330 = tgt.getStaticType().isValueType();\n\n\tif( idIfCond_330 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.basetypes.\", tgt.getStaticType().getTypeName()), \"Util.\"), fName);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_331 = false;\n\tidIfCond_331 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation().getBody())));\n\n\tif( idIfCond_331 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n}\n\n}\n\n}\n\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_332 = false;\n\tidIfCond_332 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, \"_new\"), this.isFromClass()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"))));\n\n\tif( idIfCond_332 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"((\"), tgt.createBehaviorJava(context)), \") \"), \"org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\\\"\"), tgt.createBehaviorJava(context)), \"\\\"))\");\n}\n else {\n\n\tjava.lang.Boolean idIfCond_333 = false;\n\tidIfCond_333 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));\n\n\tif( idIfCond_333 ) {\n\n\tjava.lang.Boolean idIfCond_334 = false;\n\tidIfCond_334 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());\n\n\tif( idIfCond_334 ) {\n\n\tjava.lang.Boolean idIfCond_335 = false;\n\tidIfCond_335 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_335 ) {\n\n\tjava.lang.Boolean idIfCond_336 = false;\n\tidIfCond_336 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.TypeLiteral\")), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(tgt.getStaticType()), \"Enumeration\"));\n\n\tif( idIfCond_336 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\\\"\"), tgt.createBehaviorJava(context)), \"\\\")\");\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));\n}\n\n\n\tjava.lang.Boolean idIfCond_337 = false;\n\tidIfCond_337 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_337 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"\\\\.\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_338 = false;\n\tidIfCond_338 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));\n\n\tif( idIfCond_338 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, context.getPREVIOUS_STATEMENT_FT()), context.getkermeta.standard.helper.StringWrapper.plus(()), context.getResultOfLastFt());\n}\n\n}\n\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), context.getResultOfLastFt()));\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_339 = false;\n\tidIfCond_339 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_339 ) {\n\n\tjava.lang.Boolean idIfCond_340 = false;\n\tidIfCond_340 = this.isCallFeatureAsStaticEnumLiteral();\n\n\tif( idIfCond_340 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"getByName(\\\"\"), fName), \"\\\")\");\n}\n else {\n\n\tjava.lang.Boolean idIfCond_341 = false;\n\tidIfCond_341 = this.isCallFeatureAsStaticProperty();\n\n\tif( idIfCond_341 ) {\n\n\tjava.lang.Boolean idIfCond_342 = false;\n\tidIfCond_342 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticProperty().getUpper(), 1);\n\n\tif( idIfCond_342 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).one().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_343 = false;\n\tidIfCond_343 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_343 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_344 = false;\n\tidIfCond_344 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_344 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_345 = false;\n\tidIfCond_345 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_345 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_346 = false;\n\tidIfCond_346 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_346 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"get\"), kermeta.standard.helper.StringWrapper.capName(this.getStaticProperty().getFinalName())), \"()\"), cf_prop_suffix);\n\n\tcf_prop_suffix = \"\";\n}\n else {\n\n\tjava.lang.Boolean idIfCond_347 = false;\n\tidIfCond_347 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_347 ) {\n\n\tjava.lang.Boolean idIfCond_348 = false;\n\tidIfCond_348 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticOperation().getUpper(), 1);\n\n\tif( idIfCond_348 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).one().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_349 = false;\n\tidIfCond_349 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_349 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_350 = false;\n\tidIfCond_350 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_350 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_351 = false;\n\tidIfCond_351 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_351 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_352 = false;\n\tidIfCond_352 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_352 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getStaticOperation().getFinalName(), context));\n}\n else {\n\n\tjava.lang.Boolean idIfCond_353 = false;\n\tidIfCond_353 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));\n\n\tif( idIfCond_353 ) {\n\n\tjava.lang.Boolean idIfCond_354 = false;\n\tidIfCond_354 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_354 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Boolean idIfCond_355 = false;\n\tidIfCond_355 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cf_.getStaticOperation()));\n\n\tif( idIfCond_355 ) {\n\n\tjava.lang.Boolean idIfCond_356 = false;\n\tidIfCond_356 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), this.isParameter()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(cf_.getStaticOperation().getCompiledJavaExtern(), \"\"));\n\n\tif( idIfCond_356 ) {\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"\\\\.\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_357 = false;\n\tidIfCond_357 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cf_.getStaticProperty()));\n\n\tif( idIfCond_357 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"\\\\.\");\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_358 = false;\n\tidIfCond_358 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());\n\n\tif( idIfCond_358 ) {\n\n\tkermeta.standard.helper.StringWrapper.replace(result, context.getresult = (), kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"));\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_359 = false;\n\tidIfCond_359 = ppCast;\n\n\tif( idIfCond_359 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(\"(\", result);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_360 = false;\n\tidIfCond_360 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));\n\n\tif( idIfCond_360 ) {\n\n\tjava.lang.Boolean idIfCond_361 = false;\n\tidIfCond_361 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_361 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"(\");\n}\n else {\n\n\tstatic_call = \"\";\n\n\tjava.lang.Boolean idIfCond_362 = false;\n\tidIfCond_362 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));\n\n\tif( idIfCond_362 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n\n}\n\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.kermeta.CompilerHelperJava\")).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), \")\"), cf_prop_suffix);\n\n\tcontext.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tjava.lang.Boolean idIfCond_363 = false;\n\tidIfCond_363 = ppCast;\n\n\tif( idIfCond_363 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \")\");\n\n\tppCast = false;\n}\n\n}\n\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());\n\nreturn result;\n'"
	 * @generated
	 */
	String createBehaviorJava(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n\t * Unused for the moment\n\t \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = \"\";\n\n\tjava.lang.Integer i = 0;\n\n\t//Beginning of the Inlining of the function type: each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft86 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_364 = false;\n\twhile( !idLoopCond_364 ) {\n\tidLoopCond_364 = it_ft86.isOff();\n\tif ( idLoopCond_364 ) {\n\t} else {\n\n\t//Beginning of the Inlining of the lambda expression: func\nkermeta.language.behavior.Expression param = it_ft86.next();\n\n\tjava.lang.Boolean idIfCond_365 = false;\n\tidIfCond_365 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n\n\tif( idIfCond_365 ) {\n\n\tjava.lang.Boolean idIfCond_366 = false;\n\tidIfCond_366 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_366 ) {\n\n\t//Beginning of the Inlining of the function type: each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft87 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))).getType()).iterator();\n\tjava.lang.Boolean idLoopCond_367 = false;\n\twhile( !idLoopCond_367 ) {\n\tidLoopCond_367 = it_ft87.isOff();\n\tif ( idLoopCond_367 ) {\n\t} else {\n\n\t//Beginning of the Inlining of the lambda expression: func\nkermeta.language.structure.Type t = it_ft87.next();\n\n\tjava.lang.Boolean idIfCond_368 = false;\n\tidIfCond_368 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);\n\n\tif( idIfCond_368 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n else {\n\n\ti = 1;\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, t.getTypeQName());\n//End of the Inlining of the lambda expression: func\n\n}\n\t}\n}\n\n//End of the Inlining of the function type: each\n\n}\n\n}\n\n//End of the Inlining of the lambda expression: func\n\n}\n\t}\n}\n\n//End of the Inlining of the function type: each\n\n\n\tjava.lang.Boolean idIfCond_369 = false;\n\tidIfCond_369 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result, \"\");\n\n\tif( idIfCond_369 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"<\", result), \">\");\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String getParamBindings();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_370 = false;\n\tidIfCond_370 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation()));\n\n\tif( idIfCond_370 ) {\n\n\tjava.lang.Boolean idIfCond_371 = false;\n\tidIfCond_371 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Class\");\n\n\tif( idIfCond_371 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromClass();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_372 = false;\n\tidIfCond_372 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_372 ) {\n\n\tkermeta.language.behavior.Expression exp = null;\n//Beginning of the Inlining of the function type: detect\n\nkermeta.language.behavior.Expression result_ft88 = null;\n\n\tkermeta.language.behavior.Expression elem_ft88 = null;\n\n\tresult_ft88 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft88 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_373 = false;\n\twhile( !idLoopCond_373 ) {\n\tidLoopCond_373 = kermeta.standard.helper.BooleanWrapper.or(it_ft88.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft88, null));\n\tif ( idLoopCond_373 ) {\n\t} else {\n\n\telem_ft88 = it_ft88.next();\n\n\tjava.lang.Boolean idIfCond_374 = false;\n//Beginning of the Inlining of the lambda expression: detector\nkermeta.language.behavior.Expression p = elem_ft88;\n\n\tidIfCond_374 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(p, this);\n//End of the Inlining of the lambda expression: detector\n\n\n\tif( idIfCond_374 ) {\n\n\tresult_ft88 = elem_ft88;\n}\n\n}\n\t}\n}\n\n\n//callElement\nexp = result_ft88;\n//End of the Inlining of the function type: detect\n\n\n\tjava.lang.Boolean idIfCond_375 = false;\n\tidIfCond_375 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(exp));\n\n\tif( idIfCond_375 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tcontext.getTasks_stack().push(\"FunctionType_Compilation\");\n\n\t//Beginning of the Inlining of the function type: each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Parameter> it_ft89 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(this.getStaticOperation().getOwnedParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_376 = false;\n\twhile( !idLoopCond_376 ) {\n\tidLoopCond_376 = it_ft89.isOff();\n\tif ( idLoopCond_376 ) {\n\t} else {\n\n\t//Beginning of the Inlining of the lambda expression: func\nkermeta.language.structure.Parameter p = it_ft89.next();\n\n\tjava.lang.Boolean idIfCond_377 = false;\n\tidIfCond_377 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(p.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n\n\tif( idIfCond_377 ) {\n\n\tcontext.setCurrent_param_ft(p.getName());\n}\n\n//End of the Inlining of the lambda expression: func\n\n}\n\t}\n}\n\n//End of the Inlining of the function type: each\n\n\n\tkermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>\"));\n\n\tjava.lang.Integer inc_tp = 0;\n\n\t//Beginning of the Inlining of the function type: each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft90 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();\n\tjava.lang.Boolean idLoopCond_378 = false;\n\twhile( !idLoopCond_378 ) {\n\tidLoopCond_378 = it_ft90.isOff();\n\tif ( idLoopCond_378 ) {\n\t} else {\n\n\t//Beginning of the Inlining of the lambda expression: func\nkermeta.language.structure.Type type_ = it_ft90.next();\n\n\tmap_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"type_\"));\n\n\tinc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);\n//End of the Inlining of the lambda expression: func\n\n}\n\t}\n}\n\n//End of the Inlining of the function type: each\n\n\n\tcontext.getFtMapTypeStack().push(map_type);\n\n\tkermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.structure.Type\"));\n\n\tjava.lang.Boolean idIfCond_379 = false;\n\tidIfCond_379 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n\n\tif( idIfCond_379 ) {\n\n\tkermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\")));\n\n\tcontext.getFtStack().push(theLambdaExp);\n\n\tjava.lang.Boolean idIfCond_380 = false;\n\tidIfCond_380 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n\n\tif( idIfCond_380 ) {\n\n\tjava.lang.Boolean idIfCond_381 = false;\n\tidIfCond_381 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"))).getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_381 ) {\n\n\tcontext.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"))).getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))));\n}\n\n\n\tftRightType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"))).getRight();\n}\n\n}\n\n\n\tjava.lang.String ft_str = \"\";\n\n\tcontext.pushFtSuffix();\n\n\tjava.lang.Boolean idIfCond_382 = false;\n\tidIfCond_382 = tgt.callsFunctionType();\n\n\tif( idIfCond_382 ) {\n\n\tcontext.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());\n}\n else {\n\n\tcontext.setFtContextualSelf(tgt.createBehaviorJava(context));\n}\n\n\n\tcontext.setFtSuffixActivation(true);\n\n\tjava.lang.String callElement = \"\";\n\n\tjava.lang.Boolean idIfCond_383 = false;\n\tidIfCond_383 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"));\n\n\tif( idIfCond_383 ) {\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"))).getIdentifier(), context);\n}\n else {\n\n\tjava.lang.Boolean idIfCond_384 = false;\n\tidIfCond_384 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_384 ) {\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))).getName(), context);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_385 = false;\n\tidIfCond_385 = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\")));\n\n\tif( idIfCond_385 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"null;\\n\");\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), \"//Beginning of the Inlining of the function type: \"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tjava.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtReturnType(type_ftReturnType);\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));\n\n\tjava.lang.Boolean idIfCond_386 = false;\n\tidIfCond_386 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, \"\");\n\n\tif( idIfCond_386 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//callElement\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = result\"), context.printFtSuffix()), \";\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_387 = false;\n\tidIfCond_387 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.structure.Operation\")).isVoidType(this.getStaticType().getTypeName())));\n\n\tif( idIfCond_387 ) {\n\n\tcontext.setResultOfLastFt(kermeta.standard.helper.StringWrapper.plus(\"result\", context.printFtSuffix()));\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, \"//End of the Inlining of the function type: \"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tcontext.getFtMapTypeStack().pop();\n\n\tcontext.getFtProductTypeStack().pop();\n\n\tcontext.getFtSuffix().pop();\n\n\tresult = ft_str;\n\nreturn result;\n'"
	 * @generated
	 */
	String createStringFromFunctionType(KM2EcoreContext context);

} // CallFeature
