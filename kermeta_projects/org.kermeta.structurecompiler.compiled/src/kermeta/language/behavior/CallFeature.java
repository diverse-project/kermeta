/**
 * License: EPL
 * Copyright: IRISA / INRIA / Universite de Rennes 1
 * 
 * Generating with Kermeta <http://www.kermeta.org>
 *
 * $Id$
 */
package kermeta.language.behavior;

import kermeta.language.structure.EnumerationLiteral;
import kermeta.language.structure.FunctionType;
import kermeta.language.structure.Operation;
import kermeta.language.structure.Parameter;
import kermeta.language.structure.Property;
import kermeta.language.structure.Type;

import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Call Feature</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getCalledFtResult <em>Called Ft Result</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature()
 * @model annotation="kermeta ecore='true'"
 *        annotation="kermeta documentation='CallFeature is the model element that refers to the use of a feature, i.e either \na property or an operation in a statement. In <code>stdio.writeln(\"hello\")</code>, \n<code>writeln</code> is a CallFeature.'"
 * @generated
 */
public interface CallFeature extends CallExpression {
	/**
	 * Returns the value of the '<em><b>Is Atpre</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Is Atpre</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Atpre</em>' attribute.
	 * @see #setIsAtpre(Boolean)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_IsAtpre()
	 * @model default="false" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta ecore='true'"
	 *        annotation="kermeta documentation='Tells whether this CallFeature represents a call to @pre in a postcondition'"
	 * @generated
	 */
	Boolean getIsAtpre();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Atpre</em>' attribute.
	 * @see #getIsAtpre()
	 * @generated
	 */
	void setIsAtpre(Boolean value);

	/**
	 * Returns the value of the '<em><b>Static Operation</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Operation</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Operation</em>' reference.
	 * @see #setStaticOperation(Operation)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticOperation()
	 * @model annotation="kermeta ecore='true'"
	 *        annotation="kermeta documentation='The method which will be executed (operation case)\nand the result value passed to the caller'"
	 * @generated
	 */
	Operation getStaticOperation();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Operation</em>' reference.
	 * @see #getStaticOperation()
	 * @generated
	 */
	void setStaticOperation(Operation value);

	/**
	 * Returns the value of the '<em><b>Called Ft Result</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Called Ft Result</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Called Ft Result</em>' attribute.
	 * @see #setCalledFtResult(String)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_CalledFtResult()
	 * @model dataType="kermeta.standard.JavaString"
	 * @generated
	 */
	String getCalledFtResult();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getCalledFtResult <em>Called Ft Result</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Called Ft Result</em>' attribute.
	 * @see #getCalledFtResult()
	 * @generated
	 */
	void setCalledFtResult(String value);

	/**
	 * Returns the value of the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Target</em>' containment reference.
	 * @see #setTarget(Expression)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_Target()
	 * @model containment="true" resolveProxies="true"
	 *        annotation="kermeta ecore='true'"
	 *        annotation="kermeta documentation='Target Expression (the owner of the feature)'"
	 * @generated
	 */
	Expression getTarget();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Target</em>' containment reference.
	 * @see #getTarget()
	 * @generated
	 */
	void setTarget(Expression value);

	/**
	 * Returns the value of the '<em><b>Static Enum Literal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Enum Literal</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Enum Literal</em>' reference.
	 * @see #setStaticEnumLiteral(EnumerationLiteral)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticEnumLiteral()
	 * @model annotation="kermeta ecore='true'"
	 *        annotation="kermeta documentation='To be written'"
	 * @generated
	 */
	EnumerationLiteral getStaticEnumLiteral();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Enum Literal</em>' reference.
	 * @see #getStaticEnumLiteral()
	 * @generated
	 */
	void setStaticEnumLiteral(EnumerationLiteral value);

	/**
	 * Returns the value of the '<em><b>Static Property</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Property</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Property</em>' reference.
	 * @see #setStaticProperty(Property)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticProperty()
	 * @model annotation="kermeta ecore='true'"
	 *        annotation="kermeta documentation='The object which will be returned (property case)'"
	 * @generated
	 */
	Property getStaticProperty();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Property</em>' reference.
	 * @see #getStaticProperty()
	 * @generated
	 */
	void setStaticProperty(Property value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.FunctionType result = null;\n\n\t//BIft:detect\n\nkermeta.language.structure.Type result_ft4 = null;\n\n\tkermeta.language.structure.Type elem_ft4 = null;\n\n\tresult_ft4 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft4 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getContainedType()).iterator();\n\tjava.lang.Boolean idLoopCond_51 = false;\n\twhile( !idLoopCond_51 ) {\n\tidLoopCond_51 = kermeta.standard.helper.BooleanWrapper.or(it_ft4.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft4, null));\n\tif ( idLoopCond_51 ) {\n\t} else {\n\n\telem_ft4 = it_ft4.next();\n\n\tjava.lang.Boolean idIfCond_52 = false;\n//BIle:detector\nkermeta.language.structure.Type t_lbdExp4 = elem_ft4;\n\n\tidIfCond_52 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp4, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n//EIle:detector\n\n\n\tif( idIfCond_52 ) {\n\n\tresult_ft4 = elem_ft4;\n}\n\n}\n\t}\n}\n\n\n//CE\nresult = (kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(result_ft4, \"kermeta.language.structure.FunctionType\");\n//EIft:detect\n\n\nreturn result;\n'"
	 * @generated
	 */
	FunctionType getFunctionType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta superOperation='kermeta::language::behavior::CallExpression'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tsuper.createBehaviorJava(context);\n\n\tresult = \"\";\n\n\tjava.lang.Boolean ppCast = false;\n\n\tjava.lang.String cf_prop_suffix = \"\";\n\n\tjava.lang.Boolean idIfCond_53 = false;\n\tidIfCond_53 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getTarget());\n\n\tif( idIfCond_53 ) {\n\n\tthis.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getSelfExpression())));\n}\n\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.String static_call = \"\";\n\n\tjava.lang.Boolean idIfCond_54 = false;\n\tidIfCond_54 = this.isCallFeatureAsStaticOperation();\n\n\tif( idIfCond_54 ) {\n\n\tjava.lang.Boolean idIfCond_55 = false;\n\tidIfCond_55 = this.callsFunctionType();\n\n\tif( idIfCond_55 ) {\n\n\tcontext.getTasks_stack().push(context.getFUNCTION_TYPE_COMPILATION_TASK());\n\n\tcontext.setAfterLbdExpActivation(false);\n\n\tjava.lang.String ft_str = this.createStringFromFunctionType(context);\n\n\tcontext.getTasks_stack().pop();\n\n\tresult = ft_str;\n}\n else {\n\n\tjava.lang.Boolean idIfCond_56 = false;\n\tidIfCond_56 = this.fromUtil(context);\n\n\tif( idIfCond_56 ) {\n\n\tjava.lang.Boolean idIfCond_57 = false;\n\tidIfCond_57 = this.getStaticOperation().ownedByValueType();\n\n\tif( idIfCond_57 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_58 = false;\n\tidIfCond_58 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_58 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation().getOwningClass()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\"))).qualifiedName(), \"::\", \".\"), \".helper.\"), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Wrapper.\"), fName);\n}\n\n}\n else {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_59 = false;\n\tidIfCond_59 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_59 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.language.\", this.getStaticOperation().getOwningClass().getName()), \"Util.\"), fName), \"Switcher\");\n}\n\n\n\tjava.lang.Boolean idIfCond_60 = false;\n\tidIfCond_60 = kermeta.standard.helper.StringWrapper.equals(fName, \"asType\");\n\n\tif( idIfCond_60 ) {\n\n\tppCast = true;\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"(\", org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).first().createBehaviorJava(context)), \") \"), static_call);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_61 = false;\n\tidIfCond_61 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt));\n\n\tif( idIfCond_61 ) {\n\n\tjava.lang.Boolean idIfCond_62 = false;\n\tidIfCond_62 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt.getStaticType()));\n\n\tif( idIfCond_62 ) {\n\n\tjava.lang.Boolean idIfCond_63 = false;\n\tidIfCond_63 = tgt.getStaticType().isValueType();\n\n\tif( idIfCond_63 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.basetypes.\", tgt.getStaticType().getTypeName()), \"Util.\"), fName);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_64 = false;\n\tidIfCond_64 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getOwningClass().isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStaticOperation().getBody())));\n\n\tif( idIfCond_64 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n}\n\n}\n\n}\n\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_65 = false;\n\tidIfCond_65 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, \"_new\"), this.isFromClass()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"))));\n\n\tif( idIfCond_65 ) {\n\n\tjava.lang.String type_label = tgt.createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_66 = false;\n\tidIfCond_66 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.isValueType(type_label, context));\n\n\tif( idIfCond_66 ) {\n\n\tjava.lang.String pojoType_label = \"\";\n\n\tjava.lang.Boolean idIfCond_67 = false;\n\tidIfCond_67 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"));\n\n\tif( idIfCond_67 ) {\n\n\tpojoType_label = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tgt.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getTypeDefinition().getFinalJavaClassQN();\n}\n\n\n\tjava.lang.Boolean idIfCond_68 = false;\n\tidIfCond_68 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(pojoType_label, \"\");\n\n\tif( idIfCond_68 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"new \", pojoType_label), \"()\");\n}\n else {\n\n\tjava.lang.String class_label = ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppEmfLikeGetEMF(type_label);\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"((\"), type_label), \") \"), \"org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"), class_label), \"))\");\n}\n\n}\n else {\n\n\tresult = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tgt.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getTypeDefinition().getEMFDefaultConstructor();\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_69 = false;\n\tidIfCond_69 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt));\n\n\tif( idIfCond_69 ) {\n\n\tjava.lang.Boolean idIfCond_70 = false;\n\tidIfCond_70 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());\n\n\tif( idIfCond_70 ) {\n\n\tjava.lang.Boolean idIfCond_71 = false;\n\tidIfCond_71 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_71 ) {\n\n\tjava.lang.String tgt_staticType_str = \"\";\n\n\tjava.lang.Boolean idIfCond_72 = false;\n\tidIfCond_72 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt.getStaticType()));\n\n\tif( idIfCond_72 ) {\n\n\ttgt_staticType_str = org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(tgt.getStaticType());\n}\n\n\n\tjava.lang.Boolean idIfCond_73 = false;\n\tidIfCond_73 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.TypeLiteral\")), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tgt_staticType_str, \"Enumeration\"));\n\n\tif( idIfCond_73 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\\\"\"), tgt.createBehaviorJava(context)), \"\\\")\");\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));\n}\n\n\n\tjava.lang.Boolean idIfCond_74 = false;\n\tidIfCond_74 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_74 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_75 = false;\n\tidIfCond_75 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this).callsFunctionType()));\n\n\tif( idIfCond_75 ) {\n\n\tjava.lang.String resultPrefix = \"\";\n\n\tjava.lang.Boolean idIfCond_76 = false;\n\tidIfCond_76 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Block\")));\n\n\tif( idIfCond_76 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_77 = false;\n\tidIfCond_77 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Constraint\")));\n\n\tif( idIfCond_77 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_78 = false;\n\tidIfCond_78 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\")));\n\n\tif( idIfCond_78 ) {\n\n\tresultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();\n}\n\n\n\tjava.lang.Boolean idIfCond_79 = false;\n\tidIfCond_79 = kermeta.standard.helper.BooleanWrapper.not(this.isParameter());\n\n\tif( idIfCond_79 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), context.getRETURN_EXPRESSION_TO_REPLACE()), this.getCalledFtResult());\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), this.getCalledFtResult());\n}\n\n}\n\n}\n\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getCalledFtResult()));\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_80 = false;\n\tidIfCond_80 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_80 ) {\n\n\tjava.lang.Boolean idIfCond_81 = false;\n\tidIfCond_81 = this.isCallFeatureAsStaticEnumLiteral();\n\n\tif( idIfCond_81 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"getByName(\\\"\"), fName), \"\\\")\");\n}\n else {\n\n\tjava.lang.Boolean idIfCond_82 = false;\n\tidIfCond_82 = this.isCallFeatureAsStaticProperty();\n\n\tif( idIfCond_82 ) {\n\n\tjava.lang.Boolean idIfCond_83 = false;\n\tidIfCond_83 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getStaticProperty().getUpper(), 1), kermeta.standard.helper.BooleanWrapper.not(this.isParameterMany()));\n\n\tif( idIfCond_83 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_84 = false;\n\tidIfCond_84 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_84 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_85 = false;\n\tidIfCond_85 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_85 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_86 = false;\n\tidIfCond_86 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_86 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_87 = false;\n\tidIfCond_87 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_87 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.printGetAccessor(context)), \"()\"), cf_prop_suffix);\n\n\tcf_prop_suffix = \"\";\n}\n else {\n\n\tjava.lang.Boolean idIfCond_88 = false;\n\tidIfCond_88 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_88 ) {\n\n\tjava.lang.Boolean idIfCond_89 = false;\n\tidIfCond_89 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getStaticOperation().getUpper(), 1), kermeta.standard.helper.BooleanWrapper.not(this.isParameterMany()));\n\n\tif( idIfCond_89 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_90 = false;\n\tidIfCond_90 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_90 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_91 = false;\n\tidIfCond_91 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_91 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_92 = false;\n\tidIfCond_92 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_92 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_93 = false;\n\tidIfCond_93 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_93 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.getStaticOperation().getFinalName(context));\n}\n else {\n\n\tjava.lang.Boolean idIfCond_94 = false;\n\tidIfCond_94 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this).callsFunctionType()));\n\n\tif( idIfCond_94 ) {\n\n\tjava.lang.Boolean idIfCond_95 = false;\n\tidIfCond_95 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_95 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Boolean idIfCond_96 = false;\n\tidIfCond_96 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cf_.getStaticOperation()));\n\n\tif( idIfCond_96 ) {\n\n\tjava.lang.Boolean idIfCond_97 = false;\n\tidIfCond_97 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), this.isParameter()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(cf_.getStaticOperation().getCompiledJavaExtern(), \"\"));\n\n\tif( idIfCond_97 ) {\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_98 = false;\n\tidIfCond_98 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cf_.getStaticProperty()));\n\n\tif( idIfCond_98 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_99 = false;\n\tidIfCond_99 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());\n\n\tif( idIfCond_99 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.replace(result, context.getRETURN_EXPRESSION_TO_REPLACE(), kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"));\n}\n else {\n\n\tjava.lang.String tmp_prefix = \"\";\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft5 = null;\n\n\tkermeta.language.behavior.Expression elem_ft5 = null;\n\n\tresult_ft5 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft5 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_101 = false;\n\twhile( !idLoopCond_101 ) {\n\tidLoopCond_101 = kermeta.standard.helper.BooleanWrapper.or(it_ft5.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft5, null));\n\tif ( idLoopCond_101 ) {\n\t} else {\n\n\telem_ft5 = it_ft5.next();\n\n\tjava.lang.Boolean idIfCond_102 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp5 = elem_ft5;\n\n\tidIfCond_102 = p_lbdExp5.callsFunctionType();\n//EIle:detector\n\n\n\tif( idIfCond_102 ) {\n\n\tresult_ft5 = elem_ft5;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_100 = false;\n\tidIfCond_100 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft5));\n\n\tif( idIfCond_100 ) {\n\n\ttmp_prefix = context.getRETURN_EXPRESSION_TO_REPLACE();\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(tmp_prefix, static_call), \"(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_103 = false;\n\tidIfCond_103 = ppCast;\n\n\tif( idIfCond_103 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(\"(\", result);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_104 = false;\n\tidIfCond_104 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));\n\n\tif( idIfCond_104 ) {\n\n\tjava.lang.Boolean idIfCond_105 = false;\n\tidIfCond_105 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_105 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"(\");\n}\n else {\n\n\tstatic_call = \"\";\n\n\tjava.lang.Boolean idIfCond_106 = false;\n\tidIfCond_106 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));\n\n\tif( idIfCond_106 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n\n}\n\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), \")\"), cf_prop_suffix);\n\n\tcontext.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tjava.lang.Boolean idIfCond_107 = false;\n\tidIfCond_107 = ppCast;\n\n\tif( idIfCond_107 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \")\");\n\n\tppCast = false;\n}\n\n}\n\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());\n\nreturn result;\n'"
	 * @generated
	 */
	String createBehaviorJava(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean" fNameDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))));\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromUtil_MethodFragment(String fName, KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_108 = false;\n\tidIfCond_108 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStaticOperation()));\n\n\tif( idIfCond_108 ) {\n\n\tjava.lang.Boolean idIfCond_109 = false;\n\tidIfCond_109 = kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Class\");\n\n\tif( idIfCond_109 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromClass();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Parameter result = null;\n\n\tresult = null;\n\n\tjava.lang.Boolean idIfCond_110 = false;\n\tidIfCond_110 = this.isParameter();\n\n\tif( idIfCond_110 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft6 = null;\n\n\tkermeta.language.behavior.Expression elem_ft6 = null;\n\n\tresult_ft6 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft6 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_111 = false;\n\twhile( !idLoopCond_111 ) {\n\tidLoopCond_111 = kermeta.standard.helper.BooleanWrapper.or(it_ft6.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft6, null));\n\tif ( idLoopCond_111 ) {\n\t} else {\n\n\telem_ft6 = it_ft6.next();\n\n\tjava.lang.Boolean idIfCond_112 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp6 = elem_ft6;\n\n\ti = kermeta.standard.helper.IntegerWrapper.plus(i, 1);\n\n\tidIfCond_112 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp6, this);\n//EIle:detector\n\n\n\tif( idIfCond_112 ) {\n\n\tresult_ft6 = elem_ft6;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft6;\n//EIft:detect\n;\n\n\tresult = ((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Parameter\")));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Parameter getCallFeatureCorrespondingParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tkermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable()));\n\n\tjava.lang.Integer inc_tp = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft7 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();\n\tjava.lang.Boolean idLoopCond_113 = false;\n\twhile( !idLoopCond_113 ) {\n\tidLoopCond_113 = it_ft7.isOff();\n\tif ( idLoopCond_113 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type type__lbdExp7 = it_ft7.next();\n\n\tmap_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), type__lbdExp7);\n\n\tinc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tcontext.getFtMapTypeStack().push(map_type);\n\n\tcontext.pushFtSuffix();\n\n\tkermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType()));\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft8 = null;\n\n\tkermeta.language.behavior.Expression elem_ft8 = null;\n\n\tresult_ft8 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft8 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_115 = false;\n\twhile( !idLoopCond_115 ) {\n\tidLoopCond_115 = kermeta.standard.helper.BooleanWrapper.or(it_ft8.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft8, null));\n\tif ( idLoopCond_115 ) {\n\t} else {\n\n\telem_ft8 = it_ft8.next();\n\n\tjava.lang.Boolean idIfCond_116 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp8 = elem_ft8;\n\n\tidIfCond_116 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp8, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_116 ) {\n\n\tresult_ft8 = elem_ft8;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_114 = false;\n\tidIfCond_114 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft8));\n\n\tif( idIfCond_114 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft9 = null;\n\n\tkermeta.language.behavior.Expression elem_ft9 = null;\n\n\tresult_ft9 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft9 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_117 = false;\n\twhile( !idLoopCond_117 ) {\n\tidLoopCond_117 = kermeta.standard.helper.BooleanWrapper.or(it_ft9.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft9, null));\n\tif ( idLoopCond_117 ) {\n\t} else {\n\n\telem_ft9 = it_ft9.next();\n\n\tjava.lang.Boolean idIfCond_118 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp9 = elem_ft9;\n\n\tidIfCond_118 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp9, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_118 ) {\n\n\tresult_ft9 = elem_ft9;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nkermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(result_ft9, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\")));\n\n\tcontext.getFtStack().push(theLambdaExp);\n\n\tthis.getStaticOperation().setLambdaExpression(theLambdaExp);\n\n\ttheLambdaExp.setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tthis.getStaticOperation().setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tjava.lang.Boolean idIfCond_119 = false;\n\tidIfCond_119 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n\n\tif( idIfCond_119 ) {\n\n\tkermeta.language.structure.FunctionType current_functionType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\")));\n\n\tjava.lang.Boolean idIfCond_120 = false;\n\tidIfCond_120 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_120 ) {\n\n\tcontext.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))));\n}\n\n\n\tftRightType = current_functionType.getRight();\n}\n\n}\n\n\n\tjava.lang.String ft_str = \"\";\n\n\tjava.lang.Boolean idIfCond_121 = false;\n\tidIfCond_121 = tgt.callsFunctionType();\n\n\tif( idIfCond_121 ) {\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());\n}\n else {\n\n\tcontext.setFtContextualSelf(tgt.createBehaviorJava(context));\n}\n\n\n\tcontext.setFtSuffixActivation(true);\n\n\tjava.lang.String callElement = \"\";\n\n\tjava.lang.Boolean idIfCond_122 = false;\n\tidIfCond_122 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"));\n\n\tif( idIfCond_122 ) {\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"))).getIdentifier(), context);\n}\n else {\n\n\tjava.lang.Boolean idIfCond_123 = false;\n\tidIfCond_123 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_123 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Please contact the development team if you have this case !\");\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))).getName(), context);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_124 = false;\n\tidIfCond_124 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, \"\");\n\n\tif( idIfCond_124 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"null;\\n\");\n}\n\n\n\tjava.lang.String ppCastSuffix = \"\";\n\n\tjava.lang.String ppValueTypeCastSuffix = \"\";\n\n\tjava.lang.Boolean idIfCond_125 = false;\n\tidIfCond_125 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"));\n\n\tif( idIfCond_125 ) {\n\n\tppCastSuffix = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getCacheCastSuffix();\n\n\tppValueTypeCastSuffix = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getValueTypeCastSuffix();\n\n\tjava.lang.Boolean idIfCond_126 = false;\n\tidIfCond_126 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_126 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n\n\tjava.lang.Boolean idIfCond_127 = false;\n\tidIfCond_127 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_127 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), \"//BIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tjava.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtReturnType(type_ftReturnType);\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));\n\n\tjava.lang.Boolean idIfCond_128 = false;\n\tidIfCond_128 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, \"\");\n\n\tif( idIfCond_128 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CE\\n\");\n\n\tjava.lang.Boolean idIfCond_129 = false;\n\tidIfCond_129 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getResultLastStatementId(), \"\");\n\n\tif( idIfCond_129 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), ppValueTypeCastSuffix), ppCastSuffix), \";\\n\");\n}\n else {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = result\"), context.printFtSuffix()), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_130 = false;\n\tidIfCond_130 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\")));\n\n\tif( idIfCond_130 ) {\n\n\tjava.lang.Boolean idIfCond_131 = false;\n\tidIfCond_131 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_131 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CER\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getRETURN_EXPRESSION_TO_REPLACE()), \"result\"), context.printFtSuffix()), ppValueTypeCastSuffix), ppCastSuffix), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_132 = false;\n\tidIfCond_132 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\")));\n\n\tif( idIfCond_132 ) {\n\n\tjava.lang.String str_binding = kermeta.standard.helper.StringWrapper.replace(context.getResultLastStatementId(), \" = \", \"\");\n\n\tjava.lang.Boolean idIfCond_133 = false;\n\tidIfCond_133 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(str_binding, \"\");\n\n\tif( idIfCond_133 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CEVD\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = \"), str_binding), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_134 = false;\n\tidIfCond_134 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Conditional\")));\n\n\tif( idIfCond_134 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CEC\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_135 = false;\n\tidIfCond_135 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(this.getStaticType().getTypeName())));\n\n\tif( idIfCond_135 ) {\n\n\tthis.setCalledFtResult(kermeta.standard.helper.StringWrapper.plus(\"result\", context.printFtSuffix()));\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, \"//EIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tcontext.getFtMapTypeStack().pop();\n\n\tcontext.getFtProductTypeStack().pop();\n\n\tcontext.getFtSuffix().pop();\n\n\tresult = ft_str;\n\nreturn result;\n'"
	 * @generated
	 */
	String createStringFromFunctionType(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_136 = false;\n\tidIfCond_136 = this.isParameter();\n\n\tif( idIfCond_136 ) {\n\n\tjava.lang.Boolean idIfCond_137 = false;\n\tidIfCond_137 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).isCallFeatureTargetsValueTypeOperation());\n\n\tif( idIfCond_137 ) {\n\n\tkermeta.language.structure.Parameter param = this.getCallFeatureCorrespondingParameter();\n\n\tjava.lang.Boolean idIfCond_138 = false;\n\tidIfCond_138 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(param));\n\n\tif( idIfCond_138 ) {\n\n\tjava.lang.String left_type = param.getType().getTypeQName();\n\n\tjava.lang.Boolean idIfCond_139 = false;\n\tidIfCond_139 = kermeta.standard.helper.StringWrapper.equals(left_type, \"kermeta::language::structure::Object\");\n\n\tif( idIfCond_139 ) {\n\n\tjava.lang.Boolean idIfCond_140 = false;\n\tidIfCond_140 = this.getStaticType().isValueType();\n\n\tif( idIfCond_140 ) {\n\n\tresult = true;\n}\n\n}\n\n}\n\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean requireConversionValueTypeToObject(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_141 = false;\n\tidIfCond_141 = this.isParameter();\n\n\tif( idIfCond_141 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft10 = null;\n\n\tkermeta.language.behavior.Expression elem_ft10 = null;\n\n\tresult_ft10 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft10 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_142 = false;\n\twhile( !idLoopCond_142 ) {\n\tidLoopCond_142 = kermeta.standard.helper.BooleanWrapper.or(it_ft10.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft10, null));\n\tif ( idLoopCond_142 ) {\n\t} else {\n\n\telem_ft10 = it_ft10.next();\n\n\tjava.lang.Boolean idIfCond_143 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp10 = elem_ft10;\n\n\ti = kermeta.standard.helper.IntegerWrapper.plus(i, 1);\n\n\tidIfCond_143 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp10, this);\n//EIle:detector\n\n\n\tif( idIfCond_143 ) {\n\n\tresult_ft10 = elem_ft10;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft10;\n//EIft:detect\n;\n\n\tjava.lang.Boolean idIfCond_144 = false;\n\tidIfCond_144 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Parameter\"))).getUpper(), 1);\n\n\tif( idIfCond_144 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameterMany();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_145 = false;\n\tidIfCond_145 = this.isParameter();\n\n\tif( idIfCond_145 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft11 = null;\n\n\tkermeta.language.behavior.Expression elem_ft11 = null;\n\n\tresult_ft11 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft11 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_146 = false;\n\twhile( !idLoopCond_146 ) {\n\tidLoopCond_146 = kermeta.standard.helper.BooleanWrapper.or(it_ft11.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft11, null));\n\tif ( idLoopCond_146 ) {\n\t} else {\n\n\telem_ft11 = it_ft11.next();\n\n\tjava.lang.Boolean idIfCond_147 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp11 = elem_ft11;\n\n\ti = kermeta.standard.helper.IntegerWrapper.plus(i, 1);\n\n\tidIfCond_147 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp11, this);\n//EIle:detector\n\n\n\tif( idIfCond_147 ) {\n\n\tresult_ft11 = elem_ft11;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft11;\n//EIft:detect\n;\n\n\tjava.lang.Boolean idIfCond_148 = false;\n\tidIfCond_148 = kermeta.standard.helper.IntegerWrapper.equals(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Parameter\"))).getUpper(), 1);\n\n\tif( idIfCond_148 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameterSingle();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.Boolean idIfCond_149 = false;\n\tidIfCond_149 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(this.getStaticOperation().ownedByValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Object\"), this.isFromUtil_MethodFragment(fName, context))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Type\"), this.isFromUtil_MethodFragment(fName, context))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(this.getStaticOperation().getOwningClass().qualifiedName(), \"kermeta::language::structure::Class\"), this.isFromUtil_MethodFragment(fName, context)));\n\n\tif( idIfCond_149 ) {\n\n\tresult = true;\n}\n else {\n\n\tresult = false;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean fromUtil(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n\t * Unused for the moment\n\t \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = \"\";\n\n\tjava.lang.Integer i = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft12 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_150 = false;\n\twhile( !idLoopCond_150 ) {\n\tidLoopCond_150 = it_ft12.isOff();\n\tif ( idLoopCond_150 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.behavior.Expression param_lbdExp12 = it_ft12.next();\n\n\tjava.lang.Boolean idIfCond_151 = false;\n\tidIfCond_151 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp12, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n\n\tif( idIfCond_151 ) {\n\n\tjava.lang.Boolean idIfCond_152 = false;\n\tidIfCond_152 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(param_lbdExp12, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_152 ) {\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft13 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(param_lbdExp12, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))).getType()).iterator();\n\tjava.lang.Boolean idLoopCond_153 = false;\n\twhile( !idLoopCond_153 ) {\n\tidLoopCond_153 = it_ft13.isOff();\n\tif ( idLoopCond_153 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type t_lbdExp13 = it_ft13.next();\n\n\tjava.lang.Boolean idIfCond_154 = false;\n\tidIfCond_154 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);\n\n\tif( idIfCond_154 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n else {\n\n\ti = 1;\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, t_lbdExp13.getTypeQName());\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n}\n\n}\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tjava.lang.Boolean idIfCond_155 = false;\n\tidIfCond_155 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result, \"\");\n\n\tif( idIfCond_155 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"<\", result), \">\");\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String getParamBindings();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Type result = null;\n\n\tresult = null;\n\n\tjava.lang.Boolean idIfCond_156 = false;\n\tidIfCond_156 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getFunctionType()));\n\n\tif( idIfCond_156 ) {\n\n\tresult = this.getFunctionType().getRight();\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Type getFunctionTypeReturnType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printGetAccessor(context);\n\nreturn result;\n'"
	 * @generated
	 */
	String printGetAccessor(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printSetAccessor(context);\n\nreturn result;\n'"
	 * @generated
	 */
	String printSetAccessor(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_157 = false;\n\tidIfCond_157 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_157 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft14 = null;\n\n\tkermeta.language.behavior.Expression elem_ft14 = null;\n\n\tresult_ft14 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft14 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_158 = false;\n\twhile( !idLoopCond_158 ) {\n\tidLoopCond_158 = kermeta.standard.helper.BooleanWrapper.or(it_ft14.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft14, null));\n\tif ( idLoopCond_158 ) {\n\t} else {\n\n\telem_ft14 = it_ft14.next();\n\n\tjava.lang.Boolean idIfCond_159 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp14 = elem_ft14;\n\n\tidIfCond_159 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp14, this);\n//EIle:detector\n\n\n\tif( idIfCond_159 ) {\n\n\tresult_ft14 = elem_ft14;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nresult = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft14));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_160 = false;\n\tidIfCond_160 = this.getStaticOperation().ownedByValueType();\n\n\tif( idIfCond_160 ) {\n\n\tresult = true;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isCallFeatureTargetsValueTypeOperation();

} // CallFeature
