/**
 * <copyright>
 * </copyright>
 *
 * $Id: CallFeature.java,v 1.3 2008-09-22 14:46:28 cfaucher Exp $
 */
package kermeta.language.behavior;

import kermeta.language.structure.EnumerationLiteral;
import kermeta.language.structure.FunctionType;
import kermeta.language.structure.Operation;
import kermeta.language.structure.Property;
import kermeta.language.structure.Type;

import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Call Feature</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}</li>
 *   <li>{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature()
 * @model annotation="kermeta documentation='CallFeature is the model element that refers to the use of a feature, i.e either \na property or an operation in a statement. In <code>stdio.writeln(\"hello\")</code>, \n<code>writeln</code> is a CallFeature.'"
 * @generated
 */
public interface CallFeature extends CallExpression {
	/**
	 * Returns the value of the '<em><b>Is Atpre</b></em>' attribute.
	 * The default value is <code>"false"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Is Atpre</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Is Atpre</em>' attribute.
	 * @see #setIsAtpre(Boolean)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_IsAtpre()
	 * @model default="false" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta documentation='Tells whether this CallFeature represents a call to @pre in a postcondition'"
	 * @generated
	 */
	Boolean getIsAtpre();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getIsAtpre <em>Is Atpre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Is Atpre</em>' attribute.
	 * @see #getIsAtpre()
	 * @generated
	 */
	void setIsAtpre(Boolean value);

	/**
	 * Returns the value of the '<em><b>Static Operation</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Operation</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Operation</em>' reference.
	 * @see #setStaticOperation(Operation)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticOperation()
	 * @model annotation="kermeta documentation='The method which will be executed (operation case)\nand the result value passed to the caller'"
	 * @generated
	 */
	Operation getStaticOperation();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticOperation <em>Static Operation</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Operation</em>' reference.
	 * @see #getStaticOperation()
	 * @generated
	 */
	void setStaticOperation(Operation value);

	/**
	 * Returns the value of the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Target</em>' containment reference.
	 * @see #setTarget(Expression)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_Target()
	 * @model containment="true" resolveProxies="true"
	 *        annotation="kermeta documentation='Target Expression (the owner of the feature)'"
	 * @generated
	 */
	Expression getTarget();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getTarget <em>Target</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Target</em>' containment reference.
	 * @see #getTarget()
	 * @generated
	 */
	void setTarget(Expression value);

	/**
	 * Returns the value of the '<em><b>Static Enum Literal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Enum Literal</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Enum Literal</em>' reference.
	 * @see #setStaticEnumLiteral(EnumerationLiteral)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticEnumLiteral()
	 * @model annotation="kermeta documentation='To be written'"
	 * @generated
	 */
	EnumerationLiteral getStaticEnumLiteral();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticEnumLiteral <em>Static Enum Literal</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Enum Literal</em>' reference.
	 * @see #getStaticEnumLiteral()
	 * @generated
	 */
	void setStaticEnumLiteral(EnumerationLiteral value);

	/**
	 * Returns the value of the '<em><b>Static Property</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Static Property</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Static Property</em>' reference.
	 * @see #setStaticProperty(Property)
	 * @see kermeta.language.behavior.BehaviorPackage#getCallFeature_StaticProperty()
	 * @model annotation="kermeta documentation='The object which will be returned (property case)'"
	 * @generated
	 */
	Property getStaticProperty();

	/**
	 * Sets the value of the '{@link kermeta.language.behavior.CallFeature#getStaticProperty <em>Static Property</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Static Property</em>' reference.
	 * @see #getStaticProperty()
	 * @generated
	 */
	void setStaticProperty(Property value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.Boolean idIfCond_295 = false;\n\tidIfCond_295 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Object\"), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\"))))))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Type\"), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))))));\n\n\tif( idIfCond_295 ) {\n\n\tresult = true;\n}\n else {\n\n\tresult = false;\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean fromUtil(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.FunctionType result = null;\n\n\t//BIft:detect\n\nkermeta.language.structure.Type result_ft47 = null;\n\n\tkermeta.language.structure.Type elem_ft47 = null;\n\n\tresult_ft47 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft47 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getContainedType()).iterator();\n\tjava.lang.Boolean idLoopCond_296 = false;\n\twhile( !idLoopCond_296 ) {\n\tidLoopCond_296 = kermeta.standard.helper.BooleanWrapper.or(it_ft47.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft47, null));\n\tif ( idLoopCond_296 ) {\n\t} else {\n\n\telem_ft47 = it_ft47.next();\n\n\tjava.lang.Boolean idIfCond_297 = false;\n//BIle:detector\nkermeta.language.structure.Type t_lbdExp47 = elem_ft47;\n\n\tidIfCond_297 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(t_lbdExp47, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n//EIle:detector\n\n\n\tif( idIfCond_297 ) {\n\n\tresult_ft47 = elem_ft47;\n}\n\n}\n\t}\n}\n\n\n//CE\nresult = (kermeta.language.structure.FunctionType) result_ft47;\n//EIft:detect\n\n\nreturn result;\n'"
	 * @generated
	 */
	FunctionType getFunctionType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta superOperation='kermeta::language::behavior::CallExpression'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tsuper.createBehaviorJava(context);\n\n\tresult = \"\";\n\n\tjava.lang.Boolean ppCast = false;\n\n\tjava.lang.String cf_prop_suffix = \"\";\n\n\tjava.lang.Boolean idIfCond_298 = false;\n\tidIfCond_298 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getTarget());\n\n\tif( idIfCond_298 ) {\n\n\tthis.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.behavior.SelfExpression\")));\n}\n\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tjava.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getName(), context);\n\n\tjava.lang.String static_call = \"\";\n\n\tjava.lang.Boolean idIfCond_299 = false;\n\tidIfCond_299 = this.isCallFeatureAsStaticOperation();\n\n\tif( idIfCond_299 ) {\n\n\tjava.lang.Boolean idIfCond_300 = false;\n\tidIfCond_300 = this.callsFunctionType();\n\n\tif( idIfCond_300 ) {\n\n\tcontext.getTasks_stack().push(context.getFUNCTION_TYPE_COMPILATION_TASK());\n\n\tcontext.setAfterLbdExpActivation(false);\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.ClassDefinition> it_ft48 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.ClassDefinition>convertAsOrderedSet(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getTarget().getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getClassDefinitionAsTyped().getSubClassDefinitions()).iterator();\n\tjava.lang.Boolean idLoopCond_301 = false;\n\twhile( !idLoopCond_301 ) {\n\tidLoopCond_301 = it_ft48.isOff();\n\tif ( idLoopCond_301 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.ClassDefinition cd_lbdExp48 = it_ft48.next();\n\n\tjava.lang.Boolean idIfCond_302 = false;\n//BIft:exists\n\njava.lang.Boolean result_ft49 = null;\n\n\tjava.lang.Boolean test_ft49 = false;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft49 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_lbdExp48.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_303 = false;\n\twhile( !idLoopCond_303 ) {\n\tidLoopCond_303 = kermeta.standard.helper.BooleanWrapper.or(it_ft49.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft49, false));\n\tif ( idLoopCond_303 ) {\n\t} else {\n\njava.lang.Boolean result_lambda_ft49 = null;\n//BIle:func\nkermeta.language.structure.Operation op_lbdExp49 = it_ft49.next();\n\n\tresult_lambda_ft49 = kermeta.standard.helper.StringWrapper.equals(op_lbdExp49.getName(), this.getStaticOperation().getName());\n//EIle:func\n\n\ttest_ft49 = kermeta.standard.helper.BooleanWrapper.or(test_ft49, result_lambda_ft49);\n}\n\t}\n}\n\n\n\tresult_ft49 = test_ft49;\n\n//CEC\nidIfCond_302 = result_ft49;\n//EIft:exists\n\n\n\tif( idIfCond_302 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"//if( instanceof \", cd_lbdExp48.getName()), \" ) - \"), this.getStaticOperation().getName()));\n}\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tjava.lang.String ft_str = this.createStringFromFunctionType(context);\n\n\tcontext.getTasks_stack().pop();\n\n\tresult = ft_str;\n}\n else {\n\n\tjava.lang.Boolean idIfCond_304 = false;\n\tidIfCond_304 = this.fromUtil(context);\n\n\tif( idIfCond_304 ) {\n\n\tjava.lang.Boolean idIfCond_305 = false;\n\tidIfCond_305 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isValueType();\n\n\tif( idIfCond_305 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n\n\tjava.lang.Boolean idIfCond_306 = false;\n\tidIfCond_306 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_306 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\"))).qualifiedName(), \"::\", \".\"), \".helper.\"), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Wrapper.\"), fName);\n}\n\n}\n else {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.language.\", ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getName()), \"Util.\"), fName);\n\n\tjava.lang.Boolean idIfCond_307 = false;\n\tidIfCond_307 = kermeta.standard.helper.StringWrapper.equals(fName, \"asType\");\n\n\tif( idIfCond_307 ) {\n\n\tppCast = true;\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"(\", org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).first().createBehaviorJava(context)), \") \"), static_call);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_308 = false;\n\tidIfCond_308 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));\n\n\tif( idIfCond_308 ) {\n\n\tjava.lang.Boolean idIfCond_309 = false;\n\tidIfCond_309 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt.getStaticType()));\n\n\tif( idIfCond_309 ) {\n\n\tjava.lang.Boolean idIfCond_310 = false;\n\tidIfCond_310 = tgt.getStaticType().isValueType();\n\n\tif( idIfCond_310 ) {\n\n\tstatic_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"org.kermeta.compil.runtime.helper.basetypes.\", tgt.getStaticType().getTypeName()), \"Util.\"), fName);\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_311 = false;\n\tidIfCond_311 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation().getBody())));\n\n\tif( idIfCond_311 ) {\n\n\tstatic_call = this.getStaticOperation().getOptimizedStaticCall(context);\n}\n\n}\n\n}\n\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_312 = false;\n\tidIfCond_312 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, \"_new\"), this.isFromClass()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.SelfExpression\")))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"))));\n\n\tif( idIfCond_312 ) {\n\n\tjava.lang.Boolean idIfCond_313 = false;\n\tidIfCond_313 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.isValueType(tgt.createBehaviorJava(context), context));\n\n\tif( idIfCond_313 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"((\"), tgt.createBehaviorJava(context)), \") \"), \"org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\\\"\"), tgt.createBehaviorJava(context)), \"\\\"))\");\n}\n else {\n\n\tresult = \"null\";\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_314 = false;\n\tidIfCond_314 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));\n\n\tif( idIfCond_314 ) {\n\n\tjava.lang.Boolean idIfCond_315 = false;\n\tidIfCond_315 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());\n\n\tif( idIfCond_315 ) {\n\n\tjava.lang.Boolean idIfCond_316 = false;\n\tidIfCond_316 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_316 ) {\n\n\tjava.lang.Boolean idIfCond_317 = false;\n\tidIfCond_317 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.TypeLiteral\")), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(tgt.getStaticType()), \"Enumeration\"));\n\n\tif( idIfCond_317 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\\\"\"), tgt.createBehaviorJava(context)), \"\\\")\");\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));\n}\n\n\n\tjava.lang.Boolean idIfCond_318 = false;\n\tidIfCond_318 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_318 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_319 = false;\n\tidIfCond_319 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));\n\n\tif( idIfCond_319 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, context.getPREVIOUS_STATEMENT_FT()), context.getRETURN_EXPRESSION_TO_REPLACE()), context.getResultOfLastFt());\n}\n\n}\n\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), context.getResultOfLastFt()));\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_320 = false;\n\tidIfCond_320 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_320 ) {\n\n\tjava.lang.Boolean idIfCond_321 = false;\n\tidIfCond_321 = this.isCallFeatureAsStaticEnumLiteral();\n\n\tif( idIfCond_321 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, \"getByName(\\\"\"), fName), \"\\\")\");\n}\n else {\n\n\tjava.lang.Boolean idIfCond_322 = false;\n\tidIfCond_322 = this.isCallFeatureAsStaticProperty();\n\n\tif( idIfCond_322 ) {\n\n\tjava.lang.Boolean idIfCond_323 = false;\n\tidIfCond_323 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticProperty().getUpper(), 1);\n\n\tif( idIfCond_323 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_324 = false;\n\tidIfCond_324 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_324 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_325 = false;\n\tidIfCond_325 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));\n\n\tif( idIfCond_325 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_326 = false;\n\tidIfCond_326 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_326 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_327 = false;\n\tidIfCond_327 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());\n\n\tif( idIfCond_327 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.printGetAccessor()), \"()\"), cf_prop_suffix);\n\n\tcf_prop_suffix = \"\";\n}\n else {\n\n\tjava.lang.Boolean idIfCond_328 = false;\n\tidIfCond_328 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());\n\n\tif( idIfCond_328 ) {\n\n\tjava.lang.Boolean idIfCond_329 = false;\n\tidIfCond_329 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticOperation().getUpper(), 1);\n\n\tif( idIfCond_329 ) {\n\n\tjava.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getTypeParamBinding()).first().getType().createBehaviorJava(context);\n\n\tjava.lang.Boolean idIfCond_330 = false;\n\tidIfCond_330 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_330 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsBag(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_331 = false;\n\tidIfCond_331 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));\n\n\tif( idIfCond_331 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_332 = false;\n\tidIfCond_332 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_332 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsOrderedSet(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_333 = false;\n\tidIfCond_333 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), this.getStaticOperation().getIsOrdered());\n\n\tif( idIfCond_333 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), \".<\"), type_binding), \">convertAsSequence(\"), result);\n}\n\n\n\tcf_prop_suffix = \")\";\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(this.getStaticOperation().getFinalName(), context));\n}\n else {\n\n\tjava.lang.Boolean idIfCond_334 = false;\n\tidIfCond_334 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallExpression\")), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));\n\n\tif( idIfCond_334 ) {\n\n\tjava.lang.Boolean idIfCond_335 = false;\n\tidIfCond_335 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_335 ) {\n\n\tkermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\")));\n\n\tjava.lang.Boolean idIfCond_336 = false;\n\tidIfCond_336 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cf_.getStaticOperation()));\n\n\tif( idIfCond_336 ) {\n\n\tjava.lang.Boolean idIfCond_337 = false;\n\tidIfCond_337 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), this.isParameter()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(cf_.getStaticOperation().getCompiledJavaExtern(), \"\"));\n\n\tif( idIfCond_337 ) {\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_338 = false;\n\tidIfCond_338 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cf_.getStaticProperty()));\n\n\tif( idIfCond_338 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \".\");\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_339 = false;\n\tidIfCond_339 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());\n\n\tif( idIfCond_339 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.replace(result, context.getRETURN_EXPRESSION_TO_REPLACE(), kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"));\n}\n else {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(static_call, \"(\"), result);\n}\n\n\n\tjava.lang.Boolean idIfCond_340 = false;\n\tidIfCond_340 = ppCast;\n\n\tif( idIfCond_340 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(\"(\", result);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_341 = false;\n\tidIfCond_341 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));\n\n\tif( idIfCond_341 ) {\n\n\tjava.lang.Boolean idIfCond_342 = false;\n\tidIfCond_342 = kermeta.standard.helper.StringWrapper.equals(static_call, \"\");\n\n\tif( idIfCond_342 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \"(\");\n}\n else {\n\n\tstatic_call = \"\";\n\n\tjava.lang.Boolean idIfCond_343 = false;\n\tidIfCond_343 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));\n\n\tif( idIfCond_343 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n\n}\n\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.kermeta.CompilerHelperJava\")).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), \")\"), cf_prop_suffix);\n\n\tcontext.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());\n\n\tthis.setBeforeLambdaExpressionResult(\"\");\n\n\tjava.lang.Boolean idIfCond_344 = false;\n\tidIfCond_344 = ppCast;\n\n\tif( idIfCond_344 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \")\");\n\n\tppCast = false;\n}\n\n}\n\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());\n\nreturn result;\n'"
	 * @generated
	 */
	String createBehaviorJava(KM2EcoreContext context);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n\t * Unused for the moment\n\t \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = \"\";\n\n\tjava.lang.Integer i = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft50 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_345 = false;\n\twhile( !idLoopCond_345 ) {\n\tidLoopCond_345 = it_ft50.isOff();\n\tif ( idLoopCond_345 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.behavior.Expression param_lbdExp50 = it_ft50.next();\n\n\tjava.lang.Boolean idIfCond_346 = false;\n\tidIfCond_346 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param_lbdExp50, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n\n\tif( idIfCond_346 ) {\n\n\tjava.lang.Boolean idIfCond_347 = false;\n\tidIfCond_347 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param_lbdExp50, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_347 ) {\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft51 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param_lbdExp50, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))).getType()).iterator();\n\tjava.lang.Boolean idLoopCond_348 = false;\n\twhile( !idLoopCond_348 ) {\n\tidLoopCond_348 = it_ft51.isOff();\n\tif ( idLoopCond_348 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type t_lbdExp51 = it_ft51.next();\n\n\tjava.lang.Boolean idIfCond_349 = false;\n\tidIfCond_349 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);\n\n\tif( idIfCond_349 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, \", \");\n}\n else {\n\n\ti = 1;\n}\n\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(result, t_lbdExp51.getTypeQName());\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n}\n\n}\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tjava.lang.Boolean idIfCond_350 = false;\n\tidIfCond_350 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result, \"\");\n\n\tif( idIfCond_350 ) {\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"<\", result), \">\");\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String getParamBindings();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Type result = null;\n\n\tresult = null;\n\n\tjava.lang.Boolean idIfCond_351 = false;\n\tidIfCond_351 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getFunctionType()));\n\n\tif( idIfCond_351 ) {\n\n\tresult = this.getFunctionType().getRight();\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Type getFunctionTypeReturnType();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation"
	 *        annotation="kermeta documentation='/** In progress \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.Operation result = null;\n\n\tresult = null;\n\n\tjava.lang.String op_name = this.getStaticOperation().getName();\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(\"getMoreAppropriateOperation(): \", kermeta.standard.helper.StringWrapper.toString(op_name)));\n\n\tkermeta.language.structure.Type typeOfCallingCallFeature = this.getTarget().getStaticType();\n\n\tkermeta.language.structure.Operation detectedOp = null;\n//BIft:detect\n\nkermeta.language.structure.Operation result_ft52 = null;\n\n\tkermeta.language.structure.Operation elem_ft52 = null;\n\n\tresult_ft52 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft52 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(typeOfCallingCallFeature, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_352 = false;\n\twhile( !idLoopCond_352 ) {\n\tidLoopCond_352 = kermeta.standard.helper.BooleanWrapper.or(it_ft52.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft52, null));\n\tif ( idLoopCond_352 ) {\n\t} else {\n\n\telem_ft52 = it_ft52.next();\n\n\tjava.lang.Boolean idIfCond_353 = false;\n//BIle:detector\nkermeta.language.structure.Operation op_lbdExp52 = elem_ft52;\n\n\tidIfCond_353 = kermeta.standard.helper.StringWrapper.equals(op_lbdExp52.getName(), op_name);\n//EIle:detector\n\n\n\tif( idIfCond_353 ) {\n\n\tresult_ft52 = elem_ft52;\n}\n\n}\n\t}\n}\n\n\n//CE\ndetectedOp = result_ft52;\n//EIft:detect\n\n\n\tjava.lang.Boolean idIfCond_354 = false;\n\tidIfCond_354 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(detectedOp));\n\n\tif( idIfCond_354 ) {\n\n\tresult = detectedOp;\n}\n else {\n\n\tkermeta.standard.OrderedSet<kermeta.language.structure.Class> sc = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Class>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(typeOfCallingCallFeature, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Class\"))).getterSuperClass());\n\n\tkermeta.standard.OrderedSet<kermeta.language.structure.Class> superClasses = ((kermeta.standard.OrderedSet<kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.standard.OrderedSet<kermeta.language.structure.Class>\"));\n\n\tsuperClasses.addAll(sc);\n\n\t\n\tkermeta.standard.helper.BooleanWrapper.not(superClasses.isEmpty());\n\tjava.lang.Boolean idLoopCond_355 = false;\n\twhile( !idLoopCond_355 ) {\n\tidLoopCond_355 = kermeta.standard.helper.BooleanWrapper.or(superClasses.isEmpty(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result)));\n\tif ( idLoopCond_355 ) {\n\t} else {\n\n\tkermeta.language.structure.Type ttttyp = null;\n//BIft:detect\n\nkermeta.language.structure.Class result_ft53 = null;\n\n\tkermeta.language.structure.Class elem_ft53 = null;\n\n\tresult_ft53 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Class> it_ft53 = superClasses.iterator();\n\tjava.lang.Boolean idLoopCond_356 = false;\n\twhile( !idLoopCond_356 ) {\n\tidLoopCond_356 = kermeta.standard.helper.BooleanWrapper.or(it_ft53.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft53, null));\n\tif ( idLoopCond_356 ) {\n\t} else {\n\n\telem_ft53 = it_ft53.next();\n\n\tjava.lang.Boolean idIfCond_357 = false;\n//BIle:detector\nkermeta.language.structure.Class class__lbdExp53 = elem_ft53;\n\n\t//BIft:exists\n\njava.lang.Boolean result_ft54 = null;\n\n\tjava.lang.Boolean test_ft54 = false;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft54 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(class__lbdExp53, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_358 = false;\n\twhile( !idLoopCond_358 ) {\n\tidLoopCond_358 = kermeta.standard.helper.BooleanWrapper.or(it_ft54.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft54, false));\n\tif ( idLoopCond_358 ) {\n\t} else {\n\njava.lang.Boolean result_lambda_ft54 = null;\n//BIle:func\nkermeta.language.structure.Operation op_lbdExp54 = it_ft54.next();\n\n\tresult_lambda_ft54 = kermeta.standard.helper.StringWrapper.equals(op_lbdExp54.getName(), op_name);\n//EIle:func\n\n\ttest_ft54 = kermeta.standard.helper.BooleanWrapper.or(test_ft54, result_lambda_ft54);\n}\n\t}\n}\n\n\n\tresult_ft54 = test_ft54;\n//EIft:exists\nidIfCond_357 = result_ft54;\n\n//EIle:detector\n\n\n\tif( idIfCond_357 ) {\n\n\tresult_ft53 = elem_ft53;\n}\n\n}\n\t}\n}\n\n\n//CE\nttttyp = result_ft53;\n//EIft:detect\n\n\n\tjava.lang.Boolean idIfCond_359 = false;\n\tidIfCond_359 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ttttyp));\n\n\tif( idIfCond_359 ) {\n\n\t//BIft:detect\n\nkermeta.language.structure.Operation result_ft55 = null;\n\n\tkermeta.language.structure.Operation elem_ft55 = null;\n\n\tresult_ft55 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft55 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(ttttyp, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ParameterizedType\"))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_360 = false;\n\twhile( !idLoopCond_360 ) {\n\tidLoopCond_360 = kermeta.standard.helper.BooleanWrapper.or(it_ft55.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft55, null));\n\tif ( idLoopCond_360 ) {\n\t} else {\n\n\telem_ft55 = it_ft55.next();\n\n\tjava.lang.Boolean idIfCond_361 = false;\n//BIle:detector\nkermeta.language.structure.Operation op_lbdExp55 = elem_ft55;\n\n\tidIfCond_361 = kermeta.standard.helper.StringWrapper.equals(op_lbdExp55.getName(), op_name);\n//EIle:detector\n\n\n\tif( idIfCond_361 ) {\n\n\tresult_ft55 = elem_ft55;\n}\n\n}\n\t}\n}\n\n\n//CE\nresult = result_ft55;\n//EIft:detect\n\n}\n else {\n\n\tkermeta.standard.OrderedSet<kermeta.language.structure.Class> tmp = ((kermeta.standard.OrderedSet<kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.standard.OrderedSet<kermeta.language.structure.Class>\"));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Class> it_ft56 = superClasses.iterator();\n\tjava.lang.Boolean idLoopCond_362 = false;\n\twhile( !idLoopCond_362 ) {\n\tidLoopCond_362 = it_ft56.isOff();\n\tif ( idLoopCond_362 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Class sc_lbdExp56 = it_ft56.next();\n\n\ttmp.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Class>convertAsOrderedSet(sc_lbdExp56.getterSuperClass()));\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tsuperClasses.clear();\n\n\tsuperClasses.addAll(tmp);\n}\n\n}\n\t}\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Operation getMoreAppropriateOperation();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_363 = false;\n\tidIfCond_363 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation()));\n\n\tif( idIfCond_363 ) {\n\n\tjava.lang.Boolean idIfCond_364 = false;\n\tidIfCond_364 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"))).qualifiedName(), \"kermeta::language::structure::Class\");\n\n\tif( idIfCond_364 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isFromClass();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printGetAccessor();\n\nreturn result;\n'"
	 * @generated
	 */
	String printGetAccessor();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model kind="operation" dataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.Boolean result = null;\n\n\tresult = false;\n\n\tjava.lang.Boolean idIfCond_365 = false;\n\tidIfCond_365 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"));\n\n\tif( idIfCond_365 ) {\n\n\tkermeta.language.behavior.Expression exp = null;\n//BIft:detect\n\nkermeta.language.behavior.Expression result_ft57 = null;\n\n\tkermeta.language.behavior.Expression elem_ft57 = null;\n\n\tresult_ft57 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft57 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallFeature\"))).getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_366 = false;\n\twhile( !idLoopCond_366 ) {\n\tidLoopCond_366 = kermeta.standard.helper.BooleanWrapper.or(it_ft57.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft57, null));\n\tif ( idLoopCond_366 ) {\n\t} else {\n\n\telem_ft57 = it_ft57.next();\n\n\tjava.lang.Boolean idIfCond_367 = false;\n//BIle:detector\nkermeta.language.behavior.Expression p_lbdExp57 = elem_ft57;\n\n\tidIfCond_367 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(p_lbdExp57, this);\n//EIle:detector\n\n\n\tif( idIfCond_367 ) {\n\n\tresult_ft57 = elem_ft57;\n}\n\n}\n\t}\n}\n\n\n//CE\nexp = result_ft57;\n//EIft:detect\n\n\n\tjava.lang.Boolean idIfCond_368 = false;\n\tidIfCond_368 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(exp));\n\n\tif( idIfCond_368 ) {\n\n\tresult = true;\n}\n\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	Boolean isParameter();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tresult = this.getStaticProperty().printSetAccessor();\n\nreturn result;\n'"
	 * @generated
	 */
	String printSetAccessor();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tkermeta.language.behavior.Expression tgt = this.getTarget();\n\n\tkermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.utils.Hashtable<kermeta.language.structure.Type, kermeta.language.structure.Type>\"));\n\n\tjava.lang.Integer inc_tp = 0;\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Type> it_ft58 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();\n\tjava.lang.Boolean idLoopCond_369 = false;\n\twhile( !idLoopCond_369 ) {\n\tidLoopCond_369 = it_ft58.isOff();\n\tif ( idLoopCond_369 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Type type__lbdExp58 = it_ft58.next();\n\n\tmap_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), type__lbdExp58);\n\n\tinc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tcontext.getFtMapTypeStack().push(map_type);\n\n\tcontext.pushFtSuffix();\n\n\tkermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.structure.Type\"));\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft59 = null;\n\n\tkermeta.language.behavior.Expression elem_ft59 = null;\n\n\tresult_ft59 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft59 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_371 = false;\n\twhile( !idLoopCond_371 ) {\n\tidLoopCond_371 = kermeta.standard.helper.BooleanWrapper.or(it_ft59.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft59, null));\n\tif ( idLoopCond_371 ) {\n\t} else {\n\n\telem_ft59 = it_ft59.next();\n\n\tjava.lang.Boolean idIfCond_372 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp59 = elem_ft59;\n\n\tidIfCond_372 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param_lbdExp59, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_372 ) {\n\n\tresult_ft59 = elem_ft59;\n}\n\n}\n\t}\n}\n\n//EIft:detect\njava.lang.Boolean idIfCond_370 = false;\n\tidIfCond_370 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result_ft59));\n\n\tif( idIfCond_370 ) {\n\n\t//BIft:detect\n\nkermeta.language.behavior.Expression result_ft60 = null;\n\n\tkermeta.language.behavior.Expression elem_ft60 = null;\n\n\tresult_ft60 = null;\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.behavior.Expression> it_ft60 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();\n\tjava.lang.Boolean idLoopCond_373 = false;\n\twhile( !idLoopCond_373 ) {\n\tidLoopCond_373 = kermeta.standard.helper.BooleanWrapper.or(it_ft60.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft60, null));\n\tif ( idLoopCond_373 ) {\n\t} else {\n\n\telem_ft60 = it_ft60.next();\n\n\tjava.lang.Boolean idIfCond_374 = false;\n//BIle:detector\nkermeta.language.behavior.Expression param_lbdExp60 = elem_ft60;\n\n\tidIfCond_374 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param_lbdExp60, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\"));\n//EIle:detector\n\n\n\tif( idIfCond_374 ) {\n\n\tresult_ft60 = elem_ft60;\n}\n\n}\n\t}\n}\n\n//EIft:detect\nkermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(result_ft60, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.LambdaExpression\")));\n\n\tcontext.getFtStack().push(theLambdaExp);\n\n\tthis.getStaticOperation().setLambdaExpression(theLambdaExp);\n\n\ttheLambdaExp.setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tthis.getStaticOperation().setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));\n\n\tjava.lang.Boolean idIfCond_375 = false;\n\tidIfCond_375 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\"));\n\n\tif( idIfCond_375 ) {\n\n\tkermeta.language.structure.FunctionType current_functionType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.FunctionType\")));\n\n\tjava.lang.Boolean idIfCond_376 = false;\n\tidIfCond_376 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"));\n\n\tif( idIfCond_376 ) {\n\n\tcontext.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ProductType\"))));\n}\n\n\n\tftRightType = current_functionType.getRight();\n}\n\n}\n\n\n\tjava.lang.String ft_str = \"\";\n\n\tjava.lang.Boolean idIfCond_377 = false;\n\tidIfCond_377 = tgt.callsFunctionType();\n\n\tif( idIfCond_377 ) {\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());\n}\n else {\n\n\tcontext.setFtContextualSelf(tgt.createBehaviorJava(context));\n}\n\n\n\tcontext.setFtSuffixActivation(true);\n\n\tjava.lang.String callElement = \"\";\n\n\tjava.lang.Boolean idIfCond_378 = false;\n\tidIfCond_378 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"));\n\n\tif( idIfCond_378 ) {\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.VariableDecl\"))).getIdentifier(), context);\n}\n else {\n\n\tjava.lang.Boolean idIfCond_379 = false;\n\tidIfCond_379 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_379 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(\"Please contact the development team if you have this case !\");\n\n\tcallElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"km2ecore.helper.java.IdentifierHelper\")).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"))).getName(), context);\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_380 = false;\n\tidIfCond_380 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, \"\");\n\n\tif( idIfCond_380 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"null;\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_381 = false;\n\tidIfCond_381 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"));\n\n\tif( idIfCond_381 ) {\n\n\tjava.lang.Boolean idIfCond_382 = false;\n\tidIfCond_382 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_382 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n\n\tjava.lang.Boolean idIfCond_383 = false;\n\tidIfCond_383 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallVariable\"));\n\n\tif( idIfCond_383 ) {\n\n\tcallElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget().createBehaviorJava(context);\n}\n\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), \"//BIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tjava.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);\n\n\tcontext.setFtSuffixActivation(true);\n\n\tcontext.setFtReturnType(type_ftReturnType);\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));\n\n\tjava.lang.Boolean idIfCond_384 = false;\n\tidIfCond_384 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, \"\");\n\n\tif( idIfCond_384 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CE\\n\");\n\n\tjava.lang.Boolean idIfCond_385 = false;\n\tidIfCond_385 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(context.getResultLastStatementId(), \"\");\n\n\tif( idIfCond_385 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n else {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), \" = result\"), context.printFtSuffix()), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_386 = false;\n\tidIfCond_386 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\")));\n\n\tif( idIfCond_386 ) {\n\n\tjava.lang.Boolean idIfCond_387 = false;\n\tidIfCond_387 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Assignment\"))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.CallResult\"));\n\n\tif( idIfCond_387 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CER\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getRETURN_EXPRESSION_TO_REPLACE()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n\n}\n\n\n\tjava.lang.Boolean idIfCond_388 = false;\n\tidIfCond_388 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.behavior.Conditional\")));\n\n\tif( idIfCond_388 ) {\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, \"\\n//CEC\\n\");\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), \"result\"), context.printFtSuffix()), \";\\n\");\n}\n\n\n\tjava.lang.Boolean idIfCond_389 = false;\n\tidIfCond_389 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, \"\"), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\"kermeta.language.structure.Operation\")).isVoidType(this.getStaticType().getTypeName())));\n\n\tif( idIfCond_389 ) {\n\n\tcontext.setResultOfLastFt(kermeta.standard.helper.StringWrapper.plus(\"result\", context.printFtSuffix()));\n}\n\n\n\tft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, \"//EIft:\"), this.getStaticOperation().getName()), \"\\n\");\n\n\tcontext.setFtSuffixActivation(false);\n\n\tcontext.getFtMapTypeStack().pop();\n\n\tcontext.getFtProductTypeStack().pop();\n\n\tcontext.getFtSuffix().pop();\n\n\tresult = ft_str;\n\nreturn result;\n'"
	 * @generated
	 */
	String createStringFromFunctionType(KM2EcoreContext context);

} // CallFeature
