/**
 * License: EPL
 * Copyright: IRISA / INRIA / Universite de Rennes 1
 * 
 * Generated with Kermeta <http://www.kermeta.org>
 *
 * $Id$
 */
package kermeta.compiler;

import kermeta.language.structure.TypeDefinition;

import kermeta.standard.OrderedSet;

import km2ecore.CompilingMode;
import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Main</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.compiler.Main#getContext <em>Context</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.compiler.CompilerPackage#getMain()
 * @model
 * @generated
 */
public interface Main extends kermeta.language.structure.Object {
	/**
	 * Returns the value of the '<em><b>Context</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Context</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Context</em>' reference.
	 * @see #setContext(KM2EcoreContext)
	 * @see kermeta.compiler.CompilerPackage#getMain_Context()
	 * @model required="true"
	 * @generated
	 */
	KM2EcoreContext getContext();

	/**
	 * Sets the value of the '{@link kermeta.compiler.Main#getContext <em>Context</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Context</em>' reference.
	 * @see #getContext()
	 * @generated
	 */
	void setContext(KM2EcoreContext value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, \"\", kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\"), km2ecore.CompilingMode.getByName(\"onlyEcore\"), false);\n'"
	 * @generated
	 */
	void main_km2ecore_onlyEcore(String modelInput);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model outputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tkermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output, \"http://www.eclipse.org/emf/2002/Ecore\");\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<ecore.EPackage> it_ft211 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();\n\tjava.lang.Boolean idLoopCond_939 = false;\n\twhile( !idLoopCond_939 ) {\n\tidLoopCond_939 = it_ft211.isOff();\n\tif ( idLoopCond_939 ) {\n\t} else {\n\n\t//BIle:func\necore.EPackage p_lbdExp211 = it_ft211.next();\n\n\tecore_resource.instances().add(p_lbdExp211);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tecore_resource.save();\n'"
	 * @generated
	 */
	void saveSingleEcore(String output);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, \"\", kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\"), km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main_km2ecore_behaviorJava(String modelInput);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model outputDataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n     * Save an Ecore file for each root EPackages\n     \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tkermeta.standard.Bag<kermeta.persistence.Resource> resourceBag = ((kermeta.standard.Bag<kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<ecore.EPackage> it_ft212 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();\n\tjava.lang.Boolean idLoopCond_940 = false;\n\twhile( !idLoopCond_940 ) {\n\tidLoopCond_940 = it_ft212.isOff();\n\tif ( idLoopCond_940 ) {\n\t} else {\n\n\t//BIle:func\necore.EPackage p_lbdExp212 = it_ft212.next();\n\n\tjava.lang.String output_final = output;\n\n\tjava.lang.Boolean idIfCond_941 = false;\n\tidIfCond_941 = kermeta.standard.helper.IntegerWrapper.isGreater(resourceBag.size(), 0);\n\n\tif( idIfCond_941 ) {\n\n\toutput_final = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(output, \"__\"), p_lbdExp212.getName()), \".ecore\");\n}\n\n\n\tkermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output_final, \"http://www.eclipse.org/emf/2002/Ecore\");\n\n\tecore_resource.instances().add(p_lbdExp212);\n\n\tresourceBag.add(ecore_resource);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.persistence.Resource> it_ft213 = resourceBag.iterator();\n\tjava.lang.Boolean idLoopCond_942 = false;\n\twhile( !idLoopCond_942 ) {\n\tidLoopCond_942 = it_ft213.isOff();\n\tif ( idLoopCond_942 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.persistence.Resource res__lbdExp213 = it_ft213.next();\n\n\tres__lbdExp213.save();\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n'"
	 * @generated
	 */
	void saveSplitEcore(String output);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString" splitEcoreDataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tkermeta.standard.OrderedSet<java.lang.String> operations = ((kermeta.standard.OrderedSet<java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));\n\n\tthis.main_compilingOnlyOperations(modelInput, traceInput, output, mode, operations);\n'"
	 * @generated
	 */
	void main_mode3(String modelInput, String traceInput, String output,
			CompilingMode mode, Boolean splitEcore);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tjava.lang.String modelInput = null;\n\n\tjava.lang.String output = null;\n\n\tjava.lang.String traceInput = \"\";\n\n\tmodelInput = \"platform:/resource/org.kermeta.compiler.kmt/models/StructureCompiler.km\";\n\n\tmodelInput = \"platform:/resource/org.kermeta.compiler.kmt/src/kermeta/StructureCompiler.km\";\n\n\toutput = kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\");\n\n\tthis.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main_inner();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString" operationsType="kermeta.standard.OrderedSet<kermeta.standard.JavaString>"
	 *        annotation="kermeta documentation='/**\n     * Generate a string representing the Java version of a Kermeta operation\n     \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));\n\n\tthis.getContext().initialize(modelInput, traceInput);\n\n\tthis.getContext().setMode(mode);\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"Input model: \", modelInput), \"\\n\"));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Package> it_ft214 = this.getContext().getMu().getAllPackages().iterator();\n\tjava.lang.Boolean idLoopCond_943 = false;\n\twhile( !idLoopCond_943 ) {\n\tidLoopCond_943 = it_ft214.isOff();\n\tif ( idLoopCond_943 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Package p_lbdExp214 = it_ft214.next();\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.Package pack_ft215 = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(p_lbdExp214, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft216 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(pack_ft215.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_944 = false;\n\twhile( !idLoopCond_944 ) {\n\tidLoopCond_944 = it_ft216.isOff();\n\tif ( idLoopCond_944 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp216 = it_ft216.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag cd_lbdExp215 = o_lbdExp216;\n\n\tjava.lang.Boolean idIfCond_945 = false;\n\tidIfCond_945 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp215, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"));\n\n\tif( idIfCond_945 ) {\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.ClassDefinition cd_ft217 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp215, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft218 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft217.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_946 = false;\n\twhile( !idLoopCond_946 ) {\n\tidLoopCond_946 = it_ft218.isOff();\n\tif ( idLoopCond_946 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp218 = it_ft218.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag op_lbdExp217 = o_lbdExp218;\n\n\tjava.lang.Boolean idIfCond_947 = false;\n\tidIfCond_947 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_947 ) {\n\n\tjava.lang.Boolean idIfCond_948 = false;\n\tidIfCond_948 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_948 ) {\n\n\tjava.lang.Boolean idIfCond_949 = false;\n\tidIfCond_949 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_949 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp217.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_950 = false;\n\tidIfCond_950 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_950 ) {\n\n\tjava.lang.Boolean idIfCond_951 = false;\n\tidIfCond_951 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_951 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Property> it_ft219 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Property>convertAsOrderedSet(cd_ft217.getOwnedAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_952 = false;\n\twhile( !idLoopCond_952 ) {\n\tidLoopCond_952 = it_ft219.isOff();\n\tif ( idLoopCond_952 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Property o_lbdExp219 = it_ft219.next();\n\n\t//BIle:func\nkermeta.language.structure.Property op_lbdExp217 = o_lbdExp219;\n\n\tjava.lang.Boolean idIfCond_953 = false;\n\tidIfCond_953 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_953 ) {\n\n\tjava.lang.Boolean idIfCond_954 = false;\n\tidIfCond_954 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_954 ) {\n\n\tjava.lang.Boolean idIfCond_955 = false;\n\tidIfCond_955 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_955 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp217.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_956 = false;\n\tidIfCond_956 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_956 ) {\n\n\tjava.lang.Boolean idIfCond_957 = false;\n\tidIfCond_957 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_957 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft220 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft217.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_958 = false;\n\twhile( !idLoopCond_958 ) {\n\tidLoopCond_958 = it_ft220.isOff();\n\tif ( idLoopCond_958 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Operation o_lbdExp220 = it_ft220.next();\n\n\t//BIle:func\nkermeta.language.structure.Operation op_lbdExp217 = o_lbdExp220;\n\n\tjava.lang.Boolean idIfCond_959 = false;\n\tidIfCond_959 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_959 ) {\n\n\tjava.lang.Boolean idIfCond_960 = false;\n\tidIfCond_960 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_960 ) {\n\n\tjava.lang.Boolean idIfCond_961 = false;\n\tidIfCond_961 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_961 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp217.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_962 = false;\n\tidIfCond_962 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_962 ) {\n\n\tjava.lang.Boolean idIfCond_963 = false;\n\tidIfCond_963 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_963 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Constraint> it_ft221 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft217.getInv()).iterator();\n\tjava.lang.Boolean idLoopCond_964 = false;\n\twhile( !idLoopCond_964 ) {\n\tidLoopCond_964 = it_ft221.isOff();\n\tif ( idLoopCond_964 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Constraint i_lbdExp221 = it_ft221.next();\n\n\t//BIle:func\nkermeta.language.structure.Constraint op_lbdExp217 = i_lbdExp221;\n\n\tjava.lang.Boolean idIfCond_965 = false;\n\tidIfCond_965 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_965 ) {\n\n\tjava.lang.Boolean idIfCond_966 = false;\n\tidIfCond_966 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_966 ) {\n\n\tjava.lang.Boolean idIfCond_967 = false;\n\tidIfCond_967 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_967 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp217.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_968 = false;\n\tidIfCond_968 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_968 ) {\n\n\tjava.lang.Boolean idIfCond_969 = false;\n\tidIfCond_969 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_969 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeVariable> it_ft222 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft217.getTypeParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_970 = false;\n\twhile( !idLoopCond_970 ) {\n\tidLoopCond_970 = it_ft222.isOff();\n\tif ( idLoopCond_970 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable t_lbdExp222 = it_ft222.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable op_lbdExp217 = t_lbdExp222;\n\n\tjava.lang.Boolean idIfCond_971 = false;\n\tidIfCond_971 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_971 ) {\n\n\tjava.lang.Boolean idIfCond_972 = false;\n\tidIfCond_972 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_972 ) {\n\n\tjava.lang.Boolean idIfCond_973 = false;\n\tidIfCond_973 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_973 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp217.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_974 = false;\n\tidIfCond_974 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_974 ) {\n\n\tjava.lang.Boolean idIfCond_975 = false;\n\tidIfCond_975 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_975 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp217, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeDefinition> it_ft223 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack_ft215.getOwnedTypeDefinition()).iterator();\n\tjava.lang.Boolean idLoopCond_976 = false;\n\twhile( !idLoopCond_976 ) {\n\tidLoopCond_976 = it_ft223.isOff();\n\tif ( idLoopCond_976 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeDefinition o_lbdExp223 = it_ft223.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeDefinition cd_lbdExp215 = o_lbdExp223;\n\n\tjava.lang.Boolean idIfCond_977 = false;\n\tidIfCond_977 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp215, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"));\n\n\tif( idIfCond_977 ) {\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.ClassDefinition cd_ft224 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp215, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft225 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft224.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_978 = false;\n\twhile( !idLoopCond_978 ) {\n\tidLoopCond_978 = it_ft225.isOff();\n\tif ( idLoopCond_978 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp225 = it_ft225.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag op_lbdExp224 = o_lbdExp225;\n\n\tjava.lang.Boolean idIfCond_979 = false;\n\tidIfCond_979 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_979 ) {\n\n\tjava.lang.Boolean idIfCond_980 = false;\n\tidIfCond_980 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_980 ) {\n\n\tjava.lang.Boolean idIfCond_981 = false;\n\tidIfCond_981 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_981 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp224.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_982 = false;\n\tidIfCond_982 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_982 ) {\n\n\tjava.lang.Boolean idIfCond_983 = false;\n\tidIfCond_983 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_983 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Property> it_ft226 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Property>convertAsOrderedSet(cd_ft224.getOwnedAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_984 = false;\n\twhile( !idLoopCond_984 ) {\n\tidLoopCond_984 = it_ft226.isOff();\n\tif ( idLoopCond_984 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Property o_lbdExp226 = it_ft226.next();\n\n\t//BIle:func\nkermeta.language.structure.Property op_lbdExp224 = o_lbdExp226;\n\n\tjava.lang.Boolean idIfCond_985 = false;\n\tidIfCond_985 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_985 ) {\n\n\tjava.lang.Boolean idIfCond_986 = false;\n\tidIfCond_986 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_986 ) {\n\n\tjava.lang.Boolean idIfCond_987 = false;\n\tidIfCond_987 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_987 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp224.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_988 = false;\n\tidIfCond_988 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_988 ) {\n\n\tjava.lang.Boolean idIfCond_989 = false;\n\tidIfCond_989 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_989 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft227 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft224.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_990 = false;\n\twhile( !idLoopCond_990 ) {\n\tidLoopCond_990 = it_ft227.isOff();\n\tif ( idLoopCond_990 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Operation o_lbdExp227 = it_ft227.next();\n\n\t//BIle:func\nkermeta.language.structure.Operation op_lbdExp224 = o_lbdExp227;\n\n\tjava.lang.Boolean idIfCond_991 = false;\n\tidIfCond_991 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_991 ) {\n\n\tjava.lang.Boolean idIfCond_992 = false;\n\tidIfCond_992 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_992 ) {\n\n\tjava.lang.Boolean idIfCond_993 = false;\n\tidIfCond_993 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_993 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp224.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_994 = false;\n\tidIfCond_994 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_994 ) {\n\n\tjava.lang.Boolean idIfCond_995 = false;\n\tidIfCond_995 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_995 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Constraint> it_ft228 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft224.getInv()).iterator();\n\tjava.lang.Boolean idLoopCond_996 = false;\n\twhile( !idLoopCond_996 ) {\n\tidLoopCond_996 = it_ft228.isOff();\n\tif ( idLoopCond_996 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Constraint i_lbdExp228 = it_ft228.next();\n\n\t//BIle:func\nkermeta.language.structure.Constraint op_lbdExp224 = i_lbdExp228;\n\n\tjava.lang.Boolean idIfCond_997 = false;\n\tidIfCond_997 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_997 ) {\n\n\tjava.lang.Boolean idIfCond_998 = false;\n\tidIfCond_998 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_998 ) {\n\n\tjava.lang.Boolean idIfCond_999 = false;\n\tidIfCond_999 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_999 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp224.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1000 = false;\n\tidIfCond_1000 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1000 ) {\n\n\tjava.lang.Boolean idIfCond_1001 = false;\n\tidIfCond_1001 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1001 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeVariable> it_ft229 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft224.getTypeParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_1002 = false;\n\twhile( !idLoopCond_1002 ) {\n\tidLoopCond_1002 = it_ft229.isOff();\n\tif ( idLoopCond_1002 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable t_lbdExp229 = it_ft229.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable op_lbdExp224 = t_lbdExp229;\n\n\tjava.lang.Boolean idIfCond_1003 = false;\n\tidIfCond_1003 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1003 ) {\n\n\tjava.lang.Boolean idIfCond_1004 = false;\n\tidIfCond_1004 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1004 ) {\n\n\tjava.lang.Boolean idIfCond_1005 = false;\n\tidIfCond_1005 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1005 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp224.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1006 = false;\n\tidIfCond_1006 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1006 ) {\n\n\tjava.lang.Boolean idIfCond_1007 = false;\n\tidIfCond_1007 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1007 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp224, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Package> it_ft230 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Package>convertAsOrderedSet(pack_ft215.getNestedPackage()).iterator();\n\tjava.lang.Boolean idLoopCond_1008 = false;\n\twhile( !idLoopCond_1008 ) {\n\tidLoopCond_1008 = it_ft230.isOff();\n\tif ( idLoopCond_1008 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Package p_lbdExp230 = it_ft230.next();\n\n\t//BIle:func\nkermeta.language.structure.Package cd_lbdExp215 = p_lbdExp230;\n\n\tjava.lang.Boolean idIfCond_1009 = false;\n\tidIfCond_1009 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp215, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"));\n\n\tif( idIfCond_1009 ) {\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.ClassDefinition cd_ft231 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp215, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft232 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft231.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_1010 = false;\n\twhile( !idLoopCond_1010 ) {\n\tidLoopCond_1010 = it_ft232.isOff();\n\tif ( idLoopCond_1010 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp232 = it_ft232.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag op_lbdExp231 = o_lbdExp232;\n\n\tjava.lang.Boolean idIfCond_1011 = false;\n\tidIfCond_1011 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1011 ) {\n\n\tjava.lang.Boolean idIfCond_1012 = false;\n\tidIfCond_1012 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1012 ) {\n\n\tjava.lang.Boolean idIfCond_1013 = false;\n\tidIfCond_1013 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1013 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp231.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1014 = false;\n\tidIfCond_1014 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1014 ) {\n\n\tjava.lang.Boolean idIfCond_1015 = false;\n\tidIfCond_1015 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1015 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Property> it_ft233 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Property>convertAsOrderedSet(cd_ft231.getOwnedAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_1016 = false;\n\twhile( !idLoopCond_1016 ) {\n\tidLoopCond_1016 = it_ft233.isOff();\n\tif ( idLoopCond_1016 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Property o_lbdExp233 = it_ft233.next();\n\n\t//BIle:func\nkermeta.language.structure.Property op_lbdExp231 = o_lbdExp233;\n\n\tjava.lang.Boolean idIfCond_1017 = false;\n\tidIfCond_1017 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1017 ) {\n\n\tjava.lang.Boolean idIfCond_1018 = false;\n\tidIfCond_1018 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1018 ) {\n\n\tjava.lang.Boolean idIfCond_1019 = false;\n\tidIfCond_1019 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1019 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp231.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1020 = false;\n\tidIfCond_1020 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1020 ) {\n\n\tjava.lang.Boolean idIfCond_1021 = false;\n\tidIfCond_1021 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1021 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft234 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft231.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_1022 = false;\n\twhile( !idLoopCond_1022 ) {\n\tidLoopCond_1022 = it_ft234.isOff();\n\tif ( idLoopCond_1022 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Operation o_lbdExp234 = it_ft234.next();\n\n\t//BIle:func\nkermeta.language.structure.Operation op_lbdExp231 = o_lbdExp234;\n\n\tjava.lang.Boolean idIfCond_1023 = false;\n\tidIfCond_1023 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1023 ) {\n\n\tjava.lang.Boolean idIfCond_1024 = false;\n\tidIfCond_1024 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1024 ) {\n\n\tjava.lang.Boolean idIfCond_1025 = false;\n\tidIfCond_1025 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1025 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp231.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1026 = false;\n\tidIfCond_1026 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1026 ) {\n\n\tjava.lang.Boolean idIfCond_1027 = false;\n\tidIfCond_1027 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1027 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Constraint> it_ft235 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft231.getInv()).iterator();\n\tjava.lang.Boolean idLoopCond_1028 = false;\n\twhile( !idLoopCond_1028 ) {\n\tidLoopCond_1028 = it_ft235.isOff();\n\tif ( idLoopCond_1028 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Constraint i_lbdExp235 = it_ft235.next();\n\n\t//BIle:func\nkermeta.language.structure.Constraint op_lbdExp231 = i_lbdExp235;\n\n\tjava.lang.Boolean idIfCond_1029 = false;\n\tidIfCond_1029 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1029 ) {\n\n\tjava.lang.Boolean idIfCond_1030 = false;\n\tidIfCond_1030 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1030 ) {\n\n\tjava.lang.Boolean idIfCond_1031 = false;\n\tidIfCond_1031 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1031 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp231.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1032 = false;\n\tidIfCond_1032 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1032 ) {\n\n\tjava.lang.Boolean idIfCond_1033 = false;\n\tidIfCond_1033 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1033 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeVariable> it_ft236 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft231.getTypeParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_1034 = false;\n\twhile( !idLoopCond_1034 ) {\n\tidLoopCond_1034 = it_ft236.isOff();\n\tif ( idLoopCond_1034 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable t_lbdExp236 = it_ft236.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable op_lbdExp231 = t_lbdExp236;\n\n\tjava.lang.Boolean idIfCond_1035 = false;\n\tidIfCond_1035 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1035 ) {\n\n\tjava.lang.Boolean idIfCond_1036 = false;\n\tidIfCond_1036 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1036 ) {\n\n\tjava.lang.Boolean idIfCond_1037 = false;\n\tidIfCond_1037 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1037 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp231.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1038 = false;\n\tidIfCond_1038 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1038 ) {\n\n\tjava.lang.Boolean idIfCond_1039 = false;\n\tidIfCond_1039 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1039 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp231, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"\\nFinish\");\n'"
	 * @generated
	 */
	void main_compilingOnlyOperations(String modelInput, String traceInput,
			String output, CompilingMode mode, OrderedSet<String> operations);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main_km2ecore_4trek_tests(String modelInput, String traceInput,
			String output);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model qnDataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/****************************************\052/'"
	 *        annotation="kermeta documentation='/********** METHODS FOR TESTING *********\052/'"
	 *        annotation="kermeta documentation='/****************************************\052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.TypeDefinition result = null;\n\n\tkermeta.language.structure.TypeDefinition td = ((kermeta.language.structure.TypeDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition()));\n\n\tkermeta.language.structure.TypeDefinition td_tmp = this.getContext().getMu().getTypeDefinitionByQualifiedName(qn);\n\n\tjava.lang.Boolean idIfCond_1040 = false;\n\tidIfCond_1040 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(td_tmp));\n\n\tif( idIfCond_1040 ) {\n\n\ttd = td_tmp;\n}\n\n\n\tresult = td;\n\nreturn result;\n'"
	 * @generated
	 */
	TypeDefinition getTypeDefinitionByQualifiedName(String qn);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tjava.lang.Boolean idIfCond_1041 = false;\n\tidIfCond_1041 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(td)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\tif( idIfCond_1041 ) {\n\n\tkermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(cd.getName(), \" \"), kermeta.standard.helper.BooleanWrapper.toString(cd.isValueType()));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String typeDefinitionToString(TypeDefinition td);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, \"\", kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\"), km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main(String modelInput);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString" splitEcoreDataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta documentation='/**\n     * Last operation before running the transfo.\n     \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(\"KermetaCompiler - Starting up of the Ecore generation for the model: \", modelInput));\n\n\tthis.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));\n\n\tthis.getContext().initialize(modelInput, traceInput);\n\n\tthis.getContext().setMode(mode);\n\n\tthis.getContext().getMu().applyPass1(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"KermetaCompiler - Pass 1 is finished\");\n\n\tjava.lang.Boolean idIfCond_1042 = false;\n\tidIfCond_1042 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(\"onlyEcore\"));\n\n\tif( idIfCond_1042 ) {\n\n\tthis.getContext().getMu().applyPass2(this.getContext());\n}\n\n\n\tjava.lang.Boolean idIfCond_1043 = false;\n\tidIfCond_1043 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(\"behaviorKmt\"));\n\n\tif( idIfCond_1043 ) {\n\n\t\nif (true)\n\tthrow new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getNotImplementedException())) );\n\n}\n\n\n\tjava.lang.Boolean idIfCond_1044 = false;\n\tidIfCond_1044 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(\"behaviorJava\"));\n\n\tif( idIfCond_1044 ) {\n\n\tthis.getContext().getMu().preprocess(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(\"KermetaCompiler - Pass 2 with the mode: \", this.getContext().getMode().getName()));\n\n\tthis.getContext().getMu().applyPass2BehaviorJava(this.getContext());\n\n\tthis.getContext().getMu().postprocess(this.getContext());\n}\n\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"KermetaCompiler - Pass 2 is finished\");\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Save the Ecore Model\");\n\n\tjava.lang.Boolean idIfCond_1045 = false;\n\tidIfCond_1045 = splitEcore;\n\n\tif( idIfCond_1045 ) {\n\n\tthis.saveSplitEcore(output);\n}\n else {\n\n\tthis.saveSingleEcore(output);\n}\n\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"The Ecore Model has been saved\");\n\n\tthis.getContext().getSimkModel().save(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"Stats:\\n\\tconditional + loop: \", kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_condStack())), \"\\n\\tfunction type: \"), kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_ftSuffix())));\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Finish\");\n'"
	 * @generated
	 */
	void main_mode(String modelInput, String traceInput, String output,
			CompilingMode mode, Boolean splitEcore);

} // Main
