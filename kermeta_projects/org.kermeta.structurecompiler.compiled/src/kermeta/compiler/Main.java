/**
 * License: EPL
 * Copyright: IRISA / INRIA / Universite de Rennes 1
 * 
 * Generating with Kermeta <http://www.kermeta.org>
 *
 * $Id$
 */
package kermeta.compiler;

import kermeta.language.structure.TypeDefinition;

import kermeta.standard.OrderedSet;

import km2ecore.CompilingMode;
import km2ecore.KM2EcoreContext;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Main</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link kermeta.compiler.Main#getContext <em>Context</em>}</li>
 * </ul>
 * </p>
 *
 * @see kermeta.compiler.CompilerPackage#getMain()
 * @model
 * @generated
 */
public interface Main extends kermeta.language.structure.Object {
	/**
	 * Returns the value of the '<em><b>Context</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Context</em>' reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Context</em>' reference.
	 * @see #setContext(KM2EcoreContext)
	 * @see kermeta.compiler.CompilerPackage#getMain_Context()
	 * @model required="true"
	 * @generated
	 */
	KM2EcoreContext getContext();

	/**
	 * Sets the value of the '{@link kermeta.compiler.Main#getContext <em>Context</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Context</em>' reference.
	 * @see #getContext()
	 * @generated
	 */
	void setContext(KM2EcoreContext value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model outputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tkermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output, \"http://www.eclipse.org/emf/2002/Ecore\");\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<ecore.EPackage> it_ft236 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();\n\tjava.lang.Boolean idLoopCond_1035 = false;\n\twhile( !idLoopCond_1035 ) {\n\tidLoopCond_1035 = it_ft236.isOff();\n\tif ( idLoopCond_1035 ) {\n\t} else {\n\n\t//BIle:func\necore.EPackage p_lbdExp236 = it_ft236.next();\n\n\tecore_resource.instances().add(p_lbdExp236);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\tecore_resource.save();\n'"
	 * @generated
	 */
	void saveSingleEcore(String output);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, \"\", kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\"), km2ecore.CompilingMode.getByName(\"onlyEcore\"), false);\n'"
	 * @generated
	 */
	void main_km2ecore_onlyEcore(String modelInput);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, \"\", kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\"), km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main_km2ecore_behaviorJava(String modelInput);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model outputDataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/**\n     * Save an Ecore file for each root EPackages\n     \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tkermeta.standard.Bag<kermeta.persistence.Resource> resourceBag = ((kermeta.standard.Bag<kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<ecore.EPackage> it_ft237 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();\n\tjava.lang.Boolean idLoopCond_1036 = false;\n\twhile( !idLoopCond_1036 ) {\n\tidLoopCond_1036 = it_ft237.isOff();\n\tif ( idLoopCond_1036 ) {\n\t} else {\n\n\t//BIle:func\necore.EPackage p_lbdExp237 = it_ft237.next();\n\n\tjava.lang.String output_final = output;\n\n\tjava.lang.Boolean idIfCond_1037 = false;\n\tidIfCond_1037 = kermeta.standard.helper.IntegerWrapper.isGreater(resourceBag.size(), 0);\n\n\tif( idIfCond_1037 ) {\n\n\toutput_final = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(output, \"__\"), p_lbdExp237.getName()), \".ecore\");\n}\n\n\n\tkermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output_final, \"http://www.eclipse.org/emf/2002/Ecore\");\n\n\tecore_resource.instances().add(p_lbdExp237);\n\n\tresourceBag.add(ecore_resource);\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.persistence.Resource> it_ft238 = resourceBag.iterator();\n\tjava.lang.Boolean idLoopCond_1038 = false;\n\twhile( !idLoopCond_1038 ) {\n\tidLoopCond_1038 = it_ft238.isOff();\n\tif ( idLoopCond_1038 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.persistence.Resource res__lbdExp238 = it_ft238.next();\n\n\tres__lbdExp238.save();\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n'"
	 * @generated
	 */
	void saveSplitEcore(String output);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString" splitEcoreDataType="kermeta.standard.JavaBoolean"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tkermeta.standard.OrderedSet<java.lang.String> operations = ((kermeta.standard.OrderedSet<java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));\n\n\tthis.main_compilingOnlyOperations(modelInput, traceInput, output, mode, operations);\n'"
	 * @generated
	 */
	void main_mode3(String modelInput, String traceInput, String output,
			CompilingMode mode, Boolean splitEcore);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tjava.lang.String modelInput = null;\n\n\tjava.lang.String output = null;\n\n\tjava.lang.String traceInput = \"\";\n\n\tmodelInput = \"platform:/resource/org.kermeta.compiler.kmt/models/StructureCompiler.km\";\n\n\tmodelInput = \"platform:/resource/org.kermeta.compiler.kmt/src/kermeta/StructureCompiler.km\";\n\n\toutput = kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\");\n\n\tthis.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main_inner();

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main_km2ecore_4trek_tests(String modelInput, String traceInput,
			String output);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString" operationsType="kermeta.standard.OrderedSet<kermeta.standard.JavaString>"
	 *        annotation="kermeta documentation='/**\n     * Generate a string representing the Java version of a Kermeta operation\n     \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));\n\n\tthis.getContext().initialize(modelInput, traceInput);\n\n\tthis.getContext().setMode(mode);\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"Input model: \", modelInput), \"\\n\"));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Package> it_ft239 = this.getContext().getMu().getAllPackages().iterator();\n\tjava.lang.Boolean idLoopCond_1039 = false;\n\twhile( !idLoopCond_1039 ) {\n\tidLoopCond_1039 = it_ft239.isOff();\n\tif ( idLoopCond_1039 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Package p_lbdExp239 = it_ft239.next();\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.Package pack_ft240 = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(p_lbdExp239, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Package\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft241 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(pack_ft240.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_1040 = false;\n\twhile( !idLoopCond_1040 ) {\n\tidLoopCond_1040 = it_ft241.isOff();\n\tif ( idLoopCond_1040 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp241 = it_ft241.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag cd_lbdExp240 = o_lbdExp241;\n\n\tjava.lang.Boolean idIfCond_1041 = false;\n\tidIfCond_1041 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp240, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"));\n\n\tif( idIfCond_1041 ) {\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.ClassDefinition cd_ft242 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp240, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft243 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft242.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_1042 = false;\n\twhile( !idLoopCond_1042 ) {\n\tidLoopCond_1042 = it_ft243.isOff();\n\tif ( idLoopCond_1042 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp243 = it_ft243.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag op_lbdExp242 = o_lbdExp243;\n\n\tjava.lang.Boolean idIfCond_1043 = false;\n\tidIfCond_1043 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1043 ) {\n\n\tjava.lang.Boolean idIfCond_1044 = false;\n\tidIfCond_1044 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1044 ) {\n\n\tjava.lang.Boolean idIfCond_1045 = false;\n\tidIfCond_1045 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1045 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1046 = false;\n\tidIfCond_1046 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1046 ) {\n\n\tjava.lang.Boolean idIfCond_1047 = false;\n\tidIfCond_1047 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1047 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Property> it_ft244 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Property>convertAsOrderedSet(cd_ft242.getOwnedAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_1048 = false;\n\twhile( !idLoopCond_1048 ) {\n\tidLoopCond_1048 = it_ft244.isOff();\n\tif ( idLoopCond_1048 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Property o_lbdExp244 = it_ft244.next();\n\n\t//BIle:func\nkermeta.language.structure.Property op_lbdExp242 = o_lbdExp244;\n\n\tjava.lang.Boolean idIfCond_1049 = false;\n\tidIfCond_1049 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1049 ) {\n\n\tjava.lang.Boolean idIfCond_1050 = false;\n\tidIfCond_1050 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1050 ) {\n\n\tjava.lang.Boolean idIfCond_1051 = false;\n\tidIfCond_1051 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1051 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1052 = false;\n\tidIfCond_1052 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1052 ) {\n\n\tjava.lang.Boolean idIfCond_1053 = false;\n\tidIfCond_1053 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1053 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft245 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft242.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_1054 = false;\n\twhile( !idLoopCond_1054 ) {\n\tidLoopCond_1054 = it_ft245.isOff();\n\tif ( idLoopCond_1054 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Operation o_lbdExp245 = it_ft245.next();\n\n\t//BIle:func\nkermeta.language.structure.Operation op_lbdExp242 = o_lbdExp245;\n\n\tjava.lang.Boolean idIfCond_1055 = false;\n\tidIfCond_1055 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1055 ) {\n\n\tjava.lang.Boolean idIfCond_1056 = false;\n\tidIfCond_1056 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1056 ) {\n\n\tjava.lang.Boolean idIfCond_1057 = false;\n\tidIfCond_1057 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1057 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1058 = false;\n\tidIfCond_1058 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1058 ) {\n\n\tjava.lang.Boolean idIfCond_1059 = false;\n\tidIfCond_1059 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1059 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Constraint> it_ft246 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft242.getInv()).iterator();\n\tjava.lang.Boolean idLoopCond_1060 = false;\n\twhile( !idLoopCond_1060 ) {\n\tidLoopCond_1060 = it_ft246.isOff();\n\tif ( idLoopCond_1060 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Constraint i_lbdExp246 = it_ft246.next();\n\n\t//BIle:func\nkermeta.language.structure.Constraint op_lbdExp242 = i_lbdExp246;\n\n\tjava.lang.Boolean idIfCond_1061 = false;\n\tidIfCond_1061 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1061 ) {\n\n\tjava.lang.Boolean idIfCond_1062 = false;\n\tidIfCond_1062 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1062 ) {\n\n\tjava.lang.Boolean idIfCond_1063 = false;\n\tidIfCond_1063 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1063 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1064 = false;\n\tidIfCond_1064 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1064 ) {\n\n\tjava.lang.Boolean idIfCond_1065 = false;\n\tidIfCond_1065 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1065 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeVariable> it_ft247 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft242.getTypeParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_1066 = false;\n\twhile( !idLoopCond_1066 ) {\n\tidLoopCond_1066 = it_ft247.isOff();\n\tif ( idLoopCond_1066 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable t_lbdExp247 = it_ft247.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable op_lbdExp242 = t_lbdExp247;\n\n\tjava.lang.Boolean idIfCond_1067 = false;\n\tidIfCond_1067 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1067 ) {\n\n\tjava.lang.Boolean idIfCond_1068 = false;\n\tidIfCond_1068 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1068 ) {\n\n\tjava.lang.Boolean idIfCond_1069 = false;\n\tidIfCond_1069 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1069 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1070 = false;\n\tidIfCond_1070 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1070 ) {\n\n\tjava.lang.Boolean idIfCond_1071 = false;\n\tidIfCond_1071 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1071 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeDefinition> it_ft248 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack_ft240.getOwnedTypeDefinition()).iterator();\n\tjava.lang.Boolean idLoopCond_1072 = false;\n\twhile( !idLoopCond_1072 ) {\n\tidLoopCond_1072 = it_ft248.isOff();\n\tif ( idLoopCond_1072 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeDefinition o_lbdExp248 = it_ft248.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeDefinition cd_lbdExp240 = o_lbdExp248;\n\n\tjava.lang.Boolean idIfCond_1073 = false;\n\tidIfCond_1073 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp240, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"));\n\n\tif( idIfCond_1073 ) {\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.ClassDefinition cd_ft249 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp240, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft250 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft249.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_1074 = false;\n\twhile( !idLoopCond_1074 ) {\n\tidLoopCond_1074 = it_ft250.isOff();\n\tif ( idLoopCond_1074 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp250 = it_ft250.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag op_lbdExp249 = o_lbdExp250;\n\n\tjava.lang.Boolean idIfCond_1075 = false;\n\tidIfCond_1075 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1075 ) {\n\n\tjava.lang.Boolean idIfCond_1076 = false;\n\tidIfCond_1076 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1076 ) {\n\n\tjava.lang.Boolean idIfCond_1077 = false;\n\tidIfCond_1077 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1077 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1078 = false;\n\tidIfCond_1078 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1078 ) {\n\n\tjava.lang.Boolean idIfCond_1079 = false;\n\tidIfCond_1079 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1079 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Property> it_ft251 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Property>convertAsOrderedSet(cd_ft249.getOwnedAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_1080 = false;\n\twhile( !idLoopCond_1080 ) {\n\tidLoopCond_1080 = it_ft251.isOff();\n\tif ( idLoopCond_1080 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Property o_lbdExp251 = it_ft251.next();\n\n\t//BIle:func\nkermeta.language.structure.Property op_lbdExp249 = o_lbdExp251;\n\n\tjava.lang.Boolean idIfCond_1081 = false;\n\tidIfCond_1081 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1081 ) {\n\n\tjava.lang.Boolean idIfCond_1082 = false;\n\tidIfCond_1082 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1082 ) {\n\n\tjava.lang.Boolean idIfCond_1083 = false;\n\tidIfCond_1083 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1083 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1084 = false;\n\tidIfCond_1084 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1084 ) {\n\n\tjava.lang.Boolean idIfCond_1085 = false;\n\tidIfCond_1085 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1085 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft252 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft249.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_1086 = false;\n\twhile( !idLoopCond_1086 ) {\n\tidLoopCond_1086 = it_ft252.isOff();\n\tif ( idLoopCond_1086 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Operation o_lbdExp252 = it_ft252.next();\n\n\t//BIle:func\nkermeta.language.structure.Operation op_lbdExp249 = o_lbdExp252;\n\n\tjava.lang.Boolean idIfCond_1087 = false;\n\tidIfCond_1087 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1087 ) {\n\n\tjava.lang.Boolean idIfCond_1088 = false;\n\tidIfCond_1088 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1088 ) {\n\n\tjava.lang.Boolean idIfCond_1089 = false;\n\tidIfCond_1089 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1089 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1090 = false;\n\tidIfCond_1090 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1090 ) {\n\n\tjava.lang.Boolean idIfCond_1091 = false;\n\tidIfCond_1091 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1091 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Constraint> it_ft253 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft249.getInv()).iterator();\n\tjava.lang.Boolean idLoopCond_1092 = false;\n\twhile( !idLoopCond_1092 ) {\n\tidLoopCond_1092 = it_ft253.isOff();\n\tif ( idLoopCond_1092 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Constraint i_lbdExp253 = it_ft253.next();\n\n\t//BIle:func\nkermeta.language.structure.Constraint op_lbdExp249 = i_lbdExp253;\n\n\tjava.lang.Boolean idIfCond_1093 = false;\n\tidIfCond_1093 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1093 ) {\n\n\tjava.lang.Boolean idIfCond_1094 = false;\n\tidIfCond_1094 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1094 ) {\n\n\tjava.lang.Boolean idIfCond_1095 = false;\n\tidIfCond_1095 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1095 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1096 = false;\n\tidIfCond_1096 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1096 ) {\n\n\tjava.lang.Boolean idIfCond_1097 = false;\n\tidIfCond_1097 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1097 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeVariable> it_ft254 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft249.getTypeParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_1098 = false;\n\twhile( !idLoopCond_1098 ) {\n\tidLoopCond_1098 = it_ft254.isOff();\n\tif ( idLoopCond_1098 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable t_lbdExp254 = it_ft254.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable op_lbdExp249 = t_lbdExp254;\n\n\tjava.lang.Boolean idIfCond_1099 = false;\n\tidIfCond_1099 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1099 ) {\n\n\tjava.lang.Boolean idIfCond_1100 = false;\n\tidIfCond_1100 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1100 ) {\n\n\tjava.lang.Boolean idIfCond_1101 = false;\n\tidIfCond_1101 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1101 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1102 = false;\n\tidIfCond_1102 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1102 ) {\n\n\tjava.lang.Boolean idIfCond_1103 = false;\n\tidIfCond_1103 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1103 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Package> it_ft255 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Package>convertAsOrderedSet(pack_ft240.getNestedPackage()).iterator();\n\tjava.lang.Boolean idLoopCond_1104 = false;\n\twhile( !idLoopCond_1104 ) {\n\tidLoopCond_1104 = it_ft255.isOff();\n\tif ( idLoopCond_1104 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Package p_lbdExp255 = it_ft255.next();\n\n\t//BIle:func\nkermeta.language.structure.Package cd_lbdExp240 = p_lbdExp255;\n\n\tjava.lang.Boolean idIfCond_1105 = false;\n\tidIfCond_1105 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp240, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\"));\n\n\tif( idIfCond_1105 ) {\n\n\t//BIft:eachOwnedElement\n\n\tkermeta.language.structure.ClassDefinition cd_ft256 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp240, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Tag> it_ft257 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft256.getOwnedTags()).iterator();\n\tjava.lang.Boolean idLoopCond_1106 = false;\n\twhile( !idLoopCond_1106 ) {\n\tidLoopCond_1106 = it_ft257.isOff();\n\tif ( idLoopCond_1106 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Tag o_lbdExp257 = it_ft257.next();\n\n\t//BIle:func\nkermeta.language.structure.Tag op_lbdExp256 = o_lbdExp257;\n\n\tjava.lang.Boolean idIfCond_1107 = false;\n\tidIfCond_1107 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1107 ) {\n\n\tjava.lang.Boolean idIfCond_1108 = false;\n\tidIfCond_1108 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1108 ) {\n\n\tjava.lang.Boolean idIfCond_1109 = false;\n\tidIfCond_1109 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1109 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp256.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1110 = false;\n\tidIfCond_1110 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1110 ) {\n\n\tjava.lang.Boolean idIfCond_1111 = false;\n\tidIfCond_1111 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1111 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Property> it_ft258 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Property>convertAsOrderedSet(cd_ft256.getOwnedAttribute()).iterator();\n\tjava.lang.Boolean idLoopCond_1112 = false;\n\twhile( !idLoopCond_1112 ) {\n\tidLoopCond_1112 = it_ft258.isOff();\n\tif ( idLoopCond_1112 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Property o_lbdExp258 = it_ft258.next();\n\n\t//BIle:func\nkermeta.language.structure.Property op_lbdExp256 = o_lbdExp258;\n\n\tjava.lang.Boolean idIfCond_1113 = false;\n\tidIfCond_1113 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1113 ) {\n\n\tjava.lang.Boolean idIfCond_1114 = false;\n\tidIfCond_1114 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1114 ) {\n\n\tjava.lang.Boolean idIfCond_1115 = false;\n\tidIfCond_1115 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1115 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp256.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1116 = false;\n\tidIfCond_1116 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1116 ) {\n\n\tjava.lang.Boolean idIfCond_1117 = false;\n\tidIfCond_1117 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1117 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Operation> it_ft259 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft256.getOwnedOperation()).iterator();\n\tjava.lang.Boolean idLoopCond_1118 = false;\n\twhile( !idLoopCond_1118 ) {\n\tidLoopCond_1118 = it_ft259.isOff();\n\tif ( idLoopCond_1118 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Operation o_lbdExp259 = it_ft259.next();\n\n\t//BIle:func\nkermeta.language.structure.Operation op_lbdExp256 = o_lbdExp259;\n\n\tjava.lang.Boolean idIfCond_1119 = false;\n\tidIfCond_1119 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1119 ) {\n\n\tjava.lang.Boolean idIfCond_1120 = false;\n\tidIfCond_1120 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1120 ) {\n\n\tjava.lang.Boolean idIfCond_1121 = false;\n\tidIfCond_1121 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1121 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp256.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1122 = false;\n\tidIfCond_1122 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1122 ) {\n\n\tjava.lang.Boolean idIfCond_1123 = false;\n\tidIfCond_1123 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1123 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.Constraint> it_ft260 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft256.getInv()).iterator();\n\tjava.lang.Boolean idLoopCond_1124 = false;\n\twhile( !idLoopCond_1124 ) {\n\tidLoopCond_1124 = it_ft260.isOff();\n\tif ( idLoopCond_1124 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.Constraint i_lbdExp260 = it_ft260.next();\n\n\t//BIle:func\nkermeta.language.structure.Constraint op_lbdExp256 = i_lbdExp260;\n\n\tjava.lang.Boolean idIfCond_1125 = false;\n\tidIfCond_1125 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1125 ) {\n\n\tjava.lang.Boolean idIfCond_1126 = false;\n\tidIfCond_1126 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1126 ) {\n\n\tjava.lang.Boolean idIfCond_1127 = false;\n\tidIfCond_1127 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1127 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp256.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1128 = false;\n\tidIfCond_1128 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1128 ) {\n\n\tjava.lang.Boolean idIfCond_1129 = false;\n\tidIfCond_1129 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1129 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\t//BIft:each\n\n\t\n{\n\n\tkermeta.standard.Iterator<kermeta.language.structure.TypeVariable> it_ft261 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.<kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft256.getTypeParameter()).iterator();\n\tjava.lang.Boolean idLoopCond_1130 = false;\n\twhile( !idLoopCond_1130 ) {\n\tidLoopCond_1130 = it_ft261.isOff();\n\tif ( idLoopCond_1130 ) {\n\t} else {\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable t_lbdExp261 = it_ft261.next();\n\n\t//BIle:func\nkermeta.language.structure.TypeVariable op_lbdExp256 = t_lbdExp261;\n\n\tjava.lang.Boolean idIfCond_1131 = false;\n\tidIfCond_1131 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"));\n\n\tif( idIfCond_1131 ) {\n\n\tjava.lang.Boolean idIfCond_1132 = false;\n\tidIfCond_1132 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getName()));\n\n\tif( idIfCond_1132 ) {\n\n\tjava.lang.Boolean idIfCond_1133 = false;\n\tidIfCond_1133 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).getSuperOperation());\n\n\tif( idIfCond_1133 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = op_lbdExp256.createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n else {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Operation\"))).qualifiedName()), \" is an inherited method => compilation is not available by using this launcher ! =================\"));\n}\n\n}\n\n}\n else {\n\n\tjava.lang.Boolean idIfCond_1134 = false;\n\tidIfCond_1134 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"));\n\n\tif( idIfCond_1134 ) {\n\n\tjava.lang.Boolean idIfCond_1135 = false;\n\tidIfCond_1135 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getName()));\n\n\tif( idIfCond_1135 ) {\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"================= \", ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).qualifiedName()), \" =================\"));\n\n\tjava.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp256, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.Property\"))).getGetterBody().createBehaviorJava(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);\n}\n\n}\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n}\n\n//EIle:func\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n//EIft:eachOwnedElement\n\n//EIle:func\n\n}\n\t}\n}\n\n//EIft:each\n\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"\\nFinish\");\n'"
	 * @generated
	 */
	void main_compilingOnlyOperations(String modelInput, String traceInput,
			String output, CompilingMode mode, OrderedSet<String> operations);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model dataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\njava.lang.String result = null;\n\n\tjava.lang.Boolean idIfCond_1136 = false;\n\tidIfCond_1136 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(td)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\tif( idIfCond_1136 ) {\n\n\tkermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"kermeta.language.structure.ClassDefinition\")));\n\n\tresult = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(cd.getName(), \" \"), kermeta.standard.helper.BooleanWrapper.toString(cd.isValueType()));\n}\n\n\nreturn result;\n'"
	 * @generated
	 */
	String typeDefinitionToString(TypeDefinition td);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model qnDataType="kermeta.standard.JavaString"
	 *        annotation="kermeta documentation='/****************************************\052/'"
	 *        annotation="kermeta documentation='/********** METHODS FOR TESTING *********\052/'"
	 *        annotation="kermeta documentation='/****************************************\052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\nkermeta.language.structure.TypeDefinition result = null;\n\n\tkermeta.language.structure.TypeDefinition td = ((kermeta.language.structure.TypeDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition()));\n\n\tkermeta.language.structure.TypeDefinition td_tmp = this.getContext().getMu().getTypeDefinitionByQualifiedName(qn);\n\n\tjava.lang.Boolean idIfCond_1137 = false;\n\tidIfCond_1137 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(td_tmp));\n\n\tif( idIfCond_1137 ) {\n\n\ttd = td_tmp;\n}\n\n\n\tresult = td;\n\nreturn result;\n'"
	 * @generated
	 */
	TypeDefinition getTypeDefinitionByQualifiedName(String qn);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\tthis.main_mode(modelInput, \"\", kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, \"ecore\"), km2ecore.CompilingMode.getByName(\"behaviorJava\"), false);\n'"
	 * @generated
	 */
	void main(String modelInput);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model modelInputDataType="kermeta.standard.JavaString" traceInputDataType="kermeta.standard.JavaString" outputDataType="kermeta.standard.JavaString" splitEcoreDataType="kermeta.standard.JavaBoolean"
	 *        annotation="kermeta documentation='/**\n     * Last operation before running the transfo.\n     \052/'"
	 *        annotation="http://www.eclipse.org/emf/2002/GenModel body='\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(\"KermetaCompiler - Starting up of the Ecore generation for the model: \", modelInput));\n\n\tthis.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));\n\n\tthis.getContext().initialize(modelInput, traceInput);\n\n\tthis.getContext().setMode(mode);\n\n\tthis.getContext().getMu().applyPass1(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"KermetaCompiler - Pass 1 is finished\");\n\n\tjava.lang.Boolean idIfCond_1138 = false;\n\tidIfCond_1138 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(\"onlyEcore\"));\n\n\tif( idIfCond_1138 ) {\n\n\tthis.getContext().getMu().applyPass2(this.getContext());\n}\n\n\n\tjava.lang.Boolean idIfCond_1139 = false;\n\tidIfCond_1139 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(\"behaviorKmt\"));\n\n\tif( idIfCond_1139 ) {\n\n\t\nif (true)\n\tthrow new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getNotImplementedException())) );\n\n}\n\n\n\tjava.lang.Boolean idIfCond_1140 = false;\n\tidIfCond_1140 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(\"behaviorJava\"));\n\n\tif( idIfCond_1140 ) {\n\n\tthis.getContext().getMu().preprocess(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(\"KermetaCompiler - Pass 2 with the mode: \", this.getContext().getMode().getName()));\n\n\tthis.getContext().getMu().applyPass2BehaviorJava(this.getContext());\n\n\tthis.getContext().getMu().postprocess(this.getContext());\n}\n\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"KermetaCompiler - Pass 2 is finished\");\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Save the Ecore Model\");\n\n\tjava.lang.Boolean idIfCond_1141 = false;\n\tidIfCond_1141 = splitEcore;\n\n\tif( idIfCond_1141 ) {\n\n\tthis.saveSplitEcore(output);\n}\n else {\n\n\tthis.saveSingleEcore(output);\n}\n\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"The Ecore Model has been saved\");\n\n\tthis.getContext().getSimkModel().save(this.getContext());\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(\"Stats:\\n\\tconditional + loop: \", kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_condStack())), \"\\n\\tfunction type: \"), kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_ftSuffix())));\n\n\torg.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(\"Finish\");\n'"
	 * @generated
	 */
	void main_mode(String modelInput, String traceInput, String output,
			CompilingMode mode, Boolean splitEcore);

} // Main
