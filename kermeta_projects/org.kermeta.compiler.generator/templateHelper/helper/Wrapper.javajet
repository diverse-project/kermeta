<%@jet
	 package="org.kermeta.compiler.generator.templates"
	 imports="org.eclipse.emf.codegen.util.* org.eclipse.emf.codegen.ecore.genmodel.* fr.irisa.triskell.eclipse.ecore.* org.kermeta.compiler.generator.helper.model.* org.kermeta.simk.* fr.irisa.triskell.kermeta.language.structure.NamedElement"
	 class="Wrapper"
	 version="$Id: Wrapper.javajet,v 1.5 2008-08-27 16:23:27 cfaucher Exp $" %>
<%SMContext smContext = (SMContext) argument;%>

<%SMClass wrapperClass = smContext.getSMClass();%>

package <%=smContext.getQualifiedNameFinalPackage()%>;


/**
 *
 * @generated
 */
public class <%=wrapperClass.getName()%> {

	<% for(StaticMethod helperMethod : smContext.getStaticMethods()) { %>
	
	<% String typeParameters = "<G>";%>
	
	/**
	 *
	 * @generated
	 */
	public static <%=typeParameters%> <%=helperMethod.getSMReturn().getType()%> <%=helperMethod.getName()%>(
		<% int i=0;
			for(SMParameter param : helperMethod.getSMParameters()) {
				if(i==1) {%>, <%} else {i=1;}%>
			<%=param.getType()%> <%=param.getName()%>
		<% } %>
	) {
		<%=helperMethod.getBody()%>
	}
	<% } %>
	
	
	<% if( wrapperClass.getName().equals("RealWrapper") ) { %>
	public static Boolean equals(Double real, Integer other) {
		return org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(real, other);
	}

	public static Integer compareTo(Double real, Integer other) {
		return org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(real, other);
	}
	<% } %>

}
