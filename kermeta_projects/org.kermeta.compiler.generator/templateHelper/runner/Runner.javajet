<%@jet
	 package="org.kermeta.compiler.generator.templates"
	 imports="java.util.* org.eclipse.emf.ecore.* org.eclipse.emf.codegen.util.* org.eclipse.emf.ecore.util.* org.eclipse.emf.codegen.ecore.genmodel.* fr.irisa.triskell.eclipse.ecore.* org.kermeta.simk.*"
	 class="Runner"
	 version="$Id: Runner.javajet,v 1.8 2008-08-27 08:02:26 cfaucher Exp $" %>
<%StaticMethod sm = (StaticMethod) argument;%>

/* $Id: Runner.javajet,v 1.8 2008-08-27 08:02:26 cfaucher Exp $
 * This file has been generated by the compiler of Kermeta (http://www.kermeta.org)
 */

package <%=sm.getSMContext().getQualifiedNameFinalPackage()%>;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl;
import org.kermeta.compil.runtime.ExecutionContext;
import org.kermeta.compil.runtime.helper.persistence.PersistenceMapping;

/**
 * A Stub of a Java Application Runner for a Kermeta runnable method
 *
 * @generated
 */
public class <%=sm.getSMContext().getSMClass().getName()%> {

	public static void main(String [] args) {
	
		ExtensibleURIConverterImpl.URI_MAP.put(
				URI.createURI("platform:/resource/"),
				URI.createURI("file:/C:/eclipse3.3.2/runtime-KermetaCompiler/")
			);
		
		PersistenceMapping.initialize("platform:/resource/org.kermeta.test1.compiled/config/kermeta.kruntimeconfiguration");
		
		//Initialize the reflection
		ExecutionContext.getInstance().lazyInitialize();
		
		<%=sm.getBody()%>
		
		System.out.println("end of the execution of the method: <%=sm.getName()%>");
	}

}
