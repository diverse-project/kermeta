/* $Id: ClassTest.kmt,v 1.2 2008-07-11 10:16:52 ftanguy Exp $ 
 * Creation : July 10, 2008
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            paco
 */
@mainClass "kermeta::compiler::test::ClassTest"
@mainOperation "main"


package kermeta::compiler::test;


require kermeta
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/pass2/CreateBehavior.kmt"

using kermeta::kunit
using kermeta::language::structure
using km2ecore
using kermeta::standard
using kermeta::exceptions

class ClassTest inherits TestCase {

	operation main() is do
		var runner : TestRunner init TestRunner.new
		runner.run(ClassTest)
		runner.printTestResult
	end

	reference r : Class

	reference context : KM2EcoreContext
	
	method setUp() is do
		context := KM2EcoreContext.new
		do
			context.initialize(void, void)
		rescue (e : Exception)
		end
	end

	operation testValueTypeInteger() is do
		var s : String init Integer.createBehaviorJava(context)
		self.assert(s == "java.lang.Integer")
	end
	
	operation testValueTypeString() is do
		var s : String init String.createBehaviorJava(context)
		self.assert(s == "java.lang.String")
	end
	
	operation testValueTypeBoolean() is do
		var s : String init Boolean.createBehaviorJava(context)
		self.assert(s == "java.lang.Boolean")
	end
	
	operation testCollectionOfValueType() is do
		var c : OrderedSet<Integer> init OrderedSet<Integer>.new
		var s : String init c.getMetaClass.createBehaviorJava(context)
		stdio.writeln( s )
		self.assert(s == "kermeta.standard.OrderedSet<java.lang.Integer>")
	end	

	operation testCollectionOfNonValueType() is do
		var c : Sequence<ClassDefinition> init Sequence<ClassDefinition>.new
		var s : String init c.getMetaClass.createBehaviorJava(context)
		stdio.writeln( s )
		self.assert(s == "kermeta.standard.Sequence<kermeta.language.structure.ClassDefinition>")
	end
}