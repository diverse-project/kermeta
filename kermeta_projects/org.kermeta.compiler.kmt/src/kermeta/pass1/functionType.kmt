/* $Id: functionType.kmt,v 1.1 2008-07-23 08:22:14 cfaucher Exp $
 * Creation date: January 21, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 *			Francois Tanguy <ftanguy@irisa.fr>
 */


package kermeta::language::structure;


require kermeta
require "http://www.eclipse.org/emf/2002/Ecore"
require "CreateEcoreModelElement.kmt"
require "../common/TraceStructure.kmt"
require "../helper/KM2EcoreHelper.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/KM2EcoreContext.kmt"

using ecore
using km2ecore
using km2ecore::helper::kermeta

aspect class Object {
	operation applyPass1(context : KM2EcoreContext) is do
	end
}

aspect class ModelingUnit {
	method applyPass1(context : KM2EcoreContext) is do
		// Creating the associated ecore package
		var ecoreAnnotation : EAnnotation init self.createEcoreModelElement(context)
		// Setting the ecore proxy
		self.ecoreModelElement := ecoreAnnotation
		// Compile the owned elements
		
	   		
			self.applyPass1(context)
			
		
		
		// Getting the ecore packages
		self.packages.each{p|
			self.ecorePackages.add( p.ecoreModelElement )
		}
	end
}

aspect class Require {
	method applyPass1(context : KM2EcoreContext) is do
		self.createEcoreModelElement(context)
	end
}


	
	