/* $Id: PrettyPrinterHelper.kmt,v 1.11 2008-08-07 14:59:01 cfaucher Exp $
 * Creation date: February 27, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 */

package km2ecore::helper::kermeta;

require kermeta
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/KM2EcoreContext.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/helper/java/JavaHelper.kmt"

using kermeta::language::structure
using kermeta::language::behavior
using kermeta::standard
using km2ecore
using km2ecore::helper::java

/**
 * Class containing some helpers dedicated to the Kermeta compiler
 */
class CompilerHelperJava {

	operation ppCRSeparatedNode(expressions : OrderedSet<Expression>, context : KM2EcoreContext) : String is do
		result := ""
		expressions.each{e |
			result := result + e.createBehaviorJava(context)
		}
	end
	
	/**
	 * Give the pp string corresponding to the CreateFactory in EMF-like of a type
	 * @deprecated
	 */
	operation ppEmfLikeCreateFactory(localType : String) : String is do
		result := ""
		
		var localType2 : String init localType.replace(".", "%")

		var name_set : OrderedSet<String> init localType2.split("%")
			
		var allPackages_label : String init localType.substring(0, localType.size()-name_set.elementAt(name_set.size()-1).size())
			
		if name_set.size()>=2 then
			result := " = " + allPackages_label + name_set.elementAt(name_set.size-2).capName() +"Factory.eINSTANCE.create" + name_set.elementAt(name_set.size()-1) + "()"
		else
			result := " = " + "Factory.eINSTANCE.create" + localType2 + "()"
		end
	end
	
	/**
	 *
	 */
	operation ppTypeFromMultiplicityElement(elem : MultiplicityElement, context : KM2EcoreContext) : String is do
		result := ""
		
		/*if elem.container.isInstanceOf(TypeLiteral) and elem.container.container.isInstanceOf(CallExpression) then
			result := result + "ClassCallExpression"
		else*/
		
			if elem.upper != 1 then
				if elem.isOrdered then
					if elem.isUnique then
						result := result + "kermeta.standard.OrderedSet"
					else
						result := result + "kermeta.standard.Sequence"
					end
				else
					if elem.isUnique then
						result := result + "kermeta.standard.Set"
					else
						result := result + "kermeta.standard.Bag"
					end
				end
				result := result + "<" + elem.type.createBehaviorJava(context) + ">"
			else
				result := result + elem.type.createBehaviorJava(context)
			end
		
		//end
		
	end
	
	/**
	 * This helper is used for the pretty printing of the parameters in a CallFeature
	 */
	operation ppComaSeparatedNodes(expressions : Set<Expression>, context : KM2EcoreContext) : String is do
		result := ""

		var i : Integer init 0
		expressions.each{ e |		
			if i==1 then
				result := result + ", "
			else
				i := 1
			end
			
			var tmp : String init e.createBehaviorJava(context)
			
			if (not context.current_valueType.isVoid()) and (tmp == "this") then
				tmp := "self"
			end
			
			if (e.staticType.getTypeQName == "kermeta::language::structure::Class") or (e.staticType.getTypeQName == "kermeta::language::structure::Type") then
				tmp := "org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\"" + tmp + "\")"
			end
			
			result := result + tmp
		}
	end
}
