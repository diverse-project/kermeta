/* $Id: ClassDefinitionHelper.kmt,v 1.1 2008-05-19 21:52:28 cfaucher Exp $
 * Creation date: May 16, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 */

package kermeta::language::structure;


require kermeta
using kermeta::standard

aspect class ClassDefinition {
	operation allSuperTypes() : Set<Type> is do
	 
		var allSuperClasses : Set<Type> init Set<Type>.new
        var superClasses : Set<Type> init self.superType
        from  not superClasses.isEmpty
        until superClasses.isEmpty
        loop
            allSuperClasses.addAll(superClasses)
            var temp : Set<Type> init Set<Type>.new
             superClasses.each{ s |
             	if s.isInstanceOf(ParameterizedType) and s.asType(ParameterizedType).typeDefinition.isInstanceOf(ClassDefinition) then
                	temp.addAll(s.asType(ParameterizedType).typeDefinition.asType(ClassDefinition).superType)
                end
             }
             superClasses := Set<Type>.new
             superClasses.addAll(temp)
        end
        
        result := allSuperClasses
	end
	
	// Check if the ClassDefinition is a subType of ValueType => we have to consider as a EDataType, i.e.: an EAttribute
	operation isValueType() : Boolean is do
		result := false

		var res : Type init self.allSuperTypes.detect{ st |
			st.isInstanceOf(ParameterizedType) and st.asType(ParameterizedType).typeDefinition.qualifiedName == "kermeta::standard::ValueType"
		}
		
		if not res.isVoid() then
			result := true
		end
			
	end
}