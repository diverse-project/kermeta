/* $Id: OperationHelper.kmt,v 1.3 2008-07-01 08:56:13 cfaucher Exp $
 * Creation date: May 20, 2008
 * License:
 * Copyright:
 * Authors:
 */


package kermeta::language::structure;

require kermeta
require "KermetaHelper.kmt"

using kermeta::standard

aspect class Operation {
	operation isFunctionType() : Boolean is do 
		result := false
		
		if not self.getFunctionTypeParameter().isVoid() and self.getFunctionTypeParameter().size>0 then
			result := true
		end
	end
	
	operation getFunctionTypeParameter() : Sequence<Parameter> is do
		result := void
		var ft_parameters : Sequence<Parameter> init self.ownedParameter.select{ p |
			p.type.isInstanceOf(FunctionType)
		}
		result := ft_parameters
	end
	
	
	/**
	 * Helper method to determine if an operation has to be compiled
	 */
	operation mustBeCompiled() : Boolean is do
		var res : Boolean init true
		
		var cd_container : ClassDefinition init self.container.asType(ClassDefinition)
		
		// This test is there, because some methods may be compiled as Static methods via Simk like the method: times on Integer
		if cd_container.isValueType() then
			if cd_container.getEMFInstanceClassName() != "" then
				res := false
			end
		end
		if self.container.asType(ClassDefinition).getEMFInstanceClassName!="" or self.getEMFStatic()!="" /*or self.getEMFRenameAs()!=""*/ then
			res := false
			var doSimk : Boolean init true
		end
		
		//stdio.writeln("Operation.applyPass2() - self: " + self.name + " - self.ecoreModelElement: " + self.ecoreModelElement.toString() + " - res: " + res.toString())
		
		result := res
	end
}