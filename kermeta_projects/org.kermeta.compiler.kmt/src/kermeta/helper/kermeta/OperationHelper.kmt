/* $Id: OperationHelper.kmt,v 1.6 2008-07-29 09:59:53 cfaucher Exp $
 * Creation date: May 20, 2008
 * License:
 * Copyright:
 * Authors:
 */


package kermeta::language::structure;

require kermeta
require "KermetaHelper.kmt"

using kermeta::standard

aspect class Operation {

	/**
	 * Return true if the given operation is a FunctionType
	 */
	operation isFunctionType() : Boolean is do 
		result := false
		
		if not self.getFunctionTypeParameter().isVoid() and self.getFunctionTypeParameter().size>0 then
			result := true
		end
	end
	
	operation getFunctionTypeParameter() : Sequence<Parameter> is do
		result := void
		var ft_parameters : Sequence<Parameter> init self.ownedParameter.select{ p |
			p.type.isInstanceOf(FunctionType)
		}
		result := ft_parameters
	end
	
	
	/**
	 * Helper method to determine if an operation has to be compiled
	 */
	operation mustBeCompiled() : Boolean is do
		result := true
		
		var cd_container : ClassDefinition init self.container.asType(ClassDefinition)
		
		// This test is there, because some methods may be compiled as Static methods via Simk like the method: times on Integer
		if cd_container.isValueType() then
			if cd_container.getEMFInstanceClassName() != "" then
				result := false
			end
		end
		
	end
	
	/**
	 * Unused for the moment
	 */
	operation mustBeDuplicated() : Boolean is do
		result := false
		if self.type.isValueType() or hasAValueTypedParameter() then
			result := true
		end
	end
	
	/**
	 * The given operation has at least a parameter having ValueType as type
	 */
	operation hasAValueTypedParameter() : Boolean is do
		result := false
		
		var p : Parameter init self.ownedParameter.detect{ p |
			p.type.isValueType()
		}
		
		if not p.isVoid() then
		 result := true
		end
	end

}