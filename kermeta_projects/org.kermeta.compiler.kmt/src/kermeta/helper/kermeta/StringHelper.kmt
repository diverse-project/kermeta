/* $Id: StringHelper.kmt,v 1.4 2008-07-10 11:34:32 cfaucher Exp $
 * Creation date: February 27, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 */

package kermeta::standard;

require kermeta

using kermeta::standard
using kermeta::utils

aspect class String {
	// Return a new string with the first letter in upper case of the given string
	operation capName() : String is do
		result := self.substring(0,1).toUpperCase + self.substring(1, self.size())
	end
	
	operation getPropertyInfos() : Hashtable<String, String> is do
		
		var set_infos : OrderedSet<String> init OrderedSet<String>.new()
		var map_infos : Hashtable<String, String> init Hashtable<String, String>.new()
		
		set_infos := self.split(" ")
		
		set_infos.each{ i |
			var tmp_set_infos : OrderedSet<String> init i.split("=")
			if tmp_set_infos.size()>=2 then
				if not tmp_set_infos.elementAt(0).isVoid() then
					if (not tmp_set_infos.elementAt(1).isVoid()) and (tmp_set_infos.elementAt(1)!="") then
						//stdio.writeln("tmp_set_infos.elementAt(0) " + tmp_set_infos.elementAt(0) + " " + tmp_set_infos.elementAt(1))
						map_infos.put(tmp_set_infos.elementAt(0), tmp_set_infos.elementAt(1))
					end
				end
			end
		}
		
		result := map_infos
	end
}