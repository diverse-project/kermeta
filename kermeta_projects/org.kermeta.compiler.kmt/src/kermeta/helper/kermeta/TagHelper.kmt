/* $Id: TagHelper.kmt,v 1.12 2008-08-07 14:59:02 cfaucher Exp $
 * Creation date: April 07, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 */


package kermeta::language::structure;


require kermeta

using kermeta::standard

aspect class Object {

	/**
	 * Get the values for the tags having as key: <key : String>
	 */
	operation getTagValues( key : String ) : OrderedSet<String> is do
		
		var value_list : OrderedSet<String> init OrderedSet<String>.new
		
		self.ownedTags.each{ t |
			if t.name == key then
				value_list.add(t.~value)
			end
		}
		result := value_list
	end
	
	/**
	 * Get the values for the tags having as key: <key : String>
	 */
	operation getUniqueTagValue( key : String ) : String is do
		result := ""
		var value_list : OrderedSet<String> init self.getTagValues(key)
		if (not value_list.isVoid()) and (value_list.size()>=1) then
			result := value_list.one()
		end
	end
	
	/**
	 * Get the instanceClassName
	 */
	operation getEMFInstanceClassName() : String is do
		result := getUniqueTagValue("EMF_instanceClassName")
	end
	
	/**
	 * Get the EDataType_instanceClassName
	 */
	operation getEMFEDataTypeInstanceClassName() : String is do
		result := getUniqueTagValue("ecore.EDataType_instanceClassName")
	end
	
	/**
	 * Get the EMF_needProperty
	 */
	operation getEMFNeedProperty() : OrderedSet<String> is do
		result := getTagValues("EMF_needProperty")
	end
	
	/**
	 * Get the compiledJavaExtern call for replacing the current one
	 */
	operation getCompiledJavaExtern() : String is do
		result := getUniqueTagValue("compiledJavaExtern")
	end
	
	/**
	 * Get the Wrapprings of ValueType's ReturnType for tackle the  eplacing the current one
	 */
	operation getWrapperValueTypeReturnType() : String is do
		result := getUniqueTagValue("WrapperValueTypeReturnType")
	end
	
	/**
	 * Get the Wrapprings of ValueType's SelfExpression for tackle the  eplacing the current one
	 */
	operation getWrapperValueTypeSelfExpression() : String is do
		result := getUniqueTagValue("WrapperValueTypeSelfExpression")
	end
	
	/**
	 * Get the EDataType_isSerializable
	 */
	operation getEMFEDataTypeIsSerializable() : Boolean is do
		result := interpretBooleanTag("ecore.EDataType_isSerializable")
	end
	
	/**
	 * Get the isTransient
	 */
	operation getEMFIsTransient() : Boolean is do
		result := interpretBooleanTag("ecore.isTransient")
	end
	
	/**
	 * Get the deprecated tag
	 * Specific method for detecting the deprecated model elements
	 */
	operation getDeprecated() : String is do
		result := getUniqueTagValue("deprecated")
	end
	
	operation interpretBooleanTag( str_tag : String ) : Boolean is do
		result := false
		
		if getUniqueTagValue(str_tag) != "" then
			if getUniqueTagValue(str_tag)=="true" then
				result := true
			end
		end
	end
}

aspect class GenericTypeDefinition {

}

aspect class MultiplicityElement {
	
	/**
	 * Get the EMFRenameAs reference of an Operation
	 */
	operation getEMFRenameAs() : String is do
		result := getUniqueTagValue("EMF_renameAs")
	end

}

/*
enumeration KermetaTagSource {
	EMF_renameAs;
	deprecated;
	ecore.isTransient;
	ecore.EDataType_isSerializable;
	EMF_instanceClassName;
	ecore.EDataType_instanceClassName;
	EMF_needProperty;
	compiledJavaExtern;
}
*/