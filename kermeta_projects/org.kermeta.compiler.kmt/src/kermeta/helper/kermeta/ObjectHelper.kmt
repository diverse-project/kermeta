/* $Id: ObjectHelper.kmt,v 1.9 2008-07-29 09:59:53 cfaucher Exp $
 * Creation date: January 29, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Francois Tanguy <ftanguy@irisa.fr>
 */


package kermeta::language::structure;

require kermeta

require "ClassHelper.kmt"

using kermeta::standard

aspect class Object {

	operation getPropertyValue(propertyName : String) : Property is do
		var classDefinition : ClassDefinition init self.getMetaClass().typeDefinition.asType(ClassDefinition)
		result := (classDefinition.allAttribute.detect{ p | p.asType(Property).name == propertyName }).asType(Property)
	end
	
	//Navigate the containment path until the right type has been found
	operation getContainerAsType(type : Type) : Object is do
		result := void
		var obj : Object init self

		from var i : Integer init 0
        until i==1
        loop
            if not obj.container.isInstanceOf(type) then
            	if not obj.container.isVoid() then
            		obj := obj.container
            	else
            		i := 1
            	end
            else
            	i := 1
            	result := obj.container
			end
        end
	end
	
	/** Never used for the moment */
	operation getAllContainedElementAsType(/*type : Type*/) : Set<Object> is do
		result := Set<Object>.new
		/*self.getMetaClass().allAttributes().each{ p |
			stdio.writeln("self.getMetaClass().get(p): " + self.getMetaClass().get(p).toString())
			stdio.writeln("self.getMetaClass().getPropertyValue(p.name): " + self.getMetaClass().getPropertyValue(p.name).toString())
		}*/
		
		self.getMetaClass().allAttributes.each{ attr |
			//if then
			stdio.writeln(attr.name)
		}
	end
	
}