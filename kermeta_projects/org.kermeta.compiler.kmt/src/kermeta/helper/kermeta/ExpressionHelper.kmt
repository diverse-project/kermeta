/* $Id: ExpressionHelper.kmt,v 1.38 2009-02-17 12:23:38 cfaucher Exp $
 * Creation date: Jul 25, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors:
 * 			Cyril Faucher <cfaucher@irisa.fr>
 */

package kermeta::language::behavior;

require kermeta
require "KermetaHelper.kmt"

using kermeta::language::structure
using kermeta::standard
using kermeta::utils
using km2ecore::helper::kermeta

aspect class Expression {
	
	attribute beforeLambdaExpressionResult : String [0..1]
	
	method mustBeAssigned() : Boolean is do
		result := false
		
		if self.isInstanceOf(CallVariable)
			or self.isInstanceOf(Literal)
			or self.isInstanceOf(SelfExpression)
			or self.isInstanceOf(CallResult)
			or self.isInstanceOf(VoidType)
			/*return pack: or self.isInstanceOf(Assignment)*/ then
			result := true
		end
		
		if self.isFunctionTypeVariable() then
			result := false
		end
		
	end
	
	operation isFunctionTypeVariable() : Boolean is do
		result := false
		
		if self.isInstanceOf(CallVariable) then
			if self.asType(CallVariable).isFunctionTypeVariable() then
				result := true
			end
		end
	end
	
	/**
	 * Check if the current element is at the end of an Expression, if so a ";" is added
	 */
	operation endOfExpressionFixer() : String is do
		result := ""
		
		if not self.callsFunctionType() then
		
			// The cases with Operation, Property and Constraint occur when an expression is not declared in a block: single expression
			if self.container.isInstanceOf(Conditional)
					or self.container.isInstanceOf(Loop)
					or self.container.isInstanceOf(Block)
					or self.container.isInstanceOf(Rescue)
					or self.container.isInstanceOf(Assignment)
					or self.container.isInstanceOf(VariableDecl)
					or self.container.isInstanceOf(Operation)
					or self.container.isInstanceOf(Property)
					or self.container.isInstanceOf(Constraint) then
				if self.container.isInstanceOf(Assignment) then
					var assignment : Assignment init self.container.asType(Assignment)
					
					if assignment.target == self then
						result := ""
					else
						if assignment.target.isCallFeatureAsStaticProperty() then
							result := ""
						else
							// Case: self.visitVariable(t ?= visitable)
							if assignment.container.isInstanceOf(CallFeature) then
								result := ""
							else
								result := self.container.asType(Assignment).valueTypeCastSuffix + self.container.asType(Assignment).cacheCastSuffix + ";"
							end
						end
					end
				else
					result := ";"
				end
				
			end
		
		end
	end
	
}
