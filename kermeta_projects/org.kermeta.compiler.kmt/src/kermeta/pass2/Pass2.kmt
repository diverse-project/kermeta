/* $Id: Pass2.kmt,v 1.10 2008-04-02 08:39:30 cfaucher Exp $
 * Creation date: January 21, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 *			Francois Tanguy <ftanguy@irisa.fr>
 */


/* 
 *
 *	Because the type setting and the behavior's creation (kmt or java style) can be done at the same time, we can only visit once the model.
 *	So dependending on the visited object, we apply some specific actions and still visiting the contained elements.
 *
 */


package kermeta::language;

require kermeta
require "SetLinks.kmt"
require "CreateBehavior.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/common/containment_traversable.kmt"
//require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/common/ContainmentBasedActionPerformer_Kermeta.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/KM2EcoreContext.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/pass2/Pass2.kmt"


using km2ecore

package structure {
	
	aspect class Object {
		operation applyPass2(context : KM2EcoreContext) is do
			// Compile the owned elements
			self.eachOwnedElement{ p | p.applyPass2(context) }
		end
		
		operation applyPass2BehaviorJava(context : KM2EcoreContext) is do
			// Compile the owned elements
			self.eachOwnedElement{ p | p.applyPass2BehaviorJava(context) }
		end
		
		operation applyPass2BehaviorKmt(context : KM2EcoreContext) is do
			// TODO
		end
	}
	
	aspect class ClassDefinition {
		method applyPass2(context : KM2EcoreContext) is do
			self.setLinks() 
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			//stdio.writeln("Pass2 ClassDefinition : " + self.name)
			self.setLinks() 
			super(context)
		end
	}
	
	aspect class Property {
		method applyPass2(context : KM2EcoreContext) is do
			self.setLinks()
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			self.setLinks()
			super(context)
			self.createBehaviorJava(context)
		end
	}
	
	aspect class Operation {
		method applyPass2(context : KM2EcoreContext) is do
			self.setLinks()
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			//stdio.writeln("Pass2 ClassDefinition")
			self.setLinks()
			super(context)
			self.createBehaviorJava(context)
		end
	}
	
	aspect class Parameter {
		method applyPass2(context : KM2EcoreContext) is do
			self.setLinks()
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			//stdio.writeln("Pass2 ClassDefinition")
			self.setLinks()
			super(context)
		end
	}
	
}
/*
package behavior {

	aspect class Expression {
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			self.createBehaviorJava(context)
			super(context)
		end
	}

}*/
