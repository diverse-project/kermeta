/* $Id: Pass2.kmt,v 1.22 2008-06-10 08:24:59 cfaucher Exp $
 * Creation date: January 21, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 *			Francois Tanguy <ftanguy@irisa.fr>
 */


/* 
 *
 *	Because the type setting and the behavior's creation (kmt or java style) can be done at the same time, we can only visit once the model.
 *	So dependending on the visited object, we apply some specific actions and still visiting the contained elements.
 *
 */


package kermeta::language;

require kermeta
require "SetLinks.kmt"
require "CreateBehavior.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/common/ContainmentTraversable.kmt"
require "platform:/resource/org.kermeta.compiler.kmt/src/kermeta/KM2EcoreContext.kmt"

using km2ecore

package structure {
	
	aspect class Object {
		operation applyPass2(context : KM2EcoreContext) is do
			// Compile the owned elements
			self.eachOwnedElement{ p |
				if p.getDeprecated() == "" then
					p.applyPass2(context)
				end
			}
		end
		
		operation applyPass2BehaviorJava(context : KM2EcoreContext) is do
			// Compile the owned elements
			self.eachOwnedElement{ p | p.applyPass2BehaviorJava(context) }
		end
		
		operation applyPass2BehaviorKmt(context : KM2EcoreContext) is do
			// TODO
		end
	}
	
	aspect class ClassDefinition {
		method applyPass2(context : KM2EcoreContext) is do			
			self.setLinks(context) 
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			self.setLinks(context) 
			super(context)
		end
	}
	
	aspect class Class {
		method applyPass2(context : KM2EcoreContext) is do
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			super(context)
		end
	}
	
	aspect class Property {
		method applyPass2(context : KM2EcoreContext) is do
			self.setLinks(context)
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			self.setLinks(context)
			super(context)
			self.createBehaviorJava(context)
		end
	}
	
	aspect class Operation {
		method applyPass2(context : KM2EcoreContext) is do
			if mustBeCompiled() then
				self.setLinks(context)
				super(context)
			end
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			if mustBeCompiled() then
				self.setLinks(context)
				super(context)
				self.createBehaviorJava(context)
			end
		end
	}
	
	aspect class Parameter {
		method applyPass2(context : KM2EcoreContext) is do
			self.setLinks(context)
			super(context)
		end
		
		method applyPass2BehaviorJava(context : KM2EcoreContext) is do
			self.setLinks(context)
			super(context)
		end
	}
	
}
