/* $Id: SetType.kmt,v 1.3 2008-02-01 15:23:27 ftanguy Exp $
 * Creation date: January 21, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 *			Fran√ßois Tanguy <ftanguy@irisa.fr>
 */

package kermeta::language::structure;

 
require kermeta
require "../common/trace_structure.kmt"
require "http://www.eclipse.org/emf/2002/Ecore"
require "../helper/KM2EcoreHelper.kmt"

using ecore
using km2ecore::helper::kermeta

aspect class ClassDefinition {
	operation setType() is do
		self.superType.each{ t |
			if ( t.isInstanceOf(Class) ) then
				var classDefinition : ClassDefinition init TypeHelper.new.getClassDefinition(t.asType(Class))
				self.ecoreModelElement.eSuperTypes.add( classDefinition.ecoreModelElement )
			end
		}
	end
}

aspect class TypedElement {
	operation setType() is do
		if ( self.type.isInstanceOf(Class) ) then
			var c : Class init self.type.asType(Class)
			var classDefinition : ClassDefinition init TypeHelper.new.getClassDefinition(c)
			var genericType : EGenericType init EGenericType.new
			genericType.eClassifier  := classDefinition.getEcoreModelElement()
			self.ecoreModelElement.eGenericType := genericType
			c.typeParamBinding.each{ tpb |
				var typeArgument : EGenericType init EGenericType.new
				var cd : ClassDefinition init TypeHelper.new.getClassDefinition( tpb.type.asType(Class) )
				typeArgument.eClassifier := cd.getEcoreModelElement()
				self.ecoreModelElement.eGenericType.eTypeArguments.add(typeArgument)
			}
		else
			if ( self.type.isInstanceOf(PrimitiveType) ) then
				self.ecoreModelElement.eType := self.type.asType(PrimitiveType).ecoreModelElement			
			end
		end
	end
}
