/* $Id: printWithAspect.kmt,v 1.3 2008-01-29 16:15:49 ftanguy Exp $
 * Creation date: January 24, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 */

@mainClass "kermeta::compiler::Main" 
@mainOperation "main"

package kermeta::compiler;

require kermeta
require "http://www.eclipse.org/emf/2002/Ecore"
require "trace_structure.kmt"
require "print_structure.kmt"

using ecore
using kermeta::persistence
//using kermeta::standard
using kermeta::language::behavior
using kermeta::language::structure


class Main
{

    operation main() : Void is do		
		stdio.writeln("***--*** Load the Km model and launch the printing ***--***")
		
		var epack : EPackage init loadEcoreModel
		
		loadKmModel.packages.each{ p |
			p.asType(Package).ecoreModelElement := epack
			p.asType(Package).print(0)
		}
		
		stdio.writeln("***--*** Finish ***--***")
    end

	operation loadKmModel() : kermeta::language::structure::ModelingUnit is do             
	   		var repository : EMFRepository init EMFRepository.new             
	   		var resource : Resource init repository.getResource("platform:/resource/org.kermeta.compiler.kmt/models/Attempt01.km")
	       	resource.load()
	      	
	      	// result is a ModelingUnit
	        result ?= resource.instances.one
   	end
   	
   	operation loadEcoreModel() : EPackage is do             
	   		var repository : EMFRepository init EMFRepository.new             
	   		var resource : Resource init repository.getResource("platform:/resource/org.kermeta.compiler.kmt/models/Attempt01.ecore")
	       	resource.load()
	      	
	      	// result is a EPackage
	        result ?= resource.instances.detect{ i | i.isInstanceOf(EPackage) }
   	end
   	
   	operation saveEcoreModel(epack : EPackage) : Void is do             
	   		var repository : EMFRepository init EMFRepository.new             
	   		var resource : Resource init repository.createResource("platform:/resource/org.kermeta.compiler.kmt/models/Attempt01_compiled.ecore", "http://www.eclipse.org/emf/2002/Ecore")
	       	resource.add(epack)
	       	resource.save()
   	end
}