/* $Id: KM2EcoreContext.kmt,v 1.7 2008-04-17 15:23:38 ftanguy Exp $
 * Creation date: February 14, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Francois Tanguy <ftanguy@irisa.fr>
 *			Cyril Faucher <cfaucher@irisa.fr>
 */

@mainClass "kermeta::km2ecore::KMEcoreContext"
@mainOperation "main"

package km2ecore;


require kermeta
require "platform:/plugin/fr.irisa.triskell.kermeta/lib/ecore.kmt"
require "common/keyword_list.kmt"
require "common/type_mapping.kmt"
require "helper/kermeta/KermetaHelper.kmt"
require "http://www.kermeta.org/Traceability"

using kermeta::language
using kermeta::language::structure
using km2ecore::helper::kermeta
using traceability
using kermeta::persistence

class KM2EcoreContext
{
	/** modeling units source */
	reference mus : oset ModelingUnit [1..*]
	
	/** thee choosen compiling mode */
	attribute mode : CompilingMode [1..1]
	
	/** Unique instance of the JavaKeyWordList */
	reference javaKeyWordList : JavaKeyWordList [0..1]
	
	/** Unique instance of the JavaTypeMapping */
	reference javaTypeMapping : JavaTypeMapping [0..1]
	
	/**		The trace model dedicated to the km model used for the transformation.		*/
	reference traceModel : TraceModel[1..1]
	
	//attribute primitiveType_Type : PrimitiveType_Type
	
	operation initialize(modelInput : String, traceInput : String) : Void is do
		// Initializing the java keywords list.
		javaKeyWordList := JavaKeyWordList.new
		javaKeyWordList.initialize()
		// Initializing the java type mappings.
		javaTypeMapping := JavaTypeMapping.new
		javaTypeMapping.initialize()
		// Loading the km model and its possible trace model.
		var repository : EMFRepository init EMFRepository.new
		var modelResource : Resource init repository.getResource(modelInput)
	    mus.add( modelResource.instances.one.asType(ModelingUnit) )
	    var traceResource : Resource init repository.getResource(traceInput)
	    traceModel := traceResource.instances.one.asType(TraceModel)
	end
}

/** Enumeration representing the different compiling modes */
enumeration CompilingMode { onlyEcore; behaviorKmt; behaviorJava; }
