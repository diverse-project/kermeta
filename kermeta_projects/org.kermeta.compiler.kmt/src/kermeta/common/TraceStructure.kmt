/* $Id: TraceStructure.kmt,v 1.4 2008-06-26 12:49:57 cfaucher Exp $
 * Creation date: January 21, 2008
 * License: EPL
 * Copyright: IRISA / INRIA / Universite Rennes 1
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 *			Francois Tanguy <ftanguy@irisa.fr>
 */

/**
 * This Modeling Unit is used to define and store the traceability during the Km to Ecore process
 */
@usage "traceability"

package kermeta::language::structure;

require kermeta
require "http://www.eclipse.org/emf/2002/Ecore"

using kermeta::language::structure
using ecore

class Traceability<X> {
	
	reference ecoreModelElement : X
	operation getEcoreModelElement() : X is do
		result := ecoreModelElement
	end
	
}

aspect class ModelingUnit inherits Traceability<EAnnotation> {
	
	reference ecorePackages : EPackage[0..*]
	
	reference entryPoints : EAnnotation[0..*]
}

aspect class Package inherits Traceability<EPackage> {
}

aspect class PrimitiveType inherits Traceability<EDataType> {
	//reference ecoreDataType : EDataType[0..1]
}

aspect class Enumeration inherits Traceability<EEnum> {
}

aspect class EnumerationLiteral inherits Traceability<EEnumLiteral> {
}

aspect class ClassDefinition inherits Traceability<EClass> {
	reference ecoreDataType : EDataType[0..1]
}

aspect class Class inherits Traceability<EGenericType> {
}

/*aspect class TypeDefinition inherits Traceability<EClassifier> {
}*/

aspect class Operation inherits Traceability<EOperation> {
}

aspect class Parameter inherits Traceability<EParameter> {
}

aspect class Property inherits Traceability<EStructuralFeature> {
}

aspect class Constraint inherits Traceability<EAnnotation> {
}

aspect class ObjectTypeVariable inherits Traceability<ETypeParameter> {
}

aspect class FunctionType inherits Traceability<EAnnotation> {
}

aspect class Tag inherits Traceability<EAnnotation> {
}
