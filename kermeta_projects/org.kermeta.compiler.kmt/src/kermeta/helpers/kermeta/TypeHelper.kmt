/* $Id: TypeHelper.kmt,v 1.2 2008-01-28 17:13:17 ftanguy Exp $
 * Creation date: January 28, 2008
 * License:
 * Copyright:
 * Authors:
 */

package compiler::helper::kermeta;


require kermeta

using kermeta::language::structure
using kermeta::standard

class TypeHelper
{
	operation primitiveTypes() : Collection<String> is do
		result := Sequence<String>.new
		result.add("kermeta::standard::String")
		result.add("kermeta::standard::Integer")
		result.add("kermeta::standard::Boolean")	
	end

	operation isPrimitiveType(type : Type) : Boolean is do 
		result := type.isInstanceOf(PrimitiveType)
		if ( not result and type.isInstanceOf(Class) ) then
			var c : Class init type.asType(Class)
			var qualifiedName : String init c.typeDefinition.qualifiedName()
			result := primitiveTypes.contains(qualifiedName)
		end
	end
}