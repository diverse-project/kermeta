<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModelingUnit">
    <details key="require" value=""/>
    <details key="using" value="comptest2|kermeta::standard|kermeta::exceptions|kermeta::utils|kermeta::language::structure|kermeta::io|kermeta::ecore|kermeta|kermeta::interpreter|kermeta::persistence|kermeta::language|"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="mainClass" value="comptest2::Class2"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="mainOperation" value="testTimes2"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * The root package. See the other packages if you want to browse the classes of Kermeta api.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kermeta_packages.png&quot;/>&#xD;&#xA; */"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/3/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
      </eAnnotations>
    </eClassifiers>
    <eSubpackages name="standard" nsURI="http://www.kermeta.org/kermeta/standard"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Defines primitive types &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/primitive_types_view.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains types dedicated to dealing with java objects&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Defines Collection types &#xD;&#xA; * &lt;img src=&quot;./figures/collections_view.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Object" instanceClassName="kermeta.language.structure.Object">
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::language::structure::Object"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="deprecated" value="please use kermeta::language::structure::Object"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Collection" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Collection is the root abstract class for all kermeta collections&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="reject">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Sequence composed of elements of the Collection that&#xD;&#xA;&#x9; * do not validate the rejector function&#xD;&#xA;&#x9; * example :&#xD;&#xA;&#x9; * aCollection2 := aCollection.reject { e | &#xD;&#xA;     *     \/* put here a condition that returns true for elements that must  be exclude in the resulting Collection *\/&#xD;&#xA;     * }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; select;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
          <eParameters name="rejector" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all instances of element from the Collection, based on&#xD;&#xA;&#x9; * G.equals(Object) definition&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="count" eType="#/3/standard/Integer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the number of instances of element in the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Integer result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1612321]). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludes" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the Collection does not contain element&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = ! (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contains) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="one">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element from the Collection or void if the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = void;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*CallVariable*/ it. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; next;&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
        </eOperations>
        <eOperations name="containsAll" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if current Collection contains all elements of Collection elements&#xD;&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = true;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="sum">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sum the element if they are summable (ie implement '+' operator by inheriting of the class Summable)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9; res = null;&#xA;&#xA;&#x9;kermeta.standard.Summable tmp = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;/*CallVariable*/ o = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; one;&#xA;&#xA;&#x9;/*CallVariable*/ tmp = /*CallVariable*/ o;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = void;&#xA;&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ tmp. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1612445]);&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ res;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
        </eOperations>
        <eOperations name="contains" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = false;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least one&#xD;&#xA;&#x9; * instance of element, based on G.equals(elt : Object) definition&#xD;&#xA;&#x9; * Note: for checking whether a physical element is contained by the collection,&#xD;&#xA;&#x9; * make use of G.oid()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludesAll" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = true;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the Collection contains no element of Collection elements&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds an element in the Collection (default implementation)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Collection.add(this, /*CallVariable*/ element)&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="includes" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL API alignment, doeas the same as contains&#xD;&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contains;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Sequence built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all elements from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Collection.clear(this)&#xA;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isEmpty" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; empty;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL alignment API, does the same as empty&#xD;&#xA;&#x9; * See Collection&lt;G>.empty()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="isUnique" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the the collector function evaluates to a&#xD;&#xA;&#x9; * different value for each element of the Collection&#xD;&#xA;&#x9; * example :&#xD;&#xA;&#x9; * aCollection2 := aCollection.isUnique { e | \/* put here an expression that must be unique for all elements, for example e.name *\/ }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = true;&#xA;&#xA;&#x9;kermeta.standard.Sequence s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSequence();&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eTypeParameters name="T"/>
          <eParameters name="collector" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Collection::isUnique::T"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="any">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.EmptyCollection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*CallVariable*/ it. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; next;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element from the Collection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
        </eOperations>
        <eOperations name="empty" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="forAllCpl" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written #####################################&#xD;&#xA;&#x9; * => result := self.forAll{x | self.forAll {y | f(x,y)}}&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; forAll;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="f" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="existsCpl" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; exists;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written #####################################&#xD;&#xA;&#x9; * => result := self.exists{x | self.exists {y | f(x,y)}}&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="f" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="isNotEmpty" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = ! (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; empty) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL alignment API&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least&#xD;&#xA;&#x9; * one element &#xD;&#xA;&#x9; * See also Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="detect">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element of the Collection (usually the first) for which the detector function&#xD;&#xA;&#x9; * is not false&#xD;&#xA;&#x9; * Returns void if no elements is validated by the detector function&#xD;&#xA;&#x9; * example : &#xD;&#xA;&#x9; * anObject := aCollection.detect { e | \/* a condition *\/} // returns an element that fulfill the condition.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = void;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          <eParameters name="detector" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="iterator">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Iterator. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Collection.iterator(this, begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n)&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an Iterator on the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Iterator">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="addAll">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;/*Block3*/ /*CallVariable*/ elements. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1612836]);&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds all elements from the Collection elements in the current Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="includesAll" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL API alignment, does the same as containsAll&#xD;&#xA;&#x9; * See Collection&lt;G>.containsAll(Collection&lt;G>)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; containsAll;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="select">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Sequence composed of elements of the Collection that&#xD;&#xA;&#x9; * validate the selector function&#xD;&#xA;&#x9; * example :&#xD;&#xA;&#x9; * aCollection2 := aCollection.select { e | &#xD;&#xA;     *    \/* put here a condition that returns true for elements that must  be included in the resulting Collection *\/&#xD;&#xA;&#x9; * }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
          <eParameters name="selector" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="size" eType="#/3/standard/Integer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the number of elements in the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Integer result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Collection.size(this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new OrderedSet built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="forAll" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether no element of the Collection invalidates&#xD;&#xA;&#x9; * the condition specified by function func&#xD;&#xA;&#x9; * example : &#xD;&#xA;&#x9; * aBoolean := aCollection.forAll { e | \/* put here a condition *\/ } // return true if the condition is true for all elements in the collection.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;java.lang.Boolean test /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ test;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="func" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="exists" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;java.lang.Boolean test /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ test;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether at least one element of the Collection&#xD;&#xA;&#x9; * validates the condition specified by function func&#xD;&#xA;&#x9; * example :&#xD;&#xA;&#x9; * aBoolean := aCollection.exists { e | \/* a condition *\/} // returns true if at least one element fulfill the condition.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="func" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Boolean"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="each">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Runs function func on each element of the Collection&#xD;&#xA;&#x9; * example : &#xD;&#xA;&#x9; * aCollection.each { e | \/* do something with each element e of this collection *\/ }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;&#xA;}"/>
          </eAnnotations>
          <eParameters name="func" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::language::structure::Object"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="collect">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Sequence which content corresponds to the result&#xD;&#xA;&#x9; * of running the collector function for each element of the Collection&#xD;&#xA;&#x9; * The new collection size is the same as in the original collection, and which element types is the type of the result of the expression.&#xD;&#xA;&#x9; * example :&#xD;&#xA;&#x9; * aCollection2 := aCollection.collect { e | \/* put here an expression, for example e.name *\/ } &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/collect/T"/>
          </eGenericType>
          <eTypeParameters name="T"/>
          <eParameters name="collector" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0" value="kermeta::standard::Collection::G"/>
              <details key="1" value="kermeta::standard::Collection::collect::T"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Set">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A Set is a non-ordered collection that contains distinct elements&#xD;&#xA; * (with regards to the G.equals(Object) operation)&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the intersection of the Set elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="minus">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the difference between the&#xD;&#xA;&#x9; * current Set and the Set elements, ie all elements contained by &#xD;&#xA;&#x9; * the current Set that do not appear in the elements Set &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.remove(G)&#xD;&#xA;&#x9; * Removes the element from the Set if it is contained by the Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9; elem /*VariableDecl with new*/  = Factory.eINSTANCE.create();&#xA;&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ elem. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Collection.remove(this, /*CallVariable*/ elem)&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;java.lang.Boolean isEqual /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;if( ! (/*Block3*/ /*CallVariable*/ element. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isVoid) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;if( /*Block3*/ kermeta.standard.Collection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isInstance) {&#xA;{&#xA;&#x9;kermeta.standard.Collection collection = null;&#xA;&#xA;&#x9;/*CallVariable*/ collection = /*CallVariable*/ element;&#xA;&#xA;&#x9;if( (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (/*Block3*/ /*CallVariable*/ collection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;java.lang.Boolean ok /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;/*CallVariable*/ isEqual = /*CallVariable*/ ok;&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ isEqual;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="sortedBy">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a ordered set of the bag elements sorted using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; quickSort;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="comparator" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0"/>
              <details key="1" value="kermeta::standard::Integer"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;kermeta.standard.Sequence s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSequence();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xD;&#xA;&#x9; * Returns a new Sequence composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.add(G)&#xD;&#xA;&#x9; * Adds elt to the Set if it is not already contained by the&#xD;&#xA;&#x9; * Set, does nothing otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( ! (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contains) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="quickSort">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursive sort of the given (ordered) set using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;kermeta.standard.OrderedSet less /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createOrderedSet();&#xA;&#xA;&#x9;kermeta.standard.OrderedSet pivotList /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createOrderedSet();&#xA;&#xA;&#x9;kermeta.standard.OrderedSet greater /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createOrderedSet();&#xA;&#xA;&#x9;if( (/*Block3*/ /*CallVariable*/ q. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) &lt;= (1) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ q;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9; pivot /*VariableDecl with new*/  = Factory.eINSTANCE.create();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ q. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1613389]);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; concatenate;&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="q">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="comparator" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0"/>
              <details key="1" value="kermeta::standard::Integer"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.OrderedSet. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ less);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ pivot);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ greater);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="symmetricDifference">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;kermeta.standard.Set res /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSet();&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; minus(/*CallVariable*/ s). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set which contents corresponds to the symmetric&#xD;&#xA;&#x9; * difference between current Set and Set s, ie all elements of&#xD;&#xA;&#x9; * each Set that do not appear in the other one&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="s">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;kermeta.standard.Set res /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSet();&#xA;&#xA;&#x9;if( /*Block3*/ . /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isKindOf) {&#xA;{&#xA;&#x9;kermeta.standard.Collection col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1613599]);&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ res;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set which content includes all non-Collection elements&#xD;&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xD;&#xA;&#x9; * Set, as many elements as the Collection contains&#xD;&#xA;&#x9; * Duplicates are removed&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eClassifier="#/3/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;kermeta.standard.OrderedSet s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createOrderedSet();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xD;&#xA;&#x9; * Returns a new OrderedSet that contains all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;kermeta.standard.Bag s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createBag();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xD;&#xA;&#x9; * Returns a new Bag composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the union of the Set elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ elements);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xD;&#xA;&#x9; * Returns a new Set composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;kermeta.standard.Set s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSet();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="unionWithBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the union of the Bag elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Bag. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Bag">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Collection">
          <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Bag">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Bag is a concrete non-ordered Collection allowing duplicates&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Bag. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;/*CallVariable*/ it = /*Block3*/ /*CallVariable*/ elements. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; iterator;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the intersection of elements&#xD;&#xA;&#x9; * and the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Bag">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(elt : Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;java.lang.Boolean isEqual /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;if( ! (/*Block3*/ /*CallVariable*/ element. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isVoid) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;if( /*Block3*/ kermeta.standard.Collection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isInstance) {&#xA;{&#xA;&#x9;kermeta.standard.Bag collection = null;&#xA;&#xA;&#x9;/*CallVariable*/ collection = /*CallVariable*/ element;&#xA;&#xA;&#x9;kermeta.standard.Set selfAsSet /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSet();&#xA;&#xA;&#x9;/*CallVariable*/ isEqual = /*Block3*/ /*CallVariable*/ selfAsSet. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals;&#xA;}&#xA;}&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ isEqual;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="sortedBy">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a sequence of the bag elements sorted using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; quickSort;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="comparator" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0"/>
              <details key="1" value="kermeta::standard::Integer"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xD;&#xA;&#x9; * Returns a new Sequence containing all elements of current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;kermeta.standard.Sequence s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSequence();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="quickSort">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;kermeta.standard.Sequence less /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSequence();&#xA;&#xA;&#x9;kermeta.standard.Sequence pivotList /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSequence();&#xA;&#xA;&#x9;kermeta.standard.Sequence greater /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSequence();&#xA;&#xA;&#x9;if( (/*Block3*/ /*CallVariable*/ q. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) &lt;= (1) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ q;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9; pivot /*VariableDecl with new*/  = Factory.eINSTANCE.create();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ q. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1614045]);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; concatenate;&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursive sort of the given sequence using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="q">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="comparator" eType="#/3/standard/_KermetaSpecialTypesAlias_">
            <eAnnotations source="kermeta.functionType">
              <details key="0"/>
              <details key="1" value="kermeta::standard::Integer"/>
            </eAnnotations>
          </eParameters>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ less);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ pivot);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (/*CallVariable*/ greater);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="excluding">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;kermeta.standard.Bag s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createBag();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; remove /*Block2*/ (/*CallVariable*/ object);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xD;&#xA;&#x9; * current Bag from which all instances of object have been&#xD;&#xA;&#x9; * removed&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/3/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;kermeta.standard.Bag res /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createBag();&#xA;&#xA;&#x9;if( /*Block3*/ . /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isKindOf) {&#xA;{&#xA;&#x9;kermeta.standard.Collection col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1614242]);&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ res;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes all non-Collection elements&#xD;&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xD;&#xA;&#x9; * Bag, as many elements as the Collection contains&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eClassifier="#/3/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="intersectionWithSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the intersection of a Set of&#xD;&#xA;&#x9; * elements and the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9; elem = null;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xD;&#xA;&#x9; * Returns a new OrderedSet containing elements of the Bag without duplicates&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;kermeta.standard.OrderedSet s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createOrderedSet();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="including">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;kermeta.standard.Bag s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createBag();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; add /*Block2*/ (/*CallVariable*/ object);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xD;&#xA;&#x9; * current Bag and the element object&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/3/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xD;&#xA;&#x9; * Returns a new Bag containing all elements of current Bag&#x9;&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;kermeta.standard.Bag s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createBag();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the union of elements and&#xD;&#xA;&#x9; * current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Bag. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="removeOne">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes one instance of element from the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9; elem /*VariableDecl with new*/  = Factory.eINSTANCE.create();&#xA;&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ elem. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Collection.remove(this, /*CallVariable*/ elem)&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeFromOid">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the element identified by the provided Oid from the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9; elem /*VariableDecl with new*/  = Factory.eINSTANCE.create();&#xA;&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ elem. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Collection.remove(this, /*CallVariable*/ elem)&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="elementOid" eType="#/3/standard/Integer"/>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;kermeta.standard.Set s /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createSet();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ s. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ s;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xD;&#xA;&#x9; * Returns a new Set containing elements of the Bag without duplicates&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Collection">
          <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedCollection" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An OrderedCollection is the root abstract class for all ordered Collections.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds element in the OrderedCollection at rank index&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( ((/*CallVariable*/ index) &lt; (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLower) || ((/*CallVariable*/ index) > ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreater) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; or) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.OrderedCollection.addAt(this, /*CallVariable*/ index, /*CallVariable*/ element)&#xA;}"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/Integer"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the element at rank index from the OrderedCollection&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( ((/*CallVariable*/ index) &lt; (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLower) || ((/*CallVariable*/ index) > (( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) - (1) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; minus) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreater) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; or) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.OrderedCollection.removeAt(this, /*CallVariable*/ index)&#xA;}"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/Integer"/>
        </eOperations>
        <eOperations name="last">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the last element in the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.EmptyCollection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; elementAt;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;java.lang.Boolean isEqual /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;if( ! (/*Block3*/ /*CallVariable*/ element. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isVoid) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;if( /*Block3*/ kermeta.standard.OrderedCollection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isInstance) {&#xA;{&#xA;&#x9;kermeta.standard.Collection collection = null;&#xA;&#xA;&#x9;/*CallVariable*/ collection = /*CallVariable*/ element;&#xA;&#xA;&#x9;if( (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (/*Block3*/ /*CallVariable*/ collection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;kermeta.standard.Iterator selfIterator /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator collectionIterator /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;java.lang.Boolean difference /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;/*CallVariable*/ isEqual = ! (/*CallVariable*/ difference) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not;&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ isEqual;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="indexOf" eType="#/3/standard/Integer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the index of the first instance of element in the OrderedCollection&#xD;&#xA;&#x9; * or -1 if the element is not contained by the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Integer result = null;&#xA;{&#xA;&#x9;if( ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.EmptyCollection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;kermeta.standard.Integer i /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createInteger();&#xA;&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;java.lang.Boolean found /*VariableDecl with new*/  = java.lang.LangFactory.eINSTANCE.createBoolean();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;if( /*CallVariable*/ found) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ i;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ 1. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; uminus;&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="elementAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the element at rank index in the OrderedCollection&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ((/*CallVariable*/ index) &lt; (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLower) || ((/*CallVariable*/ index) > (( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) - (1) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; minus) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreater) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; or) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.OrderedCollection.elementAt(this, /*CallVariable*/ index);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
          <eParameters name="index" eType="#/3/standard/Integer"/>
        </eOperations>
        <eOperations name="first">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.EmptyCollection. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; elementAt;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the first element in the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Collection">
          <eTypeArguments eTypeParameter="#/3/standard/OrderedCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedSet">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An OrderedSet is a Set that contained ordered distinct elements&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="append">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.OrderedSet. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; add /*Block2*/ (/*CallVariable*/ element);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted in head&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.OrderedSet. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAt /*Block2*/ (/*CallVariable*/ index, /*CallVariable*/ subject);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted at rank index&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/3/standard/Integer"/>
          <eParameters name="subject">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( ! (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contains) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides OrderedCollection&lt;G>.addAt(Integer, G)&#xD;&#xA;&#x9; * Adds element in the OrderedSet at rank index if the ordered set does&#xD;&#xA;&#x9; * not already contain the element, does nothing otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/Integer"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted in tail&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.OrderedSet. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; add /*Block2*/ (/*CallVariable*/ element);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = //IP content of the current CallSuperOperation&#xA;super;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * See OrderedCollection&lt;G>.equals(Object) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ((/*CallVariable*/ index) >= (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreaterOrEqual) &amp;&amp; ((/*CallVariable*/ index) &lt;= (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; and) {&#xA;{&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns element at rank index in the sequence&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedSet&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          <eParameters name="index" eType="#/3/standard/Integer"/>
        </eOperations>
        <eOperations name="add" ordered="false" eType="#/3/standard/Void">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Void result = null;&#xA;{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * See Set&lt;G>.add(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="subSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet composed of elements of current ordered&#xD;&#xA;&#x9; * set from rank min to rank max (order is respected)&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xD;&#xA;&#x9; * the size of the ordered set or min is larger than max&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.OrderedSet. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;if( (((/*CallVariable*/ min) >= (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreaterOrEqual) &amp;&amp; ((/*CallVariable*/ max) &lt;= (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; and) &amp;&amp; ((/*CallVariable*/ min) &lt;= (/*CallVariable*/ max) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; and) {&#xA;{&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;kermeta.standard.Integer i /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createInteger();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/3/standard/Integer"/>
          <eParameters name="max" eType="#/3/standard/Integer"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Set">
          <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/3/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Sequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A Sequence is an OrderedCollection of elements allowing duplicates&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="subSequence">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;if( (((/*CallVariable*/ min) >= (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreaterOrEqual) &amp;&amp; ((/*CallVariable*/ max) &lt;= (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; and) &amp;&amp; ((/*CallVariable*/ min) &lt;= (/*CallVariable*/ max) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; and) {&#xA;{&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;kermeta.standard.Integer i /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createInteger();&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence composed of elements of current sequence&#xD;&#xA;&#x9; * from rank min to rank max (order is respected)&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xD;&#xA;&#x9; * the size of the sequence or min is larger than max&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/3/standard/Integer"/>
          <eParameters name="max" eType="#/3/standard/Integer"/>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted in head&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; add /*Block2*/ (/*CallVariable*/ element);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted at rank index&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAt /*Block2*/ (/*CallVariable*/ index, /*CallVariable*/ element);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/3/standard/Integer"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Sequence. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; add /*Block2*/ (/*CallVariable*/ element);&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAll /*Block2*/ (this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted in tail&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides OrderedCollection&lt;G>.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Sequence&#x9;&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = //IP content of the current CallSuperOperation&#xA;super;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ((/*CallVariable*/ index) >= (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreaterOrEqual) &amp;&amp; ((/*CallVariable*/ index) &lt;= (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; and) {&#xA;{&#xA;&#x9;kermeta.standard.Iterator it /*VariableDecl with new*/  = kermeta.standard.StandardFactory.eINSTANCE.createIterator();&#xA;&#xA;&#x9;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IndexOutOfBound. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns element at rank index in the sequence&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the Sequence&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          <eParameters name="index" eType="#/3/standard/Integer"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Bag">
          <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/3/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Iterator" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Iterator to be used with Collection&#xD;&#xA; * See also Collection&lt;G>.getIterator()&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="hasNext" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Iterator.hasNext(this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the iterator has a next element&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="next">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the next element of the iterator&#xD;&#xA;&#x9; * Raises IteratorIsOff exception in case the iterator is on the last element &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;if( ! ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; hasNext) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.IteratorIsOff. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Iterator.next(this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Iterator/G"/>
        </eOperations>
        <eOperations name="isOff" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = ! ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; hasNext) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the iterator is on the last element&#xD;&#xA;&#x9; * i.e. returns not self.hasNext()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Void" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The class Void &#xD;&#xA; * By convention it is a sub-type of everything&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="isVoid" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return true&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = true;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isInstanceOf" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = true;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eParameters name="type" eType="#/3/language/structure/Type"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = &quot;&lt;void>&quot;;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the String identifier '&lt;void>'&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValueType" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class ValueType does not contain any feature.&#xD;&#xA; * However, any instance of a sub-class of ValueType will be passed by value &#xD;&#xA; * instead of by reference for any other objects.&#xD;&#xA; * that means that each time you := such object it will call the clone function associated to it (Not implemented yet except for Integer, String and boolean!!!)&#xD;&#xA; * &#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comparable" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Comparable defines a set of operation&#xD;&#xA; * to compare instances of a class.&#xD;&#xA; * Sub-classes only has to implement abstract operation compareTo.&#xD;&#xA; * All other methods are defined w.r.t. the compareTo operation&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="isLower" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; compareTo) &lt; (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLower;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="isGreaterOrEqual" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self >= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; compareTo) >= (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreaterOrEqual;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="compareTo" eType="#/3/standard/Integer">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * This method should be implemented by any class that inherits&#xD;&#xA;&#x9; * from Comparable.&#xD;&#xA;&#x9; * returns 0 if self = other&#xD;&#xA;&#x9; * returns > 0 if  self > other&#xD;&#xA;&#x9; * returns &lt; 0 if  self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="isLowerOrEqual" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; compareTo) &lt;= (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isLowerOrEqual;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt;= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="isGreater" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self > other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; compareTo) > (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isGreater;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Summable" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Summable defines a set of operation&#xD;&#xA; * to sum instances of a class.&#xD;&#xA; * Sub-classes only has to implement abstract operation plus.&#xD;&#xA;  */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="plus">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Summarization method to be implemented by any summable class.&#xD;&#xA;&#x9; * The parameter must have the same type (or one of its subtypes)&#xD;&#xA;&#x9; *  than the current object .&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Summable/G"/>
          <eParameters name="other">
            <eGenericType eTypeParameter="#/3/standard/Summable/G"/>
          </eParameters>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotComparableException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * raised when two objects are not comparable&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="boolean"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="int"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Real" instanceClassName="java.lang.Double"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Character" instanceClassName="char"/>
      <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNatural" instanceClassName="kermeta.standard.Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Unlimited natural is used for reflection.&#xD;&#xA; * It is mapped to integer.equals().&#xD;&#xA; * Any negative number is interpreted as '*'&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::standard::Integer"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnknownJavaObject" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xD;&#xA;  * This special object is used to represent java objects that cannot be concretely used with kermeta&#xD;&#xA;  * &lt;b>the only actions possible on these objects are : assignment and passing them as parameter&lt;/b>&#xD;&#xA;  * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xD;&#xA;  */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/3/standard/String">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = &quot;toString of  UnknownJavaObject not implemented yet&quot;;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="_KermetaSpecialTypesAlias_" instanceClassName="java.lang.Object">
        <eAnnotations source="kermeta">
          <details key="alias" value="_KermetaSpecialTypesAlias_"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="exceptions" nsURI="http://www.kermeta.org/kermeta/exceptions"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains the definition of a Kermeta exception and a few basic exceptions.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/exceptions_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Exception" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Generic exceptions&#xD;&#xA; * The main class from which all the exception inherit&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/3/standard/String"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedException" eType="#/3/exceptions/Exception"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stackTrace" eType="#/3/standard/String"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RuntimeError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Exception for interpreter exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/3/language/behavior/Expression"
            containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CallOnVoidTarget" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when a feature is called on void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeCastError" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Occurs when a cast (Object::asType operation) fails&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotImplementedException" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Use this exception whenyou want to forbid the access to an unimplemented operation &#xD;&#xA; * and invite to implement it&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UpperBoundReachedError" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xD;&#xA; * Use this exception when user tries to add an element to a property which type is collection&#xD;&#xA; * which has an upper bound != -1 ( ie *)&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractClassInstantiationError"
          eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Creation on an abstract class. Usually this is detected by the type-checker. The only&#xD;&#xA; * case where this happens is when instantiating a type variable, whose bound type turns&#xD;&#xA; * out to be abstract.&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IncompatibleTypeError" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Raised by the Object::set operation if the type of the &#xD;&#xA; * Object to set has an incompatible type.&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DivisionByZero" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** well-known attempt to divide with a zero valued divider */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OverflowError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the figure oversteps the capacity of the numeric variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="VoidOperandError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** one of the required operands is void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringIndexOutOfBound" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the data overstep the size of the string variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringFormatException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IndexOutOfBound" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access out of bounds elements */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EmptyCollection" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access element on an empty collection */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IteratorIsOff" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Occurs when calling next() operation while iterator is already&#xD;&#xA; * positioned on the last element of a collection&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IOException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** an interaction with the underlying system failed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileNotFoundException" eSuperTypes="#/3/exceptions/IOException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the file has not be found on the underlying system */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPre" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the pre-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPost" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the post-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedInv" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** some fixes declared in the invariant condition ave been changed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceLoadException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource loading fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceSaveException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceCreateException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to crate a Resource already existing in the Repository */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceUnconformityException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when user tries to add an object that is not conform to the metamodel */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpressionException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="utils" nsURI="http://www.kermeta.org/kermeta/utils" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xD;&#xA; * metamodel&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xD;&#xA; * metamodel&#xD;&#xA; * &#xD;&#xA; * &lt;img src=&quot;./figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Stack">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of stack&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="pop">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; peek;&#xA;&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; removeAt /*Block2*/ (0);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get and remove the element at the top of the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/utils/Stack/G"/>
        </eOperations>
        <eOperations name="peek">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Gets the element at the top of the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; first;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/utils/Stack/G"/>
        </eOperations>
        <eOperations name="push">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; addAt /*Block2*/ (0, /*CallVariable*/ element);&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Pushes an element into the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/utils/Stack/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Sequence">
          <eTypeArguments eTypeParameter="#/3/utils/Stack/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Hashtable" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of hashtable&#xD;&#xA; * This implementation is for speed optimisation it cannot be serialized. &#xD;&#xA; * If your wish to serialize its content you need to copy its content into a classical ecore structure (attribute or references)&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="K"/>
        <eTypeParameters name="V"/>
        <eOperations name="getValue">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA; result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Map.get(this, /*CallVariable*/ key);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the value for key 'key' if it exists, otherwise returns Void&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/utils/Hashtable/V"/>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all elements from the Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Map.clear(this)&#xA;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="containsKey" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#x9;&#xD;&#xA;&#x9; * Returns a Boolean stating whether a key is present or not in this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; getValue(/*CallVariable*/ key). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="put">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Map.put(this, /*CallVariable*/ key, /*CallVariable*/ value)&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds a entry into the Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
          <eParameters name="value">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/V"/>
          </eParameters>
        </eOperations>
        <eOperations name="values">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a collection containing the elements of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Collection result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Bag. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; keys(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1616811]);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Collection">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Map.remove(this, /*CallVariable*/ key)&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the entry with key equals to 'key'&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="keys">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a set containing the hash keys of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="keyIterator">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Map.keysIterator(this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an iterator over the Keys of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Iterator">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="valueIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an iterator over the values of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Map.valueIterator(this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Iterator">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="size" eType="#/3/standard/Integer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the size of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Integer result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Map.size(this);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringBuffer" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This class mimic the behavior of the java's StringBuffer class. This enables better performance in long&#xA; * string concatenation.&lt;br>&#xA; * &lt;b>Only work on Strings&lt;/b>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="append" eType="#/3/utils/StringBuffer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Append a given string at the end of this StringBuffer&#xA;&#x9; * @param arg0 A string to append at the end of this StringBuffer&#xA;&#x9; * @return A reference to this object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.utils.StringBuffer result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.StringBuffer.append(this, /*CallVariable*/ arg0);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="arg0" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;java.lang.String stringValue = null;&#xA;&#xA;&#x9;/*CallVariable*/ stringValue = fr.irisa.triskell.kermeta.runtime.basetypes.StringBuffer.toString(this);&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ stringValue;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; *Convert this StringBuffer to String and return its value&#xA;&#x9; *@return The string value of this StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="io" nsURI="http://www.kermeta.org/kermeta/io" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains standard input/output related classes. &#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StdIO" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of StdIO : standard input/output&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writeln the object to standard output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ object. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*CallVariable*/ object = &quot;&lt;void>&quot;;&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.writeln(/*CallVariable*/ object)&#xA;}"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="errorln">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ object. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*CallVariable*/ object = &quot;&lt;void>&quot;;&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.errorln(/*CallVariable*/ object)&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writeln the object to error output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="error">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ object. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*CallVariable*/ object = &quot;&lt;void>&quot;;&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.error(/*CallVariable*/ object)&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes the object to error output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="write">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes the object to standard output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ object. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*CallVariable*/ object = &quot;&lt;void>&quot;;&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.write(/*CallVariable*/ object)&#xA;}"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="read" eType="#/3/standard/String">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Reads a String from standard input&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ prompt. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*CallVariable*/ prompt = &quot;&quot;;&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.read(/*CallVariable*/ prompt);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="prompt" eType="#/3/standard/String"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="ecore" nsURI="http://www.kermeta.org/kermeta/ecore" nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains the definition of a Kermeta classes used for compatibility with Ecore &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="EFeatureMapEntry" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta representation of EMF EFeatureMapEntry&#xD;&#xA; * it contains the name of the required feature and the actual value&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/3/language/structure/Object"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="eStructuralFeatureName"
            eType="#/3/standard/String"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="language" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the implementation of Kermeta reflective collections.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveCollection">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * ReflectiveCollection is a special collection that is used to define the type &#xD;&#xA; * of attributes that have an upper multiplicity > 1 in a class. It indeed handles&#xD;&#xA; * the update of opposite property if such an attribute has got one.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Collection&lt;G>.clear(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.clear(this)&#xA;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.remove(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.remove(this, /*CallVariable*/ element)&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.add(this, /*CallVariable*/ element)&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.add(G)&#xD;&#xA;&#x9; * Add an element to this collection and update its opposite property if it exists.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Set">
          <eTypeArguments eTypeParameter="#/3/language/ReflectiveCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveSequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * ReflectiveSequence is an ordered ReflectiveCollection.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.clear()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.addAt(Integer)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveSequence.addAt(this, /*CallVariable*/ index, /*CallVariable*/ element)&#xA;}"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/Integer"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.removeAt(Integer)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveSequence.removeAt(this, /*CallVariable*/ index)&#xA;}"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/Integer"/>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.remove(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.equals(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = //IP content of the current CallSuperOperation&#xA;super;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.add(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/OrderedSet">
          <eTypeArguments eTypeParameter="#/3/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/3/language/ReflectiveCollection">
          <eTypeArguments eTypeParameter="#/3/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eSubpackages name="structure" nsURI="http://www.kermeta.org/kermeta/language/structure"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Contains the concrete implementation (including the operation bodies) &#xD;&#xA; * of the classes of the &lt;code>kermeta::reflection&lt;/code> package.&#xD;&#xA; * If you need more documentation, please take a look at the&#xD;&#xA; * &lt;code>kermeta::reflection&lt;/code> package which is more complete.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_package.png&quot;/>&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_visitor_view.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eOperations name="isSet" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * True if the &lt;code>~property&lt;/code> of the object has been set&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.isSet(this, /*CallVariable*/ property);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
          </eOperations>
          <eOperations name="get" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the instances of the given property for this Object.&#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * Example : &#xD;&#xA;&#x9; * &lt;pre>&#xD;&#xA;&#x9; * class A { reference attr : String }&#xD;&#xA;&#x9; * &lt;/pre>&#xD;&#xA;&#x9; * Using A :&#xD;&#xA;&#x9; * &lt;pre>&#xD;&#xA;&#x9; * operation getAProp() is do&#xD;&#xA;&#x9; *    var a : A&#xD;&#xA;&#x9; *    var s : String&#xD;&#xA;&#x9; *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xD;&#xA;&#x9; *    s ?= a.get(the_attr)&#xD;&#xA;&#x9; * end&#xD;&#xA;&#x9; * &lt;/pre>&#xD;&#xA;&#x9; * The user has to cast&#xD;&#xA;&#x9; * the result of this method according to the type and the upper multiplicity&#xD;&#xA;&#x9; * of this property. If upper multiplicity > 1, than the effective type of the &#xD;&#xA;&#x9; * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xD;&#xA;&#x9; * the name of the given Property (i.e the type of the property instance).&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.get(this, /*CallVariable*/ property);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
          </eOperations>
          <eOperations name="isKindOf" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the current Object is an instance of the given Class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; getMetaClass(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cl" eType="#/3/language/structure/Class"/>
          </eOperations>
          <eOperations name="equals" eType="#/3/language/structure/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.equals(this, /*CallVariable*/ element);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * semantic equality,&#xD;&#xA;&#x9; * if you wish to test for object identity you need to use the method oid&#xD;&#xA;&#x9; * ex: x.oid == y.oid&#xD;&#xA;&#x9; * by default, (ie. if not overloaded), the equals method for class Object implements &#xD;&#xA;&#x9; * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xD;&#xA;&#x9; * reference values x and y, this method returns true if and only if x and y refer to the same &#xD;&#xA;&#x9; * object (x.oid == y.oid has the value true). &#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * note1: the operator == is mapped to this &#xD;&#xA;&#x9; * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="getMetaClass" eType="#/3/language/structure/Class">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Class object that is the metaclass of current Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.getMetaClass(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets the &lt;code>element&lt;/code> to the &lt;code>~property&lt;/code> of the object &#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9;if( /*Block3*/ /*CallVariable*/ element. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isInstanceOf) {&#xA;{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.set(this, /*CallVariable*/ property, /*CallVariable*/ element)&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createIncompatibleTypeError();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1617196]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;}"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isFrozen" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Object is currently in a&#xD;&#xA;&#x9; * frozen state&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(this)&#xA;}"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode" eType="#/3/language/structure/Integer">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * code used in hashtable in order to identify an object in the hashtable keys&#xD;&#xA;&#x9; * This system is similar to the hashcode used in java. Please refer to java documentation&#xD;&#xA;&#x9; * for more information about hashcode&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Integer result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.hashcode(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isVoid" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Object is Void&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = false;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNotEqual" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * See kermeta::language::structure::Object.equals(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = ! ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="oid" eType="#/3/language/structure/Integer">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the unique Oid of the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Integer result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.oid(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Remove the element set as the &lt;code>~property&lt;/code> of the object.&#xD;&#xA;&#x9; * The &lt;code>isSet(~property)&lt;/code> method will then return False&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.unSet(this, /*CallVariable*/ property)&#xA;}"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
          </eOperations>
          <eOperations name="container" eType="#/3/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.container(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Object that contains current Object, void if the Object has&#xD;&#xA;&#x9; * no container&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Freeze the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(this)&#xA;}"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="containingResource" eType="#/3/persistence/Resource">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Resource currently containing (directly or indirectly) the Object &#xD;&#xA;&#x9; * or void if the object belongs to no Resource&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isInstanceOf" eType="#/3/language/structure/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(this, /*CallVariable*/ type);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the current Object conforms to given Type&#xD;&#xA;&#x9; * This means: is this object an instance of this type, or is it an instance of its subtype &#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eParameters name="type" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eOperations name="asType" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implementation of OCL like cast. It returns self if the object object conforms to the type given as parameter.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;if(  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isInstanceOf) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = this;&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;throw /*Block3*/ kermeta.exceptions.TypeCastError. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/3/language/structure/Class"/>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursively runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;&#x9; * and its supertypes&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9;if( /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; checkInvariants /*Block2*/ ();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;/*CallVariable*/ cd = /*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; getMetaClass(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; typeDefinition;&#xA;&#xA;&#x9;/*Block3*/ /*Block3*/ /*CallVariable*/ cd. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; allAttribute(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1617356]);&#xA;}&#xA;}&#xA;}"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="toString" eType="#/3/language/structure/String">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Object.toString()&#xD;&#xA; &#x9; * Returns a String of form [qn:oid] where 'qn' is the qualified name of&#xD;&#xA; &#x9; * the object type, and oid the unique ID of the object&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/ /*Block3*/ /*Block3*/ &quot;[&quot;. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(/*Block3*/ /*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; getMetaClass(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; typeDefinition(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; qualifiedName). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(&quot;:&quot;). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; oid(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; toString). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="tag" upperBound="-1"
              eType="#/3/language/structure/Tag" eOpposite="#/3/language/structure/Tag/object"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTags" upperBound="-1"
              eType="#/3/language/structure/Tag" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType" eSuperTypes="#/3/language/structure/Type #/3/language/structure/TypeDefinition">
          <eOperations name="new" eType="#/3/language/structure/Model">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written ##########################################&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Model result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.ModelType.newObject(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="_new" eType="#/3/language/structure/Model">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isModelTypeOf" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written ##########################################&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.ModelType.isModelTypeOf(this, /*CallVariable*/ m);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="m" eType="#/3/language/structure/Model"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includedTypeDefinition"
              upperBound="-1" eType="#/3/language/structure/TypeDefinition"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#/3/language/structure/ParameterizedType">
          <eOperations name="clone" eType="#/3/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Class.cloneObject(this, /*CallVariable*/ objectToClone);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Class.deepCloneObject(this, /*CallVariable*/ objectToClone);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="new" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Instantiates a new occurence for this Class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Class.newObject(this);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="equals" eType="#/3/language/structure/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Class.equals(this, /*CallVariable*/ other);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eParameters name="other" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="_new" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
          </eOperations>
          <eOperations name="toString" eType="#/3/language/structure/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; typeDefinition(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the String representation of this class. &#xD;&#xA;&#x9; *  Note : throws an exception if this class has no classDefinition&#xD;&#xA;&#x9; *  or if the classDefinition is not well constructed.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
              eType="#/3/language/structure/Operation" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" upperBound="-1"
              eType="#/3/language/structure/Class" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="false"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isAbstract" eType="#/3/language/structure/Boolean"
              derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="name" eType="#/3/language/structure/String"
              derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              eType="#/3/language/structure/ClassDefinition" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Property" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition" eSuperTypes="#/3/language/structure/GenericTypeDefinition #/3/language/structure/TypeContainer">
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
              eType="#/3/language/structure/Operation" containment="true" eOpposite="#/3/language/structure/Operation/owningClass"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isAbstract" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1"
              eType="#/3/language/structure/Type"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="inv" upperBound="-1"
              eType="#/3/language/structure/Constraint" containment="true" eOpposite="#/3/language/structure/Constraint/invOwner"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allOperation" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Operation" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allAttribute" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Property" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
              eType="#/3/language/structure/Property" containment="true" eOpposite="#/3/language/structure/Property/owningClass"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#/3/language/structure/Object">
          <eOperations name="addCompatible" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA; &#x9; * Returns the object if it has been added (One can check that some element have been ignored or not)&#xD;&#xA; &#x9; * return Void if not added&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9; /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contents /*Block2*/ ();&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Model.addCompatible(this, /*CallVariable*/ objectToAdd);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToAdd" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Remove an object from the model&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.remove( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contents, /*CallVariable*/ obj)&#xA;}"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA; &#x9; * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Collection result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ objectsToAdd. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1617820]);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eClassifier="#/3/language/structure/Object"/>
            </eGenericType>
            <eParameters name="objectsToAdd">
              <eGenericType eClassifier="#/3/standard/Collection">
                <eTypeArguments eClassifier="#/3/language/structure/Object"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="{&#xA;&#x9; /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contents /*Block2*/ ();&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Model.add(this, /*CallVariable*/ obj)&#xA;}"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="filter" ordered="false" upperBound="-1" eType="#/3/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contents(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1617872]). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; asSet;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Returns a set of all the elements of the model that are instance of the given Type&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eParameters name="typeName" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
              eType="#/3/language/structure/Object"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#/3/language/structure/Object">
          <eOperations name="clone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a copy of passed Object built by recursively copying attribute&#xD;&#xA;&#x9; * properties, and referencing original reference properties values&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSuperTypeOf" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Type.isSuperTypeOf(Type)&#xD;&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xD;&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xD;&#xA; &#x9; * to extend it.&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.Type.hasSubType(this, /*CallVariable*/ object);&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/3/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a copy of passed Object built by recursively copying values of&#xD;&#xA;&#x9; * all properties, no matter the property kind&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isInstance" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implements Type.isInstance(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*CallVariable*/ element. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isInstanceOf;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="#/3/language/structure/Boolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Type.isSubTypeOf(Type)&#xD;&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xD;&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xD;&#xA; &#x9; * to extend it.&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*CallVariable*/ object. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isSuperTypeOf;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeContainer" eType="#/3/language/structure/TypeContainer"
              eOpposite="#/3/language/structure/TypeContainer/containedType"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" eSuperTypes="#/3/language/structure/Object">
          <eOperations name="qualifiedName" eType="#/3/language/structure/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;kermeta.language.structure.NamedElement elem /*VariableDecl with new*/  = kermeta.language.structure.StructureFactory.eINSTANCE.createNamedElement();&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name;&#xA;&#xA;&#x9;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the qualified name of this named element. Qualified name is &#xD;&#xA;&#x9; * the list of the names of the packages hierarchically ordered, delimited by&#xD;&#xA;&#x9; * a &quot;::&quot;, followed by the name of this named element.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="name" lowerBound="1"
              eType="#/3/language/structure/String" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="#/3/language/structure/DataType">
          <eOperations name="clone" eType="#/3/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;throw &quot;NOT IMPLEMENTED&quot;&#xA;}&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implements kermeta::language::structure::Type.clone(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1"
              eType="#/3/language/structure/EnumerationLiteral" containment="true"
              eOpposite="#/3/language/structure/EnumerationLiteral/enumeration"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType" eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/Type">
          <eAnnotations source="kermeta.inv">
            <details key="resultType" value=""/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#/3/language/structure/Type"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#/3/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="String" instanceClassName="kermeta.standard.String">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::String"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Boolean" instanceClassName="kermeta.standard.Boolean">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Boolean"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Integer" instanceClassName="kermeta.standard.Integer">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Every one knows what an operation is."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/3/language/structure/TypeVariable"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="post" upperBound="-1"
              eType="#/3/language/structure/Constraint" containment="true" eOpposite="#/3/language/structure/Constraint/postOwner"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
              eType="#/3/language/structure/Parameter" containment="true" eOpposite="#/3/language/structure/Parameter/operation"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isAbstract" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException"
              upperBound="-1" eType="#/3/language/structure/Type"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="pre" upperBound="-1"
              eType="#/3/language/structure/Constraint" containment="true" eOpposite="#/3/language/structure/Constraint/preOwner"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superOperation" eType="#/3/language/structure/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/3/language/structure/ClassDefinition"
              eOpposite="#/3/language/structure/ClassDefinition/ownedOperation"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xA; - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xA; - Property with isComposite == false : EReference"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="default" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" eType="#/3/language/structure/Property"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isDerived" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="getterBody" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isReadOnly" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="setterBody" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/3/language/structure/ClassDefinition"
              eOpposite="#/3/language/structure/ClassDefinition/ownedAttribute"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isSetterAbstract"
              eType="#/3/language/structure/Boolean" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isID" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isComposite" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isGetterAbstract"
              eType="#/3/language/structure/Boolean" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeContainer" abstract="true"
            eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Phantom class : EMF reflexive editors need that any element of a metamodel &#xA;has a direct or indirect containment relationship with the root model element of&#xA;the metamodel. This class resolves this technical requirement."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="containedType" upperBound="-1"
              eType="#/3/language/structure/Type" containment="true" eOpposite="#/3/language/structure/Type/typeContainer"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral" eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Item definition for enumeration"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" eType="#/3/language/structure/Enumeration"
              eOpposite="#/3/language/structure/Enumeration/ownedLiteral"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding" eSuperTypes="#/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a binding between a TypeVariable and a Type"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/3/language/structure/Type"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
              eType="#/3/language/structure/TypeVariable"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="#/3/language/structure/TypedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value=" Model elements with a multiplicity [lower..upper] inherit this class"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isOrdered" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="upper" eType="#/3/language/structure/UnlimitedNatural"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="lower" eType="#/3/language/structure/Integer"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isUnique" eType="#/3/language/structure/Boolean"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNatural" instanceClassName="kermeta.standard.Integer">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true"
            eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of typed element : each element &#xA;that is typed inherits this class."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#/3/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xA;this class)"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This boolean allows to tell if this Type definition is an aspect or not&#xA;If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xA;TypeDefinition that has exactly the same qualified name"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isAspect" eType="#/3/language/structure/Boolean"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="#/3/language/structure/Type #/3/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Special type definition for Enumeration, PrimitiveType"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#/3/language/structure/TypeDefinitionContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Package in kermeta. Each kermeta model must have a root package. "/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" eType="#/3/language/structure/Package"
              eOpposite="#/3/language/structure/Package/nestedPackage"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" upperBound="-1"
              eType="#/3/language/structure/Package" containment="true" eOpposite="#/3/language/structure/Package/nestingPackage"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="uri" eType="#/3/language/structure/String"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for operation parameter"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="operation" eType="#/3/language/structure/Operation"
              eOpposite="#/3/language/structure/Operation/ownedParameter"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="#/3/language/structure/DataType #/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA;type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA;&lt;pre>alias MyString : kermeta::standard::String&lt;/pre>. Another example could be: &lt;code>root::apackage::AClass&lt;/code>&#xD;&#xA;&lt;pre>alias MyClass : root::apackage::AClass&lt;/pre>, thus a primitive type may be not a subtype of ValueType (ValueType is a concept from the Kermeta framework)."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" eType="#/3/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Tag" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Tag is intended to be used to add documentation on a  model element,&#xA;or add some textual information that cannot be expressed with any&#xA;model element definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="name" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="object" lowerBound="1"
              upperBound="-1" eType="#/3/language/structure/Object" eOpposite="#/3/language/structure/Object/tag"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Constraint is part of a contract implementation in a Class definition or an operation.&#xA;Three kinds of constraints are available : pre, post, and inv (invariant constraint)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false"
              lowerBound="1" eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="preOwner" eType="#/3/language/structure/Operation"
              eOpposite="#/3/language/structure/Operation/pre"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" eType="#/3/language/structure/ConstraintType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="postOwner" eType="#/3/language/structure/Operation"
              eOpposite="#/3/language/structure/Operation/post"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="#/3/language/structure/ConstraintLanguage"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="invOwner" eType="#/3/language/structure/ClassDefinition"
              eOpposite="#/3/language/structure/ClassDefinition/inv"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintType">
          <eLiterals name="inv" literal="inv"/>
          <eLiterals name="pre" value="1" literal="pre"/>
          <eLiterals name="post" value="2" literal="post"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintLanguage">
          <eLiterals name="kermeta" literal="kermeta"/>
          <eLiterals name="ocl" value="1" literal="ocl"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelingUnit" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xA;It also reference others modeling unit."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="usings" upperBound="-1"
              eType="#/3/language/structure/Using" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="packages" upperBound="-1"
              eType="#/3/language/structure/Package" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includeFilters" upperBound="-1"
              eType="#/3/language/structure/Filter" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="excludeFilters" upperBound="-1"
              eType="#/3/language/structure/Filter" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="referencedModelingUnits"
              upperBound="-1" eType="#/3/language/structure/ModelingUnit"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="requires" upperBound="-1"
              eType="#/3/language/structure/Require" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Require" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="uri" eType="#/3/language/structure/String"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Using" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="qualifiedName" eType="#/3/language/structure/String"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Filter" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Filter is the class that represent a filter on a ModelingUnit.&#xA;the qualifiedName represent the beginning of the matched names"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="qualifiedName" eType="#/3/language/structure/String"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition" abstract="true"
            eSuperTypes="#/3/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstracts the definition of generic type definitions (i.e. type definitions that&#xA;can be parameterized), namely, for ClassDefinition and ModelTypeDefinition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/3/language/structure/TypeVariable" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" abstract="true"
            eSuperTypes="#/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for Parameterized types, namely, Class and ModelType"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/3/language/structure/TypeVariableBinding" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" lowerBound="1"
              eType="#/3/language/structure/GenericTypeDefinition"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualTypeBinding"
              upperBound="-1" eType="#/3/language/structure/TypeVariableBinding" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true"
            eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/Type #/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a type variable for generic types :  &#xA;in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="supertype" eType="#/3/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable" eSuperTypes="#/3/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelTypeVariable" eSuperTypes="#/3/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualType" upperBound="-1"
              eType="#/3/language/structure/VirtualType" containment="true" eOpposite="#/3/language/structure/VirtualType/modelType"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualType" eSuperTypes="#/3/language/structure/ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="modelType" lowerBound="1"
              eType="#/3/language/structure/ModelTypeVariable" eOpposite="#/3/language/structure/ModelTypeVariable/virtualType"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/3/language/structure/TypeVariableBinding" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              lowerBound="1" eType="#/3/language/structure/ClassDefinition"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ProductType" eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type corresponding to a set of Types&#xA;Only used in the context of FunctionType"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" unique="false"
              upperBound="-1" eType="#/3/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="#/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class definition for the &lt;pre>Void&lt;/pre> type"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer" abstract="true"
            eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xA;element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xA;package definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeDefinition"
              upperBound="-1" eType="#/3/language/structure/TypeDefinition" containment="true"/>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="behavior" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior"
          nsPrefix="">
        <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Assignment is the model-element representation of the assignment statement &lt;code>x := y&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_assign_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
              eType="#/3/language/behavior/CallExpression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isCast" eType="#/3/language/structure/Boolean"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true" eSuperTypes="#/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The base class for every entity used to define a behavior in operation body."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticType" eType="#/3/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallExpression" abstract="true"
            eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any callable expression inherits this class, e.g : &#xA;  - variable call&#xA;  - feature call ( &lt;code>a.b&lt;/code> : b is a feature call)&#xA;&#xA;&lt;img alt=&quot;&quot;  height=&quot;90%&quot; width=&quot;90%&quot;  src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_call_expressions.png&quot; />"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticTypeVariableBindings"
              upperBound="-1" eType="#/3/language/structure/Type"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="name" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/3/language/behavior/Expression" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Block is the model-element representation for the &lt;code>do...end&lt;/code> block."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="statement" upperBound="-1"
              eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="rescueBlock" upperBound="-1"
              eType="#/3/language/behavior/Rescue" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallVariable" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="We call &quot;CallVariable&quot; the use of a variable in a statement.&#xA;in &lt;code>i := j + 1&lt;/code>, i and j are 2 CallVariables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isAtpre" eType="#/3/language/structure/Boolean"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallFeature" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallFeature is the model element that refers to the use of a feature, i.e either &#xA;a property or an operation in a statement. In &lt;code>stdio.writeln(&quot;hello&quot;)&lt;/code>, &#xA;&lt;code>writeln&lt;/code> is a CallFeature."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticOperation"
              eType="#/3/language/structure/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="isAtpre" eType="#/3/language/structure/Boolean"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticEnumLiteral"
              eType="#/3/language/structure/EnumerationLiteral"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticProperty" eType="#/3/language/structure/Property"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallSuperOperation" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the operataion in the parent class&#xA;&#x9;In the following example, the type of super(element) is CallSuperOperation:&#xA;&#xA;class ParentClass {&#xA;  operation op(element : Integer) : Integer is do&#xA;      result := element + 1&#xA;  end&#xA;}&#xA; *&#xA;class ChildClass {&#xA;  method op(element : Integer) : Integer is do&#xA;      result := super(element)&#xA;  end&#xA;}"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallResult" eSuperTypes="#/3/language/behavior/CallVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the special internal variable &quot;result&quot; that is used to store the return value of any operation "/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallValue" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallValue refers to the use of the &lt;code>value&lt;/code> reserved keyword. This keyword is&#xA;only used in the body of the &lt;code>setter&lt;/code> part of derived properties."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Condition is the model-element representation for the &lt;code>&lt;/code> "/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="thenBody" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" eType="#/3/language/behavior/Expression"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Raise" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to raise exception block"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Rescue" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to rescue exception block"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              upperBound="-1" eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionName" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionType" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeReference" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="TypeReference refers to the type used in a variable declaration"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Literal" abstract="true" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Literal refers to String values, Integer values, etc."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EmptyExpression" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="As suggested by its name, this class represents an expression that do nothing. Like a &quot;nop&quot;"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="JavaStaticCall" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represent a call to an extern Java operation. &#xA;This Java operation must be static and have at least one RuntimeO"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="jmethod" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="jclass" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/3/language/behavior/Expression" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaExpression" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to lambda expression definition (&lt;code>function { e | stdio.writeln(e.toString) }&lt;/code>)&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_lambda_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/3/language/behavior/LambdaParameter" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaParameter" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to parameter definition in lambda expression"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="name" eType="#/3/language/structure/String"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing an Integer value"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/3/language/structure/Integer"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a String value, typically : &quot;my string&quot;"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/3/language/structure/String"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Boolean value, typically : true or false keyword"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/3/language/structure/Boolean"
              containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Type.&#xA;for example, in &#xA;   Integer.new&#xA;Integer is a type literal representing the type kermeta::standard::Integer"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeref" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class is used to represent the special expression void"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Loop" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Loop refers to &lt;code>from var x : X init a until booleanCondition loop ... end&lt;/code>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="stopCondition" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SelfExpression" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to &lt;code>self&lt;/code> use"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VariableDecl" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="refers to variable declaration &lt;code>var x : X init a&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_var_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/3/language/behavior/Expression"
              containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="identifier" eType="#/3/language/structure/String"
              containment="true"/>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="interpreter" nsURI="http://www.kermeta.org/kermeta/interpreter"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains a set of classes whose function is to evaluate a kermeta &#xD;&#xA; * expression written as a string.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/interpreter_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpression" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * DynamicExpression is a class used to make dynamic calls, i.e dynamic evaluation&#xD;&#xA; * of Kermeta statements represented in a string.&#xD;&#xA; * &#xD;&#xA; * An example :&#xD;&#xA; *   var de : DynamicExpression init DynamicExpression.new&#xD;&#xA; *   de.initializeDefaults&#xD;&#xA; *   de.formalParameters.put(&quot;a&quot;, String)&#xD;&#xA; *   de.parse(&quot;stdio.writeln(a)&quot;) // note: to execute a list of statements, you have to surround them with do..end&#xD;&#xA; *   var params : Hashtable&lt;String, Object> init Hashtable&lt;String, Object>.new&#xD;&#xA; *   params.put(&quot;a&quot;, &quot;hello world!&quot;)&#xD;&#xA; *   de.execute(void, params)&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/dynamic_expression_view.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="initializeDefaults" ordered="false" eType="#/3/standard/Void">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Initializes the formalParameters with an empty set of parameters&#xD;&#xA;&#x9; * and the self type with void&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Void result = null;&#xA;{&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618248]&#xA;getFormalParameters&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618259]&#xA;getSelfClass&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute" eType="#/3/standard/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * Execute the expression in the given context&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;if( /*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; expression(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createDynamicExpressionException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618280]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;&#xA;&#x9;if( (/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; errors(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) != (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createDynamicExpressionException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618298]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.DynamicExpression.execute(this, /*CallVariable*/ selfObj, /*CallVariable*/ actualParams);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="selfObj" eType="#/3/standard/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/3/utils/Hashtable">
              <eTypeArguments eClassifier="#/3/standard/String"/>
              <eTypeArguments eClassifier="#/3/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="parse" eType="#/3/standard/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; errors(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; clear /*Block2*/ ();&#xA;&#xA;&#x9;if( (/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; formalParameters(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) || (/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; selfClass(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; or) {&#xA;{&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createDynamicExpressionException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618334]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.language.DynamicExpression.parse(this, /*CallVariable*/ expression);&#xA;&#xA;&#x9;if( (/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; errors(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) != (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isNotEqual) {&#xA;{&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createDynamicExpressionException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618368]&#xA;getMessage&#xA;&#xA;&#x9;/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; errors(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1618376]);&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parse the expression as a string&#xD;&#xA;&#x9; * and updates the expression field and errors&#xD;&#xA;&#x9; * Returns true if the expression was parsed sucessfuly&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="expression" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="evalString" eType="#/3/standard/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * Execute the expression given as a string.&#xD;&#xA;     * the self type and formal parameters are supposed to be set&#xD;&#xA;     * before calling this operation&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;{&#xA;&#x9;if( ! ( /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; parse) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createDynamicExpressionException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618421]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; execute;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="body" eType="#/3/standard/String"/>
          <eParameters name="selfObj" eType="#/3/standard/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/3/utils/Hashtable">
              <eTypeArguments eClassifier="#/3/standard/String"/>
              <eTypeArguments eClassifier="#/3/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/3/language/behavior/Expression"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/3/interpreter/KermetaError"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters">
          <eGenericType eClassifier="#/3/utils/Hashtable">
            <eTypeArguments eClassifier="#/3/standard/String"/>
            <eTypeArguments eClassifier="#/3/language/structure/Type"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selfClass" eType="#/3/language/structure/ClassDefinition"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KermetaError" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta language error in a code written in Kermeta&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/3/standard/String"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ParseError" eSuperTypes="#/3/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta error for parsing problems&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeError" eSuperTypes="#/3/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Type errors in a code written in Kermeta&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="persistence" nsURI="http://www.kermeta.org/kermeta/persistence"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the classes that handle the serialization of models, in particular&#xD;&#xA; * EMF models.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/persistence_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The main class that handle a loaded/saved model.&#xD;&#xA; * There are a few important things to note for the developer :&#xD;&#xA; * &#xD;&#xA; * - load a Resource : this loads a Collection of instances corresponding to the&#xD;&#xA; *   objects in the loaded model. If the Collection of instances is empty, than &#xD;&#xA; *&#x9; a ResourceLoadException is raised&#xD;&#xA; *&#xD;&#xA; * - save a Resource : this saves the collection of instances in a new file. This can&#xD;&#xA; *   be correctly done if and only if the instances saved are conform to the metamodel&#xD;&#xA; *   linked to this resource (this link does not need to be explicit. It is normally retrieved&#xD;&#xA; *   through the EMF model -- see Java wrapping &quot;Resource.java&quot;).&#xD;&#xA; * &#xD;&#xA; * - add/remove an instance to the Resource : this adds an element in the resource. It cannot&#xD;&#xA; *   be &quot;simply&quot; added because of the following potential errors :&#xD;&#xA; *&#xD;&#xA; *   - The object added is not conform to the metamodel -> Error&#xD;&#xA; *   - The object was already added in the resource -> Not a real error : we do nothing&#xD;&#xA; *   - The object to remove does not exist -> redirect to a collection-specific error&#xD;&#xA; *   - The object to remove is attached to an object in the collection -> &quot;dependency-violation&quot; exception?&#xD;&#xA;&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Save a Resource in the file specified by the current value of uri &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Save a Resource in a file referenced by the new uri. &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Loads the Resource, thus making content of the Resource browsable.&#xD;&#xA;&#x9; * Raises a ResourceLoadException in case loaded Resource is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="instances" eType="#/3/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The entities contained in the model-instance, that are provided when user loads a resource &#xD;&#xA;&#x9; * instances == rootContents&#xD;&#xA;&#x9; * this is a loop on Resource itself in order to get backward compatibility&#xD;&#xA;&#x9; * user should use the resource directly since this is a collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = this;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="dependentResources"
            ordered="false" upperBound="-1" eType="#/3/persistence/Resource" derived="true">
          <eAnnotations source="kermeta">
            <details key="isReadOnly" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="contents" ordered="false"
            upperBound="-1" eType="#/3/standard/Object" derived="true">
          <eAnnotations source="kermeta">
            <details key="isReadOnly" value="true"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="repository" eType="#/3/persistence/Repository"
            eOpposite="#/3/persistence/Repository/resources"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/3/standard/Boolean"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="metaModelURI" eType="#/3/standard/String"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/3/standard/String"/>
        <eGenericSuperTypes eClassifier="#/3/standard/Set">
          <eTypeArguments eClassifier="#/3/language/structure/Object"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFResource" eSuperTypes="#/3/persistence/Resource">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Extension of the Resource class definition that is specific to EMF Repository.&#xD;&#xA; * User is not supposed to directly create it. Otherwise it will not be correctly initialized&#xD;&#xA; * You must To create one &#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.save()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if(  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; isReadOnly) {&#xA;{&#xA;&#x9;kermeta.exceptions.ResourceSaveException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createResourceSaveException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618550]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Resource.save(this, /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; uri,  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; metaModelURI, &quot;EMF&quot;, this, false)&#xA;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Set&lt;Object>.remove(Object)&#xD;&#xA;&#x9; * Remove the instance from the Resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;if( /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contains) {&#xA;{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.unSetContainingResource(/*CallVariable*/ instance)&#xA;&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Resource.save(this, /*CallVariable*/ new_uri,  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; metaModelURI, &quot;EMF&quot;, this, false)&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.saveWithNewURI(String)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="saveAndValidateWithEMF" eType="#/3/standard/Boolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Checks the Resource using the EMF validation function, and saves it if&#xD;&#xA;&#x9; * validation succeeds&#xD;&#xA;&#x9; * Applies validation to all root objects of the Resource&#xD;&#xA;&#x9; * Returns true if the validation reports no error, raises exceptions otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Resource.save(this, /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; uri,  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; metaModelURI, &quot;EMF&quot;, this, true);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.load()&#xD;&#xA;&#x9; * In case the metamodelURI was not previously set, metamodelURI is filled with&#xD;&#xA;&#x9; * the nsuri of the root package of the metamodel used to load the Resource after&#xD;&#xA;&#x9; * a successful load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; clear /*Block2*/ ();&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Resource.load(this,  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; uri,  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; metaModelURI, &quot;EMF&quot;)&#xA;&#xA;&#x9;if( (/*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; size) == (0) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*Block3*/ /*CallVariable*/ System.out. /*Block1_*/ println /*Block2*/ (&quot;Resource load failed!&quot;);&#xA;&#xA;&#x9;kermeta.exceptions.ResourceLoadException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createResourceLoadException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1618641]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{&#xA;&#x9;/*Block3*/ /*Block3*/ /*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; repository(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; resources(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1618685]). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1618662]);&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.setContainingResource(/*CallVariable*/ instance, this)&#xA;&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Set&lt;Object>.add(Object)&#xD;&#xA;&#x9; * Add an instance to the Resource &#xD;&#xA;&#x9; * Ensures that the instance is referenced by a one and only one Resource of the same Repository&#xD;&#xA;&#x9; * Ensures that the instance does not appear more than once in the Resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/3/standard/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KMResource" eSuperTypes="#/3/persistence/Resource">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * NOT IMPLEMENTED&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{}"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/3/standard/Object"/>
        </eOperations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{}"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="{}"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/3/standard/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Repository" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Abstract resource container, that contains a list of available loaded resources, &#xD;&#xA; * and methods to create or get a resource given an URI.&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/3/persistence/Resource">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Creates a new Resource with given uri, and an optional mm_uri&#xD;&#xA;&#x9; * mm_uri is required when creating a new model from scratch.&#xD;&#xA;&#x9; * Raises a ResourceCreate exception in case the Repository already&#xD;&#xA;&#x9; * contains a Resource with the given uri&#xD;&#xA;&#x9; * If uri does not points to an existing model file (in the case of&#xD;&#xA;&#x9; * a model creation), calls to load() operation will fail as long as&#xD;&#xA;&#x9; * the model has not been saved once&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/String"/>
          <eParameters name="mm_uri" eType="#/3/standard/String"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Search for elements referenced by one element contained by this repository  that are not contained by this repository&#xD;&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xD;&#xA;&#x9; * example of use :&#xD;&#xA;&#x9; *  var report : Set&lt;DanglingDiagnostic>&#xD;&#xA;     *&#x9;report := repository.findDanglingModelElements()&#xD;&#xA;     *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ kermeta.standard.Set. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; new;&#xA;&#xA;&#x9;/*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; resources(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1618758]);&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eClassifier="#/3/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="getResource" eType="#/3/persistence/Resource">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;{&#xA;&#x9;java.lang.String nUri = null;&#xA;&#xA;&#x9;java.lang.String crt_nUri = null;&#xA;&#xA;&#x9;/*CallVariable*/ nUri = fr.irisa.triskell.kermeta.runtime.basetypes.Repository.normalizeUri(/*CallVariable*/ uri);&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Repository.initRepository(this)&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;if( /*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; createResource;&#xA;&#xA;&#x9;/*Block3*/ begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; load /*Block2*/ ();&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Resource associated with the given uri if this uri is associated with&#xD;&#xA;&#x9; * an already created Resource of the Repository.&#xD;&#xA;&#x9; * If the Repository contains no Resource associated with the given uri, creates&#xD;&#xA;&#x9; * a new Resource and loads it.&#xD;&#xA;&#x9; * Raises a ResourceCreate exception if the given uri does not point to an existing&#xD;&#xA;&#x9; * model file &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/String"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="resources" ordered="false"
            upperBound="-1" eType="#/3/persistence/Resource" containment="true" eOpposite="#/3/persistence/Resource/repository"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DanglingDiagnostic" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * class used to gather the information required to make a user friendly report about a dangling element&#xD;&#xA; * (see. findDanglingModelElements())&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/3/standard/String">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*Block3*/ /*Block3*/ /*Block3*/ /*Block3*/ /*Block3*/ /*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; danglingElement(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; toString(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(&quot; referenced by &quot;). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; referencingElement(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; toString). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(&quot;.&quot;). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus(/*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; referencingProperty(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * user friendly message build with those informations&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingElement"
            eType="#/3/standard/Object"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="danglingElement" eType="#/3/standard/Object"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingProperty"
            eType="#/3/language/structure/Property"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFRepository" eSuperTypes="#/3/persistence/Repository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Repository that stores and manages resources that come from EMF&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/3/persistence/Resource">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;{&#xA;&#x9;java.lang.String nUri = null;&#xA;&#xA;&#x9;/*CallVariable*/ nUri = fr.irisa.triskell.kermeta.runtime.basetypes.Repository.normalizeUri(/*CallVariable*/ uri);&#xA;&#xA;&#x9;if( ! (/*Block3*/ /*Block3*/  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; resources(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; collect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1619177]). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; contains) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; not) {&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = fr.irisa.triskell.kermeta.runtime.basetypes.Repository.createResource(this, /*CallVariable*/ uri, /*CallVariable*/ mm_uri);&#xA;}&#xA;} else {&#xA;{&#xA;&#x9;kermeta.exceptions.ResourceCreateException e /*VariableDecl with new*/  = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createResourceCreateException();&#xA;&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1619146]&#xA;getMessage&#xA;&#xA;&#x9;throw /*CallVariable*/ e&#xA;}&#xA;}&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Repository"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Repository.createResource(String, String)&#xD;&#xA;&#x9; * Create a new resource for a model given by its uri, &#xD;&#xA;&#x9; * which meta-model is stored in file given by mm_uri&#xD;&#xA;&#x9; * If file already exists, you'll be able to call the load method to concretly load the model&#xD;&#xA;&#x9; * otherwise, you can only call the save method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/String"/>
          <eParameters name="mm_uri" eType="#/3/standard/String"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="useInterpreterInternalResources"
            eType="#/3/standard/Boolean"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrors" eType="#/3/standard/Boolean"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KMRepository" eSuperTypes="#/3/persistence/Repository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Repository that stores and manages XMI files representing Kermeta models&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/3/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Repository"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;{&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = void;&#xA;}&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/String"/>
          <eParameters name="mm_uri" eType="#/3/standard/String"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="comptest2" nsURI="http://comptest2" nsPrefix="">
    <eClassifiers xsi:type="ecore:EClass" name="Main" eSuperTypes="#/3/language/structure/Object">
      <eOperations name="main">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="{&#xA;&#x9;comptest2.ClassWithBehavior aPrinter /*VariableDecl with new*/  = comptest2.Comptest2Factory.eINSTANCE.createClassWithBehavior();&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ aPrinter. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; print /*Block2*/ ();&#xA;&#xA;&#x9;/*Block3*/ /*Block3*/ /*CallVariable*/ aPrinter. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; attr1(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; toString /*Block2*/ ();&#xA;&#xA;&#x9;comptest2.ClassWithBehavior aPrinter2 = null;&#xA;&#xA;&#x9;comptest2.ClassWithBehavior aPrinter3 /*VariableDecl with new*/  = comptest2.Comptest2Factory.eINSTANCE.createClassWithBehavior();&#xA;}"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ClassWithBehavior" eSuperTypes="#/3/language/structure/Object">
      <eOperations name="print">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="{&#xA;&#x9;java.lang.String text1 /*VariableDecl with new*/  = null;&#xA;&#xA;&#x9;java.lang.String text2 = null;&#xA;&#xA;&#x9;/*CallVariable*/ text2 = &quot;World&quot;;&#xA;&#xA;&#x9;/*Block3*/ /*CallVariable*/ System.out. /*Block1_*/ println /*Block2*/ (/*Block3*/ /*CallVariable*/ text1. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; plus);&#xA;&#xA;&#x9;if( (1) == (1) /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; equals) {&#xA;{&#xA;&#x9;/*Block3*/ /*CallVariable*/ System.out. /*Block1_*/ println /*Block2*/ (&quot;conditional&quot;);&#xA;}&#xA;}&#xA;}"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="attr1" eType="#/3/standard/String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InheritedClassWithBehavior" eSuperTypes="#/4/ClassWithBehavior #/4/EmptyClass">
      <eOperations name="test" eType="#/3/standard/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;{&#xA;&#x9;//TODO Assignment[kermeta::language::behavior::Assignment:1619258]&#xA;getAttr1&#xA;&#xA;&#x9;java.lang.String _return = null;&#xA;&#xA;&#x9;/*CallVariable*/ _return =  /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; attr1;&#xA;&#xA;&#x9;begin &lt;void> &lt;void>/nresult/nend &lt;void> &lt;void>/n = /*CallVariable*/ _return;&#xA;}&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="print">
        <eAnnotations source="kermeta">
          <details key="superOperation" value="comptest2::ClassWithBehavior"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="{&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EmptyClass" eSuperTypes="#/3/language/structure/Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="ParameterizedEmptyClass" eSuperTypes="#/3/language/structure/Object">
      <eTypeParameters name="A"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ParameterizedClass">
      <eTypeParameters name="B"/>
      <eOperations name="eachOwnedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="{&#xA;&#x9;/*Block3*/ /*Block3*/ this. /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ownedTags(). /*Block1*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; each /*Block2*/ (//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:1619299]);&#xA;&#xA;&#x9;/*CallVariable*/ func1&#xA;}"/>
        </eAnnotations>
        <eParameters name="str" eType="#/3/standard/String"/>
        <eParameters name="func0" eType="#/4/_KermetaSpecialTypesAlias_">
          <eAnnotations source="kermeta.functionType">
            <details key="0" value="kermeta::language::structure::Object"/>
            <details key="1" value="kermeta::language::structure::Object"/>
          </eAnnotations>
        </eParameters>
        <eParameters name="func1" eType="#/4/_KermetaSpecialTypesAlias_">
          <eAnnotations source="kermeta.functionType">
            <details key="0" value="kermeta::standard::Boolean"/>
            <details key="1" value="kermeta::language::structure::Object"/>
          </eAnnotations>
        </eParameters>
      </eOperations>
      <eOperations name="test2">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="{}"/>
        </eAnnotations>
        <eTypeParameters name="B"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="testString" eType="#/4/TestString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="attr1">
        <eGenericType eClassifier="#/4/ParameterizedClass">
          <eTypeArguments eClassifier="#/3/standard/String"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#/4/ParameterizedEmptyClass">
        <eTypeArguments eTypeParameter="#/4/ParameterizedClass/B"/>
      </eGenericSuperTypes>
      <eGenericSuperTypes eClassifier="#/4/ParameterizedEmptyClass">
        <eTypeArguments eClassifier="#/3/standard/String"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="TestString" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EClass" name="_KermetaSpecialTypesAlias_" instanceClassName="java.lang.Object">
      <eAnnotations source="kermeta">
        <details key="alias" value="_KermetaSpecialTypesAlias_"/>
      </eAnnotations>
    </eClassifiers>
  </ecore:EPackage>
</xmi:XMI>
