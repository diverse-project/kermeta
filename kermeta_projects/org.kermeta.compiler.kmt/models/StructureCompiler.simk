<?xml version="1.0" encoding="ASCII"?>
<simk:SIMKModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:simk="http://www.kermeta.org/simk">
  <sMContexts staticMethods="//@staticMethods.0" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getLoopConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.1" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.2" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushKRErrorStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.3" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getIfConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.4" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printLbdExpSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.5" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.6" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeConstants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.7" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.8" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__popResultLastStatementStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.9" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeFrameworkOperations__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.10" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.11" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushCondStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.12" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.13" qualifiedNameFinalPackage="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createAbstract__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.14" qualifiedNameFinalPackage="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__getEmptyKermetaEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.15" qualifiedNameFinalPackage="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__initialize__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.16" qualifiedNameFinalPackage="kermeta.language.runner">
    <sMClass name="ReflectiveCollection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.17" qualifiedNameFinalPackage="kermeta.language.runner">
    <sMClass name="ReflectiveSequence__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.18" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.19" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__getClassFromPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.20" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.21" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.22" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeQName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.23" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.24" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isEDataType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.25" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isEnumeration__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.26" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getMetaClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.27" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.28" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__checkInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.29" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.30" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.31" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getAllContainedElementAsType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.32" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__oid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.33" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getCompiledJavaExtern__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.34" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__checkAllInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.35" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeSelfExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.36" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFNeedProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.37" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getDeprecated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.38" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.39" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.40" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFIsTransient__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.41" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__isFrozen__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.42" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__hashcode__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.43" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__callsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.44" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeIsSerializable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.45" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__container__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.46" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__freeze__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.47" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__containingResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.48" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.49" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getRecopyInValueTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.50" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getFinalName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.51" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getEMFRenameAs__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.52" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.53" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.54" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isCollection__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.55" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.56" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__allSuperTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.57" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.58" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__allAttributes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.59" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__allSuperClasses__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.60" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__getClassDefinitionAsTyped__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.61" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.62" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Property__printGetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.63" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Property__printSetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.64" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.65" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeCompiled__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.66" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.67" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeDuplicated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.68" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.69" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__hasAValueTypedParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.70" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Parameter__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.71" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Parameter__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.72" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getAllPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.73" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Package__getAllSubPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.74" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ModelType___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.75" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="NamedElement__qualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.76" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Block__containsRescue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.77" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticEnumLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.78" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.79" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.80" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Expression__endOfExpressionFixer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.81" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Expression__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.82" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Expression__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.83" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterManyAndForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.84" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInLambdaExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.85" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCorrespondingLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.86" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.87" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCallFeatureCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.88" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInAFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.89" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.90" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.91" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.92" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.93" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.94" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__retrieveCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.95" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.96" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.97" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.98" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.99" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getParamBindings__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.100" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.101" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isFromClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.102" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__printGetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.103" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__printSetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.104" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.105" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Conditional__conditionIsCallFeatureThatCallsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.106" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Stack__peek__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.107" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Stack__pop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.108" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="StringBuffer__length__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.109" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="StringBuffer__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.110" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.111" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__values__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.112" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__keys__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.113" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__keyIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.114" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__valueIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.115" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.116" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Void__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.117" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Void__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.118 //@staticMethods.119 //@staticMethods.120 //@staticMethods.121 //@staticMethods.122 //@staticMethods.123 //@staticMethods.124 //@staticMethods.125 //@staticMethods.126 //@staticMethods.127 //@staticMethods.128 //@staticMethods.129 //@staticMethods.130 //@staticMethods.131 //@staticMethods.132 //@staticMethods.133 //@staticMethods.134 //@staticMethods.135 //@staticMethods.136 //@staticMethods.137 //@staticMethods.138 //@staticMethods.139 //@staticMethods.140 //@staticMethods.141 //@staticMethods.142 //@staticMethods.143" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="BooleanWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.144 //@staticMethods.145 //@staticMethods.146 //@staticMethods.147 //@staticMethods.148 //@staticMethods.149 //@staticMethods.150 //@staticMethods.151 //@staticMethods.152 //@staticMethods.153 //@staticMethods.154 //@staticMethods.155 //@staticMethods.156 //@staticMethods.157 //@staticMethods.158 //@staticMethods.159 //@staticMethods.160 //@staticMethods.161 //@staticMethods.162 //@staticMethods.163 //@staticMethods.164 //@staticMethods.165 //@staticMethods.166 //@staticMethods.167 //@staticMethods.168 //@staticMethods.169 //@staticMethods.170 //@staticMethods.171 //@staticMethods.172 //@staticMethods.173 //@staticMethods.174 //@staticMethods.175" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="IntegerWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.176 //@staticMethods.177 //@staticMethods.178 //@staticMethods.179 //@staticMethods.180 //@staticMethods.181 //@staticMethods.182 //@staticMethods.183 //@staticMethods.184 //@staticMethods.185 //@staticMethods.186 //@staticMethods.187 //@staticMethods.188 //@staticMethods.189 //@staticMethods.190 //@staticMethods.191 //@staticMethods.192 //@staticMethods.193 //@staticMethods.194 //@staticMethods.195 //@staticMethods.196 //@staticMethods.197 //@staticMethods.198 //@staticMethods.199 //@staticMethods.200 //@staticMethods.201 //@staticMethods.202 //@staticMethods.203 //@staticMethods.204 //@staticMethods.205 //@staticMethods.206" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="RealWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.207 //@staticMethods.208 //@staticMethods.209 //@staticMethods.210 //@staticMethods.211 //@staticMethods.212 //@staticMethods.213 //@staticMethods.214 //@staticMethods.215 //@staticMethods.216 //@staticMethods.217 //@staticMethods.218 //@staticMethods.219 //@staticMethods.220 //@staticMethods.221 //@staticMethods.222 //@staticMethods.223 //@staticMethods.224 //@staticMethods.225 //@staticMethods.226 //@staticMethods.227 //@staticMethods.228 //@staticMethods.229 //@staticMethods.230 //@staticMethods.231" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="CharacterWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.232 //@staticMethods.233 //@staticMethods.234 //@staticMethods.235 //@staticMethods.236 //@staticMethods.237 //@staticMethods.238 //@staticMethods.239 //@staticMethods.240 //@staticMethods.241 //@staticMethods.242 //@staticMethods.243 //@staticMethods.244 //@staticMethods.245 //@staticMethods.246 //@staticMethods.247 //@staticMethods.248 //@staticMethods.249 //@staticMethods.250 //@staticMethods.251 //@staticMethods.252 //@staticMethods.253 //@staticMethods.254 //@staticMethods.255 //@staticMethods.256 //@staticMethods.257 //@staticMethods.258 //@staticMethods.259 //@staticMethods.260 //@staticMethods.261 //@staticMethods.262 //@staticMethods.263 //@staticMethods.264 //@staticMethods.265 //@staticMethods.266 //@staticMethods.267 //@staticMethods.268 //@staticMethods.269 //@staticMethods.270 //@staticMethods.271 //@staticMethods.272 //@staticMethods.273 //@staticMethods.274 //@staticMethods.275" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="StringWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.276" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__one__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.277" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__sum__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.278" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.279" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.280" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__isEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.281" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.282" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__any__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.283" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__empty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.284" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__isNotEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.285" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__iterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.286" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.287" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.288" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.289" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.290" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.291" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.292" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.293" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.294" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.295" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.296" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.297" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.298" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.299" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="OrderedCollection__last__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.300" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="OrderedCollection__first__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.301" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Iterator__hasNext__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.302" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Iterator__next__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.303" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Iterator__isOff__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.304" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="UnknownJavaObject__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.305" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.306" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.307" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.308" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__instances__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.309" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__normalizedUri__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.310" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="EMFResource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.311" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="EMFResource__saveAndValidateWithEMF__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.312" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="EMFResource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.313" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Repository__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.314" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="DanglingDiagnostic__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.315" qualifiedNameFinalPackage="kermeta.interpreter.runner">
    <sMClass name="DynamicExpression__initializeDefaults__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.316" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Fallible__getLogKermeta__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.317" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Fallible__number__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.318" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Fallible__mustStop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.319" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Log__newAttempt__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.320" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Failure__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.321" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Error__makeTearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.322" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Error__makeSetUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.323" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Error__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.324" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Test__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.325" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Test__initLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.326" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestSuite__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.327" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__raiseIfHasFailures__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.328" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__setUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.329" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__getLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.330" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__getTestMethodName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.331" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.332" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.333" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__tearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.334" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestRunner__printTestResult__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.335" qualifiedNameFinalPackage="kermeta.compiler.runner">
    <sMClass name="Main__main_inner__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.336" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="SIMKModel__getNextId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.337" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="StaticMethod__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.338" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="StaticMethod__getParentMethodFromModel__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.339" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="SMClass__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.340" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="SMClass__getQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.341" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EClass__getFeatureCount__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.342" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EClassifier__getClassifierID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.343" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContainer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.344" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eCrossReferences__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.345" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContainingFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.346" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.347" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContainmentFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.348" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.349" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.350" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eIsProxy__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.351" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eAllContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.352" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EStructuralFeature__getFeatureID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.353" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EStructuralFeature__getContainerClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.354" qualifiedNameFinalPackage="traceability.runner">
    <sMClass name="File__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.355 //@staticMethods.356 //@staticMethods.357" qualifiedNameFinalPackage="kermeta.language.helper">
    <sMClass name="ReflectiveCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.358 //@staticMethods.359 //@staticMethods.361" qualifiedNameFinalPackage="kermeta.language.structure.helper">
    <sMClass name="ObjectSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.360" qualifiedNameFinalPackage="kermeta.language.structure.helper">
    <sMClass name="TypeSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.362 //@staticMethods.363" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="OrderedCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.364 //@staticMethods.366" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="SetSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.365" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="CollectionSuper" usages="Super"/>
  </sMContexts>
  <staticMethods name="main" sMContext="//@sMContexts.0" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getLoopConditionId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.1" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.2" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushKRErrorStack();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.3" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getIfConditionId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.4" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.printLbdExpSuffix();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.5" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getResultLastStatementType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.6" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initializeConstants();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.7" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushFtSuffix();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.8" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.popResultLastStatementStack();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.9" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initializeFrameworkOperations();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.10" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.printFtSuffix();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.11" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushCondStack();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.12" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getResultLastStatementId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.13" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.createAbstract();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.14" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.getEmptyKermetaEAnnotation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.15" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.JavaKeyWordList&quot;);&#xA;anExec.initialize();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.16" body="&#xA;kermeta.language.ReflectiveCollection anExec = (kermeta.language.ReflectiveCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.ReflectiveCollection&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.17" body="&#xA;kermeta.language.ReflectiveSequence anExec = (kermeta.language.ReflectiveSequence) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.ReflectiveSequence&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.18" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.19" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getClassFromPrimitiveType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.20" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.21" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getTypeName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.22" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getTypeQName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.23" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isPrimitiveType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.24" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isEDataType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.25" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isEnumeration();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.26" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getMetaClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.27" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFEDataTypeInstanceClassName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.28" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.checkInvariants();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.29" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFInstanceClassName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.30" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.31" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getAllContainedElementAsType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.32" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.oid();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.33" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getCompiledJavaExtern();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.34" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.checkAllInvariants();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.35" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getWrapperValueTypeSelfExpression();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.36" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFNeedProperty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.37" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getDeprecated();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.38" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.39" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getWrapperValueTypeReturnType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.40" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFIsTransient();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.41" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.isFrozen();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.42" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.hashcode();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.43" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.callsFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.44" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFEDataTypeIsSerializable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.45" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.container();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.46" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.freeze();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.47" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.containingResource();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.48" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.49" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getRecopyInValueTypes();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.50" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getFinalName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.51" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getEMFRenameAs();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.52" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.53" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isIterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.54" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isCollection();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.55" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.56" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.allSuperTypes();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.57" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec._new();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.58" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.allAttributes();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.59" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.allSuperClasses();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.60" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.getClassDefinitionAsTyped();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.61" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.62" body="&#xA;kermeta.language.structure.Property anExec = (kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Property&quot;);&#xA;anExec.printGetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.63" body="&#xA;kermeta.language.structure.Property anExec = (kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Property&quot;);&#xA;anExec.printSetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.64" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.65" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.mustBeCompiled();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.66" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.67" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.mustBeDuplicated();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.68" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.69" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.hasAValueTypedParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.70" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Parameter&quot;);&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.71" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Parameter&quot;);&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.72" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.getAllPackages();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.73" body="&#xA;kermeta.language.structure.Package anExec = (kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Package&quot;);&#xA;anExec.getAllSubPackages();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.74" body="&#xA;kermeta.language.structure.ModelType anExec = (kermeta.language.structure.ModelType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelType&quot;);&#xA;anExec._new();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.75" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.NamedElement&quot;);&#xA;anExec.qualifiedName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.76" body="&#xA;kermeta.language.behavior.Block anExec = (kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Block&quot;);&#xA;anExec.containsRescue();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.77" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticEnumLiteral();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.78" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticOperation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.79" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticProperty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.80" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.endOfExpressionFixer();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.81" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.82" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.83" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterManyAndForOwningOperation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.84" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isDeclaredInLambdaExpression();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.85" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getCorrespondingLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.86" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.87" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getCallFeatureCorrespondingParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.88" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isDeclaredInAFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.89" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.90" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterMany();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.91" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterSingle();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.92" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperationMany();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.93" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.94" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.retrieveCorrespondingParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.95" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.96" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperationSingle();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.97" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.98" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.99" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getParamBindings();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.100" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getFunctionTypeReturnType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.101" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isFromClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.102" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.printGetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.103" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.printSetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.104" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.105" body="&#xA;kermeta.language.behavior.Conditional anExec = (kermeta.language.behavior.Conditional) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Conditional&quot;);&#xA;anExec.conditionIsCallFeatureThatCallsFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.106" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&quot;);&#xA;anExec.peek();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.107" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&quot;);&#xA;anExec.pop();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.108" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.length();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.109" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.110" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.111" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.values();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.112" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.keys();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.113" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.keyIterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.114" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.valueIterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.115" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.size();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.116" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Void&quot;);&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.117" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Void&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="not" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.not(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="xor" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.and(self, kermeta.standard.helper.BooleanWrapper.not(other)), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(self), other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_595 = false;&#xA;&#x9;idIfCond_595 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;if( idIfCond_595 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="or" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.or(self, other);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="nand" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="implies" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other)), self));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.118" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_596 = false;&#xA;&#x9;idIfCond_596 = self;&#xA;&#xA;&#x9;if( idIfCond_596 ) {&#xA;&#xA;&#x9;result = &quot;true&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;false&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="and" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.and(self, other);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;cl&quot;));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.118" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.118" body="&#xA;&#x9;java.lang.Boolean idIfCond_597 = false;&#xA;&#x9;idIfCond_597 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;property.getType()&quot;));&#xA;&#xA;&#x9;if( idIfCond_597 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.118" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_598 = false;&#xA;&#x9;idIfCond_598 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_598 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft117 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_599 = false;&#xA;&#x9;while( !idLoopCond_599 ) {&#xA;&#x9;idLoopCond_599 = it_ft117.isOff();&#xA;&#x9;if ( idLoopCond_599 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp117 = it_ft117.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft118 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft118 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft118 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp117.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_601 = false;&#xA;&#x9;while( !idLoopCond_601 ) {&#xA;&#x9;idLoopCond_601 = kermeta.standard.helper.BooleanWrapper.or(it_ft118.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft118, false));&#xA;&#x9;if ( idLoopCond_601 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp118 = it_ft118.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp118.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft118 = kermeta.standard.helper.BooleanWrapper.or(test_ft118, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft118 = test_ft118;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_600 = false;&#xA;&#x9;idIfCond_600 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft118), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp117.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_600 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp117);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_602 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft119 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_603 = false;&#xA;&#xA;&#x9;if( idIfCond_603 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/**This variable should be never used**/ kermeta.language.structure.Object f_lbdExp119 = null;&#xA;&#xA;&#x9;result_ft119 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft119 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_602 = result_ft119;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_602 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_604 = false;&#xA;&#x9;idIfCond_604 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp117.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp117.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_604 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp117.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_605 = false;&#xA;&#x9;idIfCond_605 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp117.getLower());&#xA;&#xA;&#x9;if( idIfCond_605 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp117.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_606 = false;&#xA;&#x9;idIfCond_606 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp117.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_606 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp117.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.118" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.118" body="&#xA;&#x9;java.lang.Boolean idIfCond_607 = false;&#xA;&#x9;idIfCond_607 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_607 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft120 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_608 = false;&#xA;&#x9;while( !idLoopCond_608 ) {&#xA;&#x9;idLoopCond_608 = it_ft120.isOff();&#xA;&#x9;if ( idLoopCond_608 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp120 = it_ft120.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_609 = false;&#xA;&#x9;idIfCond_609 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp120.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp120.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_609 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_610 = false;&#xA;&#x9;idIfCond_610 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp120)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp120)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_610 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp120);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft121 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_611 = false;&#xA;&#x9;while( !idLoopCond_611 ) {&#xA;&#x9;idLoopCond_611 = it_ft121.isOff();&#xA;&#x9;if ( idLoopCond_611 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp121 = it_ft121.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp121);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp120));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.118" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.118" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.118" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.118" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.118" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.118" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.118" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.118" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_612 = false;&#xA;&#x9;idIfCond_612 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;));&#xA;&#xA;&#x9;if( idIfCond_612 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="plus" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_613 = false;&#xA;&#x9;idIfCond_613 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_613 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_614 = false;&#xA;&#x9;idIfCond_614 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_614 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_615 = false;&#xA;&#x9;idIfCond_615 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_615 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLower(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLower(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="mult" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_616 = false;&#xA;&#x9;idIfCond_616 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_616 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="minus" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_617 = false;&#xA;&#x9;idIfCond_617 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_617 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_618 = false;&#xA;&#x9;idIfCond_618 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_618 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_619 = false;&#xA;&#x9;idIfCond_619 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_619 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="mod" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_620 = false;&#xA;&#x9;idIfCond_620 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_620 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_621 = false;&#xA;&#x9;idIfCond_621 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_621 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.mod(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toReal" sMContext="//@sMContexts.119" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toReal(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="div" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_622 = false;&#xA;&#x9;idIfCond_622 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_622 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_623 = false;&#xA;&#x9;idIfCond_623 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_623 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_624 = false;&#xA;&#x9;idIfCond_624 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_624 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_625 = false;&#xA;&#x9;idIfCond_625 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_625 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.NotComparableException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_626 = false;&#xA;&#x9;idIfCond_626 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_626 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_627 = false;&#xA;&#x9;idIfCond_627 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_627 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreater(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreater(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_628 = false;&#xA;&#x9;idIfCond_628 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_628 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_629 = false;&#xA;&#x9;idIfCond_629 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_629 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreaterOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreaterOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="uminus" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.minus(0, self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.119" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_630 = false;&#xA;&#x9;idIfCond_630 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_630 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_631 = false;&#xA;&#x9;idIfCond_631 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_631 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLowerOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLowerOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;cl&quot;));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.119" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.119" body="&#xA;&#x9;java.lang.Boolean idIfCond_632 = false;&#xA;&#x9;idIfCond_632 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;property.getType()&quot;));&#xA;&#xA;&#x9;if( idIfCond_632 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.119" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_633 = false;&#xA;&#x9;idIfCond_633 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_633 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft122 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_634 = false;&#xA;&#x9;while( !idLoopCond_634 ) {&#xA;&#x9;idLoopCond_634 = it_ft122.isOff();&#xA;&#x9;if ( idLoopCond_634 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp122 = it_ft122.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft123 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft123 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft123 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp122.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_636 = false;&#xA;&#x9;while( !idLoopCond_636 ) {&#xA;&#x9;idLoopCond_636 = kermeta.standard.helper.BooleanWrapper.or(it_ft123.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft123, false));&#xA;&#x9;if ( idLoopCond_636 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp123 = it_ft123.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp123.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft123 = kermeta.standard.helper.BooleanWrapper.or(test_ft123, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft123 = test_ft123;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_635 = false;&#xA;&#x9;idIfCond_635 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft123), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp122.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_635 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp122);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_637 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft124 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_638 = false;&#xA;&#xA;&#x9;if( idIfCond_638 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/**This variable should be never used**/ kermeta.language.structure.Object f_lbdExp124 = null;&#xA;&#xA;&#x9;result_ft124 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft124 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_637 = result_ft124;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_637 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_639 = false;&#xA;&#x9;idIfCond_639 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp122.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp122.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_639 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp122.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_640 = false;&#xA;&#x9;idIfCond_640 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp122.getLower());&#xA;&#xA;&#x9;if( idIfCond_640 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp122.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_641 = false;&#xA;&#x9;idIfCond_641 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp122.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_641 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp122.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.119" body="&#xA;&#x9;java.lang.Boolean idIfCond_642 = false;&#xA;&#x9;idIfCond_642 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_642 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft125 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_643 = false;&#xA;&#x9;while( !idLoopCond_643 ) {&#xA;&#x9;idLoopCond_643 = it_ft125.isOff();&#xA;&#x9;if ( idLoopCond_643 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp125 = it_ft125.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_644 = false;&#xA;&#x9;idIfCond_644 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp125.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp125.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_644 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_645 = false;&#xA;&#x9;idIfCond_645 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp125)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp125)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_645 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp125);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft126 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_646 = false;&#xA;&#x9;while( !idLoopCond_646 ) {&#xA;&#x9;idLoopCond_646 = it_ft126.isOff();&#xA;&#x9;if ( idLoopCond_646 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp126 = it_ft126.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp126);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp125));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.119" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.119" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.119" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.119" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.119" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.119" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.119" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.119" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_647 = false;&#xA;&#x9;idIfCond_647 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;));&#xA;&#xA;&#x9;if( idIfCond_647 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="plus" sMContext="//@sMContexts.120" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_648 = false;&#xA;&#x9;idIfCond_648 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_648 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="mult" sMContext="//@sMContexts.120" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_649 = false;&#xA;&#x9;idIfCond_649 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_649 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="minus" sMContext="//@sMContexts.120" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_650 = false;&#xA;&#x9;idIfCond_650 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_650 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="toInteger" sMContext="//@sMContexts.120" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toInteger(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="uminus" sMContext="//@sMContexts.120" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.minus(kermeta.standard.helper.IntegerWrapper.toReal(0), self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_651 = false;&#xA;&#x9;idIfCond_651 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_651 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_652 = false;&#xA;&#x9;idIfCond_652 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_652 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="div" sMContext="//@sMContexts.120" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_653 = false;&#xA;&#x9;idIfCond_653 = kermeta.standard.helper.RealWrapper.equals(other, kermeta.standard.helper.IntegerWrapper.toReal(0));&#xA;&#xA;&#x9;if( idIfCond_653 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_654 = false;&#xA;&#x9;idIfCond_654 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_654 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.120" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.120" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_655 = false;&#xA;&#x9;idIfCond_655 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_655 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_656 = false;&#xA;&#x9;idIfCond_656 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_656 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.NotComparableException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;cl&quot;));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.120" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.120" body="&#xA;&#x9;java.lang.Boolean idIfCond_657 = false;&#xA;&#x9;idIfCond_657 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;property.getType()&quot;));&#xA;&#xA;&#x9;if( idIfCond_657 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.120" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_658 = false;&#xA;&#x9;idIfCond_658 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_658 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft127 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_659 = false;&#xA;&#x9;while( !idLoopCond_659 ) {&#xA;&#x9;idLoopCond_659 = it_ft127.isOff();&#xA;&#x9;if ( idLoopCond_659 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp127 = it_ft127.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft128 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft128 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft128 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp127.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_661 = false;&#xA;&#x9;while( !idLoopCond_661 ) {&#xA;&#x9;idLoopCond_661 = kermeta.standard.helper.BooleanWrapper.or(it_ft128.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft128, false));&#xA;&#x9;if ( idLoopCond_661 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp128 = it_ft128.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp128.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft128 = kermeta.standard.helper.BooleanWrapper.or(test_ft128, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft128 = test_ft128;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_660 = false;&#xA;&#x9;idIfCond_660 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft128), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp127.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_660 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp127);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_662 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft129 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_663 = false;&#xA;&#xA;&#x9;if( idIfCond_663 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/**This variable should be never used**/ kermeta.language.structure.Object f_lbdExp129 = null;&#xA;&#xA;&#x9;result_ft129 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft129 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_662 = result_ft129;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_662 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_664 = false;&#xA;&#x9;idIfCond_664 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp127.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp127.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_664 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp127.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_665 = false;&#xA;&#x9;idIfCond_665 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp127.getLower());&#xA;&#xA;&#x9;if( idIfCond_665 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp127.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_666 = false;&#xA;&#x9;idIfCond_666 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp127.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_666 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp127.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.120" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.120" body="&#xA;&#x9;java.lang.Boolean idIfCond_667 = false;&#xA;&#x9;idIfCond_667 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_667 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft130 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_668 = false;&#xA;&#x9;while( !idLoopCond_668 ) {&#xA;&#x9;idLoopCond_668 = it_ft130.isOff();&#xA;&#x9;if ( idLoopCond_668 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp130 = it_ft130.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_669 = false;&#xA;&#x9;idIfCond_669 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp130.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp130.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_669 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_670 = false;&#xA;&#x9;idIfCond_670 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp130)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp130)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_670 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp130);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft131 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_671 = false;&#xA;&#x9;while( !idLoopCond_671 ) {&#xA;&#x9;idLoopCond_671 = it_ft131.isOff();&#xA;&#x9;if ( idLoopCond_671 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp131 = it_ft131.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp131);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp130));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.120" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.120" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.120" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.120" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.120" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.120" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.120" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.120" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_672 = false;&#xA;&#x9;idIfCond_672 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;));&#xA;&#xA;&#x9;if( idIfCond_672 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_673 = false;&#xA;&#x9;idIfCond_673 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Character&quot;));&#xA;&#xA;&#x9;if( idIfCond_673 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.121" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_674 = false;&#xA;&#x9;idIfCond_674 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_674 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.121" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;cl&quot;));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.121" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.121" body="&#xA;&#x9;java.lang.Boolean idIfCond_675 = false;&#xA;&#x9;idIfCond_675 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;property.getType()&quot;));&#xA;&#xA;&#x9;if( idIfCond_675 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.121" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_676 = false;&#xA;&#x9;idIfCond_676 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_676 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft132 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_677 = false;&#xA;&#x9;while( !idLoopCond_677 ) {&#xA;&#x9;idLoopCond_677 = it_ft132.isOff();&#xA;&#x9;if ( idLoopCond_677 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp132 = it_ft132.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft133 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft133 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft133 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp132.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_679 = false;&#xA;&#x9;while( !idLoopCond_679 ) {&#xA;&#x9;idLoopCond_679 = kermeta.standard.helper.BooleanWrapper.or(it_ft133.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft133, false));&#xA;&#x9;if ( idLoopCond_679 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp133 = it_ft133.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp133.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft133 = kermeta.standard.helper.BooleanWrapper.or(test_ft133, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft133 = test_ft133;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_678 = false;&#xA;&#x9;idIfCond_678 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft133), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp132.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_678 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp132);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_680 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft134 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_681 = false;&#xA;&#xA;&#x9;if( idIfCond_681 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/**This variable should be never used**/ kermeta.language.structure.Object f_lbdExp134 = null;&#xA;&#xA;&#x9;result_ft134 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft134 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_680 = result_ft134;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_680 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_682 = false;&#xA;&#x9;idIfCond_682 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp132.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp132.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_682 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp132.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_683 = false;&#xA;&#x9;idIfCond_683 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp132.getLower());&#xA;&#xA;&#x9;if( idIfCond_683 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp132.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_684 = false;&#xA;&#x9;idIfCond_684 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp132.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_684 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp132.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.121" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.121" body="&#xA;&#x9;java.lang.Boolean idIfCond_685 = false;&#xA;&#x9;idIfCond_685 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_685 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft135 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_686 = false;&#xA;&#x9;while( !idLoopCond_686 ) {&#xA;&#x9;idLoopCond_686 = it_ft135.isOff();&#xA;&#x9;if ( idLoopCond_686 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp135 = it_ft135.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_687 = false;&#xA;&#x9;idIfCond_687 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp135.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp135.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_687 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_688 = false;&#xA;&#x9;idIfCond_688 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp135)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp135)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_688 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp135);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft136 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_689 = false;&#xA;&#x9;while( !idLoopCond_689 ) {&#xA;&#x9;idLoopCond_689 = it_ft136.isOff();&#xA;&#x9;if ( idLoopCond_689 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp136 = it_ft136.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp136);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp135));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.121" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.121" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.121" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.121" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.121" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.121" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.121" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_690 = false;&#xA;&#x9;idIfCond_690 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;));&#xA;&#xA;&#x9;if( idIfCond_690 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.121" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="append" sMContext="//@sMContexts.122" body="&#xA;&#x9;java.lang.Boolean idIfCond_691 = false;&#xA;&#x9;idIfCond_691 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_691 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.StringUtil.append(self, other);&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="plus" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_692 = false;&#xA;&#x9;idIfCond_692 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_692 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, kermeta.standard.helper.StringWrapper.toString(other));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_693 = false;&#xA;&#x9;idIfCond_693 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;));&#xA;&#xA;&#x9;if( idIfCond_693 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getPropertyInfos" sMContext="//@sMContexts.122" body="&#xA;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_infos = ((kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;java.lang.String>&quot;));&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = ((kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>&quot;));&#xA;&#xA;&#x9;set_infos = kermeta.standard.helper.StringWrapper.split(self, &quot; &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft137 = set_infos.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_694 = false;&#xA;&#x9;while( !idLoopCond_694 ) {&#xA;&#x9;idLoopCond_694 = it_ft137.isOff();&#xA;&#x9;if ( idLoopCond_694 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String i_lbdExp137 = it_ft137.next();&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> tmp_set_infos = kermeta.standard.helper.StringWrapper.split(i_lbdExp137, &quot;=&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_695 = false;&#xA;&#x9;idIfCond_695 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(tmp_set_infos.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_695 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_696 = false;&#xA;&#x9;idIfCond_696 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tmp_set_infos.elementAt(0)));&#xA;&#xA;&#x9;if( idIfCond_696 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_697 = false;&#xA;&#x9;idIfCond_697 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tmp_set_infos.elementAt(1))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(tmp_set_infos.elementAt(1), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_697 ) {&#xA;&#xA;&#x9;map_infos.put(tmp_set_infos.elementAt(0), tmp_set_infos.elementAt(1));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = map_infos;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>"/>
  </staticMethods>
  <staticMethods name="normalizeStatement" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(kermeta.standard.helper.StringWrapper.replace(self, &quot; == null&quot;, &quot; == null&quot;), &quot;;&quot;, &quot;;&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="toReal" sMContext="//@sMContexts.122" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toReal(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_698 = false;&#xA;&#x9;idIfCond_698 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_698 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="toBoolean" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toBoolean(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_699 = false;&#xA;&#x9;idIfCond_699 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_699 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="replaceExtension" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_str = kermeta.standard.helper.StringWrapper.split(self, &quot;\.&quot;);&#xA;&#xA;&#x9;java.lang.Integer inc_seg = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft138 = set_str.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_700 = false;&#xA;&#x9;while( !idLoopCond_700 ) {&#xA;&#x9;idLoopCond_700 = it_ft138.isOff();&#xA;&#x9;if ( idLoopCond_700 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String seg_lbdExp138 = it_ft138.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_701 = false;&#xA;&#x9;idIfCond_701 = kermeta.standard.helper.IntegerWrapper.isLower(inc_seg, kermeta.standard.helper.IntegerWrapper.minus(set_str.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_701 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, seg_lbdExp138), &quot;\\.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;inc_seg = kermeta.standard.helper.IntegerWrapper.plus(inc_seg, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, new_extension);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="new_extension" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isValueType" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_702 = false;&#xA;&#x9;idIfCond_702 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getValueTypeMapping()).contains(self);&#xA;&#xA;&#x9;if( idIfCond_702 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.122" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_703 = false;&#xA;&#x9;idIfCond_703 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_703 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="contains" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.contains(self, str1);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="indexOf" sMContext="//@sMContexts.122" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.indexOf(self, str);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="elementAt" sMContext="//@sMContexts.122" body="&#xA;java.lang.Character result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_704 = false;&#xA;&#x9;idIfCond_704 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(self), 1)));&#xA;&#xA;&#x9;if( idIfCond_704 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Character) org.kermeta.compil.runtime.helper.basetypes.StringUtil.elementAt(self, index);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Character"/>
  </staticMethods>
  <staticMethods name="capName" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.toUpperCase(kermeta.standard.helper.StringWrapper.substring(self, 0, 1)), kermeta.standard.helper.StringWrapper.substring(self, 1, kermeta.standard.helper.StringWrapper.size(self)));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="size" sMContext="//@sMContexts.122" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.size(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="replace" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.replace(self, str1, str2);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMParameters name="str2" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="toUpperCase" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toUpperCase(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="toInteger" sMContext="//@sMContexts.122" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toInteger(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_705 = false;&#xA;&#x9;idIfCond_705 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_705 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toLowerCase" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toLowerCase(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="substring" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_706 = false;&#xA;&#x9;idIfCond_706 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(startIndex, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(startIndex, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(subStringSize, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(subStringSize, startIndex));&#xA;&#xA;&#x9;if( idIfCond_706 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.substring(self, startIndex, subStringSize);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="startIndex" type="java.lang.Integer"/>
    <sMParameters name="subStringSize" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="split" sMContext="//@sMContexts.122" body="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.basetypes.StringUtil.split(self, delimiter);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="delimiter" type="java.lang.String"/>
    <sMReturn type="kermeta.standard.OrderedSet&lt;java.lang.String>"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.122" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = self;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;cl&quot;));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.122" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.122" body="&#xA;&#x9;java.lang.Boolean idIfCond_707 = false;&#xA;&#x9;idIfCond_707 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;property.getType()&quot;));&#xA;&#xA;&#x9;if( idIfCond_707 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.122" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_708 = false;&#xA;&#x9;idIfCond_708 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_708 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft139 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_709 = false;&#xA;&#x9;while( !idLoopCond_709 ) {&#xA;&#x9;idLoopCond_709 = it_ft139.isOff();&#xA;&#x9;if ( idLoopCond_709 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp139 = it_ft139.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft140 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft140 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft140 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp139.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_711 = false;&#xA;&#x9;while( !idLoopCond_711 ) {&#xA;&#x9;idLoopCond_711 = kermeta.standard.helper.BooleanWrapper.or(it_ft140.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft140, false));&#xA;&#x9;if ( idLoopCond_711 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp140 = it_ft140.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp140.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft140 = kermeta.standard.helper.BooleanWrapper.or(test_ft140, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft140 = test_ft140;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_710 = false;&#xA;&#x9;idIfCond_710 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft140), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp139.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_710 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp139);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_712 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft141 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_713 = false;&#xA;&#xA;&#x9;if( idIfCond_713 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/**This variable should be never used**/ kermeta.language.structure.Object f_lbdExp141 = null;&#xA;&#xA;&#x9;result_ft141 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft141 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_712 = result_ft141;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_712 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_714 = false;&#xA;&#x9;idIfCond_714 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp139.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp139.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_714 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp139.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_715 = false;&#xA;&#x9;idIfCond_715 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp139.getLower());&#xA;&#xA;&#x9;if( idIfCond_715 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp139.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_716 = false;&#xA;&#x9;idIfCond_716 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp139.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_716 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp139.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.122" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.122" body="&#xA;&#x9;java.lang.Boolean idIfCond_717 = false;&#xA;&#x9;idIfCond_717 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_717 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft142 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_718 = false;&#xA;&#x9;while( !idLoopCond_718 ) {&#xA;&#x9;idLoopCond_718 = it_ft142.isOff();&#xA;&#x9;if ( idLoopCond_718 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp142 = it_ft142.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_719 = false;&#xA;&#x9;idIfCond_719 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp142.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp142.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_719 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_720 = false;&#xA;&#x9;idIfCond_720 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp142)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp142)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_720 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp142);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft143 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_721 = false;&#xA;&#x9;while( !idLoopCond_721 ) {&#xA;&#x9;idLoopCond_721 = it_ft143.isOff();&#xA;&#x9;if ( idLoopCond_721 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp143 = it_ft143.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp143);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp142));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.122" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.122" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.122" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.122" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.122" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.122" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.122" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_722 = false;&#xA;&#x9;idIfCond_722 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;));&#xA;&#xA;&#x9;if( idIfCond_722 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.122" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="main" sMContext="//@sMContexts.123" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.one();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.124" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.sum();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.125" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.126" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.127" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.isEmpty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.128" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.129" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.any();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.130" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.empty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.131" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.isNotEmpty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.132" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.iterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.133" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.size();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.134" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.135" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.136" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.137" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.138" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.139" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.140" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.141" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.142" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.143" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.144" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.145" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.146" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedCollection&quot;);&#xA;anExec.last();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.147" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedCollection&quot;);&#xA;anExec.first();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.148" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.hasNext();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.149" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.next();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.150" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.isOff();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.151" body="&#xA;kermeta.standard.UnknownJavaObject anExec = (kermeta.standard.UnknownJavaObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.UnknownJavaObject&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.152" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.153" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.154" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.load();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.155" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.instances();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.156" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.normalizedUri();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.157" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.158" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.saveAndValidateWithEMF();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.159" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.load();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.160" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Repository&quot;);&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.161" body="&#xA;kermeta.persistence.DanglingDiagnostic anExec = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.162" body="&#xA;kermeta.interpreter.DynamicExpression anExec = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.interpreter.DynamicExpression&quot;);&#xA;anExec.initializeDefaults();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.163" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.getLogKermeta();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.164" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.number();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.165" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.mustStop();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.166" body="&#xA;kermeta.kunit.Log anExec = (kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Log&quot;);&#xA;anExec.newAttempt();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.167" body="&#xA;kermeta.kunit.Failure anExec = (kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Failure&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.168" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.makeTearDown();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.169" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.makeSetUp();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.170" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.171" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Test&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.172" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Test&quot;);&#xA;anExec.initLog();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.173" body="&#xA;kermeta.kunit.TestSuite anExec = (kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestSuite&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.174" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.raiseIfHasFailures();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.175" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.setUp();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.176" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.getLog();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.177" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.getTestMethodName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.178" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.179" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.180" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.tearDown();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.181" body="&#xA;kermeta.kunit.TestRunner anExec = (kermeta.kunit.TestRunner) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestRunner&quot;);&#xA;anExec.printTestResult();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.182" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.main_inner();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.183" body="&#xA;simk.SIMKModel anExec = (simk.SIMKModel) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SIMKModel&quot;);&#xA;anExec.getNextId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.184" body="&#xA;simk.StaticMethod anExec = (simk.StaticMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.StaticMethod&quot;);&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.185" body="&#xA;simk.StaticMethod anExec = (simk.StaticMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.StaticMethod&quot;);&#xA;anExec.getParentMethodFromModel();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.186" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;);&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.187" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;);&#xA;anExec.getQualifiedName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.188" body="&#xA;ecore.EClass anExec = (ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClass&quot;);&#xA;anExec.getFeatureCount();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.189" body="&#xA;ecore.EClassifier anExec = (ecore.EClassifier) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClassifier&quot;);&#xA;anExec.getClassifierID();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.190" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainer();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.191" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eCrossReferences();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.192" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainingFeature();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.193" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eResource();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.194" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainmentFeature();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.195" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContents();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.196" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.197" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eIsProxy();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.198" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eAllContents();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.199" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStructuralFeature&quot;);&#xA;anExec.getFeatureID();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.200" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStructuralFeature&quot;);&#xA;anExec.getContainerClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.201" body="&#xA;traceability.File anExec = (traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;traceability.File&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="super_clear" sMContext="//@sMContexts.202" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(self);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_remove" sMContext="//@sMContexts.202" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_add" sMContext="//@sMContexts.202" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_applyPass2" sMContext="//@sMContexts.203" body="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft212 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(self.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_974 = false;&#xA;&#x9;while( !idLoopCond_974 ) {&#xA;&#x9;idLoopCond_974 = it_ft212.isOff();&#xA;&#x9;if ( idLoopCond_974 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp212 = it_ft212.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp211 = o_lbdExp212;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_975 = false;&#xA;&#x9;idIfCond_975 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp211.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_975 ) {&#xA;&#xA;&#x9;p_lbdExp211.applyPass2(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_applyPass2BehaviorJava" sMContext="//@sMContexts.203" body="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft214 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(self.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_976 = false;&#xA;&#x9;while( !idLoopCond_976 ) {&#xA;&#x9;idLoopCond_976 = it_ft214.isOff();&#xA;&#x9;if ( idLoopCond_976 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp214 = it_ft214.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp213 = o_lbdExp214;&#xA;&#xA;&#x9;p_lbdExp213.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_createBehaviorJava" sMContext="//@sMContexts.204" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Type"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="super_createBehaviorJava" sMContext="//@sMContexts.203" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="super_addAt" sMContext="//@sMContexts.205" body="&#xA;&#x9;java.lang.Boolean idIfCond_977 = false;&#xA;&#x9;idIfCond_977 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, self.size()));&#xA;&#xA;&#x9;if( idIfCond_977 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(self, index, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_equals" sMContext="//@sMContexts.205" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_978 = false;&#xA;&#x9;idIfCond_978 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(element));&#xA;&#xA;&#x9;if( idIfCond_978 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_979 = false;&#xA;&#x9;idIfCond_979 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_979 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_980 = false;&#xA;&#x9;idIfCond_980 = kermeta.standard.helper.IntegerWrapper.equals(self.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_980 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = self.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_981 = false;&#xA;&#x9;while( !idLoopCond_981 ) {&#xA;&#x9;idLoopCond_981 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_981 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_982 = false;&#xA;&#x9;idIfCond_982 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_982 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="element" type="kermeta.language.structure.Object"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="super_remove" sMContext="//@sMContexts.206" body="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft215 = null;&#xA;&#xA;&#x9;G elem_ft215 = null;&#xA;&#xA;&#x9;result_ft215 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft215 = self.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_983 = false;&#xA;&#x9;while( !idLoopCond_983 ) {&#xA;&#x9;idLoopCond_983 = kermeta.standard.helper.BooleanWrapper.or(it_ft215.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft215, null));&#xA;&#x9;if ( idLoopCond_983 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft215 = it_ft215.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_984 = false;&#xA;//BIle:detector&#xA;G e_lbdExp215 = elem_ft215;&#xA;&#xA;&#x9;idIfCond_984 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e_lbdExp215, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_984 ) {&#xA;&#xA;&#x9;result_ft215 = elem_ft215;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_985 = false;&#xA;&#x9;idIfCond_985 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(elem, null);&#xA;&#xA;&#x9;if( idIfCond_985 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(self, elem);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_add" sMContext="//@sMContexts.207" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Collection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_add" sMContext="//@sMContexts.206" body="&#xA;&#x9;java.lang.Boolean idIfCond_986 = false;&#xA;&#x9;idIfCond_986 = kermeta.standard.helper.BooleanWrapper.not(self.contains(element));&#xA;&#xA;&#x9;if( idIfCond_986 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.CollectionSuper.super_add(self, element);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
</simk:SIMKModel>
