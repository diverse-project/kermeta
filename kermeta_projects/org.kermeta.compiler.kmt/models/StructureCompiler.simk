<?xml version="1.0" encoding="ASCII"?>
<simk:SIMKModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:simk="http://www.kermeta.org/simk">
  <sMContexts sMMethods="//@sMMethods.0" finalPackageQName="kermeta.language.runner">
    <sMClass name="ReflectiveCollection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.1" finalPackageQName="kermeta.language.runner">
    <sMClass name="ReflectiveSequence__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.2" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__retrievePackage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.3" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getEClassifierByQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.4" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__cleanEObject__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.5" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getAllPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.6" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getTypeDefinitionByQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.7" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Package__getAllSubPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.8" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.9" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.10" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__setSubClassDefinitionToSuperTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.11" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isAddedValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.12" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__allSuperTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.13" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isSubTypeOf__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.14" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.15" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isCollection__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.16" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.17" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeCompiled__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.18" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.19" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeDuplicated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.20" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.21" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__isVoidType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.22" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__hasAValueTypedParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.23" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Parameter__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.24" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Parameter__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.25" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__interpretBooleanTag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.26" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getMetaClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.27" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.28" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getPropertyValue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.29" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__checkInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.30" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.31" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.32" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__oid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.33" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getTagValues__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.34" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__checkAllInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.35" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getCompiledJavaExtern__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.36" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeSelfExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.37" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFNeedProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.38" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getDeprecated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.39" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.40" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.41" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFIsTransient__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.42" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__isFrozen__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.43" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__hashcode__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.44" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__callsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.45" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getRootPackage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.46" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getUniqueTagValue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.47" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeIsSerializable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.48" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__container__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.49" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__freeze__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.50" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__containingResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.51" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.52" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ParameterizedType__getClassDefinitionAsTyped__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.53" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.54" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class__allAttributes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.55" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class__allSuperClasses__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.56" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.57" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__getGenModelQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.58" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__getJavaQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.59" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__getGenModelJavaQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.60" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__qualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.61" finalPackageQName="kermeta.language.structure.helper">
    <sMClass name="FunctionTypeInvariant" usages="Invariant"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.62" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getRecopyInValueTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.63" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getEMFRenameAs__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.64" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.65" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__getClassFromPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.66" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.67" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.68" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeQName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.69" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.70" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isEDataType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.71" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isEnumeration__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.72" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelType___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.73" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Block__containsRescue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.74" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Expression__endOfExpressionFixer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.75" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Expression__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.76" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Expression__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.77" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterManyAndForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.78" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInLambdaExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.79" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.80" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCorrespondingLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.81" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCallFeatureCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.82" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInAFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.83" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.84" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.85" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.86" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.87" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.88" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__retrieveCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.89" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.90" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.91" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.92" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.93" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getParamBindings__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.94" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.95" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isFromClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.96" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.97" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameterMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.98" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameterSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.99" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticEnumLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.100" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.101" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.102" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Conditional__conditionIsCallFeatureThatCallsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.103" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main_km2ecore_onlyEcore__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.104" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main_km2ecore_behaviorJava__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.105" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main_inner__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.106" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__getTypeDefinitionByQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.107" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.108" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Void__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.109" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Void__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.110 //@sMMethods.111 //@sMMethods.112 //@sMMethods.113 //@sMMethods.114 //@sMMethods.115 //@sMMethods.116 //@sMMethods.117 //@sMMethods.118 //@sMMethods.119 //@sMMethods.120 //@sMMethods.121 //@sMMethods.122 //@sMMethods.123 //@sMMethods.124 //@sMMethods.125 //@sMMethods.126 //@sMMethods.127 //@sMMethods.128 //@sMMethods.129 //@sMMethods.130 //@sMMethods.131 //@sMMethods.132 //@sMMethods.133 //@sMMethods.134 //@sMMethods.135" finalPackageQName="kermeta.standard.helper">
    <sMClass name="BooleanWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.136 //@sMMethods.137 //@sMMethods.138 //@sMMethods.139 //@sMMethods.140 //@sMMethods.141 //@sMMethods.142 //@sMMethods.143 //@sMMethods.144 //@sMMethods.145 //@sMMethods.146 //@sMMethods.147 //@sMMethods.148 //@sMMethods.149 //@sMMethods.150 //@sMMethods.151 //@sMMethods.152 //@sMMethods.153 //@sMMethods.154 //@sMMethods.155 //@sMMethods.156 //@sMMethods.157 //@sMMethods.158 //@sMMethods.159 //@sMMethods.160 //@sMMethods.161 //@sMMethods.162 //@sMMethods.163 //@sMMethods.164 //@sMMethods.165 //@sMMethods.166 //@sMMethods.167" finalPackageQName="kermeta.standard.helper">
    <sMClass name="IntegerWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.168 //@sMMethods.169 //@sMMethods.170 //@sMMethods.171 //@sMMethods.172 //@sMMethods.173 //@sMMethods.174 //@sMMethods.175 //@sMMethods.176 //@sMMethods.177 //@sMMethods.178 //@sMMethods.179 //@sMMethods.180 //@sMMethods.181 //@sMMethods.182 //@sMMethods.183 //@sMMethods.184 //@sMMethods.185 //@sMMethods.186 //@sMMethods.187 //@sMMethods.188 //@sMMethods.189 //@sMMethods.190 //@sMMethods.191 //@sMMethods.192 //@sMMethods.193 //@sMMethods.194 //@sMMethods.195 //@sMMethods.196 //@sMMethods.197 //@sMMethods.198" finalPackageQName="kermeta.standard.helper">
    <sMClass name="RealWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.199 //@sMMethods.200 //@sMMethods.201 //@sMMethods.202 //@sMMethods.203 //@sMMethods.204 //@sMMethods.205 //@sMMethods.206 //@sMMethods.207 //@sMMethods.208 //@sMMethods.209 //@sMMethods.210 //@sMMethods.211 //@sMMethods.212 //@sMMethods.213 //@sMMethods.214 //@sMMethods.215 //@sMMethods.216 //@sMMethods.217 //@sMMethods.218 //@sMMethods.219 //@sMMethods.220 //@sMMethods.221 //@sMMethods.222 //@sMMethods.223" finalPackageQName="kermeta.standard.helper">
    <sMClass name="CharacterWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.224 //@sMMethods.225 //@sMMethods.226 //@sMMethods.227 //@sMMethods.228 //@sMMethods.229 //@sMMethods.230 //@sMMethods.231 //@sMMethods.232 //@sMMethods.233 //@sMMethods.234 //@sMMethods.235 //@sMMethods.236 //@sMMethods.237 //@sMMethods.238 //@sMMethods.239 //@sMMethods.240 //@sMMethods.241 //@sMMethods.242 //@sMMethods.243 //@sMMethods.244 //@sMMethods.245 //@sMMethods.246 //@sMMethods.247 //@sMMethods.248 //@sMMethods.249 //@sMMethods.250 //@sMMethods.251 //@sMMethods.252 //@sMMethods.253 //@sMMethods.254 //@sMMethods.255 //@sMMethods.256 //@sMMethods.257 //@sMMethods.258 //@sMMethods.259 //@sMMethods.260 //@sMMethods.261 //@sMMethods.262 //@sMMethods.263 //@sMMethods.264 //@sMMethods.265 //@sMMethods.266 //@sMMethods.267" finalPackageQName="kermeta.standard.helper">
    <sMClass name="StringWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.268" finalPackageQName="kermeta.standard.runner">
    <sMClass name="UnknownJavaObject__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.269" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__one__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.270" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__sum__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.271" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.272" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.273" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__isEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.274" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.275" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__any__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.276" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__empty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.277" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__isNotEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.278" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__iterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.279" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.280" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.281" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.282" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.283" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.284" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.285" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.286" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.287" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.288" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.289" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.290" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.291" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.292" finalPackageQName="kermeta.standard.runner">
    <sMClass name="OrderedCollection__last__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.293" finalPackageQName="kermeta.standard.runner">
    <sMClass name="OrderedCollection__first__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.294" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Iterator__hasNext__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.295" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Iterator__next__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.296" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Iterator__isOff__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.297" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.298" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__saveWithNewURI__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.299" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.300" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.301" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__instances__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.302" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__normalizedUri__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.303" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.304" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__saveWithNewURI__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.305" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__saveAndValidateWithEMF__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.306" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.307" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__createResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.308" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__normalizeUri__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.309" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.310" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__getResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.311" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="DanglingDiagnostic__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.312" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFRepository__createResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.313" finalPackageQName="kermeta.io.runner">
    <sMClass name="FileIO__writeTextFile__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.314" finalPackageQName="kermeta.io.runner">
    <sMClass name="FileIO__readTextFile__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.315" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__writeln__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.316" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__errorln__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.317" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__error__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.318" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__write__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.319" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__read__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.320" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Stack__pop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.321" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Stack__peek__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.322" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.323" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__values__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.324" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__keys__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.325" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__keyIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.326" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__valueIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.327" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.328" finalPackageQName="kermeta.utils.runner">
    <sMClass name="StringBuffer__append__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.329" finalPackageQName="kermeta.utils.runner">
    <sMClass name="StringBuffer__length__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.330" finalPackageQName="kermeta.utils.runner">
    <sMClass name="StringBuffer__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.331" finalPackageQName="kermeta.interpreter.runner">
    <sMClass name="DynamicExpression__initializeDefaults__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.332" finalPackageQName="kermeta.interpreter.runner">
    <sMClass name="DynamicExpression__parse__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.333" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__getLogKermeta__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.334" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__fail__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.335" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__assertEqual__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.336" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__number__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.337" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__mustStop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.338" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Log__newAttempt__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.339" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Failure__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.340" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Error__makeTearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.341" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Error__makeSetUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.342" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Error__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.343" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Test__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.344" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Test__initLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.345" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestSuite__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.346" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__setUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.347" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__raiseIfHasFailures__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.348" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__getLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.349" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__setTestMethodName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.350" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__getTestMethodName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.351" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.352" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.353" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__tearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.354" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestRunner__printTestResult__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.355" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__distil__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.356" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__fail__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.357" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__assertEqual__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.358" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__assertSimilar__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.359" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Assert__fail__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.360" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Assert__assertEqual__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.361" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getLoopConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.362" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.363" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getIfConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.364" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushKRErrorStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.365" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printLbdExpSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.366" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.367" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeConstants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.368" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.369" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__popResultLastStatementStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.370" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeFrameworkOperations__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.371" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.372" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushCondStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.373" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initialize__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.374" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.375" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.376" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createKermetaEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.377" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createAbstract__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.378" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__getEmptyKermetaEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.379" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__create__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.380" finalPackageQName="km2ecore.helper.kermeta.runner">
    <sMClass name="CompilerHelperJava__ppEmfLikeCreateFactory__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.381" finalPackageQName="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__isKeyword__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.382" finalPackageQName="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__addKeyword__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.383" finalPackageQName="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__initialize__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.384" finalPackageQName="simk.runner">
    <sMClass name="SMClass__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.385" finalPackageQName="simk.runner">
    <sMClass name="SMClass__getQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.386" finalPackageQName="simk.runner">
    <sMClass name="SMMethod__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.387" finalPackageQName="simk.runner">
    <sMClass name="SMMethod__getParentEOperationFromModel__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.388" finalPackageQName="traceability.runner">
    <sMClass name="File__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.389" finalPackageQName="traceability.helper">
    <sMClass name="TextReferenceInvariant" usages="Invariant"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.390" finalPackageQName="ecore.runner">
    <sMClass name="EClass__getEStructuralFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.391" finalPackageQName="ecore.runner">
    <sMClass name="EClass__getFeatureCount__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.392" finalPackageQName="ecore.runner">
    <sMClass name="EClassifier__getClassifierID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.393" finalPackageQName="ecore.runner">
    <sMClass name="EEnum__op_getEEnumLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.394" finalPackageQName="ecore.runner">
    <sMClass name="EEnum__getEEnumLiteralByLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.395" finalPackageQName="ecore.runner">
    <sMClass name="EModelElement__getEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.396" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContainer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.397" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eCrossReferences__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.398" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContainingFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.399" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.400" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContainmentFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.401" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.402" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eIsProxy__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.403" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.404" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eAllContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.405" finalPackageQName="ecore.runner">
    <sMClass name="EPackage__getEClassifier__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.406" finalPackageQName="ecore.runner">
    <sMClass name="EStructuralFeature__getFeatureID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.407" finalPackageQName="ecore.runner">
    <sMClass name="EStructuralFeature__getContainerClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.408 //@sMMethods.409 //@sMMethods.410" finalPackageQName="kermeta.language.helper">
    <sMClass name="ReflectiveCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.411 //@sMMethods.413" finalPackageQName="kermeta.language.structure.helper">
    <sMClass name="ObjectSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.412" finalPackageQName="kermeta.language.structure.helper">
    <sMClass name="TypeSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.414 //@sMMethods.415" finalPackageQName="kermeta.standard.helper">
    <sMClass name="OrderedCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.416 //@sMMethods.418" finalPackageQName="kermeta.standard.helper">
    <sMClass name="SetSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.417" finalPackageQName="kermeta.standard.helper">
    <sMClass name="CollectionSuper" usages="Super"/>
  </sMContexts>
  <sMMethods name="main" sMContext="//@sMContexts.0" body="&#xA;kermeta.language.ReflectiveCollection anExec = (kermeta.language.ReflectiveCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.ReflectiveCollection&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.1" body="&#xA;kermeta.language.ReflectiveSequence anExec = (kermeta.language.ReflectiveSequence) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.ReflectiveSequence&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.2" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.retrievePackage( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.3" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.getEClassifierByQualifiedName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.4" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.cleanEObject();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.5" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.getAllPackages();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.6" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.getTypeDefinitionByQualifiedName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.7" body="&#xA;kermeta.language.structure.Package anExec = (kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Package&quot;);&#xA;anExec.getAllSubPackages();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.8" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.9" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.10" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.setSubClassDefinitionToSuperTypes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.11" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isAddedValueType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.12" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.allSuperTypes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.13" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isSubTypeOf( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.14" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isIterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.15" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isCollection();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.16" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.17" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.mustBeCompiled();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.18" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.19" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.mustBeDuplicated();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.20" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.21" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isVoidType( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.22" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.hasAValueTypedParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.23" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Parameter&quot;);&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.24" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Parameter&quot;);&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.25" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.interpretBooleanTag( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.26" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getMetaClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.27" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFEDataTypeInstanceClassName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.28" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getPropertyValue( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.29" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.checkInvariants();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.30" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFInstanceClassName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.31" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.32" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.oid();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.33" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getTagValues( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.34" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.checkAllInvariants();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.35" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getCompiledJavaExtern();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.36" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getWrapperValueTypeSelfExpression();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.37" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFNeedProperty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.38" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getDeprecated();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.39" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.40" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getWrapperValueTypeReturnType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.41" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFIsTransient();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.42" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.isFrozen();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.43" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.hashcode();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.44" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.callsFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.45" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getRootPackage();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.46" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getUniqueTagValue( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.47" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFEDataTypeIsSerializable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.48" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.container();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.49" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.freeze();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.50" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.containingResource();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.51" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.52" body="&#xA;kermeta.language.structure.ParameterizedType anExec = (kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ParameterizedType&quot;);&#xA;anExec.getClassDefinitionAsTyped();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.53" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec._new();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.54" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.allAttributes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.55" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.allSuperClasses();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.56" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.57" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.NamedElement&quot;);&#xA;anExec.getGenModelQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.58" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.NamedElement&quot;);&#xA;anExec.getJavaQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.59" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.NamedElement&quot;);&#xA;anExec.getGenModelJavaQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.60" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.NamedElement&quot;);&#xA;anExec.qualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="checkInvariant_194513__resultType" sMContext="//@sMContexts.61" body="java.lang.Boolean result = false;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(self.getRight(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;)));&#xA;return result;" usages="Invariant">
    <sMParameters name="self" type="kermeta.language.structure.FunctionType"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.62" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getRecopyInValueTypes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.63" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getEMFRenameAs();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.64" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.65" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getClassFromPrimitiveType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.66" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.67" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getTypeName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.68" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getTypeQName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.69" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isPrimitiveType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.70" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isEDataType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.71" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isEnumeration();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.72" body="&#xA;kermeta.language.structure.ModelType anExec = (kermeta.language.structure.ModelType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelType&quot;);&#xA;anExec._new();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.73" body="&#xA;kermeta.language.behavior.Block anExec = (kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Block&quot;);&#xA;anExec.containsRescue();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.74" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.endOfExpressionFixer();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.75" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.76" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.77" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterManyAndForOwningOperation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.78" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isDeclaredInLambdaExpression();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.79" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.80" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getCorrespondingLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.81" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getCallFeatureCorrespondingParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.82" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isDeclaredInAFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.83" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.84" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterMany();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.85" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterSingle();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.86" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperationMany();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.87" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.88" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.retrieveCorrespondingParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.89" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.90" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperationSingle();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.91" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.92" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.93" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getParamBindings();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.94" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getFunctionTypeReturnType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.95" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isFromClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.96" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.97" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isParameterMany();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.98" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isParameterSingle();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.99" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticEnumLiteral();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.100" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticOperation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.101" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticProperty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.102" body="&#xA;kermeta.language.behavior.Conditional anExec = (kermeta.language.behavior.Conditional) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Conditional&quot;);&#xA;anExec.conditionIsCallFeatureThatCallsFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.103" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.main_km2ecore_onlyEcore( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.104" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.main_km2ecore_behaviorJava( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.105" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.main_inner();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.106" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.getTypeDefinitionByQualifiedName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.107" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.main( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.108" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Void&quot;);&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.109" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Void&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="not" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.not(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="xor" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.and(self, kermeta.standard.helper.BooleanWrapper.not(other)), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(self), other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_721 = false;&#xA;&#x9;idIfCond_721 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;if( idIfCond_721 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="or" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.or(self, other);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="nand" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="implies" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other)), self));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.110" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_722 = false;&#xA;&#x9;idIfCond_722 = self;&#xA;&#xA;&#x9;if( idIfCond_722 ) {&#xA;&#xA;&#x9;result = &quot;true&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;false&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="and" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.and(self, other);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.110" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.110" body="&#xA;&#x9;java.lang.Boolean idIfCond_723 = false;&#xA;&#x9;idIfCond_723 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_723 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.110" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_724 = false;&#xA;&#x9;idIfCond_724 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_724 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft167 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_725 = false;&#xA;&#x9;while( !idLoopCond_725 ) {&#xA;&#x9;idLoopCond_725 = it_ft167.isOff();&#xA;&#x9;if ( idLoopCond_725 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp167 = it_ft167.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft168 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft168 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft168 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp167.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_727 = false;&#xA;&#x9;while( !idLoopCond_727 ) {&#xA;&#x9;idLoopCond_727 = kermeta.standard.helper.BooleanWrapper.or(it_ft168.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft168, false));&#xA;&#x9;if ( idLoopCond_727 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft168 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp168 = it_ft168.next();&#xA;&#xA;&#x9;result_lambda_ft168 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp168.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft168 = kermeta.standard.helper.BooleanWrapper.or(test_ft168, result_lambda_ft168);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft168 = test_ft168;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_726 = false;&#xA;&#x9;idIfCond_726 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft168), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp167.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_726 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp167);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_728 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft169 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_729 = false;&#xA;&#x9;idIfCond_729 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_729 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp169 = null;&#xA;&#xA;&#x9;result_ft169 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft169 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_728 = result_ft169;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_728 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_730 = false;&#xA;&#x9;idIfCond_730 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp167.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp167.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_730 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp167.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_731 = false;&#xA;&#x9;idIfCond_731 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp167.getLower());&#xA;&#xA;&#x9;if( idIfCond_731 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp167.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_732 = false;&#xA;&#x9;idIfCond_732 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp167.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_732 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp167.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.110" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.110" body="&#xA;&#x9;java.lang.Boolean idIfCond_733 = false;&#xA;&#x9;idIfCond_733 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_733 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft170 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_734 = false;&#xA;&#x9;while( !idLoopCond_734 ) {&#xA;&#x9;idLoopCond_734 = it_ft170.isOff();&#xA;&#x9;if ( idLoopCond_734 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp170 = it_ft170.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_735 = false;&#xA;&#x9;idIfCond_735 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp170.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp170.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_735 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_736 = false;&#xA;&#x9;idIfCond_736 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp170)));&#xA;&#xA;&#x9;if( idIfCond_736 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_737 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft171 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft171 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft171 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp170)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_738 = false;&#xA;&#x9;while( !idLoopCond_738 ) {&#xA;&#x9;idLoopCond_738 = kermeta.standard.helper.BooleanWrapper.or(it_ft171.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft171, false));&#xA;&#x9;if ( idLoopCond_738 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft171 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp171 = it_ft171.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_739 = false;&#xA;&#x9;idIfCond_739 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp171, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_739 ) {&#xA;&#xA;&#x9;result_lambda_ft171 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp171, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft171 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft171 = kermeta.standard.helper.BooleanWrapper.or(test_ft171, result_lambda_ft171);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft171 = test_ft171;&#xA;&#xA;//CEC&#xA;idIfCond_737 = result_ft171;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_737 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp170);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft172 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_740 = false;&#xA;&#x9;while( !idLoopCond_740 ) {&#xA;&#x9;idLoopCond_740 = it_ft172.isOff();&#xA;&#x9;if ( idLoopCond_740 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp172 = it_ft172.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp172);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp170));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.110" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.110" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.110" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.110" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.110" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.110" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.110" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.110" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_741 = false;&#xA;&#x9;idIfCond_741 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_741 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="plus" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_742 = false;&#xA;&#x9;idIfCond_742 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_742 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_743 = false;&#xA;&#x9;idIfCond_743 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_743 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_744 = false;&#xA;&#x9;idIfCond_744 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_744 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLower(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLower(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="mult" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_745 = false;&#xA;&#x9;idIfCond_745 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_745 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="minus" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_746 = false;&#xA;&#x9;idIfCond_746 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_746 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_747 = false;&#xA;&#x9;idIfCond_747 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_747 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_748 = false;&#xA;&#x9;idIfCond_748 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_748 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="mod" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_749 = false;&#xA;&#x9;idIfCond_749 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_749 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_750 = false;&#xA;&#x9;idIfCond_750 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_750 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.mod(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toReal" sMContext="//@sMContexts.111" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toReal(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="div" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_751 = false;&#xA;&#x9;idIfCond_751 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_751 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_752 = false;&#xA;&#x9;idIfCond_752 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_752 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_753 = false;&#xA;&#x9;idIfCond_753 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_753 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_754 = false;&#xA;&#x9;idIfCond_754 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_754 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.NotComparableException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_755 = false;&#xA;&#x9;idIfCond_755 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_755 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_756 = false;&#xA;&#x9;idIfCond_756 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_756 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreater(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreater(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_757 = false;&#xA;&#x9;idIfCond_757 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_757 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_758 = false;&#xA;&#x9;idIfCond_758 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_758 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreaterOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreaterOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="uminus" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.minus(0, self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.111" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_759 = false;&#xA;&#x9;idIfCond_759 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_759 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_760 = false;&#xA;&#x9;idIfCond_760 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_760 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLowerOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLowerOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.111" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.111" body="&#xA;&#x9;java.lang.Boolean idIfCond_761 = false;&#xA;&#x9;idIfCond_761 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_761 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.111" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_762 = false;&#xA;&#x9;idIfCond_762 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_762 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft173 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_763 = false;&#xA;&#x9;while( !idLoopCond_763 ) {&#xA;&#x9;idLoopCond_763 = it_ft173.isOff();&#xA;&#x9;if ( idLoopCond_763 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp173 = it_ft173.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft174 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft174 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft174 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp173.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_765 = false;&#xA;&#x9;while( !idLoopCond_765 ) {&#xA;&#x9;idLoopCond_765 = kermeta.standard.helper.BooleanWrapper.or(it_ft174.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft174, false));&#xA;&#x9;if ( idLoopCond_765 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft174 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp174 = it_ft174.next();&#xA;&#xA;&#x9;result_lambda_ft174 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp174.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft174 = kermeta.standard.helper.BooleanWrapper.or(test_ft174, result_lambda_ft174);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft174 = test_ft174;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_764 = false;&#xA;&#x9;idIfCond_764 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft174), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp173.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_764 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp173);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_766 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft175 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_767 = false;&#xA;&#x9;idIfCond_767 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_767 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp175 = null;&#xA;&#xA;&#x9;result_ft175 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft175 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_766 = result_ft175;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_766 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_768 = false;&#xA;&#x9;idIfCond_768 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp173.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp173.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_768 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp173.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_769 = false;&#xA;&#x9;idIfCond_769 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp173.getLower());&#xA;&#xA;&#x9;if( idIfCond_769 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp173.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_770 = false;&#xA;&#x9;idIfCond_770 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp173.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_770 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp173.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.111" body="&#xA;&#x9;java.lang.Boolean idIfCond_771 = false;&#xA;&#x9;idIfCond_771 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_771 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft176 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_772 = false;&#xA;&#x9;while( !idLoopCond_772 ) {&#xA;&#x9;idLoopCond_772 = it_ft176.isOff();&#xA;&#x9;if ( idLoopCond_772 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp176 = it_ft176.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_773 = false;&#xA;&#x9;idIfCond_773 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp176.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp176.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_773 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_774 = false;&#xA;&#x9;idIfCond_774 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp176)));&#xA;&#xA;&#x9;if( idIfCond_774 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_775 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft177 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft177 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft177 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp176)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_776 = false;&#xA;&#x9;while( !idLoopCond_776 ) {&#xA;&#x9;idLoopCond_776 = kermeta.standard.helper.BooleanWrapper.or(it_ft177.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft177, false));&#xA;&#x9;if ( idLoopCond_776 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft177 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp177 = it_ft177.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_777 = false;&#xA;&#x9;idIfCond_777 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp177, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_777 ) {&#xA;&#xA;&#x9;result_lambda_ft177 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp177, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft177 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft177 = kermeta.standard.helper.BooleanWrapper.or(test_ft177, result_lambda_ft177);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft177 = test_ft177;&#xA;&#xA;//CEC&#xA;idIfCond_775 = result_ft177;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_775 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp176);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft178 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_778 = false;&#xA;&#x9;while( !idLoopCond_778 ) {&#xA;&#x9;idLoopCond_778 = it_ft178.isOff();&#xA;&#x9;if ( idLoopCond_778 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp178 = it_ft178.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp178);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp176));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.111" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.111" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.111" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.111" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.111" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.111" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.111" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.111" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_779 = false;&#xA;&#x9;idIfCond_779 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_779 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="plus" sMContext="//@sMContexts.112" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_780 = false;&#xA;&#x9;idIfCond_780 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_780 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="mult" sMContext="//@sMContexts.112" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_781 = false;&#xA;&#x9;idIfCond_781 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_781 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="minus" sMContext="//@sMContexts.112" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_782 = false;&#xA;&#x9;idIfCond_782 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_782 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="toInteger" sMContext="//@sMContexts.112" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toInteger(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="uminus" sMContext="//@sMContexts.112" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.minus(kermeta.standard.helper.IntegerWrapper.toReal(0), self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_783 = false;&#xA;&#x9;idIfCond_783 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_783 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_784 = false;&#xA;&#x9;idIfCond_784 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_784 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="div" sMContext="//@sMContexts.112" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_785 = false;&#xA;&#x9;idIfCond_785 = kermeta.standard.helper.RealWrapper.equals(other, kermeta.standard.helper.IntegerWrapper.toReal(0));&#xA;&#xA;&#x9;if( idIfCond_785 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_786 = false;&#xA;&#x9;idIfCond_786 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_786 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.112" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_787 = false;&#xA;&#x9;idIfCond_787 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_787 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_788 = false;&#xA;&#x9;idIfCond_788 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_788 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.NotComparableException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.112" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.112" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.112" body="&#xA;&#x9;java.lang.Boolean idIfCond_789 = false;&#xA;&#x9;idIfCond_789 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_789 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.112" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_790 = false;&#xA;&#x9;idIfCond_790 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_790 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft179 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_791 = false;&#xA;&#x9;while( !idLoopCond_791 ) {&#xA;&#x9;idLoopCond_791 = it_ft179.isOff();&#xA;&#x9;if ( idLoopCond_791 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp179 = it_ft179.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft180 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft180 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft180 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp179.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_793 = false;&#xA;&#x9;while( !idLoopCond_793 ) {&#xA;&#x9;idLoopCond_793 = kermeta.standard.helper.BooleanWrapper.or(it_ft180.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft180, false));&#xA;&#x9;if ( idLoopCond_793 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft180 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp180 = it_ft180.next();&#xA;&#xA;&#x9;result_lambda_ft180 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp180.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft180 = kermeta.standard.helper.BooleanWrapper.or(test_ft180, result_lambda_ft180);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft180 = test_ft180;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_792 = false;&#xA;&#x9;idIfCond_792 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft180), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp179.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_792 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp179);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_794 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft181 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_795 = false;&#xA;&#x9;idIfCond_795 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_795 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp181 = null;&#xA;&#xA;&#x9;result_ft181 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft181 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_794 = result_ft181;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_794 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_796 = false;&#xA;&#x9;idIfCond_796 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp179.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp179.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_796 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp179.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_797 = false;&#xA;&#x9;idIfCond_797 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp179.getLower());&#xA;&#xA;&#x9;if( idIfCond_797 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp179.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_798 = false;&#xA;&#x9;idIfCond_798 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp179.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_798 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp179.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.112" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.112" body="&#xA;&#x9;java.lang.Boolean idIfCond_799 = false;&#xA;&#x9;idIfCond_799 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_799 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft182 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_800 = false;&#xA;&#x9;while( !idLoopCond_800 ) {&#xA;&#x9;idLoopCond_800 = it_ft182.isOff();&#xA;&#x9;if ( idLoopCond_800 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp182 = it_ft182.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_801 = false;&#xA;&#x9;idIfCond_801 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp182.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp182.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_801 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_802 = false;&#xA;&#x9;idIfCond_802 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp182)));&#xA;&#xA;&#x9;if( idIfCond_802 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_803 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft183 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft183 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft183 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp182)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_804 = false;&#xA;&#x9;while( !idLoopCond_804 ) {&#xA;&#x9;idLoopCond_804 = kermeta.standard.helper.BooleanWrapper.or(it_ft183.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft183, false));&#xA;&#x9;if ( idLoopCond_804 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft183 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp183 = it_ft183.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_805 = false;&#xA;&#x9;idIfCond_805 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp183, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_805 ) {&#xA;&#xA;&#x9;result_lambda_ft183 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp183, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft183 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft183 = kermeta.standard.helper.BooleanWrapper.or(test_ft183, result_lambda_ft183);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft183 = test_ft183;&#xA;&#xA;//CEC&#xA;idIfCond_803 = result_ft183;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_803 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp182);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft184 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_806 = false;&#xA;&#x9;while( !idLoopCond_806 ) {&#xA;&#x9;idLoopCond_806 = it_ft184.isOff();&#xA;&#x9;if ( idLoopCond_806 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp184 = it_ft184.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp184);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp182));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.112" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.112" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.112" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.112" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.112" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.112" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.112" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.112" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_807 = false;&#xA;&#x9;idIfCond_807 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_807 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_808 = false;&#xA;&#x9;idIfCond_808 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Character&quot;));&#xA;&#xA;&#x9;if( idIfCond_808 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.113" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_809 = false;&#xA;&#x9;idIfCond_809 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_809 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.113" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.113" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.113" body="&#xA;&#x9;java.lang.Boolean idIfCond_810 = false;&#xA;&#x9;idIfCond_810 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_810 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.113" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_811 = false;&#xA;&#x9;idIfCond_811 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_811 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft185 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_812 = false;&#xA;&#x9;while( !idLoopCond_812 ) {&#xA;&#x9;idLoopCond_812 = it_ft185.isOff();&#xA;&#x9;if ( idLoopCond_812 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp185 = it_ft185.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft186 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft186 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft186 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp185.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_814 = false;&#xA;&#x9;while( !idLoopCond_814 ) {&#xA;&#x9;idLoopCond_814 = kermeta.standard.helper.BooleanWrapper.or(it_ft186.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft186, false));&#xA;&#x9;if ( idLoopCond_814 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft186 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp186 = it_ft186.next();&#xA;&#xA;&#x9;result_lambda_ft186 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp186.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft186 = kermeta.standard.helper.BooleanWrapper.or(test_ft186, result_lambda_ft186);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft186 = test_ft186;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_813 = false;&#xA;&#x9;idIfCond_813 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft186), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp185.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_813 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp185);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_815 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft187 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_816 = false;&#xA;&#x9;idIfCond_816 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_816 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp187 = null;&#xA;&#xA;&#x9;result_ft187 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft187 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_815 = result_ft187;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_815 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_817 = false;&#xA;&#x9;idIfCond_817 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp185.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp185.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_817 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp185.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_818 = false;&#xA;&#x9;idIfCond_818 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp185.getLower());&#xA;&#xA;&#x9;if( idIfCond_818 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp185.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_819 = false;&#xA;&#x9;idIfCond_819 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp185.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_819 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp185.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.113" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.113" body="&#xA;&#x9;java.lang.Boolean idIfCond_820 = false;&#xA;&#x9;idIfCond_820 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_820 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft188 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_821 = false;&#xA;&#x9;while( !idLoopCond_821 ) {&#xA;&#x9;idLoopCond_821 = it_ft188.isOff();&#xA;&#x9;if ( idLoopCond_821 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp188 = it_ft188.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_822 = false;&#xA;&#x9;idIfCond_822 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp188.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp188.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_822 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_823 = false;&#xA;&#x9;idIfCond_823 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp188)));&#xA;&#xA;&#x9;if( idIfCond_823 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_824 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft189 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft189 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft189 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp188)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_825 = false;&#xA;&#x9;while( !idLoopCond_825 ) {&#xA;&#x9;idLoopCond_825 = kermeta.standard.helper.BooleanWrapper.or(it_ft189.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft189, false));&#xA;&#x9;if ( idLoopCond_825 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft189 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp189 = it_ft189.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_826 = false;&#xA;&#x9;idIfCond_826 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp189, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_826 ) {&#xA;&#xA;&#x9;result_lambda_ft189 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp189, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft189 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft189 = kermeta.standard.helper.BooleanWrapper.or(test_ft189, result_lambda_ft189);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft189 = test_ft189;&#xA;&#xA;//CEC&#xA;idIfCond_824 = result_ft189;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_824 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp188);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft190 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_827 = false;&#xA;&#x9;while( !idLoopCond_827 ) {&#xA;&#x9;idLoopCond_827 = it_ft190.isOff();&#xA;&#x9;if ( idLoopCond_827 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp190 = it_ft190.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp190);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp188));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.113" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.113" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.113" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.113" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.113" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.113" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.113" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_828 = false;&#xA;&#x9;idIfCond_828 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_828 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.113" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="append" sMContext="//@sMContexts.114" body="&#xA;&#x9;java.lang.Boolean idIfCond_829 = false;&#xA;&#x9;idIfCond_829 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_829 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.StringUtil.append(self, other);&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="plus" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_830 = false;&#xA;&#x9;idIfCond_830 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_830 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, kermeta.standard.helper.StringWrapper.toString(other));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_831 = false;&#xA;&#x9;idIfCond_831 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;));&#xA;&#xA;&#x9;if( idIfCond_831 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getPropertyInfos" sMContext="//@sMContexts.114" body="&#xA;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_infos = ((kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;java.lang.String>&quot;));&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = ((kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>&quot;));&#xA;&#xA;&#x9;set_infos = kermeta.standard.helper.StringWrapper.split(self, &quot; &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft191 = set_infos.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_832 = false;&#xA;&#x9;while( !idLoopCond_832 ) {&#xA;&#x9;idLoopCond_832 = it_ft191.isOff();&#xA;&#x9;if ( idLoopCond_832 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String i_lbdExp191 = it_ft191.next();&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> tmp_set_infos = kermeta.standard.helper.StringWrapper.split(i_lbdExp191, &quot;=&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_833 = false;&#xA;&#x9;idIfCond_833 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(tmp_set_infos.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_833 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_834 = false;&#xA;&#x9;idIfCond_834 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_set_infos.elementAt(0)));&#xA;&#xA;&#x9;if( idIfCond_834 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_835 = false;&#xA;&#x9;idIfCond_835 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_set_infos.elementAt(1))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tmp_set_infos.elementAt(1), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_835 ) {&#xA;&#xA;&#x9;map_infos.put(tmp_set_infos.elementAt(0), tmp_set_infos.elementAt(1));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = map_infos;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>"/>
  </sMMethods>
  <sMMethods name="normalizeStatement" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(kermeta.standard.helper.StringWrapper.replace(self, &quot; == null&quot;, &quot; == null&quot;), &quot;;&quot;, &quot;;&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toReal" sMContext="//@sMContexts.114" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toReal(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_836 = false;&#xA;&#x9;idIfCond_836 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_836 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="toBoolean" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toBoolean(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_837 = false;&#xA;&#x9;idIfCond_837 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_837 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="replaceExtension" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_str = kermeta.standard.helper.StringWrapper.split(self, &quot;\\.&quot;);&#xA;&#xA;&#x9;java.lang.Integer inc_seg = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft192 = set_str.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_838 = false;&#xA;&#x9;while( !idLoopCond_838 ) {&#xA;&#x9;idLoopCond_838 = it_ft192.isOff();&#xA;&#x9;if ( idLoopCond_838 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String seg_lbdExp192 = it_ft192.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_839 = false;&#xA;&#x9;idIfCond_839 = kermeta.standard.helper.IntegerWrapper.isLower(inc_seg, kermeta.standard.helper.IntegerWrapper.minus(set_str.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_839 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, seg_lbdExp192), &quot;.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;inc_seg = kermeta.standard.helper.IntegerWrapper.plus(inc_seg, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, new_extension);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="new_extension" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="contains" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.contains(self, str1);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isValueType" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_840 = false;&#xA;&#x9;idIfCond_840 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getValueTypeMapping()).contains(self);&#xA;&#xA;&#x9;if( idIfCond_840 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.114" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_841 = false;&#xA;&#x9;idIfCond_841 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_841 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="indexOf" sMContext="//@sMContexts.114" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.indexOf(self, str);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="elementAt" sMContext="//@sMContexts.114" body="&#xA;java.lang.Character result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_842 = false;&#xA;&#x9;idIfCond_842 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(self), 1)));&#xA;&#xA;&#x9;if( idIfCond_842 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Character) org.kermeta.compil.runtime.helper.basetypes.StringUtil.elementAt(self, index);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Character"/>
  </sMMethods>
  <sMMethods name="capName" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.toUpperCase(kermeta.standard.helper.StringWrapper.substring(self, 0, 1)), kermeta.standard.helper.StringWrapper.substring(self, 1, kermeta.standard.helper.StringWrapper.size(self)));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="size" sMContext="//@sMContexts.114" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.size(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="replace" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.replace(self, str1, str2);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMParameters name="str2" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toUpperCase" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toUpperCase(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toInteger" sMContext="//@sMContexts.114" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toInteger(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_843 = false;&#xA;&#x9;idIfCond_843 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_843 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toLowerCase" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toLowerCase(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="substring" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_844 = false;&#xA;&#x9;idIfCond_844 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(startIndex, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(startIndex, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(subStringSize, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(subStringSize, startIndex));&#xA;&#xA;&#x9;if( idIfCond_844 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.substring(self, startIndex, subStringSize);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="startIndex" type="java.lang.Integer"/>
    <sMParameters name="subStringSize" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.114" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = self;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="split" sMContext="//@sMContexts.114" body="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.basetypes.StringUtil.split(self, delimiter);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="delimiter" type="java.lang.String"/>
    <sMReturn type="kermeta.standard.OrderedSet&lt;java.lang.String>"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.114" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.114" body="&#xA;&#x9;java.lang.Boolean idIfCond_845 = false;&#xA;&#x9;idIfCond_845 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_845 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.114" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_846 = false;&#xA;&#x9;idIfCond_846 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_846 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft193 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_847 = false;&#xA;&#x9;while( !idLoopCond_847 ) {&#xA;&#x9;idLoopCond_847 = it_ft193.isOff();&#xA;&#x9;if ( idLoopCond_847 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp193 = it_ft193.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft194 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft194 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft194 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp193.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_849 = false;&#xA;&#x9;while( !idLoopCond_849 ) {&#xA;&#x9;idLoopCond_849 = kermeta.standard.helper.BooleanWrapper.or(it_ft194.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft194, false));&#xA;&#x9;if ( idLoopCond_849 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft194 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp194 = it_ft194.next();&#xA;&#xA;&#x9;result_lambda_ft194 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp194.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft194 = kermeta.standard.helper.BooleanWrapper.or(test_ft194, result_lambda_ft194);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft194 = test_ft194;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_848 = false;&#xA;&#x9;idIfCond_848 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft194), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp193.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_848 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp193);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_850 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft195 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_851 = false;&#xA;&#x9;idIfCond_851 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_851 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp195 = null;&#xA;&#xA;&#x9;result_ft195 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft195 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_850 = result_ft195;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_850 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_852 = false;&#xA;&#x9;idIfCond_852 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp193.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp193.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_852 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp193.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_853 = false;&#xA;&#x9;idIfCond_853 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp193.getLower());&#xA;&#xA;&#x9;if( idIfCond_853 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp193.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_854 = false;&#xA;&#x9;idIfCond_854 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp193.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_854 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp193.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.114" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.114" body="&#xA;&#x9;java.lang.Boolean idIfCond_855 = false;&#xA;&#x9;idIfCond_855 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_855 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft196 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_856 = false;&#xA;&#x9;while( !idLoopCond_856 ) {&#xA;&#x9;idLoopCond_856 = it_ft196.isOff();&#xA;&#x9;if ( idLoopCond_856 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp196 = it_ft196.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_857 = false;&#xA;&#x9;idIfCond_857 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp196.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp196.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_857 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_858 = false;&#xA;&#x9;idIfCond_858 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp196)));&#xA;&#xA;&#x9;if( idIfCond_858 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_859 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft197 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft197 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft197 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp196)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_860 = false;&#xA;&#x9;while( !idLoopCond_860 ) {&#xA;&#x9;idLoopCond_860 = kermeta.standard.helper.BooleanWrapper.or(it_ft197.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft197, false));&#xA;&#x9;if ( idLoopCond_860 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft197 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp197 = it_ft197.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_861 = false;&#xA;&#x9;idIfCond_861 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp197, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_861 ) {&#xA;&#xA;&#x9;result_lambda_ft197 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp197, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft197 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft197 = kermeta.standard.helper.BooleanWrapper.or(test_ft197, result_lambda_ft197);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft197 = test_ft197;&#xA;&#xA;//CEC&#xA;idIfCond_859 = result_ft197;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_859 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp196);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft198 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_862 = false;&#xA;&#x9;while( !idLoopCond_862 ) {&#xA;&#x9;idLoopCond_862 = it_ft198.isOff();&#xA;&#x9;if ( idLoopCond_862 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp198 = it_ft198.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp198);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp196));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.114" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.114" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.114" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.114" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.114" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.114" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.114" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_863 = false;&#xA;&#x9;idIfCond_863 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_863 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.114" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.115" body="&#xA;kermeta.standard.UnknownJavaObject anExec = (kermeta.standard.UnknownJavaObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.UnknownJavaObject&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.116" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.one();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.117" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.sum();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.118" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.119" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.120" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.isEmpty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.121" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.122" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.any();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.123" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.empty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.124" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.isNotEmpty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.125" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.iterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.126" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.size();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.127" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.128" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.129" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.130" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.131" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.132" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.133" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.134" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.135" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.136" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.137" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.138" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.139" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedCollection&quot;);&#xA;anExec.last();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.140" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedCollection&quot;);&#xA;anExec.first();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.141" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.hasNext();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.142" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.next();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.143" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.isOff();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.144" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.145" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.saveWithNewURI( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.146" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.147" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.load();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.148" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.instances();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.149" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.normalizedUri();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.150" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.151" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.saveWithNewURI( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.152" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.saveAndValidateWithEMF();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.153" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.load();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.154" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Repository&quot;);&#xA;anExec.createResource( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.155" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Repository&quot;);&#xA;anExec.normalizeUri( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.156" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Repository&quot;);&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.157" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Repository&quot;);&#xA;anExec.getResource( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.158" body="&#xA;kermeta.persistence.DanglingDiagnostic anExec = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.159" body="&#xA;kermeta.persistence.EMFRepository anExec = (kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFRepository&quot;);&#xA;anExec.createResource( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.160" body="&#xA;kermeta.io.FileIO anExec = (kermeta.io.FileIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.FileIO&quot;);&#xA;anExec.writeTextFile( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.161" body="&#xA;kermeta.io.FileIO anExec = (kermeta.io.FileIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.FileIO&quot;);&#xA;anExec.readTextFile( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.162" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.StdIO&quot;);&#xA;anExec.writeln( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.163" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.StdIO&quot;);&#xA;anExec.errorln( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.164" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.StdIO&quot;);&#xA;anExec.error( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.165" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.StdIO&quot;);&#xA;anExec.write( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.166" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.io.StdIO&quot;);&#xA;anExec.read( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.167" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&quot;);&#xA;anExec.pop();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.168" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&quot;);&#xA;anExec.peek();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.169" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.170" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.values();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.171" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.keys();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.172" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.keyIterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.173" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.valueIterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.174" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.size();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.175" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.append( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.176" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.length();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.177" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.178" body="&#xA;kermeta.interpreter.DynamicExpression anExec = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.interpreter.DynamicExpression&quot;);&#xA;anExec.initializeDefaults();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.179" body="&#xA;kermeta.interpreter.DynamicExpression anExec = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.interpreter.DynamicExpression&quot;);&#xA;anExec.parse( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.180" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.getLogKermeta();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.181" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.fail( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.182" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.assertEqual( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.183" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.number();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.184" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.mustStop();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.185" body="&#xA;kermeta.kunit.Log anExec = (kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Log&quot;);&#xA;anExec.newAttempt();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.186" body="&#xA;kermeta.kunit.Failure anExec = (kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Failure&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.187" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.makeTearDown();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.188" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.makeSetUp();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.189" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.190" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Test&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.191" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Test&quot;);&#xA;anExec.initLog();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.192" body="&#xA;kermeta.kunit.TestSuite anExec = (kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestSuite&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.193" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.setUp();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.194" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.raiseIfHasFailures();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.195" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.getLog();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.196" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.setTestMethodName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.197" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.getTestMethodName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.198" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.199" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.200" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.tearDown();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.201" body="&#xA;kermeta.kunit.TestRunner anExec = (kermeta.kunit.TestRunner) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestRunner&quot;);&#xA;anExec.printTestResult();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.202" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AbstractFallible&quot;);&#xA;anExec.distil( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.203" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AbstractFallible&quot;);&#xA;anExec.fail( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.204" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AbstractFallible&quot;);&#xA;anExec.assertEqual( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.205" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AbstractFallible&quot;);&#xA;anExec.assertSimilar( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.206" body="&#xA;kermeta.kunit.Assert anExec = (kermeta.kunit.Assert) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Assert&quot;);&#xA;anExec.fail( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.207" body="&#xA;kermeta.kunit.Assert anExec = (kermeta.kunit.Assert) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Assert&quot;);&#xA;anExec.assertEqual( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.208" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getLoopConditionId();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.209" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.210" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getIfConditionId();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.211" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushKRErrorStack();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.212" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.printLbdExpSuffix();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.213" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getResultLastStatementType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.214" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initializeConstants();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.215" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushFtSuffix();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.216" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.popResultLastStatementStack();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.217" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initializeFrameworkOperations();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.218" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.printFtSuffix();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.219" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushCondStack();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.220" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initialize( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.221" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getResultLastStatementId();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.222" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.createEmpty( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.223" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.createKermetaEAnnotation( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.224" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.createAbstract();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.225" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.getEmptyKermetaEAnnotation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.226" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.create( args[0],  args[1],  args[2]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.227" body="&#xA;km2ecore.helper.kermeta.CompilerHelperJava anExec = (km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.CompilerHelperJava&quot;);&#xA;anExec.ppEmfLikeCreateFactory( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.228" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.JavaKeyWordList&quot;);&#xA;anExec.isKeyword( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.229" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.JavaKeyWordList&quot;);&#xA;anExec.addKeyword( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.230" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.JavaKeyWordList&quot;);&#xA;anExec.initialize();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.231" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;);&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.232" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;);&#xA;anExec.getQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.233" body="&#xA;simk.SMMethod anExec = (simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMMethod&quot;);&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.234" body="&#xA;simk.SMMethod anExec = (simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMMethod&quot;);&#xA;anExec.getParentEOperationFromModel();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.235" body="&#xA;traceability.File anExec = (traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;traceability.File&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="checkInvariant_216452__validTextRef" sMContext="//@sMContexts.236" body="java.lang.Boolean result = false;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(self.getLineEndAt(), self.getLineBeginAt()), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(self.getLineBeginAt(), self.getLineEndAt()), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.getCharEndAt(), self.getCharBeginAt())));&#xA;&#xA;return result;" usages="Invariant">
    <sMParameters name="self" type="traceability.TextReference"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.237" body="&#xA;ecore.EClass anExec = (ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClass&quot;);&#xA;anExec.getEStructuralFeature( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.238" body="&#xA;ecore.EClass anExec = (ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClass&quot;);&#xA;anExec.getFeatureCount();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.239" body="&#xA;ecore.EClassifier anExec = (ecore.EClassifier) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClassifier&quot;);&#xA;anExec.getClassifierID();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.240" body="&#xA;ecore.EEnum anExec = (ecore.EEnum) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EEnum&quot;);&#xA;anExec.op_getEEnumLiteral( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.241" body="&#xA;ecore.EEnum anExec = (ecore.EEnum) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EEnum&quot;);&#xA;anExec.getEEnumLiteralByLiteral( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.242" body="&#xA;ecore.EModelElement anExec = (ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EModelElement&quot;);&#xA;anExec.getEAnnotation( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.243" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainer();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.244" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eCrossReferences();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.245" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainingFeature();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.246" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eResource();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.247" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainmentFeature();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.248" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContents();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.249" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eIsProxy();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.250" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.251" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eAllContents();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.252" body="&#xA;ecore.EPackage anExec = (ecore.EPackage) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EPackage&quot;);&#xA;anExec.getEClassifier( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.253" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStructuralFeature&quot;);&#xA;anExec.getFeatureID();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.254" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStructuralFeature&quot;);&#xA;anExec.getContainerClass();&#xA;" usages="Runner"/>
  <sMMethods name="super_clear" sMContext="//@sMContexts.255" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(self);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_remove" sMContext="//@sMContexts.255" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_add" sMContext="//@sMContexts.255" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_applyPass2" sMContext="//@sMContexts.256" typeParameters="G" body="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft255 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(self.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1106 = false;&#xA;&#x9;while( !idLoopCond_1106 ) {&#xA;&#x9;idLoopCond_1106 = it_ft255.isOff();&#xA;&#x9;if ( idLoopCond_1106 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp255 = it_ft255.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp254 = o_lbdExp255;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1107 = false;&#xA;&#x9;idIfCond_1107 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp254.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_1107 ) {&#xA;&#xA;&#x9;p_lbdExp254.applyPass2(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_createBehaviorJava" sMContext="//@sMContexts.257" typeParameters="G" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Type"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="super_createBehaviorJava" sMContext="//@sMContexts.256" typeParameters="G" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="super_addAt" sMContext="//@sMContexts.258" typeParameters="G" body="&#xA;&#x9;java.lang.Boolean idIfCond_1108 = false;&#xA;&#x9;idIfCond_1108 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, self.size()));&#xA;&#xA;&#x9;if( idIfCond_1108 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(self, index, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_equals" sMContext="//@sMContexts.258" typeParameters="G" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1109 = false;&#xA;&#x9;idIfCond_1109 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_1109 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1110 = false;&#xA;&#x9;idIfCond_1110 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_1110 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1111 = false;&#xA;&#x9;idIfCond_1111 = kermeta.standard.helper.IntegerWrapper.equals(self.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_1111 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = self.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_1112 = false;&#xA;&#x9;while( !idLoopCond_1112 ) {&#xA;&#x9;idLoopCond_1112 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_1112 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1113 = false;&#xA;&#x9;idIfCond_1113 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_1113 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="element" type="kermeta.language.structure.Object"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="super_remove" sMContext="//@sMContexts.259" typeParameters="G" body="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft256 = null;&#xA;&#xA;&#x9;G elem_ft256 = null;&#xA;&#xA;&#x9;result_ft256 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft256 = self.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1114 = false;&#xA;&#x9;while( !idLoopCond_1114 ) {&#xA;&#x9;idLoopCond_1114 = kermeta.standard.helper.BooleanWrapper.or(it_ft256.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft256, null));&#xA;&#x9;if ( idLoopCond_1114 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft256 = it_ft256.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1115 = false;&#xA;//BIle:detector&#xA;G e_lbdExp256 = elem_ft256;&#xA;&#xA;&#x9;idIfCond_1115 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp256, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1115 ) {&#xA;&#xA;&#x9;result_ft256 = elem_ft256;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft256;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1116 = false;&#xA;&#x9;idIfCond_1116 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_1116 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(self, elem);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_add" sMContext="//@sMContexts.260" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Collection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_add" sMContext="//@sMContexts.259" typeParameters="G" body="&#xA;&#x9;java.lang.Boolean idIfCond_1117 = false;&#xA;&#x9;idIfCond_1117 = kermeta.standard.helper.BooleanWrapper.not(self.contains(element));&#xA;&#xA;&#x9;if( idIfCond_1117 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.CollectionSuper.super_add(self, element);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
</simk:SIMKModel>
