<?xml version="1.0" encoding="ASCII"?>
<simk:SIMKModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:simk="http://www.kermeta.org/simk">
  <sMContexts sMMethods="//@sMMethods.0" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getLoopConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.1" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushKRErrorStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.2" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.3" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getIfConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.4" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printLbdExpSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.5" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.6" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeConstants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.7" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.8" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__popResultLastStatementStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.9" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeFrameworkOperations__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.10" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.11" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushCondStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.12" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.13" finalPackageQName="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initialize__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.14" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.15" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createAbstract__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.16" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createKermetaEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.17" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__getEmptyKermetaEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.18" finalPackageQName="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__create__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.19" finalPackageQName="km2ecore.helper.kermeta.runner">
    <sMClass name="CompilerHelperJava__ppEmfLikeCreateFactory__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.20" finalPackageQName="km2ecore.helper.kermeta.runner">
    <sMClass name="CompilerHelperJava__ppEmfLikeGetEMF__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.21" finalPackageQName="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__isKeyword__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.22" finalPackageQName="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__addKeyword__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.23" finalPackageQName="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__initialize__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.24" finalPackageQName="kermeta.language.runner">
    <sMClass name="ReflectiveCollection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.25" finalPackageQName="kermeta.language.runner">
    <sMClass name="ReflectiveSequence__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.26" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__getGenModelQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.27" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__getJavaQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.28" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__getGenModelJavaQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.29" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="NamedElement__qualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.30" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__retrievePackage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.31" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getEClassifierByQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.32" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__cleanEObject__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.33" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getAllPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.34" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getTypeDefinitionByQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.35" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Package__getAllSubPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.36" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.37" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.38" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__setSubClassDefinitionToSuperTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.39" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isAddedValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.40" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isSubTypeOf__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.41" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__allSuperTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.42" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.43" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isCollection__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.44" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.45" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeCompiled__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.46" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.47" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeDuplicated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.48" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.49" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__isVoidType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.50" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Operation__hasAValueTypedParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.51" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Parameter__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.52" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Parameter__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.53" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ParameterizedType__getClassDefinitionAsTyped__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.54" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.55" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class__allSuperClasses__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.56" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class__allAttributes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.57" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Class__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.58" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__interpretBooleanTag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.59" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getMetaClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.60" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.61" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getPropertyValue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.62" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__checkInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.63" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.64" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.65" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__oid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.66" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getTagValues__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.67" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getCompiledJavaExtern__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.68" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__checkAllInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.69" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeSelfExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.70" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFNeedProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.71" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getDeprecated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.72" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.73" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.74" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFIsTransient__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.75" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__isFrozen__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.76" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__hashcode__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.77" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__callsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.78" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getRootPackage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.79" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getUniqueTagValue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.80" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getFinalJavaClassQN__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.81" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeIsSerializable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.82" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__container__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.83" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__freeze__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.84" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__containingResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.85" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Object__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.86" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getRecopyInValueTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.87" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getEMFRenameAs__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.88" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.89" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__getClassFromPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.90" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.91" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.92" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeQName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.93" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.94" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isEDataType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.95" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="Type__isEnumeration__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.96" finalPackageQName="kermeta.language.structure.helper">
    <sMClass name="FunctionTypeInvariant" usages="Invariant"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.97" finalPackageQName="kermeta.language.structure.runner">
    <sMClass name="ModelType___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.98" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Expression__endOfExpressionFixer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.99" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Expression__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.100" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Expression__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.101" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterManyAndForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.102" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInLambdaExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.103" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.104" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCorrespondingLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.105" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCallFeatureCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.106" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInAFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.107" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.108" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.109" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.110" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.111" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.112" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__retrieveCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.113" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.114" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.115" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.116" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.117" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getParamBindings__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.118" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.119" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isFromClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.120" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.121" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameterMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.122" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameterSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.123" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Block__containsRescue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.124" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticEnumLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.125" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.126" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.127" finalPackageQName="kermeta.language.behavior.runner">
    <sMClass name="Conditional__conditionIsCallFeatureThatCallsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.128" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main_km2ecore_onlyEcore__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.129" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__saveSingleEcore__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.130" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main_km2ecore_behaviorJava__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.131" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__saveSplitEcore__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.132" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main_inner__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.133" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__getTypeDefinitionByQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.134" finalPackageQName="kermeta.compiler.runner">
    <sMClass name="Main__main__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.135 //@sMMethods.136 //@sMMethods.137 //@sMMethods.138 //@sMMethods.139 //@sMMethods.140 //@sMMethods.141 //@sMMethods.142 //@sMMethods.143 //@sMMethods.144 //@sMMethods.145 //@sMMethods.146 //@sMMethods.147 //@sMMethods.148 //@sMMethods.149 //@sMMethods.150 //@sMMethods.151 //@sMMethods.152 //@sMMethods.153 //@sMMethods.154 //@sMMethods.155 //@sMMethods.156 //@sMMethods.157 //@sMMethods.158 //@sMMethods.159 //@sMMethods.160 //@sMMethods.161 //@sMMethods.162 //@sMMethods.163 //@sMMethods.164 //@sMMethods.165 //@sMMethods.166 //@sMMethods.167 //@sMMethods.168 //@sMMethods.169 //@sMMethods.170 //@sMMethods.171 //@sMMethods.172 //@sMMethods.173 //@sMMethods.174 //@sMMethods.175 //@sMMethods.176 //@sMMethods.177 //@sMMethods.178" finalPackageQName="kermeta.standard.helper">
    <sMClass name="StringWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.179" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__one__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.180" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__sum__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.181" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.182" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.183" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__isEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.184" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.185" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__any__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.186" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__empty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.187" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__isNotEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.188" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__iterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.189" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.190" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.191" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Collection__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.192" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.193" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.194" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.195" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.196" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Set__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.197" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.198" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.199" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.200" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.201" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Bag__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.202" finalPackageQName="kermeta.standard.runner">
    <sMClass name="OrderedCollection__last__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.203" finalPackageQName="kermeta.standard.runner">
    <sMClass name="OrderedCollection__first__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.204" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Iterator__hasNext__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.205" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Iterator__next__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.206" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Iterator__isOff__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.207" finalPackageQName="kermeta.standard.runner">
    <sMClass name="UnknownJavaObject__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.208" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Void__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.209" finalPackageQName="kermeta.standard.runner">
    <sMClass name="Void__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.210 //@sMMethods.211 //@sMMethods.212 //@sMMethods.213 //@sMMethods.214 //@sMMethods.215 //@sMMethods.216 //@sMMethods.217 //@sMMethods.218 //@sMMethods.219 //@sMMethods.220 //@sMMethods.221 //@sMMethods.222 //@sMMethods.223 //@sMMethods.224 //@sMMethods.225 //@sMMethods.226 //@sMMethods.227 //@sMMethods.228 //@sMMethods.229 //@sMMethods.230 //@sMMethods.231 //@sMMethods.232 //@sMMethods.233 //@sMMethods.234 //@sMMethods.235" finalPackageQName="kermeta.standard.helper">
    <sMClass name="BooleanWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.236 //@sMMethods.237 //@sMMethods.238 //@sMMethods.239 //@sMMethods.240 //@sMMethods.241 //@sMMethods.242 //@sMMethods.243 //@sMMethods.244 //@sMMethods.245 //@sMMethods.246 //@sMMethods.247 //@sMMethods.248 //@sMMethods.249 //@sMMethods.250 //@sMMethods.251 //@sMMethods.252 //@sMMethods.253 //@sMMethods.254 //@sMMethods.255 //@sMMethods.256 //@sMMethods.257 //@sMMethods.258 //@sMMethods.259 //@sMMethods.260 //@sMMethods.261 //@sMMethods.262 //@sMMethods.263 //@sMMethods.264 //@sMMethods.265 //@sMMethods.266 //@sMMethods.267" finalPackageQName="kermeta.standard.helper">
    <sMClass name="IntegerWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.268 //@sMMethods.269 //@sMMethods.270 //@sMMethods.271 //@sMMethods.272 //@sMMethods.273 //@sMMethods.274 //@sMMethods.275 //@sMMethods.276 //@sMMethods.277 //@sMMethods.278 //@sMMethods.279 //@sMMethods.280 //@sMMethods.281 //@sMMethods.282 //@sMMethods.283 //@sMMethods.284 //@sMMethods.285 //@sMMethods.286 //@sMMethods.287 //@sMMethods.288 //@sMMethods.289 //@sMMethods.290 //@sMMethods.291 //@sMMethods.292 //@sMMethods.293 //@sMMethods.294 //@sMMethods.295 //@sMMethods.296 //@sMMethods.297 //@sMMethods.298" finalPackageQName="kermeta.standard.helper">
    <sMClass name="RealWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.299 //@sMMethods.300 //@sMMethods.301 //@sMMethods.302 //@sMMethods.303 //@sMMethods.304 //@sMMethods.305 //@sMMethods.306 //@sMMethods.307 //@sMMethods.308 //@sMMethods.309 //@sMMethods.310 //@sMMethods.311 //@sMMethods.312 //@sMMethods.313 //@sMMethods.314 //@sMMethods.315 //@sMMethods.316 //@sMMethods.317 //@sMMethods.318 //@sMMethods.319 //@sMMethods.320 //@sMMethods.321 //@sMMethods.322 //@sMMethods.323" finalPackageQName="kermeta.standard.helper">
    <sMClass name="CharacterWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.324" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.325" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__values__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.326" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__keys__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.327" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__keyIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.328" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__valueIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.329" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Hashtable__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.330" finalPackageQName="kermeta.utils.runner">
    <sMClass name="StringBuffer__append__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.331" finalPackageQName="kermeta.utils.runner">
    <sMClass name="StringBuffer__length__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.332" finalPackageQName="kermeta.utils.runner">
    <sMClass name="StringBuffer__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.333" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Stack__peek__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.334" finalPackageQName="kermeta.utils.runner">
    <sMClass name="Stack__pop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.335" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__writeln__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.336" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__errorln__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.337" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__error__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.338" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__write__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.339" finalPackageQName="kermeta.io.runner">
    <sMClass name="StdIO__read__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.340" finalPackageQName="kermeta.io.runner">
    <sMClass name="FileIO__writeTextFile__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.341" finalPackageQName="kermeta.io.runner">
    <sMClass name="FileIO__readTextFile__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.342" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__distil__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.343" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__fail__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.344" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__assertEqual__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.345" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="AbstractFallible__assertSimilar__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.346" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Assert__fail__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.347" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Assert__assertEqual__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.348" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__getLogKermeta__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.349" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__fail__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.350" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__assertEqual__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.351" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__number__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.352" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Fallible__mustStop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.353" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Log__newAttempt__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.354" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Failure__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.355" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Error__makeTearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.356" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Error__makeSetUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.357" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Error__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.358" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Test__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.359" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="Test__initLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.360" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestSuite__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.361" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__setUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.362" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__raiseIfHasFailures__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.363" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__getLogEMF_renameAs__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.364" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__setTestMethodName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.365" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__getTestMethodName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.366" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.367" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.368" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestCase__tearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.369" finalPackageQName="kermeta.kunit.runner">
    <sMClass name="TestRunner__printTestResult__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.370" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.371" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__saveWithNewURI__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.372" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.373" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.374" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__instances__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.375" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Resource__normalizedUri__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.376" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.377" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__saveWithNewURI__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.378" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__saveAndValidateWithEMF__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.379" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFResource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.380" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__createResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.381" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__normalizeUri__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.382" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.383" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="Repository__getResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.384" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="DanglingDiagnostic__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.385" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFRepository__createResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.386" finalPackageQName="kermeta.persistence.runner">
    <sMClass name="EMFRepository__registerEcoreFile__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.387" finalPackageQName="kermeta.interpreter.runner">
    <sMClass name="DynamicExpression__initializeDefaults__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.388" finalPackageQName="kermeta.interpreter.runner">
    <sMClass name="DynamicExpression__parse__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.389" finalPackageQName="ecore.runner">
    <sMClass name="EClass__getEStructuralFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.390" finalPackageQName="ecore.runner">
    <sMClass name="EClass__getFeatureCount__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.391" finalPackageQName="ecore.runner">
    <sMClass name="EClassifier__getClassifierID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.392" finalPackageQName="ecore.runner">
    <sMClass name="EEnum__op_getEEnumLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.393" finalPackageQName="ecore.runner">
    <sMClass name="EEnum__getEEnumLiteralByLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.394" finalPackageQName="ecore.runner">
    <sMClass name="EModelElement__getEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.395" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContainer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.396" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eCrossReferences__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.397" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.398" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContainingFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.399" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContainmentFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.400" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.401" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eIsProxy__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.402" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.403" finalPackageQName="ecore.runner">
    <sMClass name="EObject__eAllContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.404" finalPackageQName="ecore.runner">
    <sMClass name="EPackage__getEClassifier__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.405" finalPackageQName="ecore.runner">
    <sMClass name="EStructuralFeature__getFeatureID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.406" finalPackageQName="ecore.runner">
    <sMClass name="EStructuralFeature__getContainerClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.407" finalPackageQName="simk.runner">
    <sMClass name="SMClass__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.408" finalPackageQName="simk.runner">
    <sMClass name="SMClass__getQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.409" finalPackageQName="simk.runner">
    <sMClass name="SMMethod__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.410" finalPackageQName="simk.runner">
    <sMClass name="SMMethod__getParentEOperationFromModel__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.411" finalPackageQName="traceability.helper">
    <sMClass name="TextReferenceInvariant" usages="Invariant"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.412" finalPackageQName="traceability.runner">
    <sMClass name="File__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.413 //@sMMethods.414 //@sMMethods.415" finalPackageQName="kermeta.language.helper">
    <sMClass name="ReflectiveCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.416 //@sMMethods.418" finalPackageQName="kermeta.language.structure.helper">
    <sMClass name="ObjectSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.417" finalPackageQName="kermeta.language.structure.helper">
    <sMClass name="TypeSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.419 //@sMMethods.420" finalPackageQName="kermeta.standard.helper">
    <sMClass name="OrderedCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.421 //@sMMethods.423" finalPackageQName="kermeta.standard.helper">
    <sMClass name="SetSuper" usages="Super"/>
  </sMContexts>
  <sMContexts sMMethods="//@sMMethods.422" finalPackageQName="kermeta.standard.helper">
    <sMClass name="CollectionSuper" usages="Super"/>
  </sMContexts>
  <sMMethods name="main" sMContext="//@sMContexts.0" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.getLoopConditionId();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.1" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.pushKRErrorStack();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.2" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.save();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.3" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.getIfConditionId();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.4" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.printLbdExpSuffix();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.5" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.getResultLastStatementType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.6" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.initializeConstants();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.7" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.pushFtSuffix();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.8" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.popResultLastStatementStack();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.9" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.initializeFrameworkOperations();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.10" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.printFtSuffix();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.11" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.pushCondStack();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.12" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.getResultLastStatementId();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.13" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext());&#xA;anExec.initialize( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.14" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper());&#xA;anExec.createEmpty( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.15" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper());&#xA;anExec.createAbstract();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.16" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper());&#xA;anExec.createKermetaEAnnotation( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.17" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper());&#xA;anExec.getEmptyKermetaEAnnotation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.18" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper());&#xA;anExec.create( args[0],  args[1],  args[2]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.19" body="&#xA;km2ecore.helper.kermeta.CompilerHelperJava anExec = (km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava());&#xA;anExec.ppEmfLikeCreateFactory( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.20" body="&#xA;km2ecore.helper.kermeta.CompilerHelperJava anExec = (km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava());&#xA;anExec.ppEmfLikeGetEMF( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.21" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.common.CommonPackage.eINSTANCE.getJavaKeyWordList());&#xA;anExec.isKeyword( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.22" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.common.CommonPackage.eINSTANCE.getJavaKeyWordList());&#xA;anExec.addKeyword( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.23" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.common.CommonPackage.eINSTANCE.getJavaKeyWordList());&#xA;anExec.initialize();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.24" body="&#xA;kermeta.language.ReflectiveCollection anExec = (kermeta.language.ReflectiveCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.LanguagePackage.eINSTANCE.getReflectiveCollection());&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.25" body="&#xA;kermeta.language.ReflectiveSequence anExec = (kermeta.language.ReflectiveSequence) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.LanguagePackage.eINSTANCE.getReflectiveSequence());&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.26" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getNamedElement());&#xA;anExec.getGenModelQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.27" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getNamedElement());&#xA;anExec.getJavaQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.28" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getNamedElement());&#xA;anExec.getGenModelJavaQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.29" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getNamedElement());&#xA;anExec.qualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.30" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelingUnit());&#xA;anExec.retrievePackage( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.31" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelingUnit());&#xA;anExec.getEClassifierByQualifiedName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.32" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelingUnit());&#xA;anExec.cleanEObject();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.33" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelingUnit());&#xA;anExec.getAllPackages();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.34" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelingUnit());&#xA;anExec.getTypeDefinitionByQualifiedName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.35" body="&#xA;kermeta.language.structure.Package anExec = (kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getPackage());&#xA;anExec.getAllSubPackages();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.36" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.37" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.38" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.setSubClassDefinitionToSuperTypes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.39" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.isAddedValueType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.40" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.isSubTypeOf( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.41" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.allSuperTypes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.42" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.isIterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.43" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition());&#xA;anExec.isCollection();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.44" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.45" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.mustBeCompiled();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.46" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.47" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.mustBeDuplicated();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.48" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.49" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.isVoidType( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.50" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation());&#xA;anExec.hasAValueTypedParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.51" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getParameter());&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.52" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getParameter());&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.53" body="&#xA;kermeta.language.structure.ParameterizedType anExec = (kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getParameterizedType());&#xA;anExec.getClassDefinitionAsTyped();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.54" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClass_());&#xA;anExec._new();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.55" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClass_());&#xA;anExec.allSuperClasses();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.56" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClass_());&#xA;anExec.allAttributes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.57" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClass_());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.58" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.interpretBooleanTag( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.59" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getMetaClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.60" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getEMFEDataTypeInstanceClassName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.61" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getPropertyValue( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.62" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.checkInvariants();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.63" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getEMFInstanceClassName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.64" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.65" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.oid();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.66" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getTagValues( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.67" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getCompiledJavaExtern();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.68" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.checkAllInvariants();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.69" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getWrapperValueTypeSelfExpression();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.70" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getEMFNeedProperty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.71" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getDeprecated();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.72" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.73" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getWrapperValueTypeReturnType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.74" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getEMFIsTransient();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.75" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.isFrozen();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.76" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.hashcode();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.77" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.callsFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.78" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getRootPackage();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.79" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getUniqueTagValue( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.80" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getFinalJavaClassQN();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.81" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.getEMFEDataTypeIsSerializable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.82" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.container();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.83" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.freeze();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.84" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.containingResource();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.85" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getObject());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.86" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement());&#xA;anExec.getRecopyInValueTypes();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.87" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getMultiplicityElement());&#xA;anExec.getEMFRenameAs();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.88" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.89" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.getClassFromPrimitiveType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.90" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.91" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.getTypeName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.92" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.getTypeQName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.93" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.isPrimitiveType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.94" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.isEDataType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.95" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType());&#xA;anExec.isEnumeration();&#xA;" usages="Runner"/>
  <sMMethods name="checkInvariant_7041487__resultType" sMContext="//@sMContexts.96" body="java.lang.Boolean result = false;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(self.getRight(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;)));&#xA;return result;" usages="Invariant">
    <sMParameters name="self" type="kermeta.language.structure.FunctionType"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.97" body="&#xA;kermeta.language.structure.ModelType anExec = (kermeta.language.structure.ModelType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelType());&#xA;anExec._new();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.98" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getExpression());&#xA;anExec.endOfExpressionFixer();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.99" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getExpression());&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.100" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getExpression());&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.101" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameterManyAndForOwningOperation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.102" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isDeclaredInLambdaExpression();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.103" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.104" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.getCorrespondingLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.105" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.getCallFeatureCorrespondingParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.106" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isDeclaredInAFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.107" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameterForOwningOperation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.108" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameterMany();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.109" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameterSingle();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.110" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameterForOwningOperationMany();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.111" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.112" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.retrieveCorrespondingParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.113" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.114" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isParameterForOwningOperationSingle();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.115" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallVariable());&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.116" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.getFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.117" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.getParamBindings();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.118" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.getFunctionTypeReturnType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.119" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.isFromClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.120" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.121" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.isParameterMany();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.122" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallFeature());&#xA;anExec.isParameterSingle();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.123" body="&#xA;kermeta.language.behavior.Block anExec = (kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getBlock());&#xA;anExec.containsRescue();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.124" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallExpression());&#xA;anExec.isCallFeatureAsStaticEnumLiteral();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.125" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallExpression());&#xA;anExec.isCallFeatureAsStaticOperation();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.126" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getCallExpression());&#xA;anExec.isCallFeatureAsStaticProperty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.127" body="&#xA;kermeta.language.behavior.Conditional anExec = (kermeta.language.behavior.Conditional) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getConditional());&#xA;anExec.conditionIsCallFeatureThatCallsFunctionType();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.128" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.main_km2ecore_onlyEcore( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.129" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.saveSingleEcore( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.130" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.main_km2ecore_behaviorJava( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.131" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.saveSplitEcore( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.132" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.main_inner();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.133" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.getTypeDefinitionByQualifiedName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.134" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.compiler.CompilerPackage.eINSTANCE.getMain());&#xA;anExec.main( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="append" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_790 = false;&#xA;&#x9;idIfCond_790 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_790 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getCallOnVoidTarget())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.StringUtil.append(self, other);&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="plus" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_791 = false;&#xA;&#x9;idIfCond_791 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_791 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, kermeta.standard.helper.StringWrapper.toString(other)), &quot;java.lang.String&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, other), &quot;java.lang.String&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || other == null ) {&#xA;return self == other;&#xA;}&#xA;&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.equals((kermeta.language.structure.Object) ((java.lang.Object) self), other);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_792 = false;&#xA;&#x9;idIfCond_792 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;));&#xA;&#xA;&#x9;if( idIfCond_792 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.equals(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getPropertyInfos" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> set_infos = ((kermeta.standard.Sequence&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = ((kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable()));&#xA;&#xA;&#x9;set_infos = kermeta.standard.helper.StringWrapper.split(self, &quot; &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft181 = set_infos.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_793 = false;&#xA;&#x9;while( !idLoopCond_793 ) {&#xA;&#x9;idLoopCond_793 = it_ft181.isOff();&#xA;&#x9;if ( idLoopCond_793 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String i_lbdExp181 = it_ft181.next();&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> tmp_set_infos = kermeta.standard.helper.StringWrapper.split(i_lbdExp181, &quot;=&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_794 = false;&#xA;&#x9;idIfCond_794 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(tmp_set_infos.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_794 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_795 = false;&#xA;&#x9;idIfCond_795 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_set_infos.elementAt(0)));&#xA;&#xA;&#x9;if( idIfCond_795 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_796 = false;&#xA;&#x9;idIfCond_796 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_set_infos.elementAt(1))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tmp_set_infos.elementAt(1), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_796 ) {&#xA;&#xA;&#x9;map_infos.put(tmp_set_infos.elementAt(0), tmp_set_infos.elementAt(1));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = map_infos;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>"/>
  </sMMethods>
  <sMMethods name="toReal" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.toReal(self), &quot;java.lang.Double&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_797 = false;&#xA;&#x9;idIfCond_797 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_797 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getStringFormatException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="normalizeStatement" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.String EQUALS_NULL_STR = &quot;.equals(null)&quot;;&#xA;&#xA;&#x9;java.lang.String DOUBLE_SEMICOLON = &quot;;;&quot;;&#xA;&#xA;&#x9;result = self;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_798 = false;&#xA;&#x9;idIfCond_798 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.contains(result, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\&quot;&quot;, EQUALS_NULL_STR), &quot;\&quot;&quot;)));&#xA;&#xA;&#x9;if( idIfCond_798 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, EQUALS_NULL_STR, &quot; == null&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_799 = false;&#xA;&#x9;idIfCond_799 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.contains(result, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\&quot;&quot;, DOUBLE_SEMICOLON), &quot;\&quot;&quot;)));&#xA;&#xA;&#x9;if( idIfCond_799 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, DOUBLE_SEMICOLON, &quot;;&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toBoolean" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.toBoolean(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_800 = false;&#xA;&#x9;idIfCond_800 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_800 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getStringFormatException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="replaceExtension" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> set_str = kermeta.standard.helper.StringWrapper.split(self, &quot;\\.&quot;);&#xA;&#xA;&#x9;java.lang.Integer inc_seg = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft182 = set_str.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_801 = false;&#xA;&#x9;while( !idLoopCond_801 ) {&#xA;&#x9;idLoopCond_801 = it_ft182.isOff();&#xA;&#x9;if ( idLoopCond_801 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String seg_lbdExp182 = it_ft182.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_802 = false;&#xA;&#x9;idIfCond_802 = kermeta.standard.helper.IntegerWrapper.isLower(inc_seg, kermeta.standard.helper.IntegerWrapper.minus(set_str.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_802 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, seg_lbdExp182), &quot;.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;inc_seg = kermeta.standard.helper.IntegerWrapper.plus(inc_seg, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, new_extension);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="new_extension" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="contains" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.contains(self, str1), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_803 = false;&#xA;&#x9;idIfCond_803 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_803 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getCallOnVoidTarget())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.compareTo(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isValueType" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_804 = false;&#xA;&#x9;idIfCond_804 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getValueTypeMapping()).contains(self);&#xA;&#xA;&#x9;if( idIfCond_804 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="indexOf" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.indexOf(self, str), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="elementAt" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Character result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_805 = false;&#xA;&#x9;idIfCond_805 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(self), 1)));&#xA;&#xA;&#x9;if( idIfCond_805 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getStringIndexOutOfBound())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Character) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.elementAt(self, index), &quot;java.lang.Character&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Character"/>
  </sMMethods>
  <sMMethods name="size" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.size(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="capName" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.toUpperCase(kermeta.standard.helper.StringWrapper.substring(self, 0, 1)), kermeta.standard.helper.StringWrapper.substring(self, 1, kermeta.standard.helper.StringWrapper.size(self)));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="replace" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.replace(self, str1, str2), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMParameters name="str2" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toUpperCase" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.toUpperCase(self), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="toInteger" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.toInteger(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_806 = false;&#xA;&#x9;idIfCond_806 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_806 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getStringFormatException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toLowerCase" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.toLowerCase(self), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="substring" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_807 = false;&#xA;&#x9;idIfCond_807 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(startIndex, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(startIndex, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(endIndex, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(endIndex, startIndex));&#xA;&#xA;&#x9;if( idIfCond_807 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.substring(self, startIndex, endIndex), &quot;java.lang.String&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getStringIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="startIndex" type="java.lang.Integer"/>
    <sMParameters name="endIndex" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="split" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.standard.Sequence&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Sequence&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringUtil.split(self, delimiter), &quot;kermeta.standard.Sequence&lt;java.lang.String>&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="delimiter" type="java.lang.String"/>
    <sMReturn type="kermeta.standard.Sequence&lt;java.lang.String>"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.toString((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = self;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf((kermeta.language.structure.Object) ((java.lang.Object) self), cl);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self ), &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.set((kermeta.language.structure.Object) ((java.lang.Object) self), property, element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_808 = false;&#xA;&#x9;idIfCond_808 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_808 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.language.structure.EnumerationLiteral&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_809 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft183 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_810 = false;&#xA;&#x9;idIfCond_810 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_810 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp183 = null;&#xA;&#xA;&#x9;result_ft183 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft183 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_809 = result_ft183;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_809 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_811 = false;&#xA;&#x9;idIfCond_811 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_811 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft184 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_812 = false;&#xA;&#x9;while( !idLoopCond_812 ) {&#xA;&#x9;idLoopCond_812 = it_ft184.isOff();&#xA;&#x9;if ( idLoopCond_812 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp184 = it_ft184.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft185 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft185 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft185 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp184.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_814 = false;&#xA;&#x9;while( !idLoopCond_814 ) {&#xA;&#x9;idLoopCond_814 = kermeta.standard.helper.BooleanWrapper.or(it_ft185.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft185, false));&#xA;&#x9;if ( idLoopCond_814 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft185 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp185 = it_ft185.next();&#xA;&#xA;&#x9;result_lambda_ft185 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp185.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft185 = kermeta.standard.helper.BooleanWrapper.or(test_ft185, result_lambda_ft185);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft185 = test_ft185;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_813 = false;&#xA;&#x9;idIfCond_813 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft185), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp184.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_813 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp184);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_815 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft186 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_816 = false;&#xA;&#x9;idIfCond_816 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_816 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp186 = null;&#xA;&#xA;&#x9;result_ft186 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft186 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_815 = result_ft186;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_815 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_817 = false;&#xA;&#x9;idIfCond_817 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp184.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp184.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_817 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp184.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_818 = false;&#xA;&#x9;idIfCond_818 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp184.getLower());&#xA;&#xA;&#x9;if( idIfCond_818 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp184.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_819 = false;&#xA;&#x9;idIfCond_819 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp184.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_819 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp184.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.oid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName()), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_820 = false;&#xA;&#x9;idIfCond_820 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_820 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft187 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_821 = false;&#xA;&#x9;while( !idLoopCond_821 ) {&#xA;&#x9;idLoopCond_821 = it_ft187.isOff();&#xA;&#x9;if ( idLoopCond_821 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp187 = it_ft187.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_822 = false;&#xA;&#x9;idIfCond_822 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp187.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp187.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_822 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_823 = false;&#xA;&#x9;idIfCond_823 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp187)));&#xA;&#xA;&#x9;if( idIfCond_823 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_824 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft188 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft188 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft188 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp187)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_825 = false;&#xA;&#x9;while( !idLoopCond_825 ) {&#xA;&#x9;idLoopCond_825 = kermeta.standard.helper.BooleanWrapper.or(it_ft188.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft188, false));&#xA;&#x9;if ( idLoopCond_825 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft188 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp188 = it_ft188.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_826 = false;&#xA;&#x9;idIfCond_826 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp188, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_826 ) {&#xA;&#xA;&#x9;result_lambda_ft188 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp188, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft188 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft188 = kermeta.standard.helper.BooleanWrapper.or(test_ft188, result_lambda_ft188);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft188 = test_ft188;&#xA;&#xA;//CEC&#xA;idIfCond_824 = result_ft188;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_824 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp187), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft189 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_827 = false;&#xA;&#x9;while( !idLoopCond_827 ) {&#xA;&#x9;idLoopCond_827 = it_ft189.isOff();&#xA;&#x9;if ( idLoopCond_827 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp189 = it_ft189.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp189);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp187));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.get((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual((kermeta.language.structure.Object) ((java.lang.Object) self), element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.container((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.containingResource((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self), &quot;kermeta.persistence.Resource&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_828 = false;&#xA;&#x9;idIfCond_828 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_828 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.135" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the String expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.136" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.one();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.137" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.sum();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.138" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.139" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.140" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.isEmpty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.141" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.142" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.any();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.143" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.empty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.144" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.isNotEmpty();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.145" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.iterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.146" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.size();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.147" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.148" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getCollection());&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.149" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet());&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.150" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet());&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.151" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet());&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.152" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet());&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.153" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet());&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.154" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag());&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.155" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag());&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.156" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag());&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.157" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag());&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.158" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag());&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.159" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedCollection());&#xA;anExec.last();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.160" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedCollection());&#xA;anExec.first();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.161" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getIterator());&#xA;anExec.hasNext();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.162" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getIterator());&#xA;anExec.next();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.163" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getIterator());&#xA;anExec.isOff();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.164" body="&#xA;kermeta.standard.UnknownJavaObject anExec = (kermeta.standard.UnknownJavaObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getUnknownJavaObject());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.165" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getVoid());&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.166" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getVoid());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="not" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Boolean expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.not(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="xor" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Boolean expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.and(self, kermeta.standard.helper.BooleanWrapper.not(other)), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(self), other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || other == null ) {&#xA;return self == other;&#xA;}&#xA;&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.equals((kermeta.language.structure.Object) ((java.lang.Object) self), other);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_905 = false;&#xA;&#x9;idIfCond_905 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;if( idIfCond_905 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.equals(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="or" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Boolean expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.or(self, other), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="nand" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Boolean expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="implies" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Boolean expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other)), self));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.toString((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_906 = false;&#xA;&#x9;idIfCond_906 = self;&#xA;&#xA;&#x9;if( idIfCond_906 ) {&#xA;&#xA;&#x9;result = &quot;true&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;false&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="and" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Boolean expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.and(self, other), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf((kermeta.language.structure.Object) ((java.lang.Object) self), cl);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self ), &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.set((kermeta.language.structure.Object) ((java.lang.Object) self), property, element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_907 = false;&#xA;&#x9;idIfCond_907 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_907 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.language.structure.EnumerationLiteral&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_908 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft201 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_909 = false;&#xA;&#x9;idIfCond_909 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_909 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp201 = null;&#xA;&#xA;&#x9;result_ft201 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft201 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_908 = result_ft201;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_908 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_910 = false;&#xA;&#x9;idIfCond_910 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_910 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft202 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_911 = false;&#xA;&#x9;while( !idLoopCond_911 ) {&#xA;&#x9;idLoopCond_911 = it_ft202.isOff();&#xA;&#x9;if ( idLoopCond_911 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp202 = it_ft202.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft203 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft203 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft203 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp202.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_913 = false;&#xA;&#x9;while( !idLoopCond_913 ) {&#xA;&#x9;idLoopCond_913 = kermeta.standard.helper.BooleanWrapper.or(it_ft203.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft203, false));&#xA;&#x9;if ( idLoopCond_913 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft203 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp203 = it_ft203.next();&#xA;&#xA;&#x9;result_lambda_ft203 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp203.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft203 = kermeta.standard.helper.BooleanWrapper.or(test_ft203, result_lambda_ft203);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft203 = test_ft203;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_912 = false;&#xA;&#x9;idIfCond_912 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft203), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp202.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_912 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp202);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_914 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft204 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_915 = false;&#xA;&#x9;idIfCond_915 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_915 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp204 = null;&#xA;&#xA;&#x9;result_ft204 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft204 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_914 = result_ft204;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_914 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_916 = false;&#xA;&#x9;idIfCond_916 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp202.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp202.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_916 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp202.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_917 = false;&#xA;&#x9;idIfCond_917 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp202.getLower());&#xA;&#xA;&#x9;if( idIfCond_917 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp202.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_918 = false;&#xA;&#x9;idIfCond_918 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp202.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_918 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp202.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.oid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName()), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_919 = false;&#xA;&#x9;idIfCond_919 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_919 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft205 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_920 = false;&#xA;&#x9;while( !idLoopCond_920 ) {&#xA;&#x9;idLoopCond_920 = it_ft205.isOff();&#xA;&#x9;if ( idLoopCond_920 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp205 = it_ft205.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_921 = false;&#xA;&#x9;idIfCond_921 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp205.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp205.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_921 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_922 = false;&#xA;&#x9;idIfCond_922 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp205)));&#xA;&#xA;&#x9;if( idIfCond_922 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_923 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft206 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft206 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft206 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp205)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_924 = false;&#xA;&#x9;while( !idLoopCond_924 ) {&#xA;&#x9;idLoopCond_924 = kermeta.standard.helper.BooleanWrapper.or(it_ft206.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft206, false));&#xA;&#x9;if ( idLoopCond_924 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft206 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp206 = it_ft206.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_925 = false;&#xA;&#x9;idIfCond_925 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp206, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_925 ) {&#xA;&#xA;&#x9;result_lambda_ft206 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp206, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft206 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft206 = kermeta.standard.helper.BooleanWrapper.or(test_ft206, result_lambda_ft206);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft206 = test_ft206;&#xA;&#xA;//CEC&#xA;idIfCond_923 = result_ft206;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_923 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp205), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft207 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_926 = false;&#xA;&#x9;while( !idLoopCond_926 ) {&#xA;&#x9;idLoopCond_926 = it_ft207.isOff();&#xA;&#x9;if ( idLoopCond_926 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp207 = it_ft207.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp207);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp205));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.get((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual((kermeta.language.structure.Object) ((java.lang.Object) self), element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.container((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.containingResource((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self), &quot;kermeta.persistence.Resource&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.167" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_927 = false;&#xA;&#x9;idIfCond_927 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_927 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_928 = false;&#xA;&#x9;idIfCond_928 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_928 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_929 = false;&#xA;&#x9;idIfCond_929 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_929 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLower(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLower(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="plus" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_930 = false;&#xA;&#x9;idIfCond_930 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_930 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.plus(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="mult" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_931 = false;&#xA;&#x9;idIfCond_931 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_931 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.times(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="minus" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_932 = false;&#xA;&#x9;idIfCond_932 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_932 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.minus(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || other == null ) {&#xA;return self == other;&#xA;}&#xA;&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.equals((kermeta.language.structure.Object) ((java.lang.Object) self), other);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_933 = false;&#xA;&#x9;idIfCond_933 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_933 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_934 = false;&#xA;&#x9;idIfCond_934 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_934 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.equals(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="mod" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_935 = false;&#xA;&#x9;idIfCond_935 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_935 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDivisionByZero())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_936 = false;&#xA;&#x9;idIfCond_936 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_936 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.mod(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="div" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_937 = false;&#xA;&#x9;idIfCond_937 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_937 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDivisionByZero())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_938 = false;&#xA;&#x9;idIfCond_938 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_938 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.div(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toReal" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toReal(self), &quot;java.lang.Double&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_939 = false;&#xA;&#x9;idIfCond_939 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_939 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_940 = false;&#xA;&#x9;idIfCond_940 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_940 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getNotComparableException())) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.compareTo(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_941 = false;&#xA;&#x9;idIfCond_941 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_941 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_942 = false;&#xA;&#x9;idIfCond_942 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_942 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreater(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreater(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_943 = false;&#xA;&#x9;idIfCond_943 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_943 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_944 = false;&#xA;&#x9;idIfCond_944 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_944 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreaterOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreaterOrEqual(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="uminus" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.minus(0, self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.toString((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toString(self), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Integer expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_945 = false;&#xA;&#x9;idIfCond_945 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_945 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_946 = false;&#xA;&#x9;idIfCond_946 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_946 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLowerOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLowerOrEqual(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf((kermeta.language.structure.Object) ((java.lang.Object) self), cl);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self ), &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.set((kermeta.language.structure.Object) ((java.lang.Object) self), property, element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_947 = false;&#xA;&#x9;idIfCond_947 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_947 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.language.structure.EnumerationLiteral&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_948 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft208 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_949 = false;&#xA;&#x9;idIfCond_949 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_949 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp208 = null;&#xA;&#xA;&#x9;result_ft208 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft208 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_948 = result_ft208;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_948 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_950 = false;&#xA;&#x9;idIfCond_950 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_950 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft209 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_951 = false;&#xA;&#x9;while( !idLoopCond_951 ) {&#xA;&#x9;idLoopCond_951 = it_ft209.isOff();&#xA;&#x9;if ( idLoopCond_951 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp209 = it_ft209.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft210 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft210 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft210 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp209.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_953 = false;&#xA;&#x9;while( !idLoopCond_953 ) {&#xA;&#x9;idLoopCond_953 = kermeta.standard.helper.BooleanWrapper.or(it_ft210.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft210, false));&#xA;&#x9;if ( idLoopCond_953 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft210 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp210 = it_ft210.next();&#xA;&#xA;&#x9;result_lambda_ft210 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp210.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft210 = kermeta.standard.helper.BooleanWrapper.or(test_ft210, result_lambda_ft210);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft210 = test_ft210;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_952 = false;&#xA;&#x9;idIfCond_952 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft210), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp209.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_952 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp209);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_954 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft211 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_955 = false;&#xA;&#x9;idIfCond_955 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_955 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp211 = null;&#xA;&#xA;&#x9;result_ft211 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft211 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_954 = result_ft211;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_954 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_956 = false;&#xA;&#x9;idIfCond_956 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp209.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp209.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_956 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp209.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_957 = false;&#xA;&#x9;idIfCond_957 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp209.getLower());&#xA;&#xA;&#x9;if( idIfCond_957 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp209.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_958 = false;&#xA;&#x9;idIfCond_958 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp209.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_958 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp209.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.oid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName()), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_959 = false;&#xA;&#x9;idIfCond_959 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_959 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft212 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_960 = false;&#xA;&#x9;while( !idLoopCond_960 ) {&#xA;&#x9;idLoopCond_960 = it_ft212.isOff();&#xA;&#x9;if ( idLoopCond_960 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp212 = it_ft212.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_961 = false;&#xA;&#x9;idIfCond_961 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp212.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp212.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_961 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_962 = false;&#xA;&#x9;idIfCond_962 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp212)));&#xA;&#xA;&#x9;if( idIfCond_962 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_963 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft213 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft213 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft213 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp212)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_964 = false;&#xA;&#x9;while( !idLoopCond_964 ) {&#xA;&#x9;idLoopCond_964 = kermeta.standard.helper.BooleanWrapper.or(it_ft213.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft213, false));&#xA;&#x9;if ( idLoopCond_964 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft213 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp213 = it_ft213.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_965 = false;&#xA;&#x9;idIfCond_965 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp213, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_965 ) {&#xA;&#xA;&#x9;result_lambda_ft213 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp213, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft213 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft213 = kermeta.standard.helper.BooleanWrapper.or(test_ft213, result_lambda_ft213);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft213 = test_ft213;&#xA;&#xA;//CEC&#xA;idIfCond_963 = result_ft213;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_963 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp212), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft214 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_966 = false;&#xA;&#x9;while( !idLoopCond_966 ) {&#xA;&#x9;idLoopCond_966 = it_ft214.isOff();&#xA;&#x9;if ( idLoopCond_966 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp214 = it_ft214.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp214);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp212));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.get((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual((kermeta.language.structure.Object) ((java.lang.Object) self), element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.container((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.containingResource((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self), &quot;kermeta.persistence.Resource&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.168" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_967 = false;&#xA;&#x9;idIfCond_967 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_967 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="plus" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_968 = false;&#xA;&#x9;idIfCond_968 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_968 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.plus(self, other), &quot;java.lang.Double&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="mult" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_969 = false;&#xA;&#x9;idIfCond_969 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_969 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.times(self, other), &quot;java.lang.Double&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="minus" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_970 = false;&#xA;&#x9;idIfCond_970 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_970 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.minus(self, other), &quot;java.lang.Double&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="toInteger" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.toInteger(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="uminus" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.minus(kermeta.standard.helper.IntegerWrapper.toReal(0), self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || other == null ) {&#xA;return self == other;&#xA;}&#xA;&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.equals((kermeta.language.structure.Object) ((java.lang.Object) self), other);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_971 = false;&#xA;&#x9;idIfCond_971 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_971 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_972 = false;&#xA;&#x9;idIfCond_972 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_972 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="div" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_973 = false;&#xA;&#x9;idIfCond_973 = kermeta.standard.helper.RealWrapper.equals(other, kermeta.standard.helper.IntegerWrapper.toReal(0));&#xA;&#xA;&#x9;if( idIfCond_973 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDivisionByZero())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_974 = false;&#xA;&#x9;idIfCond_974 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_974 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getVoidOperandError())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.div(self, other), &quot;java.lang.Double&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.toString((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.toString(self), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_975 = false;&#xA;&#x9;idIfCond_975 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_975 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_976 = false;&#xA;&#x9;idIfCond_976 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_976 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getNotComparableException())) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Real expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf((kermeta.language.structure.Object) ((java.lang.Object) self), cl);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self ), &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.set((kermeta.language.structure.Object) ((java.lang.Object) self), property, element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_977 = false;&#xA;&#x9;idIfCond_977 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_977 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.language.structure.EnumerationLiteral&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_978 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft215 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_979 = false;&#xA;&#x9;idIfCond_979 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_979 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp215 = null;&#xA;&#xA;&#x9;result_ft215 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft215 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_978 = result_ft215;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_978 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_980 = false;&#xA;&#x9;idIfCond_980 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_980 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft216 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_981 = false;&#xA;&#x9;while( !idLoopCond_981 ) {&#xA;&#x9;idLoopCond_981 = it_ft216.isOff();&#xA;&#x9;if ( idLoopCond_981 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp216 = it_ft216.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft217 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft217 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft217 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp216.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_983 = false;&#xA;&#x9;while( !idLoopCond_983 ) {&#xA;&#x9;idLoopCond_983 = kermeta.standard.helper.BooleanWrapper.or(it_ft217.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft217, false));&#xA;&#x9;if ( idLoopCond_983 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft217 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp217 = it_ft217.next();&#xA;&#xA;&#x9;result_lambda_ft217 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp217.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft217 = kermeta.standard.helper.BooleanWrapper.or(test_ft217, result_lambda_ft217);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft217 = test_ft217;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_982 = false;&#xA;&#x9;idIfCond_982 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft217), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp216.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_982 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp216);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_984 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft218 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_985 = false;&#xA;&#x9;idIfCond_985 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_985 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp218 = null;&#xA;&#xA;&#x9;result_ft218 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft218 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_984 = result_ft218;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_984 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_986 = false;&#xA;&#x9;idIfCond_986 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp216.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp216.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_986 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp216.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_987 = false;&#xA;&#x9;idIfCond_987 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp216.getLower());&#xA;&#xA;&#x9;if( idIfCond_987 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp216.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_988 = false;&#xA;&#x9;idIfCond_988 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp216.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_988 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp216.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.oid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName()), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_989 = false;&#xA;&#x9;idIfCond_989 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_989 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft219 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_990 = false;&#xA;&#x9;while( !idLoopCond_990 ) {&#xA;&#x9;idLoopCond_990 = it_ft219.isOff();&#xA;&#x9;if ( idLoopCond_990 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp219 = it_ft219.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_991 = false;&#xA;&#x9;idIfCond_991 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp219.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp219.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_991 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_992 = false;&#xA;&#x9;idIfCond_992 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp219)));&#xA;&#xA;&#x9;if( idIfCond_992 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_993 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft220 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft220 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft220 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp219)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_994 = false;&#xA;&#x9;while( !idLoopCond_994 ) {&#xA;&#x9;idLoopCond_994 = kermeta.standard.helper.BooleanWrapper.or(it_ft220.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft220, false));&#xA;&#x9;if ( idLoopCond_994 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft220 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp220 = it_ft220.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_995 = false;&#xA;&#x9;idIfCond_995 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp220, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_995 ) {&#xA;&#xA;&#x9;result_lambda_ft220 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp220, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft220 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft220 = kermeta.standard.helper.BooleanWrapper.or(test_ft220, result_lambda_ft220);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft220 = test_ft220;&#xA;&#xA;//CEC&#xA;idIfCond_993 = result_ft220;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_993 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp219), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft221 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_996 = false;&#xA;&#x9;while( !idLoopCond_996 ) {&#xA;&#x9;idLoopCond_996 = it_ft221.isOff();&#xA;&#x9;if ( idLoopCond_996 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp221 = it_ft221.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp221);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp219));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.get((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual((kermeta.language.structure.Object) ((java.lang.Object) self), element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.container((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.containingResource((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self), &quot;kermeta.persistence.Resource&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.169" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_997 = false;&#xA;&#x9;idIfCond_997 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_997 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="equals" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || other == null ) {&#xA;return self == other;&#xA;}&#xA;&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.equals((kermeta.language.structure.Object) ((java.lang.Object) self), other);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_998 = false;&#xA;&#x9;idIfCond_998 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Character&quot;));&#xA;&#xA;&#x9;if( idIfCond_998 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.equals(self, other), &quot;java.lang.Boolean&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="compareTo" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Character expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_999 = false;&#xA;&#x9;idIfCond_999 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(other);&#xA;&#xA;&#x9;if( idIfCond_999 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getCallOnVoidTarget())) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.compareTo(self, other), &quot;java.lang.Integer&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="toString" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.toString((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.toString(self), &quot;java.lang.String&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="isKindOf" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf((kermeta.language.structure.Object) ((java.lang.Object) self), cl);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="getMetaClass" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self ), &quot;kermeta.language.structure.Class&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </sMMethods>
  <sMMethods name="set" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.set((kermeta.language.structure.Object) ((java.lang.Object) self), property, element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1000 = false;&#xA;&#x9;idIfCond_1000 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_1000 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.language.structure.EnumerationLiteral&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1001 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft222 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1002 = false;&#xA;&#x9;idIfCond_1002 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_1002 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp222 = null;&#xA;&#xA;&#x9;result_ft222 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft222 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_1001 = result_ft222;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_1001 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="checkInvariants" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1003 = false;&#xA;&#x9;idIfCond_1003 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_1003 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft223 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1004 = false;&#xA;&#x9;while( !idLoopCond_1004 ) {&#xA;&#x9;idLoopCond_1004 = it_ft223.isOff();&#xA;&#x9;if ( idLoopCond_1004 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp223 = it_ft223.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft224 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft224 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft224 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp223.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1006 = false;&#xA;&#x9;while( !idLoopCond_1006 ) {&#xA;&#x9;idLoopCond_1006 = kermeta.standard.helper.BooleanWrapper.or(it_ft224.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft224, false));&#xA;&#x9;if ( idLoopCond_1006 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft224 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp224 = it_ft224.next();&#xA;&#xA;&#x9;result_lambda_ft224 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp224.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft224 = kermeta.standard.helper.BooleanWrapper.or(test_ft224, result_lambda_ft224);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft224 = test_ft224;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_1005 = false;&#xA;&#x9;idIfCond_1005 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft224), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp223.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_1005 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, p_lbdExp223);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1007 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft225 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1008 = false;&#xA;&#x9;idIfCond_1008 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_1008 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp225 = null;&#xA;&#xA;&#x9;result_ft225 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft225 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_1007 = result_ft225;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_1007 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1009 = false;&#xA;&#x9;idIfCond_1009 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp223.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp223.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_1009 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp223.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1010 = false;&#xA;&#x9;idIfCond_1010 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp223.getLower());&#xA;&#xA;&#x9;if( idIfCond_1010 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp223.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1011 = false;&#xA;&#x9;idIfCond_1011 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp223.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_1011 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp223.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isVoid" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="oid" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.oid((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isInstanceOf" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName()), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="checkAllInvariants" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1012 = false;&#xA;&#x9;idIfCond_1012 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(self, null);&#xA;&#xA;&#x9;if( idIfCond_1012 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(self).getTypeDefinition(), &quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft226 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1013 = false;&#xA;&#x9;while( !idLoopCond_1013 ) {&#xA;&#x9;idLoopCond_1013 = it_ft226.isOff();&#xA;&#x9;if ( idLoopCond_1013 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp226 = it_ft226.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1014 = false;&#xA;&#x9;idIfCond_1014 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp226.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp226.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_1014 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1015 = false;&#xA;&#x9;idIfCond_1015 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp226)));&#xA;&#xA;&#x9;if( idIfCond_1015 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1016 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft227 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft227 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft227 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp226)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1017 = false;&#xA;&#x9;while( !idLoopCond_1017 ) {&#xA;&#x9;idLoopCond_1017 = kermeta.standard.helper.BooleanWrapper.or(it_ft227.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft227, false));&#xA;&#x9;if ( idLoopCond_1017 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft227 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp227 = it_ft227.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1018 = false;&#xA;&#x9;idIfCond_1018 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp227, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_1018 ) {&#xA;&#xA;&#x9;result_lambda_ft227 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp227, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft227 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft227 = kermeta.standard.helper.BooleanWrapper.or(test_ft227, result_lambda_ft227);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft227 = test_ft227;&#xA;&#xA;//CEC&#xA;idIfCond_1016 = result_ft227;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_1016 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp226), &quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft228 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1019 = false;&#xA;&#x9;while( !idLoopCond_1019 ) {&#xA;&#x9;idLoopCond_1019 = it_ft228.isOff();&#xA;&#x9;if ( idLoopCond_1019 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp228 = it_ft228.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp228);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(self, prop_lbdExp226));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="isSet" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="get" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.get((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isFrozen" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self), &quot;java.lang.Boolean&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="hashcode" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self), &quot;java.lang.Integer&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </sMMethods>
  <sMMethods name="isNotEqual" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual((kermeta.language.structure.Object) ((java.lang.Object) self), element);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="container" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.container((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="unset" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset((kermeta.language.structure.Object) ((java.lang.Object) self), property);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="freeze" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="containingResource" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.containingResource((kermeta.language.structure.Object) ((java.lang.Object) self));&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self), &quot;kermeta.persistence.Resource&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </sMMethods>
  <sMMethods name="asType" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {&#xA;return (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType((kermeta.language.structure.Object) ((java.lang.Object) self), type);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1020 = false;&#xA;&#x9;idIfCond_1020 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(self, type);&#xA;&#xA;&#x9;if( idIfCond_1020 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </sMMethods>
  <sMMethods name="isLower" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Character expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreaterOrEqual" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Character expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isLowerOrEqual" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Character expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="isGreater" sMContext="//@sMContexts.170" body="//Protection of the following code&#xA;if( self == null ) {&#xA;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();&#xA;exp.setMessage(&quot;Initialize the Character expression&quot;);&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;//End of the protection&#xA;&#xA;&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.171" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable());&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.172" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable());&#xA;anExec.values();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.173" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable());&#xA;anExec.keys();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.174" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable());&#xA;anExec.keyIterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.175" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable());&#xA;anExec.valueIterator();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.176" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable());&#xA;anExec.size();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.177" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer());&#xA;anExec.append( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.178" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer());&#xA;anExec.length();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.179" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.180" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack());&#xA;anExec.peek();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.181" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack());&#xA;anExec.pop();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.182" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getStdIO());&#xA;anExec.writeln( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.183" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getStdIO());&#xA;anExec.errorln( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.184" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getStdIO());&#xA;anExec.error( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.185" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getStdIO());&#xA;anExec.write( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.186" body="&#xA;kermeta.io.StdIO anExec = (kermeta.io.StdIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getStdIO());&#xA;anExec.read( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.187" body="&#xA;kermeta.io.FileIO anExec = (kermeta.io.FileIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getFileIO());&#xA;anExec.writeTextFile( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.188" body="&#xA;kermeta.io.FileIO anExec = (kermeta.io.FileIO) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.io.IoPackage.eINSTANCE.getFileIO());&#xA;anExec.readTextFile( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.189" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAbstractFallible());&#xA;anExec.distil( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.190" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAbstractFallible());&#xA;anExec.fail( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.191" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAbstractFallible());&#xA;anExec.assertEqual( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.192" body="&#xA;kermeta.kunit.AbstractFallible anExec = (kermeta.kunit.AbstractFallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAbstractFallible());&#xA;anExec.assertSimilar( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.193" body="&#xA;kermeta.kunit.Assert anExec = (kermeta.kunit.Assert) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssert());&#xA;anExec.fail( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.194" body="&#xA;kermeta.kunit.Assert anExec = (kermeta.kunit.Assert) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssert());&#xA;anExec.assertEqual( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.195" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFallible());&#xA;anExec.getLogKermeta();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.196" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFallible());&#xA;anExec.fail( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.197" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFallible());&#xA;anExec.assertEqual( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.198" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFallible());&#xA;anExec.number();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.199" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFallible());&#xA;anExec.mustStop();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.200" body="&#xA;kermeta.kunit.Log anExec = (kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getLog());&#xA;anExec.newAttempt();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.201" body="&#xA;kermeta.kunit.Failure anExec = (kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFailure());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.202" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError());&#xA;anExec.makeTearDown();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.203" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError());&#xA;anExec.makeSetUp();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.204" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.205" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTest());&#xA;anExec.run();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.206" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTest());&#xA;anExec.initLog();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.207" body="&#xA;kermeta.kunit.TestSuite anExec = (kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestSuite());&#xA;anExec.run();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.208" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.setUp();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.209" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.raiseIfHasFailures();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.210" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.getLogEMF_renameAs();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.211" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.setTestMethodName( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.212" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.getTestMethodName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.213" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.214" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.run();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.215" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestCase());&#xA;anExec.tearDown();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.216" body="&#xA;kermeta.kunit.TestRunner anExec = (kermeta.kunit.TestRunner) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestRunner());&#xA;anExec.printTestResult();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.217" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getResource());&#xA;anExec.save();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.218" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getResource());&#xA;anExec.saveWithNewURI( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.219" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getResource());&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.220" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getResource());&#xA;anExec.load();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.221" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getResource());&#xA;anExec.instances();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.222" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getResource());&#xA;anExec.normalizedUri();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.223" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFResource());&#xA;anExec.save();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.224" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFResource());&#xA;anExec.saveWithNewURI( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.225" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFResource());&#xA;anExec.saveAndValidateWithEMF();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.226" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFResource());&#xA;anExec.load();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.227" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getRepository());&#xA;anExec.createResource( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.228" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getRepository());&#xA;anExec.normalizeUri( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.229" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getRepository());&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.230" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getRepository());&#xA;anExec.getResource( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.231" body="&#xA;kermeta.persistence.DanglingDiagnostic anExec = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.232" body="&#xA;kermeta.persistence.EMFRepository anExec = (kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFRepository());&#xA;anExec.createResource( args[0],  args[1]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.233" body="&#xA;kermeta.persistence.EMFRepository anExec = (kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFRepository());&#xA;anExec.registerEcoreFile( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.234" body="&#xA;kermeta.interpreter.DynamicExpression anExec = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.interpreter.InterpreterPackage.eINSTANCE.getDynamicExpression());&#xA;anExec.initializeDefaults();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.235" body="&#xA;kermeta.interpreter.DynamicExpression anExec = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.interpreter.InterpreterPackage.eINSTANCE.getDynamicExpression());&#xA;anExec.parse( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.236" body="&#xA;ecore.EClass anExec = (ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEClass());&#xA;anExec.getEStructuralFeature( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.237" body="&#xA;ecore.EClass anExec = (ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEClass());&#xA;anExec.getFeatureCount();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.238" body="&#xA;ecore.EClassifier anExec = (ecore.EClassifier) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEClassifier());&#xA;anExec.getClassifierID();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.239" body="&#xA;ecore.EEnum anExec = (ecore.EEnum) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEEnum());&#xA;anExec.op_getEEnumLiteral( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.240" body="&#xA;ecore.EEnum anExec = (ecore.EEnum) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEEnum());&#xA;anExec.getEEnumLiteralByLiteral( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.241" body="&#xA;ecore.EModelElement anExec = (ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEModelElement());&#xA;anExec.getEAnnotation( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.242" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eContainer();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.243" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eCrossReferences();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.244" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eResource();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.245" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eContainingFeature();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.246" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eContainmentFeature();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.247" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eContents();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.248" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eIsProxy();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.249" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.250" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEObject());&#xA;anExec.eAllContents();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.251" body="&#xA;ecore.EPackage anExec = (ecore.EPackage) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEPackage());&#xA;anExec.getEClassifier( args[0]);&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.252" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEStructuralFeature());&#xA;anExec.getFeatureID();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.253" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEStructuralFeature());&#xA;anExec.getContainerClass();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.254" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMClass());&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.255" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMClass());&#xA;anExec.getQualifiedName();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.256" body="&#xA;simk.SMMethod anExec = (simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMMethod());&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <sMMethods name="main" sMContext="//@sMContexts.257" body="&#xA;simk.SMMethod anExec = (simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMMethod());&#xA;anExec.getParentEOperationFromModel();&#xA;" usages="Runner"/>
  <sMMethods name="checkInvariant_7061032__validTextRef" sMContext="//@sMContexts.258" body="java.lang.Boolean result = false;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(self.getLineEndAt(), self.getLineBeginAt()), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(self.getLineBeginAt(), self.getLineEndAt()), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.getCharEndAt(), self.getCharBeginAt())));&#xA;&#xA;return result;" usages="Invariant">
    <sMParameters name="self" type="traceability.TextReference"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="main" sMContext="//@sMContexts.259" body="&#xA;traceability.File anExec = (traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(traceability.TraceabilityPackage.eINSTANCE.getFile());&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <sMMethods name="super_clear" sMContext="//@sMContexts.260" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(self);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_remove" sMContext="//@sMContexts.260" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_add" sMContext="//@sMContexts.260" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_applyPass2" sMContext="//@sMContexts.261" typeParameters="G" body="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft264 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(self.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1140 = false;&#xA;&#x9;while( !idLoopCond_1140 ) {&#xA;&#x9;idLoopCond_1140 = it_ft264.isOff();&#xA;&#x9;if ( idLoopCond_1140 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp264 = it_ft264.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp263 = o_lbdExp264;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1141 = false;&#xA;&#x9;idIfCond_1141 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp263.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_1141 ) {&#xA;&#xA;&#x9;p_lbdExp263.applyPass2(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_createBehaviorJava" sMContext="//@sMContexts.262" typeParameters="G" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Type"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="super_createBehaviorJava" sMContext="//@sMContexts.261" typeParameters="G" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </sMMethods>
  <sMMethods name="super_addAt" sMContext="//@sMContexts.263" typeParameters="G" body="&#xA;&#x9;java.lang.Boolean idIfCond_1142 = false;&#xA;&#x9;idIfCond_1142 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, self.size()));&#xA;&#xA;&#x9;if( idIfCond_1142 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(self, index, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_equals" sMContext="//@sMContexts.263" typeParameters="G" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1143 = false;&#xA;&#x9;idIfCond_1143 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_1143 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1144 = false;&#xA;&#x9;idIfCond_1144 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_1144 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeOrVoid(element, &quot;kermeta.standard.Collection&lt;G>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1145 = false;&#xA;&#x9;idIfCond_1145 = kermeta.standard.helper.IntegerWrapper.equals(self.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_1145 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = self.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_1146 = false;&#xA;&#x9;while( !idLoopCond_1146 ) {&#xA;&#x9;idLoopCond_1146 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_1146 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1147 = false;&#xA;&#x9;idIfCond_1147 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_1147 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="element" type="kermeta.language.structure.Object"/>
    <sMReturn type="java.lang.Boolean"/>
  </sMMethods>
  <sMMethods name="super_remove" sMContext="//@sMContexts.264" typeParameters="G" body="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft265 = null;&#xA;&#xA;&#x9;G elem_ft265 = null;&#xA;&#xA;&#x9;result_ft265 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft265 = self.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1148 = false;&#xA;&#x9;while( !idLoopCond_1148 ) {&#xA;&#x9;idLoopCond_1148 = kermeta.standard.helper.BooleanWrapper.or(it_ft265.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft265, null));&#xA;&#x9;if ( idLoopCond_1148 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft265 = it_ft265.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1149 = false;&#xA;//BIle:detector&#xA;G e_lbdExp265 = elem_ft265;&#xA;&#xA;&#x9;idIfCond_1149 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp265, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1149 ) {&#xA;&#xA;&#x9;result_ft265 = elem_ft265;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft265;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1150 = false;&#xA;&#x9;idIfCond_1150 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_1150 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(self, elem);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_add" sMContext="//@sMContexts.265" typeParameters="G" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Collection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
  <sMMethods name="super_add" sMContext="//@sMContexts.264" typeParameters="G" body="&#xA;&#x9;java.lang.Boolean idIfCond_1151 = false;&#xA;&#x9;idIfCond_1151 = kermeta.standard.helper.BooleanWrapper.not(self.contains(element));&#xA;&#xA;&#x9;if( idIfCond_1151 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.CollectionSuper.super_add(self, element);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </sMMethods>
</simk:SIMKModel>
