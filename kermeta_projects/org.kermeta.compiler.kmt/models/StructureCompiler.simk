<?xml version="1.0" encoding="ASCII"?>
<simk:SIMKModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:simk="http://www.kermeta.org/simk">
  <sMContexts staticMethods="//@staticMethods.0 //@staticMethods.1 //@staticMethods.2 //@staticMethods.3 //@staticMethods.4 //@staticMethods.5 //@staticMethods.6 //@staticMethods.7 //@staticMethods.8 //@staticMethods.9 //@staticMethods.10 //@staticMethods.11 //@staticMethods.12 //@staticMethods.13 //@staticMethods.14 //@staticMethods.15 //@staticMethods.16 //@staticMethods.17 //@staticMethods.18 //@staticMethods.19 //@staticMethods.20 //@staticMethods.21 //@staticMethods.22 //@staticMethods.23 //@staticMethods.24 //@staticMethods.25 //@staticMethods.26 //@staticMethods.27 //@staticMethods.28 //@staticMethods.29 //@staticMethods.30 //@staticMethods.31 //@staticMethods.32 //@staticMethods.33 //@staticMethods.34 //@staticMethods.35 //@staticMethods.36 //@staticMethods.37 //@staticMethods.38 //@staticMethods.39 //@staticMethods.40 //@staticMethods.41 //@staticMethods.42 //@staticMethods.43" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="StringWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.44" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Void__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.45" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Void__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.46 //@staticMethods.47 //@staticMethods.48 //@staticMethods.49 //@staticMethods.50 //@staticMethods.51 //@staticMethods.52 //@staticMethods.53 //@staticMethods.54 //@staticMethods.55 //@staticMethods.56 //@staticMethods.57 //@staticMethods.58 //@staticMethods.59 //@staticMethods.60 //@staticMethods.61 //@staticMethods.62 //@staticMethods.63 //@staticMethods.64 //@staticMethods.65 //@staticMethods.66 //@staticMethods.67 //@staticMethods.68 //@staticMethods.69 //@staticMethods.70 //@staticMethods.71" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="BooleanWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.72 //@staticMethods.73 //@staticMethods.74 //@staticMethods.75 //@staticMethods.76 //@staticMethods.77 //@staticMethods.78 //@staticMethods.79 //@staticMethods.80 //@staticMethods.81 //@staticMethods.82 //@staticMethods.83 //@staticMethods.84 //@staticMethods.85 //@staticMethods.86 //@staticMethods.87 //@staticMethods.88 //@staticMethods.89 //@staticMethods.90 //@staticMethods.91 //@staticMethods.92 //@staticMethods.93 //@staticMethods.94 //@staticMethods.95 //@staticMethods.96 //@staticMethods.97 //@staticMethods.98 //@staticMethods.99 //@staticMethods.100 //@staticMethods.101 //@staticMethods.102 //@staticMethods.103" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="IntegerWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.104 //@staticMethods.105 //@staticMethods.106 //@staticMethods.107 //@staticMethods.108 //@staticMethods.109 //@staticMethods.110 //@staticMethods.111 //@staticMethods.112 //@staticMethods.113 //@staticMethods.114 //@staticMethods.115 //@staticMethods.116 //@staticMethods.117 //@staticMethods.118 //@staticMethods.119 //@staticMethods.120 //@staticMethods.121 //@staticMethods.122 //@staticMethods.123 //@staticMethods.124 //@staticMethods.125 //@staticMethods.126 //@staticMethods.127 //@staticMethods.128 //@staticMethods.129 //@staticMethods.130 //@staticMethods.131 //@staticMethods.132 //@staticMethods.133 //@staticMethods.134" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="RealWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.135 //@staticMethods.136 //@staticMethods.137 //@staticMethods.138 //@staticMethods.139 //@staticMethods.140 //@staticMethods.141 //@staticMethods.142 //@staticMethods.143 //@staticMethods.144 //@staticMethods.145 //@staticMethods.146 //@staticMethods.147 //@staticMethods.148 //@staticMethods.149 //@staticMethods.150 //@staticMethods.151 //@staticMethods.152 //@staticMethods.153 //@staticMethods.154 //@staticMethods.155 //@staticMethods.156 //@staticMethods.157 //@staticMethods.158 //@staticMethods.159" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="CharacterWrapper" usages="Wrapper"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.160" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__one__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.161" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__sum__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.162" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.163" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.164" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__isEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.165" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.166" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__any__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.167" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__empty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.168" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__isNotEmpty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.169" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__iterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.170" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.171" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.172" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Collection__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.173" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.174" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.175" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.176" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.177" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Set__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.178" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asSequence__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.179" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__flatten__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.180" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asOrderedSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.181" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asBag__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.182" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Bag__asSet__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.183" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="OrderedCollection__last__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.184" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="OrderedCollection__first__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.185" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Iterator__hasNext__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.186" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Iterator__next__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.187" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="Iterator__isOff__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.188" qualifiedNameFinalPackage="kermeta.standard.runner">
    <sMClass name="UnknownJavaObject__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.189" qualifiedNameFinalPackage="kermeta.compiler.runner">
    <sMClass name="Main__main_inner__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.190" qualifiedNameFinalPackage="kermeta.language.runner">
    <sMClass name="ReflectiveCollection__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.191" qualifiedNameFinalPackage="kermeta.language.runner">
    <sMClass name="ReflectiveSequence__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.192" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getMetaClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.193" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.194" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__checkInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.195" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFInstanceClassName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.196" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__isVoid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.197" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getAllContainedElementAsType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.198" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__oid__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.199" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__checkAllInvariants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.200" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getCompiledJavaExtern__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.201" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeSelfExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.202" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFNeedProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.203" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getDeprecated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.204" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.205" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getWrapperValueTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.206" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFIsTransient__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.207" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__isFrozen__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.208" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__hashcode__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.209" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__callsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.210" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__getEMFEDataTypeIsSerializable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.211" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__container__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.212" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__freeze__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.213" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__containingResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.214" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Object__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.215" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.216" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.217" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isCollection__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.218" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.219" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ClassDefinition__allSuperTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.220" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.221" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__allAttributes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.222" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__allSuperClasses__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.223" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__getClassDefinitionAsTyped__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.224" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Class__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.225" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Property__printGetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.226" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Property__printSetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.227" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.228" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeCompiled__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.229" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.230" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__mustBeDuplicated__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.231" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.232" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Operation__hasAValueTypedParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.233" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Parameter__isRunnable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.234" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Parameter__isFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.235" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isMappedToJavaRawType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.236" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__getClassFromPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.237" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isValueType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.238" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.239" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__getTypeQName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.240" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isPrimitiveType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.241" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isEDataType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.242" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Type__isEnumeration__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.243" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ModelingUnit__getAllPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.244" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getRecopyInValueTypes__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.245" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getFinalName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.246" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="MultiplicityElement__getEMFRenameAs__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.247" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="Package__getAllSubPackages__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.248" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="ModelType___new__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.249" qualifiedNameFinalPackage="kermeta.language.structure.runner">
    <sMClass name="NamedElement__qualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.250" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Expression__endOfExpressionFixer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.251" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Expression__mustBeAssigned__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.252" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Expression__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.253" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Block__containsRescue__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.254" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticEnumLiteral__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.255" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.256" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallExpression__isCallFeatureAsStaticProperty__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.257" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.258" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getParamBindings__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.259" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__getFunctionTypeReturnType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.260" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isFromClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.261" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__printGetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.262" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__printSetAccessor__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.263" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallFeature__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.264" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterManyAndForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.265" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInLambdaExpression__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.266" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCorrespondingLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.267" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isLambdaExpressionParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.268" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isDeclaredInAFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.269" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getCallFeatureCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.270" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.271" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.272" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.273" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationMany__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.274" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__getFunctionTypeParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.275" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__retrieveCorrespondingParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.276" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameter__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.277" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isParameterForOwningOperationSingle__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.278" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="CallVariable__isFunctionTypeVariable__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.279" qualifiedNameFinalPackage="kermeta.language.behavior.runner">
    <sMClass name="Conditional__conditionIsCallFeatureThatCallsFunctionType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.280" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Stack__peek__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.281" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Stack__pop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.282" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="StringBuffer__length__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.283" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="StringBuffer__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.284" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__clear__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.285" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__values__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.286" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__keys__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.287" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__keyIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.288" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__valueIterator__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.289" qualifiedNameFinalPackage="kermeta.utils.runner">
    <sMClass name="Hashtable__size__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.290" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.291" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.292" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.293" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__instances__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.294" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Resource__normalizedUri__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.295" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="EMFResource__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.296" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="EMFResource__saveAndValidateWithEMF__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.297" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="EMFResource__load__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.298" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="Repository__findDanglingModelElements__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.299" qualifiedNameFinalPackage="kermeta.persistence.runner">
    <sMClass name="DanglingDiagnostic__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.300" qualifiedNameFinalPackage="kermeta.interpreter.runner">
    <sMClass name="DynamicExpression__initializeDefaults__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.301" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Fallible__getLogKermeta__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.302" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Fallible__number__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.303" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Fallible__mustStop__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.304" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Log__newAttempt__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.305" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Failure__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.306" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Error__makeTearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.307" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Error__makeSetUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.308" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Error__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.309" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Test__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.310" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="Test__initLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.311" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestSuite__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.312" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__raiseIfHasFailures__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.313" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__setUp__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.314" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__getLog__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.315" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__getTestMethodName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.316" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.317" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__run__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.318" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestCase__tearDown__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.319" qualifiedNameFinalPackage="kermeta.kunit.runner">
    <sMClass name="TestRunner__printTestResult__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.320" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getLoopConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.321" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__save__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.322" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getIfConditionId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.323" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushKRErrorStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.324" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printLbdExpSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.325" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementType__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.326" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeConstants__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.327" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.328" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__popResultLastStatementStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.329" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__initializeFrameworkOperations__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.330" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__printFtSuffix__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.331" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__pushCondStack__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.332" qualifiedNameFinalPackage="km2ecore.runner">
    <sMClass name="KM2EcoreContext__getResultLastStatementId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.333" qualifiedNameFinalPackage="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__createAbstract__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.334" qualifiedNameFinalPackage="km2ecore.helper.ecore.runner">
    <sMClass name="EAnnotationHelper__getEmptyKermetaEAnnotation__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.335" qualifiedNameFinalPackage="km2ecore.common.runner">
    <sMClass name="JavaKeyWordList__initialize__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.336" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="SIMKModel__getNextId__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.337" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="StaticMethod__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.338" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="StaticMethod__getParentMethodFromModel__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.339" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="SMClass__setWrapperUsage__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.340" qualifiedNameFinalPackage="simk.runner">
    <sMClass name="SMClass__getQualifiedName__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.341" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EClass__getFeatureCount__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.342" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EClassifier__getClassifierID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.343" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContainer__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.344" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eCrossReferences__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.345" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContainingFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.346" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eResource__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.347" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContainmentFeature__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.348" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.349" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.350" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eIsProxy__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.351" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EObject__eAllContents__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.352" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EStructuralFeature__getFeatureID__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.353" qualifiedNameFinalPackage="ecore.runner">
    <sMClass name="EStructuralFeature__getContainerClass__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.354" qualifiedNameFinalPackage="traceability.runner">
    <sMClass name="File__toString__Runner" usages="Runner"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.355 //@staticMethods.356" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="OrderedCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.357 //@staticMethods.358 //@staticMethods.359" qualifiedNameFinalPackage="kermeta.language.helper">
    <sMClass name="ReflectiveCollectionSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.360 //@staticMethods.361 //@staticMethods.363" qualifiedNameFinalPackage="kermeta.language.structure.helper">
    <sMClass name="ObjectSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.362" qualifiedNameFinalPackage="kermeta.language.structure.helper">
    <sMClass name="TypeSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.364 //@staticMethods.366" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="SetSuper" usages="Super"/>
  </sMContexts>
  <sMContexts staticMethods="//@staticMethods.365" qualifiedNameFinalPackage="kermeta.standard.helper">
    <sMClass name="CollectionSuper" usages="Super"/>
  </sMContexts>
  <staticMethods name="append" sMContext="//@sMContexts.0" body="&#xA;&#x9;java.lang.Boolean idIfCond_1 = false;&#xA;&#x9;idIfCond_1 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_1 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.StringUtil.append(self, other);&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="plus" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_2 = false;&#xA;&#x9;idIfCond_2 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_2 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, kermeta.standard.helper.StringWrapper.toString(other));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="getPropertyInfos" sMContext="//@sMContexts.0" body="&#xA;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_infos = ((kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;java.lang.String>&quot;));&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = ((kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>&quot;));&#xA;&#xA;&#x9;set_infos = kermeta.standard.helper.StringWrapper.split(self, &quot; &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft1 = set_infos.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_3 = false;&#xA;&#x9;while( !idLoopCond_3 ) {&#xA;&#x9;idLoopCond_3 = it_ft1.isOff();&#xA;&#x9;if ( idLoopCond_3 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String i_lbdExp1 = it_ft1.next();&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> tmp_set_infos = kermeta.standard.helper.StringWrapper.split(i_lbdExp1, &quot;=&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_4 = false;&#xA;&#x9;idIfCond_4 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(tmp_set_infos.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_4 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_5 = false;&#xA;&#x9;idIfCond_5 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tmp_set_infos.elementAt(0)));&#xA;&#xA;&#x9;if( idIfCond_5 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_6 = false;&#xA;&#x9;idIfCond_6 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tmp_set_infos.elementAt(1))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(tmp_set_infos.elementAt(1), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_6 ) {&#xA;&#xA;&#x9;map_infos.put(tmp_set_infos.elementAt(0), tmp_set_infos.elementAt(1));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = map_infos;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_7 = false;&#xA;&#x9;idIfCond_7 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;));&#xA;&#xA;&#x9;if( idIfCond_7 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="toReal" sMContext="//@sMContexts.0" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toReal(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_8 = false;&#xA;&#x9;idIfCond_8 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_8 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="normalizeStatement" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(kermeta.standard.helper.StringWrapper.replace(self, &quot; == null&quot;, &quot; == null&quot;), &quot;;&quot;, &quot;;&quot;);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="toBoolean" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toBoolean(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_9 = false;&#xA;&#x9;idIfCond_9 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_9 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="replaceExtension" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_str = kermeta.standard.helper.StringWrapper.split(self, &quot;\.&quot;);&#xA;&#xA;&#x9;java.lang.Integer inc_seg = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft2 = set_str.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_10 = false;&#xA;&#x9;while( !idLoopCond_10 ) {&#xA;&#x9;idLoopCond_10 = it_ft2.isOff();&#xA;&#x9;if ( idLoopCond_10 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String seg_lbdExp2 = it_ft2.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_11 = false;&#xA;&#x9;idIfCond_11 = kermeta.standard.helper.IntegerWrapper.isLower(inc_seg, kermeta.standard.helper.IntegerWrapper.minus(set_str.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_11 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, seg_lbdExp2), &quot;\\.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;inc_seg = kermeta.standard.helper.IntegerWrapper.plus(inc_seg, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, new_extension);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="new_extension" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.0" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_12 = false;&#xA;&#x9;idIfCond_12 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_12 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isValueType" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_13 = false;&#xA;&#x9;idIfCond_13 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getValueTypeMapping()).contains(self);&#xA;&#xA;&#x9;if( idIfCond_13 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="contains" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.contains(self, str1);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="indexOf" sMContext="//@sMContexts.0" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.indexOf(self, str);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="elementAt" sMContext="//@sMContexts.0" body="&#xA;java.lang.Character result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_14 = false;&#xA;&#x9;idIfCond_14 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(self), 1)));&#xA;&#xA;&#x9;if( idIfCond_14 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Character) org.kermeta.compil.runtime.helper.basetypes.StringUtil.elementAt(self, index);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Character"/>
  </staticMethods>
  <staticMethods name="capName" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.toUpperCase(kermeta.standard.helper.StringWrapper.substring(self, 0, 1)), kermeta.standard.helper.StringWrapper.substring(self, 1, kermeta.standard.helper.StringWrapper.size(self)));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="size" sMContext="//@sMContexts.0" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.size(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="replace" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.replace(self, str1, str2);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="str1" type="java.lang.String"/>
    <sMParameters name="str2" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="toUpperCase" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toUpperCase(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="toInteger" sMContext="//@sMContexts.0" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toInteger(self);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_15 = false;&#xA;&#x9;idIfCond_15 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_15 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringFormatException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toLowerCase" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toLowerCase(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="substring" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_16 = false;&#xA;&#x9;idIfCond_16 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(startIndex, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(startIndex, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(subStringSize, kermeta.standard.helper.StringWrapper.size(self))), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(subStringSize, startIndex));&#xA;&#xA;&#x9;if( idIfCond_16 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.substring(self, startIndex, subStringSize);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="startIndex" type="java.lang.Integer"/>
    <sMParameters name="subStringSize" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="split" sMContext="//@sMContexts.0" body="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.basetypes.StringUtil.split(self, delimiter);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="delimiter" type="java.lang.String"/>
    <sMReturn type="kermeta.standard.OrderedSet&lt;java.lang.String>"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.0" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = self;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.0" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.0" body="&#xA;&#x9;java.lang.Boolean idIfCond_17 = false;&#xA;&#x9;idIfCond_17 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_17 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.0" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_18 = false;&#xA;&#x9;idIfCond_18 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_18 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft3 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_19 = false;&#xA;&#x9;while( !idLoopCond_19 ) {&#xA;&#x9;idLoopCond_19 = it_ft3.isOff();&#xA;&#x9;if ( idLoopCond_19 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp3 = it_ft3.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft4 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft4 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft4 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp3.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_21 = false;&#xA;&#x9;while( !idLoopCond_21 ) {&#xA;&#x9;idLoopCond_21 = kermeta.standard.helper.BooleanWrapper.or(it_ft4.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft4, false));&#xA;&#x9;if ( idLoopCond_21 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp4 = it_ft4.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp4.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft4 = kermeta.standard.helper.BooleanWrapper.or(test_ft4, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft4 = test_ft4;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_20 = false;&#xA;&#x9;idIfCond_20 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft4), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp3.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_20 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp3);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_22 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft5 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_23 = false;&#xA;&#xA;&#x9;if( idIfCond_23 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp5 = null;&#xA;&#xA;&#x9;result_ft5 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft5 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_22 = result_ft5;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_22 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_24 = false;&#xA;&#x9;idIfCond_24 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp3.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp3.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_24 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp3.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_25 = false;&#xA;&#x9;idIfCond_25 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp3.getLower());&#xA;&#xA;&#x9;if( idIfCond_25 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp3.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_26 = false;&#xA;&#x9;idIfCond_26 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp3.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_26 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp3.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.0" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.0" body="&#xA;&#x9;java.lang.Boolean idIfCond_27 = false;&#xA;&#x9;idIfCond_27 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_27 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft6 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_28 = false;&#xA;&#x9;while( !idLoopCond_28 ) {&#xA;&#x9;idLoopCond_28 = it_ft6.isOff();&#xA;&#x9;if ( idLoopCond_28 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp6 = it_ft6.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_29 = false;&#xA;&#x9;idIfCond_29 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp6.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp6.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_29 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_30 = false;&#xA;&#x9;idIfCond_30 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp6)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp6)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_30 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp6);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft7 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_31 = false;&#xA;&#x9;while( !idLoopCond_31 ) {&#xA;&#x9;idLoopCond_31 = it_ft7.isOff();&#xA;&#x9;if ( idLoopCond_31 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp7 = it_ft7.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp7);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp6));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.0" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.0" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="element" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.0" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.0" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.0" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.0" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.0" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_32 = false;&#xA;&#x9;idIfCond_32 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type);&#xA;&#xA;&#x9;if( idIfCond_32 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.0" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.String"/>
    <sMParameters name="other" type="java.lang.String"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="main" sMContext="//@sMContexts.1" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Void&quot;);&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.2" body="&#xA;kermeta.standard.Void anExec = (kermeta.standard.Void) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Void&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="not" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.not(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="xor" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.and(self, kermeta.standard.helper.BooleanWrapper.not(other)), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(self), other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_33 = false;&#xA;&#x9;idIfCond_33 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;if( idIfCond_33 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="or" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.or(self, other);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="nand" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="implies" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other)), self));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.3" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_34 = false;&#xA;&#x9;idIfCond_34 = self;&#xA;&#xA;&#x9;if( idIfCond_34 ) {&#xA;&#xA;&#x9;result = &quot;true&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;false&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="and" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.and(self, other);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="other" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.3" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.3" body="&#xA;&#x9;java.lang.Boolean idIfCond_35 = false;&#xA;&#x9;idIfCond_35 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_35 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.3" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_36 = false;&#xA;&#x9;idIfCond_36 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_36 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft8 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_37 = false;&#xA;&#x9;while( !idLoopCond_37 ) {&#xA;&#x9;idLoopCond_37 = it_ft8.isOff();&#xA;&#x9;if ( idLoopCond_37 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp8 = it_ft8.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft9 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft9 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft9 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp8.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_39 = false;&#xA;&#x9;while( !idLoopCond_39 ) {&#xA;&#x9;idLoopCond_39 = kermeta.standard.helper.BooleanWrapper.or(it_ft9.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft9, false));&#xA;&#x9;if ( idLoopCond_39 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp9 = it_ft9.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp9.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft9 = kermeta.standard.helper.BooleanWrapper.or(test_ft9, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft9 = test_ft9;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_38 = false;&#xA;&#x9;idIfCond_38 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft9), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp8.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_38 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp8);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_40 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft10 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_41 = false;&#xA;&#xA;&#x9;if( idIfCond_41 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp10 = null;&#xA;&#xA;&#x9;result_ft10 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft10 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_40 = result_ft10;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_40 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_42 = false;&#xA;&#x9;idIfCond_42 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp8.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp8.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_42 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp8.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_43 = false;&#xA;&#x9;idIfCond_43 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp8.getLower());&#xA;&#xA;&#x9;if( idIfCond_43 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp8.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_44 = false;&#xA;&#x9;idIfCond_44 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp8.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_44 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp8.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.3" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.3" body="&#xA;&#x9;java.lang.Boolean idIfCond_45 = false;&#xA;&#x9;idIfCond_45 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_45 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft11 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_46 = false;&#xA;&#x9;while( !idLoopCond_46 ) {&#xA;&#x9;idLoopCond_46 = it_ft11.isOff();&#xA;&#x9;if ( idLoopCond_46 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp11 = it_ft11.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_47 = false;&#xA;&#x9;idIfCond_47 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp11.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp11.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_47 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_48 = false;&#xA;&#x9;idIfCond_48 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp11)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp11)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_48 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp11);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft12 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_49 = false;&#xA;&#x9;while( !idLoopCond_49 ) {&#xA;&#x9;idLoopCond_49 = it_ft12.isOff();&#xA;&#x9;if ( idLoopCond_49 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp12 = it_ft12.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp12);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp11));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.3" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.3" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.3" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="element" type="java.lang.Boolean"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.3" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.3" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.3" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.3" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Boolean"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.3" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_50 = false;&#xA;&#x9;idIfCond_50 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type);&#xA;&#xA;&#x9;if( idIfCond_50 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="plus" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_51 = false;&#xA;&#x9;idIfCond_51 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_51 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_52 = false;&#xA;&#x9;idIfCond_52 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_52 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_53 = false;&#xA;&#x9;idIfCond_53 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_53 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLower(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLower(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="mult" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_54 = false;&#xA;&#x9;idIfCond_54 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_54 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="minus" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_55 = false;&#xA;&#x9;idIfCond_55 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_55 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_56 = false;&#xA;&#x9;idIfCond_56 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_56 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_57 = false;&#xA;&#x9;idIfCond_57 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_57 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="mod" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_58 = false;&#xA;&#x9;idIfCond_58 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_58 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_59 = false;&#xA;&#x9;idIfCond_59 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_59 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.mod(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toReal" sMContext="//@sMContexts.4" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toReal(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="div" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_60 = false;&#xA;&#x9;idIfCond_60 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( idIfCond_60 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_61 = false;&#xA;&#x9;idIfCond_61 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_61 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_62 = false;&#xA;&#x9;idIfCond_62 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_62 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_63 = false;&#xA;&#x9;idIfCond_63 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_63 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.NotComparableException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_64 = false;&#xA;&#x9;idIfCond_64 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_64 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_65 = false;&#xA;&#x9;idIfCond_65 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_65 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreater(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreater(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_66 = false;&#xA;&#x9;idIfCond_66 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_66 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_67 = false;&#xA;&#x9;idIfCond_67 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_67 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreaterOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreaterOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="uminus" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.minus(0, self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.4" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_68 = false;&#xA;&#x9;idIfCond_68 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_68 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_69 = false;&#xA;&#x9;idIfCond_69 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_69 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLowerOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLowerOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="other" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.4" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.4" body="&#xA;&#x9;java.lang.Boolean idIfCond_70 = false;&#xA;&#x9;idIfCond_70 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_70 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.4" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_71 = false;&#xA;&#x9;idIfCond_71 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_71 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft13 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_72 = false;&#xA;&#x9;while( !idLoopCond_72 ) {&#xA;&#x9;idLoopCond_72 = it_ft13.isOff();&#xA;&#x9;if ( idLoopCond_72 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp13 = it_ft13.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft14 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft14 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft14 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp13.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_74 = false;&#xA;&#x9;while( !idLoopCond_74 ) {&#xA;&#x9;idLoopCond_74 = kermeta.standard.helper.BooleanWrapper.or(it_ft14.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft14, false));&#xA;&#x9;if ( idLoopCond_74 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp14 = it_ft14.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp14.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft14 = kermeta.standard.helper.BooleanWrapper.or(test_ft14, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft14 = test_ft14;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_73 = false;&#xA;&#x9;idIfCond_73 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft14), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp13.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_73 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp13);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_75 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft15 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_76 = false;&#xA;&#xA;&#x9;if( idIfCond_76 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp15 = null;&#xA;&#xA;&#x9;result_ft15 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft15 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_75 = result_ft15;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_75 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_77 = false;&#xA;&#x9;idIfCond_77 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp13.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp13.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_77 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp13.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_78 = false;&#xA;&#x9;idIfCond_78 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp13.getLower());&#xA;&#xA;&#x9;if( idIfCond_78 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp13.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_79 = false;&#xA;&#x9;idIfCond_79 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp13.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_79 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp13.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.4" body="&#xA;&#x9;java.lang.Boolean idIfCond_80 = false;&#xA;&#x9;idIfCond_80 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_80 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft16 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_81 = false;&#xA;&#x9;while( !idLoopCond_81 ) {&#xA;&#x9;idLoopCond_81 = it_ft16.isOff();&#xA;&#x9;if ( idLoopCond_81 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp16 = it_ft16.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_82 = false;&#xA;&#x9;idIfCond_82 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp16.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp16.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_82 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_83 = false;&#xA;&#x9;idIfCond_83 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp16)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp16)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_83 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp16);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft17 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_84 = false;&#xA;&#x9;while( !idLoopCond_84 ) {&#xA;&#x9;idLoopCond_84 = it_ft17.isOff();&#xA;&#x9;if ( idLoopCond_84 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp17 = it_ft17.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp17);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp16));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.4" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.4" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.4" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="element" type="java.lang.Integer"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.4" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.4" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.4" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.4" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Integer"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.4" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_85 = false;&#xA;&#x9;idIfCond_85 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type);&#xA;&#xA;&#x9;if( idIfCond_85 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="plus" sMContext="//@sMContexts.5" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_86 = false;&#xA;&#x9;idIfCond_86 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_86 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="mult" sMContext="//@sMContexts.5" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_87 = false;&#xA;&#x9;idIfCond_87 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_87 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="minus" sMContext="//@sMContexts.5" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_88 = false;&#xA;&#x9;idIfCond_88 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_88 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="toInteger" sMContext="//@sMContexts.5" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toInteger(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="uminus" sMContext="//@sMContexts.5" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.minus(kermeta.standard.helper.IntegerWrapper.toReal(0), self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_89 = false;&#xA;&#x9;idIfCond_89 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_89 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_90 = false;&#xA;&#x9;idIfCond_90 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_90 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="div" sMContext="//@sMContexts.5" body="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_91 = false;&#xA;&#x9;idIfCond_91 = kermeta.standard.helper.RealWrapper.equals(other, kermeta.standard.helper.IntegerWrapper.toReal(0));&#xA;&#xA;&#x9;if( idIfCond_91 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DivisionByZero&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_92 = false;&#xA;&#x9;idIfCond_92 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_92 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.VoidOperandError&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Double"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.5" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.5" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_93 = false;&#xA;&#x9;idIfCond_93 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Double&quot;));&#xA;&#xA;&#x9;if( idIfCond_93 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_94 = false;&#xA;&#x9;idIfCond_94 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;));&#xA;&#xA;&#x9;if( idIfCond_94 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(self, kermeta.standard.helper.IntegerWrapper.toReal(((java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(other, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;)))));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.NotComparableException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="other" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.5" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.5" body="&#xA;&#x9;java.lang.Boolean idIfCond_95 = false;&#xA;&#x9;idIfCond_95 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_95 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.5" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_96 = false;&#xA;&#x9;idIfCond_96 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_96 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft18 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_97 = false;&#xA;&#x9;while( !idLoopCond_97 ) {&#xA;&#x9;idLoopCond_97 = it_ft18.isOff();&#xA;&#x9;if ( idLoopCond_97 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp18 = it_ft18.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft19 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft19 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft19 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp18.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_99 = false;&#xA;&#x9;while( !idLoopCond_99 ) {&#xA;&#x9;idLoopCond_99 = kermeta.standard.helper.BooleanWrapper.or(it_ft19.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft19, false));&#xA;&#x9;if ( idLoopCond_99 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp19 = it_ft19.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp19.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft19 = kermeta.standard.helper.BooleanWrapper.or(test_ft19, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft19 = test_ft19;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_98 = false;&#xA;&#x9;idIfCond_98 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft19), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp18.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_98 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp18);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_100 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft20 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_101 = false;&#xA;&#xA;&#x9;if( idIfCond_101 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp20 = null;&#xA;&#xA;&#x9;result_ft20 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft20 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_100 = result_ft20;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_100 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_102 = false;&#xA;&#x9;idIfCond_102 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp18.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp18.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_102 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp18.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_103 = false;&#xA;&#x9;idIfCond_103 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp18.getLower());&#xA;&#xA;&#x9;if( idIfCond_103 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp18.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_104 = false;&#xA;&#x9;idIfCond_104 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp18.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_104 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp18.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.5" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.5" body="&#xA;&#x9;java.lang.Boolean idIfCond_105 = false;&#xA;&#x9;idIfCond_105 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_105 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft21 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_106 = false;&#xA;&#x9;while( !idLoopCond_106 ) {&#xA;&#x9;idLoopCond_106 = it_ft21.isOff();&#xA;&#x9;if ( idLoopCond_106 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp21 = it_ft21.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_107 = false;&#xA;&#x9;idIfCond_107 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp21.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp21.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_107 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_108 = false;&#xA;&#x9;idIfCond_108 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp21)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp21)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_108 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp21);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft22 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_109 = false;&#xA;&#x9;while( !idLoopCond_109 ) {&#xA;&#x9;idLoopCond_109 = it_ft22.isOff();&#xA;&#x9;if ( idLoopCond_109 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp22 = it_ft22.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp22);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp21));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.5" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.5" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.5" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="element" type="java.lang.Double"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.5" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.5" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.5" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.5" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Double"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.5" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_110 = false;&#xA;&#x9;idIfCond_110 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type);&#xA;&#xA;&#x9;if( idIfCond_110 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="equals" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_111 = false;&#xA;&#x9;idIfCond_111 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(other), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Character&quot;));&#xA;&#xA;&#x9;if( idIfCond_111 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="compareTo" sMContext="//@sMContexts.6" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_112 = false;&#xA;&#x9;idIfCond_112 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(other);&#xA;&#xA;&#x9;if( idIfCond_112 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.CallOnVoidTarget&quot;)) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="toString" sMContext="//@sMContexts.6" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.toString(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="isKindOf" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).equals(cl);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="cl" type="kermeta.language.structure.Class"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="getMetaClass" sMContext="//@sMContexts.6" body="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( self );&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Class"/>
  </staticMethods>
  <staticMethods name="set" sMContext="//@sMContexts.6" body="&#xA;&#x9;java.lang.Boolean idIfCond_113 = false;&#xA;&#x9;idIfCond_113 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_113 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(self, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;\\.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="checkInvariants" sMContext="//@sMContexts.6" body="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_114 = false;&#xA;&#x9;idIfCond_114 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_114 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft23 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_115 = false;&#xA;&#x9;while( !idLoopCond_115 ) {&#xA;&#x9;idLoopCond_115 = it_ft23.isOff();&#xA;&#x9;if ( idLoopCond_115 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp23 = it_ft23.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft24 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft24 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft24 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp23.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_117 = false;&#xA;&#x9;while( !idLoopCond_117 ) {&#xA;&#x9;idLoopCond_117 = kermeta.standard.helper.BooleanWrapper.or(it_ft24.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft24, false));&#xA;&#x9;if ( idLoopCond_117 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp24 = it_ft24.next();&#xA;&#xA;&#x9;result_lambda = kermeta.standard.helper.StringWrapper.equals(t_lbdExp24.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft24 = kermeta.standard.helper.BooleanWrapper.or(test_ft24, result_lambda);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft24 = test_ft24;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_116 = false;&#xA;&#x9;idIfCond_116 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft24), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp23.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_116 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, p_lbdExp23);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_118 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft25 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_119 = false;&#xA;&#xA;&#x9;if( idIfCond_119 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp25 = null;&#xA;&#xA;&#x9;result_ft25 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft25 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_118 = result_ft25;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_118 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_120 = false;&#xA;&#x9;idIfCond_120 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p_lbdExp23.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp23.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_120 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp23.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_121 = false;&#xA;&#x9;idIfCond_121 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp23.getLower());&#xA;&#xA;&#x9;if( idIfCond_121 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp23.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_122 = false;&#xA;&#x9;idIfCond_122 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp23.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_122 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;\\.&quot;), p_lbdExp23.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(self)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isVoid" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="oid" sMContext="//@sMContexts.6" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isInstanceOf" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type.getClass().getName());&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="type" type="kermeta.language.structure.Type"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="checkAllInvariants" sMContext="//@sMContexts.6" body="&#xA;&#x9;java.lang.Boolean idIfCond_123 = false;&#xA;&#x9;idIfCond_123 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(self, null);&#xA;&#xA;&#x9;if( idIfCond_123 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(self);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(self).getTypeDefinition();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft26 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_124 = false;&#xA;&#x9;while( !idLoopCond_124 ) {&#xA;&#x9;idLoopCond_124 = it_ft26.isOff();&#xA;&#x9;if ( idLoopCond_124 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp26 = it_ft26.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_125 = false;&#xA;&#x9;idIfCond_125 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp26.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp26.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_125 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_126 = false;&#xA;&#x9;idIfCond_126 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp26)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp26)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_126 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp26);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft27 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_127 = false;&#xA;&#x9;while( !idLoopCond_127 ) {&#xA;&#x9;idLoopCond_127 = it_ft27.isOff();&#xA;&#x9;if ( idLoopCond_127 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp27 = it_ft27.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances_lbdExp27);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, prop_lbdExp26));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="isSet" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="get" sMContext="//@sMContexts.6" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(self, property);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isFrozen" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="hashcode" sMContext="//@sMContexts.6" body="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="java.lang.Integer"/>
  </staticMethods>
  <staticMethods name="isNotEqual" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(self, element));&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="element" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="container" sMContext="//@sMContexts.6" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="freeze" sMContext="//@sMContexts.6" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(self);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="unset" sMContext="//@sMContexts.6" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(self, property);&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="property" type="kermeta.language.structure.Property"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="containingResource" sMContext="//@sMContexts.6" body="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(self);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMReturn type="kermeta.persistence.Resource"/>
  </staticMethods>
  <staticMethods name="asType" sMContext="//@sMContexts.6" body="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_128 = false;&#xA;&#x9;idIfCond_128 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(self, type);&#xA;&#xA;&#x9;if( idIfCond_128 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="type" type="kermeta.language.structure.Class"/>
    <sMReturn type="kermeta.language.structure.Object"/>
  </staticMethods>
  <staticMethods name="isLower" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreaterOrEqual" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isLowerOrEqual" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="isGreater" sMContext="//@sMContexts.6" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;" usages="Wrapper">
    <sMParameters name="self" type="java.lang.Character"/>
    <sMParameters name="other" type="java.lang.Character"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="main" sMContext="//@sMContexts.7" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.one();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.8" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.sum();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.9" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.10" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.11" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.isEmpty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.12" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.13" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.any();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.14" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.empty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.15" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.isNotEmpty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.16" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.iterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.17" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.size();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.18" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.19" body="&#xA;kermeta.standard.Collection anExec = (kermeta.standard.Collection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Collection&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.20" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.21" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.22" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.23" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.24" body="&#xA;kermeta.standard.Set anExec = (kermeta.standard.Set) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.25" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asSequence();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.26" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.flatten();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.27" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asOrderedSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.28" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asBag();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.29" body="&#xA;kermeta.standard.Bag anExec = (kermeta.standard.Bag) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&quot;);&#xA;anExec.asSet();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.30" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedCollection&quot;);&#xA;anExec.last();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.31" body="&#xA;kermeta.standard.OrderedCollection anExec = (kermeta.standard.OrderedCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedCollection&quot;);&#xA;anExec.first();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.32" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.hasNext();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.33" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.next();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.34" body="&#xA;kermeta.standard.Iterator anExec = (kermeta.standard.Iterator) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&quot;);&#xA;anExec.isOff();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.35" body="&#xA;kermeta.standard.UnknownJavaObject anExec = (kermeta.standard.UnknownJavaObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.UnknownJavaObject&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.36" body="&#xA;kermeta.compiler.Main anExec = (kermeta.compiler.Main) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.compiler.Main&quot;);&#xA;anExec.main_inner();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.37" body="&#xA;kermeta.language.ReflectiveCollection anExec = (kermeta.language.ReflectiveCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.ReflectiveCollection&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.38" body="&#xA;kermeta.language.ReflectiveSequence anExec = (kermeta.language.ReflectiveSequence) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.ReflectiveSequence&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.39" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getMetaClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.40" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFEDataTypeInstanceClassName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.41" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.checkInvariants();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.42" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFInstanceClassName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.43" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.isVoid();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.44" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getAllContainedElementAsType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.45" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.oid();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.46" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.checkAllInvariants();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.47" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getCompiledJavaExtern();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.48" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getWrapperValueTypeSelfExpression();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.49" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFNeedProperty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.50" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getDeprecated();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.51" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.52" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getWrapperValueTypeReturnType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.53" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFIsTransient();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.54" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.isFrozen();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.55" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.hashcode();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.56" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.callsFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.57" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.getEMFEDataTypeIsSerializable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.58" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.container();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.59" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.freeze();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.60" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.containingResource();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.61" body="&#xA;kermeta.language.structure.Object anExec = (kermeta.language.structure.Object) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Object&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.62" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.63" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isIterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.64" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isCollection();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.65" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.66" body="&#xA;kermeta.language.structure.ClassDefinition anExec = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;);&#xA;anExec.allSuperTypes();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.67" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec._new();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.68" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.allAttributes();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.69" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.allSuperClasses();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.70" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.getClassDefinitionAsTyped();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.71" body="&#xA;kermeta.language.structure.Class anExec = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Class&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.72" body="&#xA;kermeta.language.structure.Property anExec = (kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Property&quot;);&#xA;anExec.printGetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.73" body="&#xA;kermeta.language.structure.Property anExec = (kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Property&quot;);&#xA;anExec.printSetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.74" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.75" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.mustBeCompiled();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.76" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.77" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.mustBeDuplicated();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.78" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.79" body="&#xA;kermeta.language.structure.Operation anExec = (kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;);&#xA;anExec.hasAValueTypedParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.80" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Parameter&quot;);&#xA;anExec.isRunnable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.81" body="&#xA;kermeta.language.structure.Parameter anExec = (kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Parameter&quot;);&#xA;anExec.isFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.82" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isMappedToJavaRawType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.83" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getClassFromPrimitiveType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.84" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isValueType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.85" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getTypeName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.86" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.getTypeQName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.87" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isPrimitiveType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.88" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isEDataType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.89" body="&#xA;kermeta.language.structure.Type anExec = (kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;);&#xA;anExec.isEnumeration();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.90" body="&#xA;kermeta.language.structure.ModelingUnit anExec = (kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelingUnit&quot;);&#xA;anExec.getAllPackages();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.91" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getRecopyInValueTypes();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.92" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getFinalName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.93" body="&#xA;kermeta.language.structure.MultiplicityElement anExec = (kermeta.language.structure.MultiplicityElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.MultiplicityElement&quot;);&#xA;anExec.getEMFRenameAs();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.94" body="&#xA;kermeta.language.structure.Package anExec = (kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Package&quot;);&#xA;anExec.getAllSubPackages();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.95" body="&#xA;kermeta.language.structure.ModelType anExec = (kermeta.language.structure.ModelType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ModelType&quot;);&#xA;anExec._new();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.96" body="&#xA;kermeta.language.structure.NamedElement anExec = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.NamedElement&quot;);&#xA;anExec.qualifiedName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.97" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.endOfExpressionFixer();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.98" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.mustBeAssigned();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.99" body="&#xA;kermeta.language.behavior.Expression anExec = (kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Expression&quot;);&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.100" body="&#xA;kermeta.language.behavior.Block anExec = (kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Block&quot;);&#xA;anExec.containsRescue();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.101" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticEnumLiteral();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.102" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticOperation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.103" body="&#xA;kermeta.language.behavior.CallExpression anExec = (kermeta.language.behavior.CallExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallExpression&quot;);&#xA;anExec.isCallFeatureAsStaticProperty();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.104" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.105" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getParamBindings();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.106" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.getFunctionTypeReturnType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.107" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isFromClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.108" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.printGetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.109" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.printSetAccessor();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.110" body="&#xA;kermeta.language.behavior.CallFeature anExec = (kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallFeature&quot;);&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.111" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterManyAndForOwningOperation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.112" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isDeclaredInLambdaExpression();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.113" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getCorrespondingLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.114" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isLambdaExpressionParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.115" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isDeclaredInAFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.116" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getCallFeatureCorrespondingParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.117" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.118" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterMany();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.119" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterSingle();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.120" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperationMany();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.121" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.getFunctionTypeParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.122" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.retrieveCorrespondingParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.123" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameter();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.124" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isParameterForOwningOperationSingle();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.125" body="&#xA;kermeta.language.behavior.CallVariable anExec = (kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.CallVariable&quot;);&#xA;anExec.isFunctionTypeVariable();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.126" body="&#xA;kermeta.language.behavior.Conditional anExec = (kermeta.language.behavior.Conditional) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.Conditional&quot;);&#xA;anExec.conditionIsCallFeatureThatCallsFunctionType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.127" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&quot;);&#xA;anExec.peek();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.128" body="&#xA;kermeta.utils.Stack anExec = (kermeta.utils.Stack) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&quot;);&#xA;anExec.pop();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.129" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.length();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.130" body="&#xA;kermeta.utils.StringBuffer anExec = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.131" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.clear();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.132" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.values();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.133" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.keys();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.134" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.keyIterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.135" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.valueIterator();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.136" body="&#xA;kermeta.utils.Hashtable anExec = (kermeta.utils.Hashtable) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&quot;);&#xA;anExec.size();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.137" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.138" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.139" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.load();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.140" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.instances();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.141" body="&#xA;kermeta.persistence.Resource anExec = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Resource&quot;);&#xA;anExec.normalizedUri();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.142" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.143" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.saveAndValidateWithEMF();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.144" body="&#xA;kermeta.persistence.EMFResource anExec = (kermeta.persistence.EMFResource) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFResource&quot;);&#xA;anExec.load();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.145" body="&#xA;kermeta.persistence.Repository anExec = (kermeta.persistence.Repository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.Repository&quot;);&#xA;anExec.findDanglingModelElements();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.146" body="&#xA;kermeta.persistence.DanglingDiagnostic anExec = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.147" body="&#xA;kermeta.interpreter.DynamicExpression anExec = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.interpreter.DynamicExpression&quot;);&#xA;anExec.initializeDefaults();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.148" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.getLogKermeta();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.149" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.number();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.150" body="&#xA;kermeta.kunit.Fallible anExec = (kermeta.kunit.Fallible) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Fallible&quot;);&#xA;anExec.mustStop();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.151" body="&#xA;kermeta.kunit.Log anExec = (kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Log&quot;);&#xA;anExec.newAttempt();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.152" body="&#xA;kermeta.kunit.Failure anExec = (kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Failure&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.153" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.makeTearDown();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.154" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.makeSetUp();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.155" body="&#xA;kermeta.kunit.Error anExec = (kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.156" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Test&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.157" body="&#xA;kermeta.kunit.Test anExec = (kermeta.kunit.Test) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Test&quot;);&#xA;anExec.initLog();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.158" body="&#xA;kermeta.kunit.TestSuite anExec = (kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestSuite&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.159" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.raiseIfHasFailures();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.160" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.setUp();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.161" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.getLog();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.162" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.getTestMethodName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.163" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.164" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.run();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.165" body="&#xA;kermeta.kunit.TestCase anExec = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestCase&quot;);&#xA;anExec.tearDown();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.166" body="&#xA;kermeta.kunit.TestRunner anExec = (kermeta.kunit.TestRunner) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestRunner&quot;);&#xA;anExec.printTestResult();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.167" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getLoopConditionId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.168" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.save();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.169" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getIfConditionId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.170" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushKRErrorStack();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.171" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.printLbdExpSuffix();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.172" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getResultLastStatementType();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.173" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initializeConstants();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.174" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushFtSuffix();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.175" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.popResultLastStatementStack();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.176" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.initializeFrameworkOperations();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.177" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.printFtSuffix();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.178" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.pushCondStack();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.179" body="&#xA;km2ecore.KM2EcoreContext anExec = (km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;);&#xA;anExec.getResultLastStatementId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.180" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.createAbstract();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.181" body="&#xA;km2ecore.helper.ecore.EAnnotationHelper anExec = (km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;);&#xA;anExec.getEmptyKermetaEAnnotation();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.182" body="&#xA;km2ecore.common.JavaKeyWordList anExec = (km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.JavaKeyWordList&quot;);&#xA;anExec.initialize();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.183" body="&#xA;simk.SIMKModel anExec = (simk.SIMKModel) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SIMKModel&quot;);&#xA;anExec.getNextId();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.184" body="&#xA;simk.StaticMethod anExec = (simk.StaticMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.StaticMethod&quot;);&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.185" body="&#xA;simk.StaticMethod anExec = (simk.StaticMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.StaticMethod&quot;);&#xA;anExec.getParentMethodFromModel();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.186" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;);&#xA;anExec.setWrapperUsage();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.187" body="&#xA;simk.SMClass anExec = (simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;);&#xA;anExec.getQualifiedName();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.188" body="&#xA;ecore.EClass anExec = (ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClass&quot;);&#xA;anExec.getFeatureCount();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.189" body="&#xA;ecore.EClassifier anExec = (ecore.EClassifier) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClassifier&quot;);&#xA;anExec.getClassifierID();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.190" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainer();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.191" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eCrossReferences();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.192" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainingFeature();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.193" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eResource();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.194" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContainmentFeature();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.195" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eContents();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.196" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.197" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eIsProxy();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.198" body="&#xA;ecore.EObject anExec = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EObject&quot;);&#xA;anExec.eAllContents();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.199" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStructuralFeature&quot;);&#xA;anExec.getFeatureID();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.200" body="&#xA;ecore.EStructuralFeature anExec = (ecore.EStructuralFeature) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStructuralFeature&quot;);&#xA;anExec.getContainerClass();&#xA;" usages="Runner"/>
  <staticMethods name="main" sMContext="//@sMContexts.201" body="&#xA;traceability.File anExec = (traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;traceability.File&quot;);&#xA;anExec.toString();&#xA;" usages="Runner"/>
  <staticMethods name="super_addAt" sMContext="//@sMContexts.202" body="&#xA;&#x9;java.lang.Boolean idIfCond_1005 = false;&#xA;&#x9;idIfCond_1005 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, self.size()));&#xA;&#xA;&#x9;if( idIfCond_1005 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(self, index, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="index" type="java.lang.Integer"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_equals" sMContext="//@sMContexts.202" body="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1006 = false;&#xA;&#x9;idIfCond_1006 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(element));&#xA;&#xA;&#x9;if( idIfCond_1006 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1007 = false;&#xA;&#x9;idIfCond_1007 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_1007 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1008 = false;&#xA;&#x9;idIfCond_1008 = kermeta.standard.helper.IntegerWrapper.equals(self.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_1008 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = self.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_1009 = false;&#xA;&#x9;while( !idLoopCond_1009 ) {&#xA;&#x9;idLoopCond_1009 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_1009 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1010 = false;&#xA;&#x9;idIfCond_1010 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_1010 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.OrderedCollection"/>
    <sMParameters name="element" type="kermeta.language.structure.Object"/>
    <sMReturn type="java.lang.Boolean"/>
  </staticMethods>
  <staticMethods name="super_clear" sMContext="//@sMContexts.203" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(self);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_remove" sMContext="//@sMContexts.203" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_add" sMContext="//@sMContexts.203" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.ReflectiveCollection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_applyPass2" sMContext="//@sMContexts.204" body="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft212 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(self.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1011 = false;&#xA;&#x9;while( !idLoopCond_1011 ) {&#xA;&#x9;idLoopCond_1011 = it_ft212.isOff();&#xA;&#x9;if ( idLoopCond_1011 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp212 = it_ft212.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp211 = o_lbdExp212;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1012 = false;&#xA;&#x9;idIfCond_1012 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp211.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_1012 ) {&#xA;&#xA;&#x9;p_lbdExp211.applyPass2(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_applyPass2BehaviorJava" sMContext="//@sMContexts.204" body="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft214 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(self.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1013 = false;&#xA;&#x9;while( !idLoopCond_1013 ) {&#xA;&#x9;idLoopCond_1013 = it_ft214.isOff();&#xA;&#x9;if ( idLoopCond_1013 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp214 = it_ft214.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp213 = o_lbdExp214;&#xA;&#xA;&#x9;p_lbdExp213.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_createBehaviorJava" sMContext="//@sMContexts.205" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Type"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="super_createBehaviorJava" sMContext="//@sMContexts.204" body="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.language.structure.Object"/>
    <sMParameters name="context" type="km2ecore.KM2EcoreContext"/>
    <sMReturn type="java.lang.String"/>
  </staticMethods>
  <staticMethods name="super_remove" sMContext="//@sMContexts.206" body="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft215 = null;&#xA;&#xA;&#x9;G elem_ft215 = null;&#xA;&#xA;&#x9;result_ft215 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft215 = self.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1014 = false;&#xA;&#x9;while( !idLoopCond_1014 ) {&#xA;&#x9;idLoopCond_1014 = kermeta.standard.helper.BooleanWrapper.or(it_ft215.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft215, null));&#xA;&#x9;if ( idLoopCond_1014 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft215 = it_ft215.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1015 = false;&#xA;//BIle:detector&#xA;G e_lbdExp215 = elem_ft215;&#xA;&#xA;&#x9;idIfCond_1015 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e_lbdExp215, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1015 ) {&#xA;&#xA;&#x9;result_ft215 = elem_ft215;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft215;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1016 = false;&#xA;&#x9;idIfCond_1016 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(elem, null);&#xA;&#xA;&#x9;if( idIfCond_1016 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(self, elem);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_add" sMContext="//@sMContexts.207" body="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(self, element);&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Collection"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
  <staticMethods name="super_add" sMContext="//@sMContexts.206" body="&#xA;&#x9;java.lang.Boolean idIfCond_1017 = false;&#xA;&#x9;idIfCond_1017 = kermeta.standard.helper.BooleanWrapper.not(self.contains(element));&#xA;&#xA;&#x9;if( idIfCond_1017 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.CollectionSuper.super_add(self, element);&#xA;}&#xA;&#xA;" usages="Super">
    <sMParameters name="self" type="kermeta.standard.Set"/>
    <sMParameters name="element" type="G"/>
    <sMReturn type="void"/>
  </staticMethods>
</simk:SIMKModel>
