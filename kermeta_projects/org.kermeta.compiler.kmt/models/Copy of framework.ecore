<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModelingUnit">
    <details key="require" value=""/>
    <details key="using" value="kermeta|kermeta::io|kermeta::standard|kermeta::language::structure|kermeta::utils|kermeta::persistence|kermeta::interpreter|kermeta::kunit|kermeta::ecore|kermeta::exceptions|kermeta::language|"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="executable" value="true"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="executable" value="true"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta"/>
    </eAnnotations>
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * The root package. See the other packages if you want to browse the classes of Kermeta api.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kermeta_packages.png&quot;/>&#xD;&#xA; */"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/3/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
      </eAnnotations>
    </eClassifiers>
    <eSubpackages name="io" nsURI="http://www.kermeta.org/kermeta/io/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/io"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains standard input/output related classes. &#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains file input/output related classes. &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StdIO" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of StdIO : standard input/output&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writeln the object to standard output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_1 = false;&#xA;&#x9;eval_1 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( eval_1 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.writeln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="errorln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writeln the object to error output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_2 = false;&#xA;&#x9;eval_2 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( eval_2 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.errorln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes the object to error output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_3 = false;&#xA;&#x9;eval_3 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( eval_3 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.error(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="write">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes the object to standard output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_4 = false;&#xA;&#x9;eval_4 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( eval_4 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.write(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="read" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Reads a String from standard input&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_5 = false;&#xA;&#x9;eval_5 = kermeta.standard.helper.StringWrapper.equals(prompt, null);&#xA;&#xA;&#x9;if( eval_5 ) {&#xA;&#xA;&#x9;prompt = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) fr.irisa.triskell.kermeta.runtime.basetypes.StdIO.read(prompt);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="prompt" eType="#/3/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileIO" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Implementation of simple helpers to read ans write text files&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeTextFile">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes a String in a text file&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_6 = false;&#xA;&#x9;eval_6 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( eval_6 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.FileNotFoundException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.io.SimpleFileIO.writeTextFile(filename, text);&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="#/3/standard/JavaString"/>
          <eParameters name="text" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="readTextFile" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Reads a text file&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_7 = false;&#xA;&#x9;eval_7 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( eval_7 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.FileNotFoundException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean exists = null;&#xA;&#xA;&#x9;java.lang.Boolean isdirectory = null;&#xA;&#xA;&#x9;exists = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.io.SimpleFileIO.fileExists(filename);&#xA;&#xA;&#x9;isdirectory = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.io.SimpleFileIO.fileIsDirectory(filename);&#xA;&#xA;&#x9;java.lang.Boolean eval_8 = false;&#xA;&#x9;eval_8 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.not(exists), isdirectory);&#xA;&#xA;&#x9;if( eval_8 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.FileNotFoundException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) fr.irisa.triskell.kermeta.runtime.io.SimpleFileIO.readTextFile(filename);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="#/3/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="utils" nsURI="http://www.kermeta.org/kermeta/utils/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/utils"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xD;&#xA; * metamodel&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xD;&#xA; * metamodel&#xD;&#xA; * &#xD;&#xA; * &lt;img src=&quot;./figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Stack">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of stack&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="peek">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Gets the element at the top of the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.first();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/utils/Stack/G"/>
        </eOperations>
        <eOperations name="pop">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get and remove the element at the top of the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = peek();&#xA;&#xA;&#x9;this.removeAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/utils/Stack/G"/>
        </eOperations>
        <eOperations name="push">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Pushes an element into the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.addAt(0, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/utils/Stack/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Sequence">
          <eTypeArguments eTypeParameter="#/3/utils/Stack/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringBuffer" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This class mimic the behavior of the java's StringBuffer class. This enables better performance in long&#xA; * string concatenation.&lt;br>&#xA; * &lt;b>Only work on Strings&lt;/b>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="append" eType="#/3/utils/StringBuffer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Append a given string at the end of this StringBuffer&#xA;&#x9; * @param arg0 A string to append at the end of this StringBuffer&#xA;&#x9; * @return A reference to this object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.utils.StringBuffer result = null;&#xA;&#xA;&#x9;result = (kermeta.utils.StringBuffer) fr.irisa.triskell.kermeta.runtime.basetypes.StringBuffer.append(this, arg0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="arg0" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="length" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return the length of the StringBuffer&#xA;&#x9; * @return length of the StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) fr.irisa.triskell.kermeta.runtime.basetypes.StringBuffer.length(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; *Convert this StringBuffer to String and return its value&#xA;&#x9; *@return The string value of this StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.String stringValue = null;&#xA;&#xA;&#x9;stringValue = (java.lang.String) fr.irisa.triskell.kermeta.runtime.basetypes.StringBuffer.toString(this);&#xA;&#xA;&#x9;result = stringValue;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Hashtable" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of hashtable&#xD;&#xA; * This implementation is for speed optimisation it cannot be serialized. &#xD;&#xA; * If your wish to serialize its content you need to copy its content into a classical ecore structure (attribute or references)&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="K">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eTypeParameters name="V">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="getValue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the value for key 'key' if it exists, otherwise returns Void&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;V result = null;&#xA;&#xA;&#x9;result = (V) fr.irisa.triskell.kermeta.runtime.basetypes.Map.get(this, key);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/utils/Hashtable/V"/>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all elements from the Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Map.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="containsKey" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#x9;&#xD;&#xA;&#x9; * Returns a Boolean stating whether a key is present or not in this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = getValue(key).isNotEqual(null);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="values">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a collection containing the elements of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Collection&lt;V> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Bag&lt;V>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;V>&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_1 = iterator();&#xA;&#x9;java.lang.Boolean eval_9 = false;&#xA;&#x9;while( !eval_9 ) {&#xA;&#x9;eval_9 = it_1.isOff();&#xA;&#x9;if ( eval_9 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G k = it.next();&#xA;&#xA;&#x9;result.add(keys().getValue(k));&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;keys().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573127]);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Collection">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="put">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds a entry into the Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Map.put(this, key, value);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
          <eParameters name="value">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/V"/>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the entry with key equals to 'key'&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Map.remove(this, key);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/3/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="keys">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a set containing the hash keys of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;K> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;K>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;K>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it = keyIterator();&#xA;&#x9;java.lang.Boolean eval_10 = false;&#xA;&#x9;while( !eval_10 ) {&#xA;&#x9;eval_10 = it.isOff();&#xA;&#x9;if ( eval_10 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="keyIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an iterator over the Keys of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;K> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;K>) fr.irisa.triskell.kermeta.runtime.basetypes.Map.keysIterator(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Iterator">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="valueIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an iterator over the values of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;V> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;V>) fr.irisa.triskell.kermeta.runtime.basetypes.Map.valueIterator(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Iterator">
            <eTypeArguments eTypeParameter="#/3/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="size" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the size of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) fr.irisa.triskell.kermeta.runtime.basetypes.Map.size(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="language" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the implementation of Kermeta reflective collections.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveCollection">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * ReflectiveCollection is a special collection that is used to define the type &#xD;&#xA; * of attributes that have an upper multiplicity > 1 in a class. It indeed handles&#xD;&#xA; * the update of opposite property if such an attribute has got one.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Collection&lt;G>.clear(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.remove(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.add(G)&#xD;&#xA;&#x9; * Add an element to this collection and update its opposite property if it exists.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Set">
          <eTypeArguments eTypeParameter="#/3/language/ReflectiveCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveSequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * ReflectiveSequence is an ordered ReflectiveCollection.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.clear()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.addAt(Integer)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveSequence.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.removeAt(Integer)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveSequence.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.remove(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.equals(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = //IP content of the current CallSuperOperation&#xA;super&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.add(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/OrderedSet">
          <eTypeArguments eTypeParameter="#/3/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/3/language/ReflectiveCollection">
          <eTypeArguments eTypeParameter="#/3/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eSubpackages name="behavior" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="CallExpression" abstract="true"
            eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any callable expression inherits this class, e.g : &#xA;  - variable call&#xA;  - feature call ( &lt;code>a.b&lt;/code> : b is a feature call)&#xA;&#xA;&lt;img alt=&quot;&quot;  height=&quot;90%&quot; width=&quot;90%&quot;  src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_call_expressions.png&quot; />"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticTypeVariableBindings"
              upperBound="-1" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="A call must be named"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Kermeta calls can embedd expressions as parameters"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true" eSuperTypes="#/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The base class for every entity used to define a behavior in operation body."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticType" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Expression (set by type checking)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallVariable" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="We call &quot;CallVariable&quot; the use of a variable in a statement.&#xA;in &lt;code>i := j + 1&lt;/code>, i and j are 2 CallVariables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallVariable represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallFeature" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallFeature is the model element that refers to the use of a feature, i.e either &#xA;a property or an operation in a statement. In &lt;code>stdio.writeln(&quot;hello&quot;)&lt;/code>, &#xA;&lt;code>writeln&lt;/code> is a CallFeature."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticOperation"
              eType="#/3/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The method which will be executed (operation case)&#xA;and the result value passed to the caller"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallFeature represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target Expression (the owner of the feature)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticEnumLiteral"
              eType="#/3/language/structure/EnumerationLiteral">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticProperty" eType="#/3/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The object which will be returned (property case)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallSuperOperation" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the operataion in the parent class&#xA;&#x9;In the following example, the type of super(element) is CallSuperOperation:&#xA;&#xA;class ParentClass {&#xA;  operation op(element : Integer) : Integer is do&#xA;      result := element + 1&#xA;  end&#xA;}&#xA; *&#xA;class ChildClass {&#xA;  method op(element : Integer) : Integer is do&#xA;      result := super(element)&#xA;  end&#xA;}"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallResult" eSuperTypes="#/3/language/behavior/CallVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the special internal variable &quot;result&quot; that is used to store the return value of any operation "/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallValue" eSuperTypes="#/3/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallValue refers to the use of the &lt;code>value&lt;/code> reserved keyword. This keyword is&#xA;only used in the body of the &lt;code>setter&lt;/code> part of derived properties."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Assignment is the model-element representation of the assignment statement &lt;code>x := y&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_assign_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Value to be assigned, as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
              eType="#/3/language/behavior/CallExpression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target of the assignment, as a CallExpression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCast" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether current assignment corresponds to a cast operation "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Block is the model-element representation for the &lt;code>do...end&lt;/code> block."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="statement" upperBound="-1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of statements composing the block"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="rescueBlock" upperBound="-1"
              eType="#/3/language/behavior/Rescue" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of rescues defined for the block"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Condition is the model-element representation for the &lt;code>&lt;/code> "/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="thenBody" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Then part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Condition expression of conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Optional else part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Raise" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to raise exception block"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written #######################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Rescue" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to rescue exception block"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              upperBound="-1" eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the rescue block, specified as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="exceptionName" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the catched exception"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionType" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the cathed exception"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeReference" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="TypeReference refers to the type used in a variable declaration"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Literal" abstract="true" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Literal refers to String values, Integer values, etc."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EmptyExpression" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="As suggested by its name, this class represents an expression that do nothing. Like a &quot;nop&quot;"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="JavaStaticCall" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represent a call to an extern Java operation. &#xA;This Java operation must be static and have at least one RuntimeO"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jmethod" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Java method to be launched in the identified Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jclass" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Qualified name of the targeted Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Java static call provided as KerMeta expressions"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaExpression" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to lambda expression definition (&lt;code>function { e | stdio.writeln(e.toString) }&lt;/code>)&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_lambda_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the lambda expression providede as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/3/language/behavior/LambdaParameter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the lambda expression"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaParameter" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to parameter definition in lambda expression"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the lambda parameter"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written ################################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing an Integer value"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/3/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a String value, typically : &quot;my string&quot;"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Boolean value, typically : true or false keyword"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Type.&#xA;for example, in &#xA;   Integer.new&#xA;Integer is a type literal representing the type kermeta::standard::Integer"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeref" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type refered by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidLiteral" eSuperTypes="#/3/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class is used to represent the special expression void"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Loop" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Loop refers to &lt;code>from var x : X init a until booleanCondition loop ... end&lt;/code>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="stopCondition" lowerBound="1"
              eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Stop condition of the loop, is interpreted as a Bollean value"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SelfExpression" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to &lt;code>self&lt;/code> use"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VariableDecl" eSuperTypes="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="refers to variable declaration &lt;code>var x : X init a&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_var_expressions.png&quot;/>"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/3/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the declared variable"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="structure" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Contains the concrete implementation (including the operation bodies) &#xD;&#xA; * of the classes of the &lt;code>kermeta::reflection&lt;/code> package.&#xD;&#xA; * If you need more documentation, please take a look at the&#xD;&#xA; * &lt;code>kermeta::reflection&lt;/code> package which is more complete.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_package.png&quot;/>&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_visitor_view.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::String"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Boolean"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Every one knows what an operation is."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/3/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeParameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the Operation, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
              eType="#/3/language/structure/Parameter" containment="true" eOpposite="#/3/language/structure/Parameter/operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="post" upperBound="-1"
              eType="#/3/language/structure/Constraint" containment="true" eOpposite="#/3/language/structure/Constraint/postOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Post-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Operation is abstract"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException"
              upperBound="-1" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Exceptions raised by the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="pre" upperBound="-1"
              eType="#/3/language/structure/Constraint" containment="true" eOpposite="#/3/language/structure/Constraint/preOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Pre-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superOperation" eType="#/3/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Super-operation of the Operation, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/3/language/structure/ClassDefinition"
              eOpposite="#/3/language/structure/ClassDefinition/ownedOperation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition owning the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xA; - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xA; - Property with isComposite == false : EReference"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="_default" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="If True, the value of the property is not stored but computed from other properties"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" eType="#/3/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Opposite Property of the Property, void if the Property has no opposite"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="getterBody" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property is read-only"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="setterBody" eType="#/3/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isID" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the property allows to identify its containing Object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/3/language/structure/ClassDefinition"
              eOpposite="#/3/language/structure/ClassDefinition/ownedAttribute">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition that owns the Property"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSetterAbstract"
              eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the setter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isGetterAbstract"
              eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the getter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property has a containment role"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Alias to kermeta::standard::Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Base class definition for the &lt;b>use&lt;/b> of a type."/>
          </eAnnotations>
          <eOperations name="clone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a copy of passed Object built by recursively copying attribute&#xD;&#xA;&#x9; * properties, and referencing original reference properties values&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSuperTypeOf" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Type.isSuperTypeOf(Type)&#xD;&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xD;&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xD;&#xA; &#x9; * to extend it.&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Type.hasSubType(this, object);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eOperations name="isInstance" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implements Type.isInstance(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = element.isInstanceOf(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a copy of passed Object built by recursively copying values of&#xD;&#xA;&#x9; * all properties, no matter the property kind&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Type.isSubTypeOf(Type)&#xD;&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xD;&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xD;&#xA; &#x9; * to extend it.&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = object.isSuperTypeOf(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeContainer" eType="#/3/language/structure/TypeContainer"
              eOpposite="#/3/language/structure/TypeContainer/containedType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning TypeContainer, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeContainer" abstract="true"
            eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Phantom class : EMF reflexive editors need that any element of a metamodel &#xA;has a direct or indirect containment relationship with the root model element of&#xA;the metamodel. This class resolves this technical requirement."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="containedType" upperBound="-1"
              eType="#/3/language/structure/Type" containment="true" eOpposite="#/3/language/structure/Type/typeContainer">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained types"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral" eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Item definition for enumeration"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" eType="#/3/language/structure/Enumeration"
              transient="true" eOpposite="#/3/language/structure/Enumeration/ownedLiteral">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding" eSuperTypes="#/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a binding between a TypeVariable and a Type"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Assigned Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
              eType="#/3/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeVariable"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Object definition: all entities of Kermeta metamodel explicitly inherit from Object"/>
          </eAnnotations>
          <eOperations name="isSet" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * True if the &lt;code>~property&lt;/code> of the object has been set&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.basetypes.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
          </eOperations>
          <eOperations name="get" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the instances of the given property for this Object.&#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * Example : &#xD;&#xA;&#x9; * &lt;pre>&#xD;&#xA;&#x9; * class A { reference attr : String }&#xD;&#xA;&#x9; * &lt;/pre>&#xD;&#xA;&#x9; * Using A :&#xD;&#xA;&#x9; * &lt;pre>&#xD;&#xA;&#x9; * operation getAProp() is do&#xD;&#xA;&#x9; *    var a : A&#xD;&#xA;&#x9; *    var s : String&#xD;&#xA;&#x9; *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xD;&#xA;&#x9; *    s ?= a.get(the_attr)&#xD;&#xA;&#x9; * end&#xD;&#xA;&#x9; * &lt;/pre>&#xD;&#xA;&#x9; * The user has to cast&#xD;&#xA;&#x9; * the result of this method according to the type and the upper multiplicity&#xD;&#xA;&#x9; * of this property. If upper multiplicity > 1, than the effective type of the &#xD;&#xA;&#x9; * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xD;&#xA;&#x9; * the name of the given Property (i.e the type of the property instance).&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
          </eOperations>
          <eOperations name="isKindOf" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the current Object is an instance of the given Class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = self.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = self.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = self.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = self.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = self.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = self.getMetaClass().equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cl" eType="#/3/language/structure/Class"/>
          </eOperations>
          <eOperations name="equals" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * semantic equality,&#xD;&#xA;&#x9; * if you wish to test for object identity you need to use the method oid&#xD;&#xA;&#x9; * ex: x.oid == y.oid&#xD;&#xA;&#x9; * by default, (ie. if not overloaded), the equals method for class Object implements &#xD;&#xA;&#x9; * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xD;&#xA;&#x9; * reference values x and y, this method returns true if and only if x and y refer to the same &#xD;&#xA;&#x9; * object (x.oid == y.oid has the value true). &#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * note1: the operator == is mapped to this &#xD;&#xA;&#x9; * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.equals(this, element);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.equals(self, element);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="getMetaClass" eType="#/3/language/structure/Class">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Class object that is the metaclass of current Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass( this.getClass().getName() );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets the &lt;code>element&lt;/code> to the &lt;code>~property&lt;/code> of the object &#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_11 = false;&#xA;&#x9;eval_11 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_11 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), this.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_126 = false;&#xA;&#x9;eval_126 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_126 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), self.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_138 = false;&#xA;&#x9;eval_138 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_138 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), self.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_188 = false;&#xA;&#x9;eval_188 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_188 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), self.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_218 = false;&#xA;&#x9;eval_218 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_218 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), self.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_234 = false;&#xA;&#x9;eval_234 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_234 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), self.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_264 = false;&#xA;&#x9;eval_264 = element.isInstanceOf(property.getType());&#xA;&#xA;&#x9;if( eval_264 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = (kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IncompatibleTypeError&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), self.toString()), &quot; to &quot;), element.toString()), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="isFrozen" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Object is currently in a&#xD;&#xA;&#x9; * frozen state&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isFrozen(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = this.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_12 = false;&#xA;&#x9;eval_12 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_12 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_2 = iterator();&#xA;&#x9;java.lang.Boolean eval_13 = false;&#xA;&#x9;while( !eval_13 ) {&#xA;&#x9;eval_13 = it_2.isOff();&#xA;&#x9;if ( eval_13 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = cd.getAllAttribute().get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_14 = false;&#xA;&#x9;eval_14 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_14 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_15 = false;&#xA;&#x9;eval_15 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_15 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_16 = false;&#xA;&#x9;eval_16 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_16 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(this);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = self.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_127 = false;&#xA;&#x9;eval_127 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_127 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_36 = iterator();&#xA;&#x9;java.lang.Boolean eval_128 = false;&#xA;&#x9;while( !eval_128 ) {&#xA;&#x9;eval_128 = it_36.isOff();&#xA;&#x9;if ( eval_128 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = self.get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_129 = false;&#xA;&#x9;eval_129 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_129 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_130 = false;&#xA;&#x9;eval_130 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_130 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_131 = false;&#xA;&#x9;eval_131 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_131 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = self.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_139 = false;&#xA;&#x9;eval_139 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_139 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_39 = iterator();&#xA;&#x9;java.lang.Boolean eval_140 = false;&#xA;&#x9;while( !eval_140 ) {&#xA;&#x9;eval_140 = it_39.isOff();&#xA;&#x9;if ( eval_140 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = self.get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_141 = false;&#xA;&#x9;eval_141 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_141 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_142 = false;&#xA;&#x9;eval_142 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_142 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_143 = false;&#xA;&#x9;eval_143 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_143 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = self.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_189 = false;&#xA;&#x9;eval_189 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_189 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_42 = iterator();&#xA;&#x9;java.lang.Boolean eval_190 = false;&#xA;&#x9;while( !eval_190 ) {&#xA;&#x9;eval_190 = it_42.isOff();&#xA;&#x9;if ( eval_190 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = self.get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_191 = false;&#xA;&#x9;eval_191 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_191 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_192 = false;&#xA;&#x9;eval_192 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_192 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_193 = false;&#xA;&#x9;eval_193 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_193 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = self.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_219 = false;&#xA;&#x9;eval_219 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_219 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_45 = iterator();&#xA;&#x9;java.lang.Boolean eval_220 = false;&#xA;&#x9;while( !eval_220 ) {&#xA;&#x9;eval_220 = it_45.isOff();&#xA;&#x9;if ( eval_220 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = self.get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_221 = false;&#xA;&#x9;eval_221 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_221 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_222 = false;&#xA;&#x9;eval_222 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_222 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_223 = false;&#xA;&#x9;eval_223 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_223 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = self.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_235 = false;&#xA;&#x9;eval_235 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_235 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_48 = iterator();&#xA;&#x9;java.lang.Boolean eval_236 = false;&#xA;&#x9;while( !eval_236 ) {&#xA;&#x9;eval_236 = it_48.isOff();&#xA;&#x9;if ( eval_236 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = self.get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_237 = false;&#xA;&#x9;eval_237 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_237 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_238 = false;&#xA;&#x9;eval_238 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_238 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_239 = false;&#xA;&#x9;eval_239 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_239 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = self.getMetaClass().getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_265 = false;&#xA;&#x9;eval_265 = kermeta.standard.helper.BooleanWrapper.not(cd.isVoid());&#xA;&#xA;&#x9;if( eval_265 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_51 = iterator();&#xA;&#x9;java.lang.Boolean eval_266 = false;&#xA;&#x9;while( !eval_266 ) {&#xA;&#x9;eval_266 = it_51.isOff();&#xA;&#x9;if ( eval_266 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G p = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = self.get(p);&#xA;&#xA;&#x9;java.lang.Boolean eval_267 = false;&#xA;&#x9;eval_267 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(v.isVoid()), v.isInstanceOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>));&#xA;&#xA;&#x9;if( eval_267 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = v.asType(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;java.lang.Boolean eval_268 = false;&#xA;&#x9;eval_268 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( eval_268 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean eval_269 = false;&#xA;&#x9;eval_269 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), v.isVoid());&#xA;&#xA;&#x9;if( eval_269 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573737]);&#xA;}&#xA;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.checkInvariants(self);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode" eType="#/3/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * code used in hashtable in order to identify an object in the hashtable keys&#xD;&#xA;&#x9; * This system is similar to the hashcode used in java. Please refer to java documentation&#xD;&#xA;&#x9; * for more information about hashcode&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isVoid" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Object is Void&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNotEqual" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * See kermeta::language::structure::Object.equals(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(equals(element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Freeze the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(this);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(self);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.freeze(self);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="container" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Object that contains current Object, void if the Object has&#xD;&#xA;&#x9; * no container&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.basetypes.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Remove the element set as the &lt;code>~property&lt;/code> of the object.&#xD;&#xA;&#x9; * The &lt;code>isSet(~property)&lt;/code> method will then return False&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.basetypes.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/3/language/structure/Property"/>
          </eOperations>
          <eOperations name="oid" eType="#/3/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the unique Oid of the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.basetypes.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isInstanceOf" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the current Object conforms to given Type&#xD;&#xA;&#x9; * This means: is this object an instance of this type, or is it an instance of its subtype &#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(this, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(self, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(self, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(self, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(self, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(self, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Object.isInstanceOf(self, type);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eOperations name="containingResource" eType="#/3/persistence/Resource">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Resource currently containing (directly or indirectly) the Object &#xD;&#xA;&#x9; * or void if the object belongs to no Resource&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.language.Object.getContainingResource(self);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="asType" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implementation of OCL like cast. It returns self if the object object conforms to the type given as parameter.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_17 = false;&#xA;&#x9;eval_17 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_17 ) {&#xA;&#xA;&#x9;result = this;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_132 = false;&#xA;&#x9;eval_132 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_132 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_144 = false;&#xA;&#x9;eval_144 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_144 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_194 = false;&#xA;&#x9;eval_194 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_194 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_224 = false;&#xA;&#x9;eval_224 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_224 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_240 = false;&#xA;&#x9;eval_240 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_240 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_270 = false;&#xA;&#x9;eval_270 = isInstanceOf(type);&#xA;&#xA;&#x9;if( eval_270 ) {&#xA;&#xA;&#x9;result = self;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.TypeCastError&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/3/language/structure/Class"/>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursively runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;&#x9; * and its supertypes&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_18 = false;&#xA;&#x9;eval_18 = this.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_18 ) {&#xA;&#xA;&#x9;this.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) this.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_3 = iterator();&#xA;&#x9;java.lang.Boolean eval_19 = false;&#xA;&#x9;while( !eval_19 ) {&#xA;&#x9;eval_19 = it_3.isOff();&#xA;&#x9;if ( eval_19 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_20 = false;&#xA;&#x9;eval_20 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_20 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_21 = false;&#xA;&#x9;eval_21 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(cd.getAllAttribute().get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(cd.getAllAttribute().get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_21 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) cd.getAllAttribute().get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_4 = iterator();&#xA;&#x9;java.lang.Boolean eval_22 = false;&#xA;&#x9;while( !eval_22 ) {&#xA;&#x9;eval_22 = it_4.isOff();&#xA;&#x9;if ( eval_22 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;cd.getAllAttribute().get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_133 = false;&#xA;&#x9;eval_133 = self.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_133 ) {&#xA;&#xA;&#x9;self.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) self.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_37 = iterator();&#xA;&#x9;java.lang.Boolean eval_134 = false;&#xA;&#x9;while( !eval_134 ) {&#xA;&#x9;eval_134 = it_37.isOff();&#xA;&#x9;if ( eval_134 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_135 = false;&#xA;&#x9;eval_135 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_135 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_136 = false;&#xA;&#x9;eval_136 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_136 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) self.get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_38 = iterator();&#xA;&#x9;java.lang.Boolean eval_137 = false;&#xA;&#x9;while( !eval_137 ) {&#xA;&#x9;eval_137 = it_38.isOff();&#xA;&#x9;if ( eval_137 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;self.get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_145 = false;&#xA;&#x9;eval_145 = self.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_145 ) {&#xA;&#xA;&#x9;self.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) self.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_40 = iterator();&#xA;&#x9;java.lang.Boolean eval_146 = false;&#xA;&#x9;while( !eval_146 ) {&#xA;&#x9;eval_146 = it_40.isOff();&#xA;&#x9;if ( eval_146 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_147 = false;&#xA;&#x9;eval_147 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_147 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_148 = false;&#xA;&#x9;eval_148 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_148 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) self.get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_41 = iterator();&#xA;&#x9;java.lang.Boolean eval_149 = false;&#xA;&#x9;while( !eval_149 ) {&#xA;&#x9;eval_149 = it_41.isOff();&#xA;&#x9;if ( eval_149 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;self.get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_195 = false;&#xA;&#x9;eval_195 = self.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_195 ) {&#xA;&#xA;&#x9;self.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) self.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_43 = iterator();&#xA;&#x9;java.lang.Boolean eval_196 = false;&#xA;&#x9;while( !eval_196 ) {&#xA;&#x9;eval_196 = it_43.isOff();&#xA;&#x9;if ( eval_196 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_197 = false;&#xA;&#x9;eval_197 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_197 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_198 = false;&#xA;&#x9;eval_198 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_198 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) self.get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_44 = iterator();&#xA;&#x9;java.lang.Boolean eval_199 = false;&#xA;&#x9;while( !eval_199 ) {&#xA;&#x9;eval_199 = it_44.isOff();&#xA;&#x9;if ( eval_199 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;self.get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_225 = false;&#xA;&#x9;eval_225 = self.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_225 ) {&#xA;&#xA;&#x9;self.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) self.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_46 = iterator();&#xA;&#x9;java.lang.Boolean eval_226 = false;&#xA;&#x9;while( !eval_226 ) {&#xA;&#x9;eval_226 = it_46.isOff();&#xA;&#x9;if ( eval_226 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_227 = false;&#xA;&#x9;eval_227 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_227 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_228 = false;&#xA;&#x9;eval_228 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_228 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) self.get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_47 = iterator();&#xA;&#x9;java.lang.Boolean eval_229 = false;&#xA;&#x9;while( !eval_229 ) {&#xA;&#x9;eval_229 = it_47.isOff();&#xA;&#x9;if ( eval_229 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;self.get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_241 = false;&#xA;&#x9;eval_241 = self.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_241 ) {&#xA;&#xA;&#x9;self.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) self.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_49 = iterator();&#xA;&#x9;java.lang.Boolean eval_242 = false;&#xA;&#x9;while( !eval_242 ) {&#xA;&#x9;eval_242 = it_49.isOff();&#xA;&#x9;if ( eval_242 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_243 = false;&#xA;&#x9;eval_243 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_243 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_244 = false;&#xA;&#x9;eval_244 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_244 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) self.get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_50 = iterator();&#xA;&#x9;java.lang.Boolean eval_245 = false;&#xA;&#x9;while( !eval_245 ) {&#xA;&#x9;eval_245 = it_50.isOff();&#xA;&#x9;if ( eval_245 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;self.get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_271 = false;&#xA;&#x9;eval_271 = self.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_271 ) {&#xA;&#xA;&#x9;self.checkInvariants();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) self.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_52 = iterator();&#xA;&#x9;java.lang.Boolean eval_272 = false;&#xA;&#x9;while( !eval_272 ) {&#xA;&#x9;eval_272 = it_52.isOff();&#xA;&#x9;if ( eval_272 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G subObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_273 = false;&#xA;&#x9;eval_273 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( eval_273 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_274 = false;&#xA;&#x9;eval_274 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(self.get(subObj).getMetaClass().getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( eval_274 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) self.get(subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_53 = iterator();&#xA;&#x9;java.lang.Boolean eval_275 = false;&#xA;&#x9;while( !eval_275 ) {&#xA;&#x9;eval_275 = it_53.isOff();&#xA;&#x9;if ( eval_275 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G aSubObjInstances = it.next();&#xA;&#xA;&#x9;aSubObjInstances.checkAllInvariants();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;subObjInstances.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573979]);&#xA;}&#xA; else {&#xA;&#xA;&#x9;self.get(subObj).checkAllInvariants();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;cd.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7573955]);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="toString" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Object.toString()&#xD;&#xA; &#x9; * Returns a String of form [qn:oid] where 'qn' is the qualified name of&#xD;&#xA; &#x9; * the object type, and oid the unique ID of the object&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;[&quot;, this.getMetaClass().getTypeDefinition().qualifiedName()), &quot;:&quot;), kermeta.standard.helper.IntegerWrapper.toString(oid())), &quot;]&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;[&quot;, self.getMetaClass().getTypeDefinition().qualifiedName()), &quot;:&quot;), kermeta.standard.helper.IntegerWrapper.toString(oid())), &quot;]&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="tag" upperBound="-1"
              eType="#/3/language/structure/Tag" eOpposite="#/3/language/structure/Tag/object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An Object can be tagged by a Tag. &#xA;They are typically used to put comments/documentation on the object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTags" upperBound="-1"
              eType="#/3/language/structure/Tag" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An object can contains a Tag.  &#xA;Be careful, owning a tag doesn't means that the tag applies to the Object&#xA;To know which Tags apply to the object use the &quot;tag&quot; reference"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="#/3/language/structure/TypedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value=" Model elements with a multiplicity [lower..upper] inherit this class"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the element is ordered"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="#/3/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Max cardinality of the element, '-1' for '*'"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="#/3/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Min cardinality of the element"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether duplicated elements are allowed"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true"
            eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of typed element : each element &#xA;that is typed inherits this class."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the model element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This boolean allows to tell if this Type definition is an aspect or not&#xA;If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xA;TypeDefinition that has exactly the same qualified name"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xA;this class)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAspect" eType="#/3/standard/JavaBoolean"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true"
            eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any element that contain a  name (example : Operation, Property) inherit this&#xA;class."/>
          </eAnnotations>
          <eOperations name="qualifiedName" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the qualified name of this named element. Qualified name is &#xD;&#xA;&#x9; * the list of the names of the packages hierarchically ordered, delimited by&#xD;&#xA;&#x9; * a &quot;::&quot;, followed by the name of this named element.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.NamedElement elem = this;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) elem.container();&#xA;&#x9;java.lang.Boolean eval_23 = false;&#xA;&#x9;while( !eval_23 ) {&#xA;&#x9;eval_23 = elem.equals(null);&#xA;&#x9;if ( eval_23 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(elem.getName(), &quot;::&quot;), result);&#xA;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) elem.container();&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1"
              eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of this named element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#/3/language/structure/ParameterizedType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Returns the Attributes, References, and derived Properties owned by&#xA;the ClassDefinition of this Class."/>
          </eAnnotations>
          <eOperations name="clone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = fr.irisa.triskell.kermeta.runtime.language.Class.cloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="_new" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Instantiates a new occurence for this Class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = fr.irisa.triskell.kermeta.runtime.language.Class.newObject(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="deepClone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = fr.irisa.triskell.kermeta.runtime.language.Class.deepCloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="equals" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.Class.equals(this, other);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="other" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="toString" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the String representation of this class. &#xD;&#xA;&#x9; *  Note : throws an exception if this class has no classDefinition&#xD;&#xA;&#x9; *  or if the classDefinition is not well constructed.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getTypeDefinition().getName();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
              eType="#/3/language/structure/Operation" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="false"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Returns the Operations owned by the ClassDefinition of this Class."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Class" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/3/standard/JavaBoolean"
              derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/3/standard/JavaString"
              derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              eType="#/3/language/structure/ClassDefinition" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the ClassDefinition for this class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Property" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="#/3/language/structure/Type #/3/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Special type definition for Enumeration, PrimitiveType"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="#/3/language/structure/DataType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for Enumeration"/>
          </eAnnotations>
          <eOperations name="clone" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implements kermeta::language::structure::Type.clone(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( &quot;NOT IMPLEMENTED&quot; );&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1"
              eType="#/3/language/structure/EnumerationLiteral" containment="true"
              eOpposite="#/3/language/structure/EnumerationLiteral/enumeration">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owned items in an Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#/3/language/structure/TypeDefinitionContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Package in kermeta. Each kermeta model must have a root package. "/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" eType="#/3/language/structure/Package"
              transient="true" eOpposite="#/3/language/structure/Package/nestedPackage">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Package, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" upperBound="-1"
              eType="#/3/language/structure/Package" containment="true" eOpposite="#/3/language/structure/Package/nestingPackage">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Nested Packages contained by the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Uri of the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#/3/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for operation parameter"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="operation" eType="#/3/language/structure/Operation"
              transient="true" eOpposite="#/3/language/structure/Operation/ownedParameter">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning operation"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="#/3/language/structure/DataType #/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA;type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA;&lt;pre>alias MyString : kermeta::standard::String&lt;/pre>. Another example could be: &lt;code>root::apackage::AClass&lt;/code>&#xD;&#xA;&lt;pre>alias MyClass : root::apackage::AClass&lt;/pre>, thus a primitive type may be not a subtype of ValueType (ValueType is a concept from the Kermeta framework)."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type the primitive type is linked with"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Tag" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Tag is intended to be used to add documentation on a  model element,&#xA;or add some textual information that cannot be expressed with any&#xA;model element definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="String value of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="object" lowerBound="1"
              upperBound="-1" eType="#/3/language/structure/Object" eOpposite="#/3/language/structure/Object/tag">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Objects to which the Tag is attached to"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Constraint is part of a contract implementation in a Class definition or an operation.&#xA;Three kinds of constraints are available : pre, post, and inv (invariant constraint)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false"
              lowerBound="1" eType="#/3/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the constraint, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="preOwner" eType="#/3/language/structure/Operation"
              eOpposite="#/3/language/structure/Operation/pre">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to pre-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" eType="#/3/language/structure/ConstraintType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Constraint (precond/postcond/inv)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="postOwner" eType="#/3/language/structure/Operation"
              eOpposite="#/3/language/structure/Operation/post">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to post-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="#/3/language/structure/ConstraintLanguage">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Language in which the constraint is expressed"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="invOwner" eType="#/3/language/structure/ClassDefinition"
              eOpposite="#/3/language/structure/ClassDefinition/inv">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning ClassDefinition if Constraint corresponds to invariant"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintType">
          <eLiterals name="inv" literal="inv"/>
          <eLiterals name="pre" value="1" literal="pre"/>
          <eLiterals name="post" value="2" literal="post"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintLanguage">
          <eLiterals name="kermeta" literal="kermeta"/>
          <eLiterals name="ocl" value="1" literal="ocl"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition" eSuperTypes="#/3/language/structure/GenericTypeDefinition #/3/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The definition of a class definition :)&#xA; &lt;pre>class A&#xA;{ &#xA;  attribute s : String&#xA;}&#xA;  &lt;/pre> is a class definition; in :&#xA;&lt;pre>&#xA;main() : A is do end&#xA;&lt;/pre>&#xA;A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
              eType="#/3/language/structure/Operation" containment="true" eOpposite="#/3/language/structure/Operation/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Operations owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the ClassDefinition is abstract (which means that&#xA;no instance can be allocated)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1"
              eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Classes from which this ClassDefinition inherits."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="inv" upperBound="-1"
              eType="#/3/language/structure/Constraint" containment="true" eOpposite="#/3/language/structure/Constraint/invOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Invariants defined for this ClassDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allOperation" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Operation" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns all the Operations of this ClassDefinition&#xD;&#xA;&#x9; * including the inherited ones&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allAttribute" ordered="false"
              upperBound="-1" eType="#/3/language/structure/Property" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns all the Attributes, References, derived Properties of this &#xD;&#xA;&#x9; * ClassDefinition including the inherited ones&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
              eType="#/3/language/structure/Property" containment="true" eOpposite="#/3/language/structure/Property/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Attributes, References, and derived Properties owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition" abstract="true"
            eSuperTypes="#/3/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstracts the definition of generic type definitions (i.e. type definitions that&#xA;can be parameterized), namely, for ClassDefinition and ModelTypeDefinition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/3/language/structure/TypeVariable" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type variables defined for the GenericTypeDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" abstract="true"
            eSuperTypes="#/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for Parameterized types, namely, Class and ModelType"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/3/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Bindings between type variables and provided types "/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" lowerBound="1"
              eType="#/3/language/structure/GenericTypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Definition of the Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualTypeBinding"
              upperBound="-1" eType="#/3/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true"
            eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/Type #/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a type variable for generic types :  &#xA;in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="supertype" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Reference to the supertype, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable" eSuperTypes="#/3/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType" eSuperTypes="#/3/language/structure/Type #/3/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type of a model, consisting of a set of included type definitions"/>
          </eAnnotations>
          <eOperations name="_new" eType="#/3/language/structure/Model">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written ##########################################&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Model result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Model) fr.irisa.triskell.kermeta.runtime.language.ModelType.newObject(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isModelTypeOf" eType="#/3/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written ##########################################&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.ModelType.isModelTypeOf(this, m);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="m" eType="#/3/language/structure/Model"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includedTypeDefinition"
              upperBound="-1" eType="#/3/language/structure/TypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelTypeVariable" eSuperTypes="#/3/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualType" upperBound="-1"
              eType="#/3/language/structure/VirtualType" containment="true" eOpposite="#/3/language/structure/VirtualType/modelType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualType" eSuperTypes="#/3/language/structure/ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="modelType" lowerBound="1"
              eType="#/3/language/structure/ModelTypeVariable" eOpposite="#/3/language/structure/ModelTypeVariable/virtualType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/3/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              lowerBound="1" eType="#/3/language/structure/ClassDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Is the holder of a set of model elements (Object) that are compatible with the ModelType that has &#xA;instantiated this Model."/>
          </eAnnotations>
          <eOperations name="addCompatible" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA; &#x9; * Returns the object if it has been added (One can check that some element have been ignored or not)&#xD;&#xA; &#x9; * return Void if not added&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;getContents();&#xA;&#xA;&#x9;result = fr.irisa.triskell.kermeta.runtime.language.Model.addCompatible(this, objectToAdd);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToAdd" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Remove an object from the model&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.ReflectiveCollection.remove(getContents(), obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA; &#x9; * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Collection&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_5 = iterator();&#xA;&#x9;java.lang.Boolean eval_24 = false;&#xA;&#x9;while( !eval_24 ) {&#xA;&#x9;eval_24 = it_5.isOff();&#xA;&#x9;if ( eval_24 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G obj = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object addedObject = addCompatible(obj);&#xA;&#xA;&#x9;java.lang.Boolean eval_25 = false;&#xA;&#x9;eval_25 = kermeta.standard.helper.BooleanWrapper.not(addedObject.isVoid());&#xA;&#xA;&#x9;if( eval_25 ) {&#xA;&#xA;&#x9;result.add(obj);&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;objectsToAdd.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7574591]);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eClassifier="#/3/language/structure/Object"/>
            </eGenericType>
            <eParameters name="objectsToAdd">
              <eGenericType eClassifier="#/3/standard/Collection">
                <eTypeArguments eClassifier="#/3/language/structure/Object"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;getContents();&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Model.add(this, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/3/language/structure/Object"/>
          </eOperations>
          <eOperations name="filter" ordered="false" upperBound="-1" eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Returns a set of all the elements of the model that are instance of the given Type&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = //Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_6 = null;&#xA;&#xA;&#x9;G elem_6 = null;&#xA;&#xA;&#x9;result_6 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_6 = iterator();&#xA;&#x9;java.lang.Boolean eval_26 = false;&#xA;&#x9;while( !eval_26 ) {&#xA;&#x9;eval_26 = it_6.isOff();&#xA;&#x9;if ( eval_26 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_6 = it_6.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_27 = false;&#xA;&#x9;eval_27 = G o = elem;&#xA;&#xA;&#x9;typeName.isInstance(o);&#xA;&#xA;&#xA;&#x9;if( eval_27 ) {&#xA;&#xA;&#x9;result_6.add(elem_6);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;getContents().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7574643]).asSet();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="typeName" eType="#/3/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
              eType="#/3/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contents of this model..."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelingUnit" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xA;It also reference others modeling unit."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="usings" upperBound="-1"
              eType="#/3/language/structure/Using" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;using&quot; statement associated with this ModelingUnit. Ie. list of &quot;syntatic shortcut&quot;&#xA;that can be used within this unit."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includeFilters" upperBound="-1"
              eType="#/3/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;only element whose qualified name begins with one of these filter will be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="packages" upperBound="-1"
              eType="#/3/language/structure/Package" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="root packages contained by this ModelingUnit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="excludeFilters" upperBound="-1"
              eType="#/3/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;element whose qualified name begins with one of these filter will NOT be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="referencedModelingUnits"
              upperBound="-1" eType="#/3/language/structure/ModelingUnit">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="requires" upperBound="-1"
              eType="#/3/language/structure/Require" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;require&quot; statements associated with this ModelingUnit. Ie. list of the other&#xA;files required to run this unit"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Require" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Using" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Filter" eSuperTypes="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Filter is the class that represent a filter on a ModelingUnit.&#xA;the qualifiedName represent the beginning of the matched names"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="#/3/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ProductType" eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type corresponding to a set of Types&#xA;Only used in the context of FunctionType"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" unique="false"
              upperBound="-1" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Types "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType" eSuperTypes="#/3/language/structure/TypeContainer #/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type used to define the use of lambda expressions.&#xA; Uses :&#xA; &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xA;     var test : Boolean init true&#xA;     from var it : Iterator&lt;G> init iterator&#xA;     until it.isOff&#xA;     loop&#xA;        test := test and func(it.next)&#xA;     end&#xA;     result := test&#xA; end&#xA; &lt;/pre>&#xA; *&#xA; In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xA; Boolean, with a parameter of type G and a return type of type Boolean&#xA; The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter."/>
          </eAnnotations>
          <eAnnotations source="kermeta.inv">
            <details key="resultType" value=""/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the function (a ProductType for multiple parameters)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#/3/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Result type of the function"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="#/3/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class definition for the &lt;pre>Void&lt;/pre> type"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer" abstract="true"
            eSuperTypes="#/3/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xA;element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xA;package definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeDefinition"
              upperBound="-1" eType="#/3/language/structure/TypeDefinition" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained TypeDefinitions"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="persistence" nsURI="http://www.kermeta.org/kermeta/persistence/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/persistence"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the classes that handle the serialization of models, in particular&#xD;&#xA; * EMF models.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/persistence_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The main class that handle a loaded/saved model.&#xD;&#xA; * There are a few important things to note for the developer :&#xD;&#xA; * &#xD;&#xA; * - load a Resource : this loads a Collection of instances corresponding to the&#xD;&#xA; *   objects in the loaded model. If the Collection of instances is empty, than &#xD;&#xA; *&#x9; a ResourceLoadException is raised&#xD;&#xA; *&#xD;&#xA; * - save a Resource : this saves the collection of instances in a new file. This can&#xD;&#xA; *   be correctly done if and only if the instances saved are conform to the metamodel&#xD;&#xA; *   linked to this resource (this link does not need to be explicit. It is normally retrieved&#xD;&#xA; *   through the EMF model -- see Java wrapping &quot;Resource.java&quot;).&#xD;&#xA; * &#xD;&#xA; * - add/remove an instance to the Resource : this adds an element in the resource. It cannot&#xD;&#xA; *   be &quot;simply&quot; added because of the following potential errors :&#xD;&#xA; *&#xD;&#xA; *   - The object added is not conform to the metamodel -> Error&#xD;&#xA; *   - The object was already added in the resource -> Not a real error : we do nothing&#xD;&#xA; *   - The object to remove does not exist -> redirect to a collection-specific error&#xD;&#xA; *   - The object to remove is attached to an object in the collection -> &quot;dependency-violation&quot; exception?&#xD;&#xA;&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Save a Resource in the file specified by the current value of uri &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Save a Resource in a file referenced by the new uri.&#xD;&#xA;&#x9; * note: this doesn't change the URI of the resource, it is only saved in another place &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Search for elements referenced by one element contained by this resource that are not contained by this repository&#xD;&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xD;&#xA;&#x9; * checks only objects directly referenced by the elment in this resource, ignores inderecly referenced objects&#xD;&#xA;&#x9; * example of use :&#xD;&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xD;&#xA;&#x9; *&#x9;report := resource.findDanglingModelElements()&#xD;&#xA;&#x9; *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_7 = iterator();&#xA;&#x9;java.lang.Boolean eval_28 = false;&#xA;&#x9;while( !eval_28 ) {&#xA;&#x9;eval_28 = it_7.isOff();&#xA;&#x9;if ( eval_28 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G containedObj = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) containedObj.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_29 = false;&#xA;&#x9;eval_29 = kermeta.standard.helper.BooleanWrapper.not(classDef.isVoid());&#xA;&#xA;&#x9;if( eval_29 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_8 = iterator();&#xA;&#x9;java.lang.Boolean eval_30 = false;&#xA;&#x9;while( !eval_30 ) {&#xA;&#x9;eval_30 = it_8.isOff();&#xA;&#x9;if ( eval_30 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G prop = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_31 = false;&#xA;&#x9;eval_31 = kermeta.standard.helper.BooleanWrapper.not(prop.getIsDerived());&#xA;&#xA;&#x9;if( eval_31 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_32 = false;&#xA;&#x9;eval_32 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( eval_32 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) containedObj.get(prop);&#xA;&#xA;&#x9;java.lang.Boolean eval_33 = false;&#xA;&#x9;eval_33 = kermeta.standard.helper.BooleanWrapper.not(referencedObjs.isVoid());&#xA;&#xA;&#x9;if( eval_33 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_9 = iterator();&#xA;&#x9;java.lang.Boolean eval_34 = false;&#xA;&#x9;while( !eval_34 ) {&#xA;&#x9;eval_34 = it_9.isOff();&#xA;&#x9;if ( eval_34 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G referencedObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_35 = false;&#xA;&#x9;eval_35 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_10 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_10 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_10 = iterator();&#xA;&#x9;java.lang.Boolean eval_36 = false;&#xA;&#x9;while( !eval_36 ) {&#xA;&#x9;eval_36 = kermeta.standard.helper.BooleanWrapper.or(it_10.isOff(), org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isNotEqual(test_10, false));&#xA;&#x9;if ( eval_36 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;test_10 = kermeta.standard.helper.BooleanWrapper.or(test_10, G res2 = it.next();&#xA;&#xA;&#x9;res2.getContents().contains(referencedObj);&#xA;);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_10 = test_10;&#xA;//Ending of the Inlining of the function type: exists&#xA;referencedObjs.getRepository().getResources().exists(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7574918])), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(referencedObj.isKindOf(java.lang.String), referencedObj.isKindOf(java.lang.Integer)), referencedObj.isKindOf(java.lang.Boolean))));&#xA;&#xA;&#x9;if( eval_35 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;referencedObjs.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7574856]);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = containedObj.get(prop);&#xA;&#xA;&#x9;java.lang.Boolean eval_37 = false;&#xA;&#x9;eval_37 = kermeta.standard.helper.BooleanWrapper.not(referencedObj.isVoid());&#xA;&#xA;&#x9;if( eval_37 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_38 = false;&#xA;&#x9;eval_38 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_11 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_11 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_11 = iterator();&#xA;&#x9;java.lang.Boolean eval_39 = false;&#xA;&#x9;while( !eval_39 ) {&#xA;&#x9;eval_39 = kermeta.standard.helper.BooleanWrapper.or(it_11.isOff(), org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isNotEqual(test_11, false));&#xA;&#x9;if ( eval_39 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;test_11 = kermeta.standard.helper.BooleanWrapper.or(test_11, G res2 = it.next();&#xA;&#xA;&#x9;res2.getContents().contains(referencedObj);&#xA;);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_11 = test_11;&#xA;//Ending of the Inlining of the function type: exists&#xA;classDef.getAllAttribute().getRepository().getResources().exists(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575009])), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(referencedObj.isKindOf(java.lang.String), referencedObj.isKindOf(java.lang.Integer)), referencedObj.isKindOf(java.lang.Boolean))));&#xA;&#xA;&#x9;if( eval_38 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;classDef.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7574830]);&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;this.getContents().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7574812]);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eClassifier="#/3/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Loads the Resource, thus making content of the Resource browsable.&#xD;&#xA;&#x9; * Raises a ResourceLoadException in case loaded Resource is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="instances" eType="#/3/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The entities contained in the model-instance, that are provided when user loads a resource &#xD;&#xA;&#x9; * instances == rootContents&#xD;&#xA;&#x9; * this is a loop on Resource itself in order to get backward compatibility&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="deprecated" value="user should use the resource directly since this is a collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="normalizedUri" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return a normalized version of the Uri of this resource&#xD;&#xA;&#x9; * in order to prevent several loading of the same file because they have diffent path that leads to them, kermeta uses normalizedURI&#xD;&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xD;&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xD;&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xD;&#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xD;&#xA;&#x9; * to check how a given uri is normalized by kermeta&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) fr.irisa.triskell.kermeta.runtime.basetypes.Repository.normalizeUri(getUri());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="dependentResources"
            ordered="false" upperBound="-1" eType="#/3/persistence/Resource" derived="true">
          <eAnnotations source="kermeta">
            <details key="isReadOnly" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the set of Resources the current Resource, which must have been loaded,&#xD;&#xA;&#x9; * depends on, an empty set if current Resource has no dependency&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="repository" eType="#/3/persistence/Repository"
            eOpposite="#/3/persistence/Repository/resources">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Repository used to create the Resource&#xD;&#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xD;&#xA;&#x9; * one Resource of a given Repository&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="contents" ordered="false"
            upperBound="-1" eType="#/3/language/structure/Object" derived="true">
          <eAnnotations source="kermeta">
            <details key="isReadOnly" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the set of all Objects directly or indirectly contained by the Resource,&#xD;&#xA;&#x9; * or an empty set if the Resource is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Indicates weither this resource will be updated when saving the repository&#xD;&#xA;&#x9; * This is useful if the repository contains some metamodels that should not be saved.&#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * Note that in the current version, it doesn't ensure that you have not modified its content (using the freeze)&#xD;&#xA;&#x9; * If you modify the elements of such resource, other resource that depend on it will be incorrectly saved &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="metaModelURI" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Uri of the meta-model of the Resource to load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Uri of the Resource to load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eGenericSuperTypes eClassifier="#/3/standard/Set">
          <eTypeArguments eClassifier="#/3/language/structure/Object"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFResource" eSuperTypes="#/3/persistence/Resource">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Extension of the Resource class definition that is specific to EMF Repository.&#xD;&#xA; * User is not supposed to directly create it. Otherwise it will not be correctly initialized&#xD;&#xA; * You must To create one &#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Set&lt;Object>.remove(Object)&#xD;&#xA;&#x9; * Remove the instance from the Resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_40 = false;&#xA;&#x9;eval_40 = this.contains(instance);&#xA;&#xA;&#x9;if( eval_40 ) {&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.unSetContainingResource(instance);&#xA;&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.save()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_41 = false;&#xA;&#x9;eval_41 = getIsReadOnly();&#xA;&#xA;&#x9;if( eval_41 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceSaveException e = (kermeta.exceptions.ResourceSaveException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ResourceSaveException&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot save a readonly resource. Probably this resource was indirectly loaded when loading another resource. \n&quot;, &quot;If you really intend to save this resource, you can set isReadOnly to false, but you must ensure to do so before any resource save.\n&quot;), &quot;Note : setting isReadOnly to false on the metamodel may lead to unpredictable results&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(getValues(), getUri(), getMetaModelURI());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.saveWithNewURI(String)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(getValues(), new_uri, getMetaModelURI());&#xA;"/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="saveAndValidateWithEMF" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Checks the Resource using the EMF validation function, and saves it if&#xD;&#xA;&#x9; * validation succeeds&#xD;&#xA;&#x9; * Applies validation to all root objects of the Resource&#xD;&#xA;&#x9; * Returns true if the validation reports no error, raises exceptions otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.basetypes.Resource.save(this, this.getUri(), getMetaModelURI(), &quot;EMF&quot;, this, true);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.load()&#xD;&#xA;&#x9; * In case the metamodelURI was not previously set, metamodelURI is filled with&#xD;&#xA;&#x9; * the nsuri of the root package of the metamodel used to load the Resource after&#xD;&#xA;&#x9; * a successful load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.clear();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Loader.load(getValues(), getUri(), getMetaModelURI());&#xA;&#xA;&#x9;java.lang.Boolean eval_42 = false;&#xA;&#x9;eval_42 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( eval_42 ) {&#xA;&#xA;&#x9;System.out.println(&quot;Resource load failed!&quot;);&#xA;&#xA;&#x9;kermeta.exceptions.ResourceLoadException e = (kermeta.exceptions.ResourceLoadException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ResourceLoadException&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Resource load failed, no object was created in this resource from &quot;, getUri()));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Set&lt;Object>.add(Object)&#xD;&#xA;&#x9; * Add an instance to the Resource &#xD;&#xA;&#x9; * Ensures that the instance is referenced by a one and only one Resource of the same Repository&#xD;&#xA;&#x9; * Ensures that the instance does not appear more than once in the Resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_12 = iterator();&#xA;&#x9;java.lang.Boolean eval_43 = false;&#xA;&#x9;while( !eval_43 ) {&#xA;&#x9;eval_43 = it_12.isOff();&#xA;&#x9;if ( eval_43 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G r = it.next();&#xA;&#xA;&#x9;System.out.println(&quot;DVK ! another resource of the same repository was containing //Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_13 = null;&#xA;&#xA;&#x9;G elem_13 = null;&#xA;&#xA;&#x9;result_13 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_13 = iterator();&#xA;&#x9;java.lang.Boolean eval_44 = false;&#xA;&#x9;while( !eval_44 ) {&#xA;&#x9;eval_44 = it_13.isOff();&#xA;&#x9;if ( eval_44 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_13 = it_13.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_45 = false;&#xA;&#x9;eval_45 = G r = elem;&#xA;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.and(r.isNotEqual(getRepository().getResources()), r.contains(instance));&#xA;&#xA;&#xA;&#x9;if( eval_45 ) {&#xA;&#xA;&#x9;result_13.add(elem_13);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;getRepository().getResources().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575237]) element&quot;);&#xA;&#xA;&#x9;r.remove(instance);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_14 = null;&#xA;&#xA;&#x9;G elem_14 = null;&#xA;&#xA;&#x9;result_14 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_14 = iterator();&#xA;&#x9;java.lang.Boolean eval_46 = false;&#xA;&#x9;while( !eval_46 ) {&#xA;&#x9;eval_46 = it_14.isOff();&#xA;&#x9;if ( eval_46 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_14 = it_14.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_47 = false;&#xA;&#x9;eval_47 = G r = elem;&#xA;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.and(r.isNotEqual(getRepository().getResources()), r.contains(instance));&#xA;&#xA;&#xA;&#x9;if( eval_47 ) {&#xA;&#xA;&#x9;result_14.add(elem_14);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;getRepository().getResources().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575237]).each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575214]);&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.setContainingResource(instance, this);&#xA;&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/3/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Repository" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Abstract resource container, that contains a list of available loaded resources, &#xD;&#xA; * and methods to create or get a resource given an URI.&#xD;&#xA; * A repository cannot contain 2 resources which points to the same file (ie. that have the same normalizedURI)&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/3/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Creates a new Resource with given uri, and an optional mm_uri&#xD;&#xA;&#x9; * mm_uri is required when creating a new model from scratch.&#xD;&#xA;&#x9; * Raises a ResourceCreate exception in case the Repository already&#xD;&#xA;&#x9; * contains a Resource with the given uri&#xD;&#xA;&#x9; * If uri does not points to an existing model file (in the case of&#xD;&#xA;&#x9; * a model creation), calls to load() operation will fail as long as&#xD;&#xA;&#x9; * the model has not been saved once&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/JavaString"/>
          <eParameters name="mm_uri" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="normalizeUri" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return a normalized version of the Uri &#xD;&#xA;&#x9; * in order to prevent several loading of the same file because they have different path that leads to them, kermeta uses normalizedURI&#xD;&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xD;&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xD;&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xD;&#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xD;&#xA;&#x9; * to check how a given uri is normalized by kermeta &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) fr.irisa.triskell.kermeta.runtime.basetypes.Repository.normalizeUri(uri);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Search for elements referenced by one element contained by this repository  that are not contained by this repository&#xD;&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xD;&#xA;&#x9; * example of use :&#xD;&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xD;&#xA;     *&#x9;report := repository.findDanglingModelElements()&#xD;&#xA;     *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_15 = iterator();&#xA;&#x9;java.lang.Boolean eval_48 = false;&#xA;&#x9;while( !eval_48 ) {&#xA;&#x9;eval_48 = it_15.isOff();&#xA;&#x9;if ( eval_48 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G res = it.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_16 = iterator();&#xA;&#x9;java.lang.Boolean eval_49 = false;&#xA;&#x9;while( !eval_49 ) {&#xA;&#x9;eval_49 = it_16.isOff();&#xA;&#x9;if ( eval_49 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G containedObj = it.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) containedObj.getMetaClass().getTypeDefinition();&#xA;&#xA;&#x9;java.lang.Boolean eval_50 = false;&#xA;&#x9;eval_50 = kermeta.standard.helper.BooleanWrapper.not(classDef.isVoid());&#xA;&#xA;&#x9;if( eval_50 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_17 = iterator();&#xA;&#x9;java.lang.Boolean eval_51 = false;&#xA;&#x9;while( !eval_51 ) {&#xA;&#x9;eval_51 = it_17.isOff();&#xA;&#x9;if ( eval_51 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G prop = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_52 = false;&#xA;&#x9;eval_52 = kermeta.standard.helper.BooleanWrapper.not(prop.getIsDerived());&#xA;&#xA;&#x9;if( eval_52 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_53 = false;&#xA;&#x9;eval_53 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( eval_53 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) containedObj.get(prop);&#xA;&#xA;&#x9;java.lang.Boolean eval_54 = false;&#xA;&#x9;eval_54 = kermeta.standard.helper.BooleanWrapper.not(referencedObjs.isVoid());&#xA;&#xA;&#x9;if( eval_54 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_18 = iterator();&#xA;&#x9;java.lang.Boolean eval_55 = false;&#xA;&#x9;while( !eval_55 ) {&#xA;&#x9;eval_55 = it_18.isOff();&#xA;&#x9;if ( eval_55 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G referencedObj = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_56 = false;&#xA;&#x9;eval_56 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_19 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_19 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_19 = iterator();&#xA;&#x9;java.lang.Boolean eval_57 = false;&#xA;&#x9;while( !eval_57 ) {&#xA;&#x9;eval_57 = kermeta.standard.helper.BooleanWrapper.or(it_19.isOff(), org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isNotEqual(test_19, false));&#xA;&#x9;if ( eval_57 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;test_19 = kermeta.standard.helper.BooleanWrapper.or(test_19, G res2 = it.next();&#xA;&#xA;&#x9;res2.getContents().contains(referencedObj);&#xA;);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_19 = test_19;&#xA;//Ending of the Inlining of the function type: exists&#xA;referencedObjs.getResources().exists(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575413])), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(referencedObj.isKindOf(java.lang.String), referencedObj.isKindOf(java.lang.Integer)), referencedObj.isKindOf(java.lang.Boolean))));&#xA;&#xA;&#x9;if( eval_56 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;referencedObjs.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575351]);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = containedObj.get(prop);&#xA;&#xA;&#x9;java.lang.Boolean eval_58 = false;&#xA;&#x9;eval_58 = kermeta.standard.helper.BooleanWrapper.not(referencedObj.isVoid());&#xA;&#xA;&#x9;if( eval_58 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_59 = false;&#xA;&#x9;eval_59 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_20 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_20 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_20 = iterator();&#xA;&#x9;java.lang.Boolean eval_60 = false;&#xA;&#x9;while( !eval_60 ) {&#xA;&#x9;eval_60 = kermeta.standard.helper.BooleanWrapper.or(it_20.isOff(), org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isNotEqual(test_20, false));&#xA;&#x9;if ( eval_60 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;test_20 = kermeta.standard.helper.BooleanWrapper.or(test_20, G res2 = it.next();&#xA;&#xA;&#x9;res2.getContents().contains(referencedObj);&#xA;);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_20 = test_20;&#xA;//Ending of the Inlining of the function type: exists&#xA;classDef.getAllAttribute().getResources().exists(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575503])), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(referencedObj.isKindOf(java.lang.String), referencedObj.isKindOf(java.lang.Integer)), referencedObj.isKindOf(java.lang.Boolean))));&#xA;&#xA;&#x9;if( eval_59 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = (kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.persistence.DanglingDiagnostic&quot;);&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;classDef.getAllAttribute().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575325]);&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;res.getContents().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575307]);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;this.getResources().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575298]);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eClassifier="#/3/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="getResource" eType="#/3/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Resource associated with the given uri if this uri is associated with&#xD;&#xA;&#x9; * an already created Resource of the Repository.&#xD;&#xA;&#x9; * If the Repository contains no Resource associated with the given uri, creates&#xD;&#xA;&#x9; * a new Resource and loads it.&#xD;&#xA;&#x9; * In order to prevent multiple load of the same file by using variant path to the same file, all URI used by this function are normalized&#xD;&#xA;&#x9; * Raises a ResourceCreate exception if the given uri does not point to an existing&#xD;&#xA;&#x9; * model file &#xD;&#xA;&#x9; * May also raises loading exceptions if this is the first retrieval of the resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.basetypes.Repository.initRepository(this);&#xA;&#xA;&#x9;java.lang.String normalisedUri = normalizeUri(uri);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it = getResources().iterator();&#xA;&#x9;java.lang.Boolean eval_61 = false;&#xA;&#x9;while( !eval_61 ) {&#xA;&#x9;eval_61 = it.isOff();&#xA;&#x9;if ( eval_61 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;kermeta.persistence.Resource next = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_62 = false;&#xA;&#x9;eval_62 = kermeta.standard.helper.StringWrapper.equals(normalisedUri, next.normalizedUri());&#xA;&#xA;&#x9;if( eval_62 ) {&#xA;&#xA;&#x9;result = next;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;java.lang.Boolean eval_63 = false;&#xA;&#x9;eval_63 = result.equals(null);&#xA;&#xA;&#x9;if( eval_63 ) {&#xA;&#xA;&#x9;result = this.createResource(uri, &quot;&quot;);&#xA;&#xA;&#x9;result.load();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="resources" ordered="false"
            upperBound="-1" eType="#/3/persistence/Resource" containment="true" eOpposite="#/3/persistence/Resource/repository">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Resources created by this Repository &#xD;&#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xD;&#xA;&#x9; * one Resource of a given Repository&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DanglingDiagnostic" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * class used to gather the information required to make a user friendly report about a dangling element&#xD;&#xA; * (see. findDanglingModelElements())&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * user friendly message build with those informations&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(getDanglingElement().toString(), &quot; referenced by &quot;), getReferencingElement().toString()), &quot;.&quot;), getReferencingProperty().getName()), &quot; is dangling&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingElement"
            eType="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Element that has a reference to the dangling element  &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="danglingElement" eType="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Element that is not contained by a resource in the repository  &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingProperty"
            eType="#/3/language/structure/Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Property used to reference the dangling element  &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFRepository" eSuperTypes="#/3/persistence/Repository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Repository that stores and manages resources that come from EMF&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/3/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Repository.createResource(String, String)&#xD;&#xA;&#x9; * Create a new resource for a model given by its uri, &#xD;&#xA;&#x9; * which meta-model is stored in file given by mm_uri&#xD;&#xA;&#x9; * If file already exists, you'll be able to call the load method to concretly load the model&#xD;&#xA;&#x9; * otherwise, you can only call the save method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Repository"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_64 = false;&#xA;&#x9;eval_64 = kermeta.standard.helper.BooleanWrapper.not(//Beginning of the Inlining of the function type: collect&#xA;&#xA;kermeta.standard.Sequence&lt;T> result_21 = null;&#xA;&#xA;&#x9;result_21 = (kermeta.standard.Sequence&lt;T>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;T>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_21 = iterator();&#xA;&#x9;java.lang.Boolean eval_65 = false;&#xA;&#x9;while( !eval_65 ) {&#xA;&#x9;eval_65 = it_21.isOff();&#xA;&#x9;if ( eval_65 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result_21.add(G r = it.next();&#xA;&#xA;&#x9;r.getUri();&#xA;);&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: collect&#xA;getResources().collect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575710]).contains(uri));&#xA;&#xA;&#x9;if( eval_64 ) {&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) fr.irisa.triskell.kermeta.runtime.basetypes.Repository.createResource(this, uri, mm_uri);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceCreateException e = (kermeta.exceptions.ResourceCreateException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.ResourceCreateException&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Trying to create a resource already existing at &quot;, uri), &quot;.\n&quot;), &quot;Remove existing resource from repository first, or use \&quot;getResource\&quot; operation.&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/3/standard/JavaString"/>
          <eParameters name="mm_uri" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="useInterpreterInternalResources"
            eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * If true, tells to the save of the resources that they should also integrate the resources from Kermeta interpreter itself&#xD;&#xA;&#x9; * this is useful for example to make a dependency to framework.km&#xD;&#xA;&#x9; * by default, not setting this is considered as false.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrors" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * When loading the Resources, &#xD;&#xA;&#x9; * if there are some errors while loading some objects, those objects are ignored&#xD;&#xA;&#x9; * by default, not setting this is considered as false.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="interpreter" nsURI="http://www.kermeta.org/kermeta/interpreter/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/interpreter"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains a set of classes whose function is to evaluate a kermeta &#xD;&#xA; * expression written as a string.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/interpreter_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpression" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * DynamicExpression is a class used to make dynamic calls, i.e dynamic evaluation&#xD;&#xA; * of Kermeta statements represented in a string.&#xD;&#xA; * &#xD;&#xA; * An example :&#xD;&#xA; *   var de : DynamicExpression init DynamicExpression.new&#xD;&#xA; *   de.initializeDefaults&#xD;&#xA; *   de.formalParameters.put(&quot;a&quot;, String)&#xD;&#xA; *   de.parse(&quot;stdio.writeln(a)&quot;) // note: to execute a list of statements, you have to surround them with do..end&#xD;&#xA; *   var params : Hashtable&lt;String, Object> init Hashtable&lt;String, Object>.new&#xD;&#xA; *   params.put(&quot;a&quot;, &quot;hello world!&quot;)&#xD;&#xA; *   de.execute(void, params)&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/dynamic_expression_view.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="initializeDefaults" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Initializes the formalParameters with an empty set of parameters&#xD;&#xA;&#x9; * and the self type with void&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;setFormalParameters((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Type>&quot;));&#xA;&#xA;&#x9;setSelfClass((kermeta.language.structure.ClassDefinition) kermeta.language.structure.Object.getTypeDefinition());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute" eType="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * Execute the expression in the given context&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_66 = false;&#xA;&#x9;eval_66 = getExpression().equals(null);&#xA;&#xA;&#x9;if( eval_66 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = (kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DynamicExpressionException&quot;);&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression is void&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_67 = false;&#xA;&#x9;eval_67 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(getErrors().size(), 0);&#xA;&#xA;&#x9;if( eval_67 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = (kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DynamicExpressionException&quot;);&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = fr.irisa.triskell.kermeta.runtime.language.DynamicExpression.execute(this, selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="selfObj" eType="#/3/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/3/utils/Hashtable">
              <eTypeArguments eClassifier="#/3/standard/JavaString"/>
              <eTypeArguments eClassifier="#/3/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="parse" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parse the expression as a string&#xD;&#xA;&#x9; * and updates the expression field and errors&#xD;&#xA;&#x9; * Returns true if the expression was parsed sucessfuly&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;getErrors().clear();&#xA;&#xA;&#x9;java.lang.Boolean eval_68 = false;&#xA;&#x9;eval_68 = kermeta.standard.helper.BooleanWrapper.or(getFormalParameters().equals(null), getSelfClass().equals(null));&#xA;&#xA;&#x9;if( eval_68 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = (kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DynamicExpressionException&quot;);&#xA;&#xA;&#x9;e.setMessage(&quot;parse precondition - formalParameters or selfType is void&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.Boolean) fr.irisa.triskell.kermeta.runtime.language.DynamicExpression.parse(this, expression);&#xA;&#xA;&#x9;java.lang.Boolean eval_69 = false;&#xA;&#x9;eval_69 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isNotEqual(getErrors().size(), 0);&#xA;&#xA;&#x9;if( eval_69 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = (kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DynamicExpressionException&quot;);&#xA;&#xA;&#x9;e.setMessage(&quot;parse result - expression contains errors&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_22 = iterator();&#xA;&#x9;java.lang.Boolean eval_70 = false;&#xA;&#x9;while( !eval_70 ) {&#xA;&#x9;eval_70 = it_22.isOff();&#xA;&#x9;if ( eval_70 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G error = it.next();&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.append(e.getMessage(), kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, error.getMessage()));&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getErrors().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7575867]);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="expression" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="evalString" eType="#/3/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * Execute the expression given as a string.&#xD;&#xA;     * the self type and formal parameters are supposed to be set&#xD;&#xA;     * before calling this operation&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_71 = false;&#xA;&#x9;eval_71 = kermeta.standard.helper.BooleanWrapper.not(parse(body));&#xA;&#xA;&#x9;if( eval_71 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = (kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DynamicExpressionException&quot;);&#xA;&#xA;&#x9;e.setMessage(&quot;evalString - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = execute(selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="body" eType="#/3/standard/JavaString"/>
          <eParameters name="selfObj" eType="#/3/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/3/utils/Hashtable">
              <eTypeArguments eClassifier="#/3/standard/JavaString"/>
              <eTypeArguments eClassifier="#/3/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/3/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the expression&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/3/interpreter/KermetaError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parse errors and type errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Formal parameters of the expression (bindings between parameters' names and types)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/utils/Hashtable">
            <eTypeArguments eClassifier="#/3/standard/JavaString"/>
            <eTypeArguments eClassifier="#/3/language/structure/Type"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selfClass" eType="#/3/language/structure/ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The type of the self object&#xD;&#xA;&#x9; * or void if the expression is not to be executed&#xD;&#xA;&#x9; * in the context of an object&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KermetaError" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta language error in a code written in Kermeta&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Error message&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ParseError" eSuperTypes="#/3/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta error for parsing problems&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeError" eSuperTypes="#/3/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Type errors in a code written in Kermeta&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="kunit" nsURI="http://www.kermeta.org/kermeta/kunit/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/kunit"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * main features of the famous Unit test tool for Kermeta language&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the implementation of a unit test tool. This is a clone of&#xD;&#xA; * JUnit architecture.&#xD;&#xA; * Reference : http://junit.sourceforge.net/doc/cookstour/cookstour.htm&#xD;&#xA; *&#xD;&#xA; * Usage example of kunit can be found in fr.irisa.triskell.kermeta.samples project.&#xD;&#xA; *&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractFallible" abstract="true"
          eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written ############################&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="distil" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; ** reduces all runs of white-space to a single space character&#xD;&#xA;&#x9; **/"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean white = false;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean eval_72 = false;&#xA;&#x9;while( !eval_72 ) {&#xA;&#x9;eval_72 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.StringWrapper.size(s));&#xA;&#x9;if ( eval_72 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.String c = kermeta.standard.helper.CharacterWrapper.toString(kermeta.standard.helper.StringWrapper.elementAt(s, i));&#xA;&#xA;&#x9;java.lang.Boolean eval_73 = false;&#xA;&#x9;eval_73 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.indexOf(&quot; \n\t&quot;, c), 0);&#xA;&#xA;&#x9;if( eval_73 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_74 = false;&#xA;&#x9;eval_74 = kermeta.standard.helper.BooleanWrapper.not(white);&#xA;&#xA;&#x9;if( eval_74 ) {&#xA;&#xA;&#x9;white = true;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; &quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, c);&#xA;&#xA;&#x9;java.lang.Boolean eval_75 = false;&#xA;&#x9;eval_75 = white;&#xA;&#xA;&#x9;if( eval_75 ) {&#xA;&#xA;&#x9;white = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="s" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * process the given condition and react with the given message&#xD;&#xA;     * if it is satisfied&#xD;&#xA;     */"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** to be used if a failure reaction is needed */"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the two given string and react if they are not equal */"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/3/standard/JavaString"/>
          <eParameters name="actual" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is satisfied */"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * process the given condition and react with the given message&#xD;&#xA;     * if it is not satisfied&#xD;&#xA;     */"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertSimilar">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if the two strings are not identical modulo-white-space&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;expected = distil(expected);&#xA;&#xA;&#x9;actual = distil(actual);&#xA;&#xA;&#x9;assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/3/standard/JavaString"/>
          <eParameters name="actual" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * process the given condition and react with the given message&#xD;&#xA;     * if it is not satisfied&#xD;&#xA;     */"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AssertionFailedError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** AssertionViolatedException are raised when assertions are violated */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Assert" eSuperTypes="#/3/kunit/AbstractFallible">
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_76 = false;&#xA;&#x9;eval_76 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( eval_76 ) {&#xA;&#xA;&#x9;fail(&quot;assertTrue failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_77 = false;&#xA;&#x9;eval_77 = condition;&#xA;&#xA;&#x9;if( eval_77 ) {&#xA;&#xA;&#x9;fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** raise a AssertionViolatedException with the provided message */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = (kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.AssertionFailedError&quot;);&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Will fail if the two strings are not identical */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_78 = false;&#xA;&#x9;eval_78 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.equals(expected, actual));&#xA;&#xA;&#x9;if( eval_78 ) {&#xA;&#xA;&#x9;fail(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertEqual failed\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/3/standard/JavaString"/>
          <eParameters name="actual" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_79 = false;&#xA;&#x9;eval_79 = condition;&#xA;&#xA;&#x9;if( eval_79 ) {&#xA;&#xA;&#x9;fail(&quot;assertTrue number failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_80 = false;&#xA;&#x9;eval_80 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( eval_80 ) {&#xA;&#xA;&#x9;fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Fails if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_81 = false;&#xA;&#x9;eval_81 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( eval_81 ) {&#xA;&#xA;&#x9;fail(&quot;assert failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_82 = false;&#xA;&#x9;eval_82 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( eval_82 ) {&#xA;&#xA;&#x9;fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidTestCaseNameException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This exception is rose if there is a problem on the name of the test method&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidParameterException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This is for when we try to build a suite from a class that isn't a TestCase&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Fallible" abstract="true" eSuperTypes="#/3/kunit/AbstractFallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This is represents the aspect of tests that they may go wrong.&#xD;&#xA; * it defines the ability to define the conditions for success&#xD;&#xA; * (assertions) and the mechanism for recording that those &#xD;&#xA; * conditions have not been met.&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;_assert(condition);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="getLogKermeta" eType="#/3/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * where failures will be put &#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logDefined" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is true&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;assertWithMsg(kermeta.standard.helper.BooleanWrapper.not(condition), message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure &#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_83 = false;&#xA;&#x9;eval_83 = mustStop();&#xA;&#xA;&#x9;if( eval_83 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = (kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.AssertionFailedError&quot;);&#xA;&#xA;&#x9;exception.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;getLog().addFailure(this, kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if the two strings are not identical&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/3/standard/JavaString"/>
          <eParameters name="actual" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is true&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;_assert(kermeta.standard.helper.BooleanWrapper.not(condition));&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;assertWithMsg(condition, message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean eval_84 = false;&#xA;&#x9;eval_84 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( eval_84 ) {&#xA;&#xA;&#x9;java.lang.String msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_85 = false;&#xA;&#x9;eval_85 = mustStop();&#xA;&#xA;&#x9;if( eval_85 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = (kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.AssertionFailedError&quot;);&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;getLog().addFailure(this, msg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="number" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * current order position of counter of assertions&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_86 = false;&#xA;&#x9;eval_86 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(getRank());&#xA;&#xA;&#x9;if( eval_86 ) {&#xA;&#xA;&#x9;setRank(0);&#xA;}&#xA;&#xA;&#xA;&#x9;setRank(kermeta.standard.helper.IntegerWrapper.plus(getRank(), 1));&#xA;&#xA;&#x9;result = getRank();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean eval_87 = false;&#xA;&#x9;eval_87 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( eval_87 ) {&#xA;&#xA;&#x9;java.lang.String realMsg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed: &quot;), msg);&#xA;&#xA;&#x9;java.lang.Boolean eval_88 = false;&#xA;&#x9;eval_88 = mustStop();&#xA;&#xA;&#x9;if( eval_88 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = (kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.AssertionFailedError&quot;);&#xA;&#xA;&#x9;exception.setMessage(realMsg);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;getLog().addFailure(this, realMsg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/3/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="mustStop" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_89 = false;&#xA;&#x9;eval_89 = org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isVoid(getStopOnFailure());&#xA;&#xA;&#x9;if( eval_89 ) {&#xA;&#xA;&#x9;setStopOnFailure(true);&#xA;}&#xA;&#xA;&#xA;&#x9;result = getStopOnFailure();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stopOnFailure" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Set this attribute to false if you wish your test to not stop if the assert fails.&#xD;&#xA;   * note : if set to false, the count of failures/errors may be bigger that the number of executed test operations&#xD;&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="rank" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * counter of assertions in the test method&#xD;&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Log" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Log is a log of failures and errors that happened to fallibles since start was called&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="addSetUpError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds errors which occur durint the SetUp phase&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;getHarnessErrors().add((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.Error&quot;).initFrom(test, e).makeSetUp());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/3/kunit/Fallible"/>
          <eParameters name="e" eType="#/3/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addTestError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds an error to the list of errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;getErrors().add((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.Error&quot;).initFrom(test, e));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/3/kunit/Fallible"/>
          <eParameters name="e" eType="#/3/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addFailure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds a failed test to the list of failed tests&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;getFailures().add((kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.Failure&quot;).initFrom(test, msg));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/3/kunit/Fallible"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="addTearDownError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds errors which occur durint the TearDown phase&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;getHarnessErrors().add((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.Error&quot;).initFrom(test, e).makeTearDown());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/3/kunit/Fallible"/>
          <eParameters name="e" eType="#/3/exceptions/Exception"/>
        </eOperations>
        <eOperations name="newAttempt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Increments the runtests counter&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_90 = false;&#xA;&#x9;eval_90 = kermeta.standard.helper.IntegerWrapper.equals(getRuntests(), null);&#xA;&#xA;&#x9;if( eval_90 ) {&#xA;&#xA;&#x9;setRuntests(0);&#xA;}&#xA;&#xA;&#xA;&#x9;setRuntests(kermeta.standard.helper.IntegerWrapper.plus(1, getRuntests()));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failures" upperBound="-1"
            eType="#/3/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * list of detected assertion failures&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/3/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * list of detected test errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="runtests" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * number of test that were run&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="harnessErrors" upperBound="-1"
            eType="#/3/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;* list of detected errors with the test harness&#xD;&#xA;&#x9;*/"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Failure" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Failure represents an assertion failure stored in a failure log&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * overwrite the default method, in order to add the message&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(getFailure().toString(), &quot; &quot;), getMessage());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="#/3/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * initialization of the failure&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Failure result = null;&#xA;&#xA;&#x9;setFailure(fallible);&#xA;&#xA;&#x9;setMessage(msg);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="fallible" eType="#/3/kunit/Fallible"/>
          <eParameters name="msg" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the stored message (given or generated one)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failure" eType="#/3/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the stored failure&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ErrorKind">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * all kinds of error we can meet&#xD;&#xA; */"/>
        </eAnnotations>
        <eLiterals name="setUpError" literal="setUpError"/>
        <eLiterals name="testError" value="1" literal="testError"/>
        <eLiterals name="tearDownError" value="2" literal="tearDownError"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Error" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Error represents an occurrence of an exception in setUp, tearDown or a test&#xD;&#xA; * and is stored in a failure log&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="makeTearDown" eType="#/3/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Changes the type of an error to makeTearDownError, the best way to use&#xD;&#xA;&#x9; * this method is to call it after the init from line:&#xD;&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeTearDown&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;setKind(.tearDownError);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="makeSetUp" eType="#/3/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Changes the type of an error to SetUpError, the best way to use&#xD;&#xA;&#x9; * this method is to call it after the init from line:&#xD;&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeSetUp&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;setKind(.setUpError);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * overwrite the default method, in order to add :&#xD;&#xA;&#x9; *   - the type&#xD;&#xA;&#x9; *   - the message&#xD;&#xA;&#x9; *   - the stack trace&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_91 = false;&#xA;&#x9;eval_91 = getKind().equals(.testError);&#xA;&#xA;&#x9;if( eval_91 ) {&#xA;&#xA;&#x9;result = getError().toString();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(getError().getMetaClass().getName(), &quot;.&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_92 = false;&#xA;&#x9;eval_92 = getKind().equals(.setUpError);&#xA;&#xA;&#x9;if( eval_92 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;setUp()&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;tearDown()&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; raised &quot;), getException().getMetaClass().getName());&#xA;&#xA;&#x9;java.lang.Boolean eval_93 = false;&#xA;&#x9;eval_93 = org.kermeta.compil.runtime.helper.basetypes.StringUtil.isNotEqual(getException().getMessage(), null);&#xA;&#xA;&#x9;if( eval_93 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Caused by: &quot;), getException().getMessage());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no message)&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_94 = false;&#xA;&#x9;eval_94 = org.kermeta.compil.runtime.helper.basetypes.StringUtil.isNotEqual(getException().getStackTrace(), null);&#xA;&#xA;&#x9;if( eval_94 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Stack Trace:\n&quot;), getException().getStackTrace());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no stack trace)&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="#/3/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets up a new error with failable object and the exception that occurred&#xD;&#xA;&#x9; * by default it will be a test error. Use makeSetUp or makeTearDown to&#xD;&#xA;&#x9; * change its type&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setError(error);&#xA;&#xA;&#x9;setException(e);&#xA;&#xA;&#x9;setKind(.testError);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="error" eType="#/3/kunit/Fallible"/>
          <eParameters name="e" eType="#/3/exceptions/Exception"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="error" eType="#/3/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the stored error&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exception" eType="#/3/exceptions/Exception">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the Kermeta exception corresponding to the error&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#/3/kunit/ErrorKind">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the nature of the stored error&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Test" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstact notion of a test which is runnable and which has a log&#xD;&#xA; * in which it can keep note of failures&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="setLogKermeta">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Initializes the log where failures and errors will be put&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="setLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="paramNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setLog(log);&#xA;"/>
          </eAnnotations>
          <eParameters name="log" eType="#/3/kunit/Log"/>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Execute the test and verify its assertions&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initLog" eType="#/3/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * called when run by the java testrunner&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;this.setLog((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.Log&quot;));&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#/3/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * where failures and errors will be put &#xD;&#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestSuite" eSuperTypes="#/3/kunit/Test">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A TestSuite is a structured collection of tests, using the&#xD;&#xA; * composite pattern, all tests are runnable and have a log&#xD;&#xA; * In addition a suite can be populated automatically from a&#xD;&#xA; * test case class with one test case object for each test&#xD;&#xA; * method in the class.&#xD;&#xA; *  You can make a suite and populate it manually like this:&#xD;&#xA; *&#xD;&#xA; *  var suite : TestSuite init TestSuite.new.&#xD;&#xA; *  suite.tests.add(t1)&#xD;&#xA; *&#xD;&#xA; *  Alternatively you can populate a suite automatically from&#xD;&#xA; *  a class that inherits TestCase and which has several methods&#xD;&#xA; *  called test:&#xD;&#xA; *&#xD;&#xA; *  var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="addAllTestCasesFrom" eType="#/3/kunit/TestSuite">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;  * Add to this suite, a set of test cases of type c, one for each&#xD;&#xA;&#x9;  * test method in class c. C must be a descendent of TestCase&#xD;&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testCaseClassIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestSuite result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_95 = false;&#xA;&#x9;eval_95 = kermeta.standard.helper.BooleanWrapper.not(//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_23 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_23 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_23 = iterator();&#xA;&#x9;java.lang.Boolean eval_96 = false;&#xA;&#x9;while( !eval_96 ) {&#xA;&#x9;eval_96 = kermeta.standard.helper.BooleanWrapper.or(it_23.isOff(), org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isNotEqual(test_23, false));&#xA;&#x9;if ( eval_96 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;test_23 = kermeta.standard.helper.BooleanWrapper.or(test_23, G sc = it.next();&#xA;&#xA;&#x9;sc.equals(kermeta.kunit.TestCase);&#xA;);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_23 = test_23;&#xA;//Ending of the Inlining of the function type: exists&#xA;testCaseClass.getSuperClass().exists(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7576923]));&#xA;&#xA;&#x9;if( eval_95 ) {&#xA;&#xA;&#x9;kermeta.exceptions.Exception e = (kermeta.kunit.InvalidParameterException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.InvalidParameterException&quot;);&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot build a suite from class: &quot;, testCaseClass.getName()));&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_24 = iterator();&#xA;&#x9;java.lang.Boolean eval_97 = false;&#xA;&#x9;while( !eval_97 ) {&#xA;&#x9;eval_97 = it_24.isOff();&#xA;&#x9;if ( eval_97 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G o = it.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) (testCaseClass) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;testCaseClass&quot;);&#xA;&#xA;&#x9;testCase.setTestMethodName(o.getName());&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_25 = null;&#xA;&#xA;&#x9;G elem_25 = null;&#xA;&#xA;&#x9;result_25 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_25 = iterator();&#xA;&#x9;java.lang.Boolean eval_98 = false;&#xA;&#x9;while( !eval_98 ) {&#xA;&#x9;eval_98 = it_25.isOff();&#xA;&#x9;if ( eval_98 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_25 = it_25.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_99 = false;&#xA;&#x9;eval_99 = G o = elem;&#xA;&#xA;&#x9;java.lang.Boolean eval_100 = false;&#xA;&#x9;eval_100 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o.getName()), 4);&#xA;&#xA;&#x9;if( eval_100 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;false;&#xA;}&#xA;&#xA;&#xA;&#xA;&#x9;if( eval_99 ) {&#xA;&#xA;&#x9;result_25.add(elem_25);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;testCaseClass.getOwnedOperation().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7576975]).getTests().add(testCase);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_26 = null;&#xA;&#xA;&#x9;G elem_26 = null;&#xA;&#xA;&#x9;result_26 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_26 = iterator();&#xA;&#x9;java.lang.Boolean eval_101 = false;&#xA;&#x9;while( !eval_101 ) {&#xA;&#x9;eval_101 = it_26.isOff();&#xA;&#x9;if ( eval_101 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_26 = it_26.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_102 = false;&#xA;&#x9;eval_102 = G o = elem;&#xA;&#xA;&#x9;java.lang.Boolean eval_103 = false;&#xA;&#x9;eval_103 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o.getName()), 4);&#xA;&#xA;&#x9;if( eval_103 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;false;&#xA;}&#xA;&#xA;&#xA;&#xA;&#x9;if( eval_102 ) {&#xA;&#xA;&#x9;result_26.add(elem_26);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;testCaseClass.getOwnedOperation().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7576975]).each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7576942]);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/3/language/structure/Class"/>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Run all the tests in the test suite&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_27 = iterator();&#xA;&#x9;java.lang.Boolean eval_104 = false;&#xA;&#x9;while( !eval_104 ) {&#xA;&#x9;eval_104 = it_27.isOff();&#xA;&#x9;if ( eval_104 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G t = it.next();&#xA;&#xA;&#x9;t.setLog(getLog());&#xA;&#xA;&#x9;t.run();&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getTests().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577016]);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAllTestCasesFromAspects">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;  * to be written #####################################################&#xD;&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_28 = iterator();&#xA;&#x9;java.lang.Boolean eval_105 = false;&#xA;&#x9;while( !eval_105 ) {&#xA;&#x9;eval_105 = it_28.isOff();&#xA;&#x9;if ( eval_105 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G o = it.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) (testCaseClass) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;testCaseClass&quot;);&#xA;&#xA;&#x9;testCase.setTestMethodName(o.getName());&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_29 = null;&#xA;&#xA;&#x9;G elem_29 = null;&#xA;&#xA;&#x9;result_29 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_29 = iterator();&#xA;&#x9;java.lang.Boolean eval_106 = false;&#xA;&#x9;while( !eval_106 ) {&#xA;&#x9;eval_106 = it_29.isOff();&#xA;&#x9;if ( eval_106 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_29 = it_29.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_107 = false;&#xA;&#x9;eval_107 = G o = elem;&#xA;&#xA;&#x9;java.lang.Boolean eval_108 = false;&#xA;&#x9;eval_108 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o.getName()), 4);&#xA;&#xA;&#x9;if( eval_108 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;false;&#xA;}&#xA;&#xA;&#xA;&#xA;&#x9;if( eval_107 ) {&#xA;&#xA;&#x9;result_29.add(elem_29);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;anAspect.getOwnedOperation().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577074]).getTests().add(testCase);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_30 = null;&#xA;&#xA;&#x9;G elem_30 = null;&#xA;&#xA;&#x9;result_30 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_30 = iterator();&#xA;&#x9;java.lang.Boolean eval_109 = false;&#xA;&#x9;while( !eval_109 ) {&#xA;&#x9;eval_109 = it_30.isOff();&#xA;&#x9;if ( eval_109 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_30 = it_30.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_110 = false;&#xA;&#x9;eval_110 = G o = elem;&#xA;&#xA;&#x9;java.lang.Boolean eval_111 = false;&#xA;&#x9;eval_111 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o.getName()), 4);&#xA;&#xA;&#x9;if( eval_111 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;false;&#xA;}&#xA;&#xA;&#xA;&#xA;&#x9;if( eval_110 ) {&#xA;&#xA;&#x9;result_30.add(elem_30);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;anAspect.getOwnedOperation().select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577074]).each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577041]);&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/3/language/structure/Class"/>
          <eParameters name="anAspect" eType="#/3/language/structure/ClassDefinition"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="tests" upperBound="-1"
            eType="#/3/kunit/Test">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The collection of tests which will be ran as the suite&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestCase" abstract="true" eSuperTypes="#/3/kunit/Test #/3/kunit/Fallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A test case comprises one or more test methods plus&#xD;&#xA; * setUp and tearDown that build and destroy their test harness.&#xD;&#xA; * An instance of a subclass of TestCase should have its&#xD;&#xA; * testMethodName set to the name of one of its operations&#xD;&#xA; * which should be called whe the test is run. You can do this&#xD;&#xA; * yourself:&#xD;&#xA; *&#xD;&#xA; * var testCase : TestCase init MyTestCaseClass.new.setTestMethodName(&quot;testSomething&quot;)&#xD;&#xA; *&#xD;&#xA; * Alternatively if your TestCase Class has many methods whose&#xD;&#xA; * name begins with 'test' you can create a set of instaces already&#xD;&#xA; * set up with their testMethodName using the addAllTestCasesFrom&#xD;&#xA; * operation on TestSuite&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="setUp">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the things to be done before execution of the test method&#xD;&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="raiseIfHasFailures">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * operation used when the TestCase is run from a java test runner, encapsulates the failures results&#xD;&#xA;&#x9; * into an AssertionFailedError so the TestRunner can detect it&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.String msg = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean eval_112 = false;&#xA;&#x9;eval_112 = kermeta.standard.helper.BooleanWrapper.not(getLog().getFailures().empty());&#xA;&#xA;&#x9;if( eval_112 ) {&#xA;&#xA;&#x9;msg = &quot;Failures: &quot;;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_31 = iterator();&#xA;&#x9;java.lang.Boolean eval_113 = false;&#xA;&#x9;while( !eval_113 ) {&#xA;&#x9;eval_113 = it_31.isOff();&#xA;&#x9;if ( eval_113 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G f = it.next();&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f.toString());&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getLog().getFailures().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577129]);&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = (kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.AssertionFailedError&quot;);&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_114 = false;&#xA;&#x9;eval_114 = kermeta.standard.helper.BooleanWrapper.not(getLog().getErrors().empty());&#xA;&#xA;&#x9;if( eval_114 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_32 = iterator();&#xA;&#x9;java.lang.Boolean eval_115 = false;&#xA;&#x9;while( !eval_115 ) {&#xA;&#x9;eval_115 = it_32.isOff();&#xA;&#x9;if ( eval_115 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G f = it.next();&#xA;&#xA;&#x9;msg = &quot;Errors: &quot;;&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f.toString());&#xA;&#xA;&#x9;kermeta.exceptions.Exception exception = (kermeta.exceptions.Exception) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.Exception&quot;);&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getLog().getErrors().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577173]);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getLog" eType="#/3/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * accessor on the log&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Fallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setTestMethodName" eType="#/3/kunit/TestCase">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets the name of the method from the concrete subclass of&#xD;&#xA;&#x9; *  TestCase that should be executed when this TestCase instance&#xD;&#xA;&#x9; * is run as a test.&#xD;&#xA;&#x9; * Throws invalidTestCaseNameException if the given string is not&#xD;&#xA;&#x9; * the name of a method in the test case&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestCase result = null;&#xA;&#xA;&#x9;set__testMethodName(name);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="name" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="getTestMethodName" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * accessor on the method name&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = get__testMethodName();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * overwrites the default method for more informative output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(this.getMetaClass().getName(), &quot;.&quot;), getTestMethodName()), &quot;()&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Execute the whole test case : SetUp, test method, TearDown&#xD;&#xA;&#x9; * The assertions of the test method are computed&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;getLog().newAttempt();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;setUp();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;kermeta.interpreter.DynamicExpression de = (kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.interpreter.DynamicExpression&quot;);&#xA;&#xA;&#x9;de.initializeDefaults();&#xA;&#xA;&#x9;de.setSelfClass((kermeta.language.structure.ClassDefinition) this.getMetaClass().getTypeDefinition());&#xA;&#xA;&#x9;de.parse(kermeta.standard.helper.StringWrapper.plus(&quot;self.&quot;, this.getTestMethodName()));&#xA;&#xA;&#x9;de.execute(this, (kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_1 ) {&#xA;if( ex_switcher_1.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_1.getRealException();&#xA;getLog().addTearDownError(this, e);&#xA;}&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_2 ) {&#xA;if( ex_switcher_2.getRealException() instanceof kermeta.kunit.AssertionFailedError ) {&#xA;kermeta.kunit.AssertionFailedError afe = (kermeta.kunit.AssertionFailedError) ex_switcher_2.getRealException();&#xA;getLog().addFailure(this, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(afe.getMessage(), &quot;\nstack trace:\n&quot;), afe.getStackTrace()));&#xA;}if( ex_switcher_2.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e1 = (kermeta.exceptions.Exception) ex_switcher_2.getRealException();&#xA;getLog().addTestError(this, e1);{&#xA;try {&#xA;&#x9;tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_3 ) {&#xA;if( ex_switcher_3.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_3.getRealException();&#xA;getLog().addTearDownError(this, e);&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_4 ) {&#xA;if( ex_switcher_4.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_4.getRealException();&#xA;getLog().addSetUpError(this, e);&#xA;}&#xA;}&#xA;}&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="tearDown">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the things to be done after execution of the test method&#xD;&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="__testMethodName" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the name of the method which corresponds to the test case in the test class&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestRunner" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Create and use a test runner to run one or more tests and print the failure log. E.g.:&#xD;&#xA; * do&#xD;&#xA; *&#x9;     var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xD;&#xA; *&#x9;     var runner : TestRunner init TestRunner.new&#xD;&#xA; *&#x9;     runner.run(suite)&#xD;&#xA; *&#x9;     runner.printLogs&#xD;&#xA; * end&#xD;&#xA; *&#xD;&#xA; * Where InterestingTestCaseSet is a subclass of TestCase and contains several test... methods&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="runTest">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Use this to run a test case or a test suite.&#xD;&#xA;&#x9; * If you want to run all the test.... methods in a TestCase class,&#xD;&#xA;&#x9; *  you can populate a suite with TestSuite.addAllTestCasesFrom&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;setLog((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.Log&quot;));&#xA;&#xA;&#x9;test.setLog(getLog());&#xA;&#xA;&#x9;test.run();&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/3/kunit/Test"/>
        </eOperations>
        <eOperations name="printTestResult" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Prints the log or errors and failures from a test run.&#xD;&#xA;&#x9; * Run some tests first.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;System.out.println(&quot;\n---------------------------------------------  TEST RESULTS-----------------------------------------------\n&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_116 = false;&#xA;&#x9;eval_116 = kermeta.standard.helper.BooleanWrapper.not(getLog().getFailures().empty());&#xA;&#xA;&#x9;if( eval_116 ) {&#xA;&#xA;&#x9;System.out.println(&quot;\nFailures: &quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_33 = iterator();&#xA;&#x9;java.lang.Boolean eval_117 = false;&#xA;&#x9;while( !eval_117 ) {&#xA;&#x9;eval_117 = it_33.isOff();&#xA;&#x9;if ( eval_117 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G f = it.next();&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, f.toString()));&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getLog().getFailures().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577414]);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_118 = false;&#xA;&#x9;eval_118 = kermeta.standard.helper.BooleanWrapper.not(getLog().getErrors().empty());&#xA;&#xA;&#x9;if( eval_118 ) {&#xA;&#xA;&#x9;System.out.println(&quot;\nErrors: &quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_34 = iterator();&#xA;&#x9;java.lang.Boolean eval_119 = false;&#xA;&#x9;while( !eval_119 ) {&#xA;&#x9;eval_119 = it_34.isOff();&#xA;&#x9;if ( eval_119 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G e = it.next();&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e.toString()));&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getLog().getErrors().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577450]);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_120 = false;&#xA;&#x9;eval_120 = kermeta.standard.helper.BooleanWrapper.not(getLog().getHarnessErrors().empty());&#xA;&#xA;&#x9;if( eval_120 ) {&#xA;&#xA;&#x9;System.out.println(&quot;\nErrors from setUp or tearDown : &quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_35 = iterator();&#xA;&#x9;java.lang.Boolean eval_121 = false;&#xA;&#x9;while( !eval_121 ) {&#xA;&#x9;eval_121 = it_35.isOff();&#xA;&#x9;if ( eval_121 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G e = it.next();&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e.toString()));&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;getLog().getHarnessErrors().each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7577486]);&#xA;}&#xA;&#xA;&#xA;&#x9;System.out.println(&quot;\n Summary: &quot;);&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of launched tests : &quot;, kermeta.standard.helper.IntegerWrapper.toString(getLog().getRuntests())));&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of failures : &quot;, kermeta.standard.helper.IntegerWrapper.toString(getLog().getFailures().size())));&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors : &quot;, kermeta.standard.helper.IntegerWrapper.toString(getLog().getErrors().size())));&#xA;&#xA;&#x9;System.out.println(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors in setUp or tearDown: &quot;, kermeta.standard.helper.IntegerWrapper.toString(getLog().getHarnessErrors().size())));&#xA;&#xA;&#x9;System.out.println(&quot;\n-------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;  * For backwards compatibility with old kunit, this takes a test case class&#xD;&#xA;&#x9;  * and creates the necessary suite, and runs it. DEPRECATED&#xD;&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="cIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;runTest((kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.kunit.TestSuite&quot;).addAllTestCasesFrom(testCaseClass));&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/3/language/structure/Class"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#/3/kunit/Log"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Where to register the failures and errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="ecore" nsURI="http://www.kermeta.org/kermeta/ecore/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/ecore"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains the definition of a Kermeta classes used for compatibility with Ecore &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="EFeatureMapEntry" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta representation of EMF EFeatureMapEntry&#xD;&#xA; * it contains the name of the required feature and the actual value&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/3/language/structure/Object"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="eStructuralFeatureName"
            eType="#/3/standard/JavaString"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="standard" nsURI="http://www.kermeta.org/kermeta/standard/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/standard"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Defines value types &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/primitive_types_view.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains types dedicated to dealing with java objects&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Defines Collection types &#xD;&#xA; * &lt;img src=&quot;./figures/collections_view.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Void" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The class Void &#xD;&#xA; * By convention it is a sub-type of everything&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="isVoid" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return true&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isInstanceOf" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="type" eType="#/3/language/structure/Type"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the String identifier '&lt;void>'&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&lt;void>&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValueType" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class ValueType does not contain any feature.&#xD;&#xA; * However, any instance of a sub-class of ValueType will be passed by value &#xD;&#xA; * instead of by reference for any other objects.&#xD;&#xA; * that means that each time you := such object it will call the clone function associated to it (Not implemented yet except for Integer, String and boolean!!!)&#xD;&#xA; * &#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comparable" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Comparable defines a set of operation&#xD;&#xA; * to compare instances of a class.&#xD;&#xA; * Sub-classes only has to implement abstract operation compareTo.&#xD;&#xA; * All other methods are defined w.r.t. the compareTo operation&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="isLower" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreaterOrEqual" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self >= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="compareTo" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * This method should be implemented by any class that inherits&#xD;&#xA;&#x9; * from Comparable.&#xD;&#xA;&#x9; * returns 0 if self = other&#xD;&#xA;&#x9; * returns > 0 if  self > other&#xD;&#xA;&#x9; * returns &lt; 0 if  self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="isLowerOrEqual" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt;= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreater" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self > other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(self.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Summable" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Summable defines a set of operation&#xD;&#xA; * to sum instances of a class.&#xD;&#xA; * Sub-classes only has to implement abstract operation plus.&#xD;&#xA;  */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="plus">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Summarization method to be implemented by any summable class.&#xD;&#xA;&#x9; * The parameter must have the same type (or one of its subtypes)&#xD;&#xA;&#x9; *  than the current object .&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Summable/G"/>
          <eParameters name="other">
            <eGenericType eTypeParameter="#/3/standard/Summable/G"/>
          </eParameters>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotComparableException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * raised when two objects are not comparable&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaBoolean" instanceClassName="java.lang.Boolean"/>
      <eClassifiers xsi:type="ecore:EClass" name="Boolean" eSuperTypes="#/3/standard/ValueType">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The Boolean type&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_instanceClassName" value="java.lang.Boolean"/>
        </eAnnotations>
        <eOperations name="not" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return not self&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.not(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.not(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="xor" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return self xor other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.and(this, kermeta.standard.helper.BooleanWrapper.not(other)), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this), other));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.and(self, kermeta.standard.helper.BooleanWrapper.not(other)), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(self), other));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if &lt;code>other&lt;/code> type is Boolean&#xD;&#xA;&#x9; * and has the same boolean value than current object.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_122 = false;&#xA;&#x9;eval_122 = other.getMetaClass().isNotEqual(java.lang.Boolean);&#xA;&#xA;&#x9;if( eval_122 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.equals(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_124 = false;&#xA;&#x9;eval_124 = other.getMetaClass().isNotEqual(java.lang.Boolean);&#xA;&#xA;&#x9;if( eval_124 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="or" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return self or other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.or(this, other);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.or(self, other);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="implies" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return self implies other&#xD;&#xA;&#x9; * meaning : not( (not (self and other)) and self)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(this, other)), this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other)), self));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="nand" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return self nand other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(this, other));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.and(self, other));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns 'true' or 'false', depending on self  value&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = java.lang.Boolean eval_123 = false;&#xA;&#x9;eval_123 = this;&#xA;&#xA;&#x9;if( eval_123 ) {&#xA;&#xA;&#x9;&quot;true&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&quot;false&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = java.lang.Boolean eval_125 = false;&#xA;&#x9;eval_125 = self;&#xA;&#xA;&#x9;if( eval_125 ) {&#xA;&#xA;&#x9;&quot;true&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&quot;false&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="and" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return self and other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.and(this, other);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.and(self, other);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaBoolean"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Numeric" abstract="true" eSuperTypes="#/3/standard/Comparable #/3/standard/ValueType">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Numeric is the root class for all&#xD;&#xA; * numeric types&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaInteger" instanceClassName="java.lang.Integer"/>
      <eClassifiers xsi:type="ecore:EClass" name="Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The class Integer&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_instanceClassName" value="java.lang.Integer"/>
        </eAnnotations>
        <eOperations name="plus" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self + other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Summable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_150 = false;&#xA;&#x9;eval_150 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_150 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.plus(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_169 = false;&#xA;&#x9;eval_169 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_169 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="isLower" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_151 = false;&#xA;&#x9;eval_151 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_151 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_152 = false;&#xA;&#x9;eval_152 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_152 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLower(kermeta.standard.helper.IntegerWrapper.toReal(this), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLower(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_170 = false;&#xA;&#x9;eval_170 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_170 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_171 = false;&#xA;&#x9;eval_171 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_171 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLower(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLower(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="mult" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self * other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_153 = false;&#xA;&#x9;eval_153 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_153 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.times(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_172 = false;&#xA;&#x9;eval_172 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_172 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="minus" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self - other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_154 = false;&#xA;&#x9;eval_154 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_154 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.minus(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_173 = false;&#xA;&#x9;eval_173 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_173 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if &lt;code>other&lt;/code> type is Integer or Real&#xD;&#xA;&#x9; * and has the same numeric value than current object.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_155 = false;&#xA;&#x9;eval_155 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_155 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_156 = false;&#xA;&#x9;eval_156 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_156 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(kermeta.standard.helper.IntegerWrapper.toReal(this), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.equals(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_174 = false;&#xA;&#x9;eval_174 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_174 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_175 = false;&#xA;&#x9;eval_175 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_175 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="mod" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self modulo other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_157 = false;&#xA;&#x9;eval_157 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( eval_157 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DivisionByZero&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_158 = false;&#xA;&#x9;eval_158 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_158 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.mod(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_176 = false;&#xA;&#x9;eval_176 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( eval_176 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DivisionByZero&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_177 = false;&#xA;&#x9;eval_177 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_177 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.mod(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="toReal" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Convert self as a Real&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toReal(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toReal(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="div" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self / other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_159 = false;&#xA;&#x9;eval_159 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( eval_159 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DivisionByZero&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_160 = false;&#xA;&#x9;eval_160 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_160 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.div(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_178 = false;&#xA;&#x9;eval_178 = kermeta.standard.helper.IntegerWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( eval_178 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DivisionByZero&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_179 = false;&#xA;&#x9;eval_179 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_179 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="compareTo" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Comparison&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_161 = false;&#xA;&#x9;eval_161 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_161 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_162 = false;&#xA;&#x9;eval_162 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_162 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(kermeta.standard.helper.IntegerWrapper.toReal(this), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.NotComparableException&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.compareTo(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_180 = false;&#xA;&#x9;eval_180 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_180 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_181 = false;&#xA;&#x9;eval_181 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_181 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.NotComparableException&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreater" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self > other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_163 = false;&#xA;&#x9;eval_163 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_163 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_164 = false;&#xA;&#x9;eval_164 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_164 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreater(kermeta.standard.helper.IntegerWrapper.toReal(this), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreater(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_182 = false;&#xA;&#x9;eval_182 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_182 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_183 = false;&#xA;&#x9;eval_183 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_183 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreater(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreater(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreaterOrEqual" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self >= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_165 = false;&#xA;&#x9;eval_165 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_165 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_166 = false;&#xA;&#x9;eval_166 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_166 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreaterOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(this), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreaterOrEqual(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_184 = false;&#xA;&#x9;eval_184 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_184 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_185 = false;&#xA;&#x9;eval_185 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_185 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isGreaterOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isGreaterOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="uminus" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns -self&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.minus(0, this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.minus(0, self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Numeric value in string format&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toString(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.toString(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isLowerOrEqual" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt;= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_167 = false;&#xA;&#x9;eval_167 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_167 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_168 = false;&#xA;&#x9;eval_168 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_168 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLowerOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(this), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLowerOrEqual(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_186 = false;&#xA;&#x9;eval_186 = other.getMetaClass().isNotEqual(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_186 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_187 = false;&#xA;&#x9;eval_187 = other.getMetaClass().equals(java.lang.Double);&#xA;&#xA;&#x9;if( eval_187 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isLowerOrEqual(kermeta.standard.helper.IntegerWrapper.toReal(self), other);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isLowerOrEqual(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Numeric"/>
        <eGenericSuperTypes eClassifier="#/3/standard/Summable">
          <eTypeArguments eClassifier="#/3/standard/JavaInteger"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaReal" instanceClassName="java.lang.Double"/>
      <eClassifiers xsi:type="ecore:EClass" name="Real">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * class Real&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_instanceClassName" value="java.lang.Double"/>
        </eAnnotations>
        <eOperations name="plus" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self + other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Summable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_200 = false;&#xA;&#x9;eval_200 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_200 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.plus(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_209 = false;&#xA;&#x9;eval_209 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_209 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaReal"/>
        </eOperations>
        <eOperations name="mult" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self * other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_201 = false;&#xA;&#x9;eval_201 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_201 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.times(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_210 = false;&#xA;&#x9;eval_210 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_210 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.times(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaReal"/>
        </eOperations>
        <eOperations name="minus" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self - other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_202 = false;&#xA;&#x9;eval_202 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_202 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.minus(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_211 = false;&#xA;&#x9;eval_211 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_211 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.minus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaReal"/>
        </eOperations>
        <eOperations name="toInteger" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Convert self as an Integer&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toInteger(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toInteger(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="uminus" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns -self&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.minus(kermeta.standard.helper.IntegerWrapper.toReal(0), this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.minus(kermeta.standard.helper.IntegerWrapper.toReal(0), self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if &lt;code>other&lt;/code> type is Integer or Real&#xD;&#xA;&#x9; * and has the same numeric value than current object.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_203 = false;&#xA;&#x9;eval_203 = other.getMetaClass().isNotEqual(java.lang.Double);&#xA;&#xA;&#x9;if( eval_203 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_204 = false;&#xA;&#x9;eval_204 = other.getMetaClass().equals(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_204 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(this, kermeta.standard.helper.IntegerWrapper.toReal(other.asType(java.lang.Integer)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_212 = false;&#xA;&#x9;eval_212 = other.getMetaClass().isNotEqual(java.lang.Double);&#xA;&#xA;&#x9;if( eval_212 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_213 = false;&#xA;&#x9;eval_213 = other.getMetaClass().equals(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_213 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.equals(self, kermeta.standard.helper.IntegerWrapper.toReal(other.asType(java.lang.Integer)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.RealUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="div" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns self / other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_205 = false;&#xA;&#x9;eval_205 = kermeta.standard.helper.RealWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( eval_205 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DivisionByZero&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_206 = false;&#xA;&#x9;eval_206 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_206 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.div(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_214 = false;&#xA;&#x9;eval_214 = kermeta.standard.helper.RealWrapper.equals(other, 0);&#xA;&#xA;&#x9;if( eval_214 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.DivisionByZero) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.DivisionByZero&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean eval_215 = false;&#xA;&#x9;eval_215 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_215 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.VoidOperandError) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.VoidOperandError&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.RealUtil.div(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaReal"/>
        </eOperations>
        <eOperations name="compareTo" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Comparison&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_207 = false;&#xA;&#x9;eval_207 = other.getMetaClass().isNotEqual(java.lang.Double);&#xA;&#xA;&#x9;if( eval_207 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_208 = false;&#xA;&#x9;eval_208 = other.getMetaClass().equals(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_208 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(this, kermeta.standard.helper.IntegerWrapper.toReal(other.asType(java.lang.Integer)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.NotComparableException&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_216 = false;&#xA;&#x9;eval_216 = other.getMetaClass().isNotEqual(java.lang.Double);&#xA;&#xA;&#x9;if( eval_216 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_217 = false;&#xA;&#x9;eval_217 = other.getMetaClass().equals(java.lang.Integer);&#xA;&#xA;&#x9;if( eval_217 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.RealWrapper.compareTo(self, kermeta.standard.helper.IntegerWrapper.toReal(other.asType(java.lang.Integer)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.standard.NotComparableException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.NotComparableException&quot;) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.RealUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns numeric value in string format&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toString(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RealUtil.toString(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Numeric"/>
        <eGenericSuperTypes eClassifier="#/3/standard/Summable">
          <eTypeArguments eClassifier="#/3/standard/JavaReal"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaCharacter" instanceClassName="java.lang.Character"/>
      <eClassifiers xsi:type="ecore:EClass" name="Character" eSuperTypes="#/3/standard/ValueType #/3/standard/Comparable">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The class Character&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_instanceClassName" value="java.lang.Character"/>
        </eAnnotations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if &lt;code>other&lt;/code> type is Character&#xD;&#xA;&#x9; * and has the same letter value than current object.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_230 = false;&#xA;&#x9;eval_230 = other.getMetaClass().isNotEqual(java.lang.Character);&#xA;&#xA;&#x9;if( eval_230 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.equals(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_232 = false;&#xA;&#x9;eval_232 = other.getMetaClass().isNotEqual(java.lang.Character);&#xA;&#xA;&#x9;if( eval_232 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Conversion from Character to String&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.toString(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.toString(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="compareTo" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Comparaison&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_231 = false;&#xA;&#x9;eval_231 = other.isVoid();&#xA;&#xA;&#x9;if( eval_231 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.CallOnVoidTarget&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.compareTo(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_233 = false;&#xA;&#x9;eval_233 = other.isVoid();&#xA;&#xA;&#x9;if( eval_233 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.CallOnVoidTarget&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CharacterUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaString" instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EClass" name="String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The class String&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_instanceClassName" value="java.lang.String"/>
        </eAnnotations>
        <eOperations name="plus" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns a new string self + other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Summable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_246 = false;&#xA;&#x9;eval_246 = org.kermeta.compil.runtime.helper.basetypes.StringUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_246 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(this, kermeta.standard.helper.StringWrapper.toString(other));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_255 = false;&#xA;&#x9;eval_255 = org.kermeta.compil.runtime.helper.basetypes.StringUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_255 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, kermeta.standard.helper.StringWrapper.toString(other));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.plus(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Appends other at the end of self&#xD;&#xA;&#x9; * A more efficient method is kermeta::utils::StringBuffer::append(other)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_247 = false;&#xA;&#x9;eval_247 = org.kermeta.compil.runtime.helper.basetypes.StringUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_247 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.CallOnVoidTarget&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.StringUtil.append(this, other);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_256 = false;&#xA;&#x9;eval_256 = org.kermeta.compil.runtime.helper.basetypes.StringUtil.isVoid(other);&#xA;&#xA;&#x9;if( eval_256 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.CallOnVoidTarget&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.StringUtil.append(self, other);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if &lt;code>other&lt;/code> type is String&#xD;&#xA;&#x9; * and has the same string value than current object.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_248 = false;&#xA;&#x9;eval_248 = other.getMetaClass().isNotEqual(java.lang.String);&#xA;&#xA;&#x9;if( eval_248 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.equals(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_257 = false;&#xA;&#x9;eval_257 = other.getMetaClass().isNotEqual(java.lang.String);&#xA;&#xA;&#x9;if( eval_257 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.equals(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="toReal" eType="#/3/standard/JavaReal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parses the current string into a real.&#xD;&#xA;&#x9; * if no real value is recognized then a StringFormatException is raised.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toReal(this);&#xA;&#xA;&#x9;java.lang.Boolean eval_249 = false;&#xA;&#x9;eval_249 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(result);&#xA;&#xA;&#x9;if( eval_249 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringFormatException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Double result = null;&#xA;&#xA;&#x9;result = (java.lang.Double) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toReal(self);&#xA;&#xA;&#x9;java.lang.Boolean eval_258 = false;&#xA;&#x9;eval_258 = org.kermeta.compil.runtime.helper.basetypes.RealUtil.isVoid(result);&#xA;&#xA;&#x9;if( eval_258 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringFormatException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toBoolean" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parses the current string and returns true if the string is &quot;true&quot; and false if the string is &quot;false&quot;&#xD;&#xA;&#x9; * The parsing is not case sensitive and if no boolean value is recognized then a StringFormatException is raised.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toBoolean(this);&#xA;&#xA;&#x9;java.lang.Boolean eval_250 = false;&#xA;&#x9;eval_250 = org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isVoid(result);&#xA;&#xA;&#x9;if( eval_250 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringFormatException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toBoolean(self);&#xA;&#xA;&#x9;java.lang.Boolean eval_259 = false;&#xA;&#x9;eval_259 = org.kermeta.compil.runtime.helper.basetypes.BooleanUtil.isVoid(result);&#xA;&#xA;&#x9;if( eval_259 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringFormatException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="compareTo" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Comparaison&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Comparable"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_251 = false;&#xA;&#x9;eval_251 = other.isVoid();&#xA;&#xA;&#x9;if( eval_251 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.CallOnVoidTarget&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.compareTo(this, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_260 = false;&#xA;&#x9;eval_260 = other.isVoid();&#xA;&#xA;&#x9;if( eval_260 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.CallOnVoidTarget) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.CallOnVoidTarget&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.compareTo(self, other);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="contains" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return if a string is contained by another string&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.contains(this, str1);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.StringUtil.contains(self, str1);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="str1" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="indexOf" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns the index within this string of the first &#xD;&#xA;&#x9; * occurrence of the specified substring&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.indexOf(this, str);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.indexOf(self, str);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="str" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="elementAt" eType="#/3/standard/JavaCharacter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns the character at index in the String&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Character result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_252 = false;&#xA;&#x9;eval_252 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(), 1)));&#xA;&#xA;&#x9;if( eval_252 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Character) org.kermeta.compil.runtime.helper.basetypes.StringUtil.elementAt(this, index);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Character result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_261 = false;&#xA;&#x9;eval_261 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(), 1)));&#xA;&#xA;&#x9;if( eval_261 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;) );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = (java.lang.Character) org.kermeta.compil.runtime.helper.basetypes.StringUtil.elementAt(self, index);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="size" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns the number of characters in the current String&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.size(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.size(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="replace" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Replaces all occurences of str1 in the current string by the string str2&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.replace(this, str1, str2);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.replace(self, str1, str2);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="str1" eType="#/3/standard/JavaString"/>
          <eParameters name="str2" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="toUpperCase" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return the current string in upper case&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toUpperCase(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toUpperCase(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toInteger" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parses the current string into an integer.&#xD;&#xA;&#x9; * if no integer value is recognized then a StringFormatException is raised.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toInteger(this);&#xA;&#xA;&#x9;java.lang.Boolean eval_253 = false;&#xA;&#x9;eval_253 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(result);&#xA;&#xA;&#x9;if( eval_253 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringFormatException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toInteger(self);&#xA;&#xA;&#x9;java.lang.Boolean eval_262 = false;&#xA;&#x9;eval_262 = org.kermeta.compil.runtime.helper.basetypes.IntegerUtil.isVoid(result);&#xA;&#xA;&#x9;if( eval_262 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringFormatException) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringFormatException&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toLowerCase" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return the current string in lower case&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toLowerCase(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.toLowerCase(self);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="substring" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns a new string that is a substring of this string&#xD;&#xA;&#x9; * takes as parameters : the startIndex and the size of the substring&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_254 = false;&#xA;&#x9;eval_254 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(startIndex, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(startIndex, kermeta.standard.helper.StringWrapper.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(subStringSize, kermeta.standard.helper.StringWrapper.size())), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(subStringSize, startIndex));&#xA;&#xA;&#x9;if( eval_254 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.substring(this, startIndex, subStringSize);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_263 = false;&#xA;&#x9;eval_263 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(startIndex, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(startIndex, kermeta.standard.helper.StringWrapper.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(subStringSize, kermeta.standard.helper.StringWrapper.size())), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(subStringSize, startIndex));&#xA;&#xA;&#x9;if( eval_263 ) {&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringUtil.substring(self, startIndex, subStringSize);&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.StringIndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.StringIndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="startIndex" eType="#/3/standard/JavaInteger"/>
          <eParameters name="subStringSize" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="split">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return of an ordered set of the splitted string&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.basetypes.StringUtil.split(this, delimiter);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.basetypes.StringUtil.split(self, delimiter);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eClassifier="#/3/standard/JavaString"/>
          </eGenericType>
          <eParameters name="delimiter" eType="#/3/standard/JavaString"/>
        </eOperations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * returns the string itself&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = self;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/ValueType"/>
        <eGenericSuperTypes eClassifier="#/3/standard/Comparable"/>
        <eGenericSuperTypes eClassifier="#/3/standard/Summable">
          <eTypeArguments eClassifier="#/3/standard/JavaString"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Object">
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::standard::Integer"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Unlimited natural is used for reflection.&#xD;&#xA; * It is mapped to integer.equals().&#xD;&#xA; * Any negative number is interpreted as '*'&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnknownJavaObject" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xD;&#xA;  * This special object is used to represent java objects that cannot be concretely used with kermeta&#xD;&#xA;  * &lt;b>the only actions possible on these objects are : assignment and passing them as parameter&lt;/b>&#xD;&#xA;  * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xD;&#xA;  */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;toString of  UnknownJavaObject not implemented yet&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Collection" abstract="true" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Collection is the root abstract class for all kermeta collections&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=values isUnique=false isOrdered=false javaClass=java.util.ArrayList"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="count" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the number of instances of element in the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = //Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_54 = null;&#xA;&#xA;&#x9;G elem_54 = null;&#xA;&#xA;&#x9;result_54 = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_54 = iterator();&#xA;&#x9;java.lang.Boolean eval_276 = false;&#xA;&#x9;while( !eval_276 ) {&#xA;&#x9;eval_276 = it_54.isOff();&#xA;&#x9;if ( eval_276 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_54 = it_54.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_277 = false;&#xA;&#x9;eval_277 = G e = elem;&#xA;&#xA;&#x9;e.equals(element);&#xA;&#xA;&#xA;&#x9;if( eval_277 ) {&#xA;&#xA;&#x9;result_54.add(elem_54);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: select&#xA;this.select(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7578857]).size();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all instances of element from the Collection, based on&#xD;&#xA;&#x9; * G.equals(Object) definition&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_55 = null;&#xA;&#xA;&#x9;G elem_55 = null;&#xA;&#xA;&#x9;result_55 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_55 = iterator();&#xA;&#x9;java.lang.Boolean eval_279 = false;&#xA;&#x9;while( !eval_279 ) {&#xA;&#x9;eval_279 = kermeta.standard.helper.BooleanWrapper.or(it_55.isOff(), result_55.isNotEqual(null));&#xA;&#x9;if ( eval_279 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_55 = it_55.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_280 = false;&#xA;&#x9;eval_280 = G e = elem;&#xA;&#xA;&#x9;e.equals(element);&#xA;&#xA;&#xA;&#x9;if( eval_280 ) {&#xA;&#xA;&#x9;result_55 = elem_55;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: detect&#xA;this.detect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7578890]);&#xA;&#x9;java.lang.Boolean eval_278 = false;&#xA;&#x9;while( !eval_278 ) {&#xA;&#x9;eval_278 = elem.equals(null);&#xA;&#x9;if ( eval_278 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;&#xA;&#x9;elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_56 = null;&#xA;&#xA;&#x9;G elem_56 = null;&#xA;&#xA;&#x9;result_56 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_56 = iterator();&#xA;&#x9;java.lang.Boolean eval_281 = false;&#xA;&#x9;while( !eval_281 ) {&#xA;&#x9;eval_281 = kermeta.standard.helper.BooleanWrapper.or(it_56.isOff(), result_56.isNotEqual(null));&#xA;&#x9;if ( eval_281 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_56 = it_56.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_282 = false;&#xA;&#x9;eval_282 = G e = elem;&#xA;&#xA;&#x9;e.equals(element);&#xA;&#xA;&#xA;&#x9;if( eval_282 ) {&#xA;&#xA;&#x9;result_56 = elem_56;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: detect&#xA;this.detect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7578917]);&#xA;}&#xA;&#x9;}&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludes" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the Collection does not contain element&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="one">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element from the Collection or void if the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_283 = false;&#xA;&#x9;eval_283 = kermeta.standard.helper.IntegerWrapper.equals(size(), 0);&#xA;&#xA;&#x9;if( eval_283 ) {&#xA;&#xA;&#x9;result = null;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
        </eOperations>
        <eOperations name="containsAll" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if current Collection contains all elements of Collection elements&#xD;&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean eval_284 = false;&#xA;&#x9;while( !eval_284 ) {&#xA;&#x9;eval_284 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( eval_284 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = this.contains(it.next());&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="sum">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sum the element if they are summable (ie implement '+' operator by inheriting of the class Summable)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;G res = null;&#xA;&#xA;&#x9;kermeta.standard.Summable&lt;G> tmp = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;o = this.one();&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) o;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_285 = false;&#xA;&#x9;eval_285 = tmp.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_285 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_57 = iterator();&#xA;&#x9;java.lang.Boolean eval_286 = false;&#xA;&#x9;while( !eval_286 ) {&#xA;&#x9;eval_286 = it_57.isOff();&#xA;&#x9;if ( eval_286 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G elem = it.next();&#xA;&#xA;&#x9;o = elem;&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) o;&#xA;&#xA;&#x9;java.lang.Boolean eval_287 = false;&#xA;&#x9;eval_287 = tmp.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_287 ) {&#xA;&#xA;&#x9;res = tmp.plus(res);&#xA;}&#xA;&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;this.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7579038]);&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
        </eOperations>
        <eOperations name="contains" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least one&#xD;&#xA;&#x9; * instance of element, based on G.equals(elt : Object) definition&#xD;&#xA;&#x9; * Note: for checking whether a physical element is contained by the collection,&#xD;&#xA;&#x9; * make use of G.oid()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#x9;java.lang.Boolean eval_288 = false;&#xA;&#x9;while( !eval_288 ) {&#xA;&#x9;eval_288 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), result);&#xA;&#x9;if ( eval_288 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next().equals(element);&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds an element in the Collection (default implementation)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludesAll" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the Collection contains no element of Collection elements&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean eval_289 = false;&#xA;&#x9;while( !eval_289 ) {&#xA;&#x9;eval_289 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( eval_289 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(it.next()));&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Sequence built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="includes" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL API alignment, doeas the same as contains&#xD;&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.contains(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all elements from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isEmpty" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL alignment API, does the same as empty&#xD;&#xA;&#x9; * See Collection&lt;G>.empty()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.empty();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="any">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element from the Collection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_290 = false;&#xA;&#x9;eval_290 = kermeta.standard.helper.IntegerWrapper.equals(size(), 0);&#xA;&#xA;&#x9;if( eval_290 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.EmptyCollection&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Collection/G"/>
        </eOperations>
        <eOperations name="empty" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.equals(size(), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isNotEmpty" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL alignment API&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least&#xD;&#xA;&#x9; * one element &#xD;&#xA;&#x9; * See also Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.empty());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="iterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an Iterator on the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Iterator&lt;G>&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.iterator(this, result);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Iterator">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="addAll">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds all elements from the Collection elements in the current Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_58 = iterator();&#xA;&#x9;java.lang.Boolean eval_291 = false;&#xA;&#x9;while( !eval_291 ) {&#xA;&#x9;eval_291 = it_58.isOff();&#xA;&#x9;if ( eval_291 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G element = it.next();&#xA;&#xA;&#x9;add(element);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;elements.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7579430]);&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="includesAll" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL API alignment, does the same as containsAll&#xD;&#xA;&#x9; * See Collection&lt;G>.containsAll(Collection&lt;G>)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.containsAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="size" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the number of elements in the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.size(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new OrderedSet built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="values">
          <eGenericType eClassifier="#/3/standard/KermetaProperty_Collection_values">
            <eTypeArguments eTypeParameter="#/3/standard/Collection/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Set">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A Set is a non-ordered collection that contains distinct elements&#xD;&#xA; * (with regards to the G.equals(Object) operation)&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=true isOrdered=false javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the intersection of the Set elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;G>&quot;);&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean eval_292 = false;&#xA;&#x9;while( !eval_292 ) {&#xA;&#x9;eval_292 = it.isOff();&#xA;&#x9;if ( eval_292 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_293 = false;&#xA;&#x9;eval_293 = elements.contains(elem);&#xA;&#xA;&#x9;if( eval_293 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="minus">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the difference between the&#xD;&#xA;&#x9; * current Set and the Set elements, ie all elements contained by &#xD;&#xA;&#x9; * the current Set that do not appear in the elements Set &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;G>&quot;);&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean eval_294 = false;&#xA;&#x9;while( !eval_294 ) {&#xA;&#x9;eval_294 = it.isOff();&#xA;&#x9;if ( eval_294 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_295 = false;&#xA;&#x9;eval_295 = kermeta.standard.helper.BooleanWrapper.not(elements.contains(elem));&#xA;&#xA;&#x9;if( eval_295 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.remove(G)&#xD;&#xA;&#x9; * Removes the element from the Set if it is contained by the Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_59 = null;&#xA;&#xA;&#x9;G elem_59 = null;&#xA;&#xA;&#x9;result_59 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_59 = iterator();&#xA;&#x9;java.lang.Boolean eval_296 = false;&#xA;&#x9;while( !eval_296 ) {&#xA;&#x9;eval_296 = kermeta.standard.helper.BooleanWrapper.or(it_59.isOff(), result_59.isNotEqual(null));&#xA;&#x9;if ( eval_296 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_59 = it_59.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_297 = false;&#xA;&#x9;eval_297 = G e = elem;&#xA;&#xA;&#x9;e.equals(element);&#xA;&#xA;&#xA;&#x9;if( eval_297 ) {&#xA;&#xA;&#x9;result_59 = elem_59;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;elem = result_59;&#xA;//Ending of the Inlining of the function type: detect&#xA;this.detect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7579749]);&#xA;&#xA;&#x9;java.lang.Boolean eval_298 = false;&#xA;&#x9;eval_298 = elem.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_298 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean eval_299 = false;&#xA;&#x9;eval_299 = kermeta.standard.helper.BooleanWrapper.not(element.isVoid());&#xA;&#xA;&#x9;if( eval_299 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_300 = false;&#xA;&#x9;eval_300 = kermeta.standard.Collection&lt;G>.isInstance(element);&#xA;&#xA;&#x9;if( eval_300 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean eval_301 = false;&#xA;&#x9;eval_301 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( eval_301 ) {&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;java.lang.Boolean ok = true;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean eval_302 = false;&#xA;&#x9;while( !eval_302 ) {&#xA;&#x9;eval_302 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(ok));&#xA;&#x9;if ( eval_302 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_303 = false;&#xA;&#x9;eval_303 = kermeta.standard.helper.BooleanWrapper.not(collection.contains(elem));&#xA;&#xA;&#x9;if( eval_303 ) {&#xA;&#xA;&#x9;ok = false;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = ok;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xD;&#xA;&#x9; * Returns a new Sequence composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.add(G)&#xD;&#xA;&#x9; * Adds elt to the Set if it is not already contained by the&#xD;&#xA;&#x9; * Set, does nothing otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_304 = false;&#xA;&#x9;eval_304 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( eval_304 ) {&#xA;&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a ordered set of the bag elements sorted using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursive sort of the given (ordered) set using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/3/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="symmetricDifference">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set which contents corresponds to the symmetric&#xD;&#xA;&#x9; * difference between current Set and Set s, ie all elements of&#xD;&#xA;&#x9; * each Set that do not appear in the other one&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> res = s.minus(this);&#xA;&#xA;&#x9;result = this.minus(s).addAll(res);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="s">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set which content includes all non-Collection elements&#xD;&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xD;&#xA;&#x9; * Set, as many elements as the Collection contains&#xD;&#xA;&#x9; * Duplicates are removed&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> res = (kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_305 = false;&#xA;&#x9;eval_305 = G.isKindOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;if( eval_305 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_60 = iterator();&#xA;&#x9;java.lang.Boolean eval_306 = false;&#xA;&#x9;while( !eval_306 ) {&#xA;&#x9;eval_306 = it_60.isOff();&#xA;&#x9;if ( eval_306 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G e = it.next();&#xA;&#xA;&#x9;o = e;&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) o;&#xA;&#xA;&#x9;res.addAll(col);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;this.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7580020]);&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eClassifier="#/3/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xD;&#xA;&#x9; * Returns a new OrderedSet that contains all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xD;&#xA;&#x9; * Returns a new Bag composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the union of the Set elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xD;&#xA;&#x9; * Returns a new Set composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = (kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="unionWithBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the union of the Bag elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Bag">
              <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Collection">
          <eTypeArguments eTypeParameter="#/3/standard/Set/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Bag">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Bag is a concrete non-ordered Collection allowing duplicates&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=false javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the intersection of elements&#xD;&#xA;&#x9; * and the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_307 = false;&#xA;&#x9;while( !eval_307 ) {&#xA;&#x9;eval_307 = it.isOff();&#xA;&#x9;if ( eval_307 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_308 = false;&#xA;&#x9;eval_308 = elements.contains(elem);&#xA;&#xA;&#x9;if( eval_308 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_309 = false;&#xA;&#x9;eval_309 = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.count(elem), elements.count(elem));&#xA;&#xA;&#x9;if( eval_309 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;it = elements.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_310 = false;&#xA;&#x9;while( !eval_310 ) {&#xA;&#x9;eval_310 = it.isOff();&#xA;&#x9;if ( eval_310 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_311 = false;&#xA;&#x9;eval_311 = this.contains(elem);&#xA;&#xA;&#x9;if( eval_311 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_312 = false;&#xA;&#x9;eval_312 = kermeta.standard.helper.IntegerWrapper.isLower(elements.count(elem), this.count(elem));&#xA;&#xA;&#x9;if( eval_312 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Bag">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(elt : Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean eval_313 = false;&#xA;&#x9;eval_313 = kermeta.standard.helper.BooleanWrapper.not(element.isVoid());&#xA;&#xA;&#x9;if( eval_313 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_314 = false;&#xA;&#x9;eval_314 = kermeta.standard.Collection&lt;G>.isInstance(element);&#xA;&#xA;&#x9;if( eval_314 ) {&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Bag&lt;G>) element;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> selfAsSet = this.asSet();&#xA;&#xA;&#x9;isEqual = selfAsSet.equals(collection.asSet());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xD;&#xA;&#x9; * Returns a new Sequence containing all elements of current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a sequence of the bag elements sorted using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursive sort of the given sequence using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/3/standard/Sequence">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="excluding">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xD;&#xA;&#x9; * current Bag from which all instances of object have been&#xD;&#xA;&#x9; * removed&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.remove(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/3/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes all non-Collection elements&#xD;&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xD;&#xA;&#x9; * Bag, as many elements as the Collection contains&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;kermeta.language.structure.Object> res = (kermeta.standard.Bag&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;kermeta.language.structure.Object>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_315 = false;&#xA;&#x9;eval_315 = G.isKindOf(kermeta.standard.Collection&lt;kermeta.language.structure.Object>);&#xA;&#xA;&#x9;if( eval_315 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_61 = iterator();&#xA;&#x9;java.lang.Boolean eval_316 = false;&#xA;&#x9;while( !eval_316 ) {&#xA;&#x9;eval_316 = it_61.isOff();&#xA;&#x9;if ( eval_316 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;G e = it.next();&#xA;&#xA;&#x9;o = e;&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) o;&#xA;&#xA;&#x9;res.addAll(col);&#xA;&#xA;}&#xA;&#x9;}&#xA;//Ending of the Inlining of the function type: each&#xA;this.each(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7580486]);&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eClassifier="#/3/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="intersectionWithSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the intersection of a Set of&#xD;&#xA;&#x9; * elements and the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;G>&quot;);&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean eval_317 = false;&#xA;&#x9;while( !eval_317 ) {&#xA;&#x9;eval_317 = it.isOff();&#xA;&#x9;if ( eval_317 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_318 = false;&#xA;&#x9;eval_318 = this.contains(elem);&#xA;&#xA;&#x9;if( eval_318 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Set">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="including">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xD;&#xA;&#x9; * current Bag and the element object&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.add(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/3/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xD;&#xA;&#x9; * Returns a new OrderedSet containing elements of the Bag without duplicates&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xD;&#xA;&#x9; * Returns a new Bag containing all elements of current Bag&#x9;&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the union of elements and&#xD;&#xA;&#x9; * current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Bag&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Bag">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/3/standard/Collection">
              <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="removeOne">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes one instance of element from the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_62 = null;&#xA;&#xA;&#x9;G elem_62 = null;&#xA;&#xA;&#x9;result_62 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_62 = iterator();&#xA;&#x9;java.lang.Boolean eval_319 = false;&#xA;&#x9;while( !eval_319 ) {&#xA;&#x9;eval_319 = kermeta.standard.helper.BooleanWrapper.or(it_62.isOff(), result_62.isNotEqual(null));&#xA;&#x9;if ( eval_319 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_62 = it_62.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_320 = false;&#xA;&#x9;eval_320 = G e = elem;&#xA;&#xA;&#x9;e.equals(element);&#xA;&#xA;&#xA;&#x9;if( eval_320 ) {&#xA;&#xA;&#x9;result_62 = elem_62;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;elem = result_62;&#xA;//Ending of the Inlining of the function type: detect&#xA;this.detect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7580691]);&#xA;&#xA;&#x9;java.lang.Boolean eval_321 = false;&#xA;&#x9;eval_321 = elem.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_321 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeFromOid">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the element identified by the provided Oid from the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_63 = null;&#xA;&#xA;&#x9;G elem_63 = null;&#xA;&#xA;&#x9;result_63 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_63 = iterator();&#xA;&#x9;java.lang.Boolean eval_322 = false;&#xA;&#x9;while( !eval_322 ) {&#xA;&#x9;eval_322 = kermeta.standard.helper.BooleanWrapper.or(it_63.isOff(), result_63.isNotEqual(null));&#xA;&#x9;if ( eval_322 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_63 = it_63.next();&#xA;&#xA;&#x9;java.lang.Boolean eval_323 = false;&#xA;&#x9;eval_323 = G e = elem;&#xA;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(e.oid(), elementOid);&#xA;&#xA;&#xA;&#x9;if( eval_323 ) {&#xA;&#xA;&#x9;result_63 = elem_63;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;elem = result_63;&#xA;//Ending of the Inlining of the function type: detect&#xA;this.detect(//TODO LambdaExpression[kermeta::language::behavior::LambdaExpression:7580745]);&#xA;&#xA;&#x9;java.lang.Boolean eval_324 = false;&#xA;&#x9;eval_324 = elem.isNotEqual(null);&#xA;&#xA;&#x9;if( eval_324 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="elementOid" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xD;&#xA;&#x9; * Returns a new Set containing elements of the Bag without duplicates&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = (kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Set&lt;G>&quot;);&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Set">
            <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Collection">
          <eTypeArguments eTypeParameter="#/3/standard/Bag/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedCollection" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An OrderedCollection is the root abstract class for all ordered Collections.&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the element at rank index from the OrderedCollection&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_325 = false;&#xA;&#x9;eval_325 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(size(), 1)));&#xA;&#xA;&#x9;if( eval_325 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds element in the OrderedCollection at rank index&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_326 = false;&#xA;&#x9;eval_326 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, size()));&#xA;&#xA;&#x9;if( eval_326 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="last">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the last element in the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_327 = false;&#xA;&#x9;eval_327 = kermeta.standard.helper.IntegerWrapper.equals(size(), 0);&#xA;&#xA;&#x9;if( eval_327 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.EmptyCollection&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = elementAt(kermeta.standard.helper.IntegerWrapper.minus(size(), 1));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean eval_328 = false;&#xA;&#x9;eval_328 = kermeta.standard.helper.BooleanWrapper.not(element.isVoid());&#xA;&#xA;&#x9;if( eval_328 ) {&#xA;&#xA;&#x9;java.lang.Boolean eval_329 = false;&#xA;&#x9;eval_329 = kermeta.standard.OrderedCollection&lt;G>.isInstance(element);&#xA;&#xA;&#x9;if( eval_329 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean eval_330 = false;&#xA;&#x9;eval_330 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( eval_330 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = this.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;null&#xA;&#x9;java.lang.Boolean eval_331 = false;&#xA;&#x9;while( !eval_331 ) {&#xA;&#x9;eval_331 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( eval_331 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean eval_332 = false;&#xA;&#x9;eval_332 = kermeta.standard.helper.BooleanWrapper.not(selfIterator.next().equals(collectionIterator.next()));&#xA;&#xA;&#x9;if( eval_332 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="indexOf" eType="#/3/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the index of the first instance of element in the OrderedCollection&#xD;&#xA;&#x9; * or -1 if the element is not contained by the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_333 = false;&#xA;&#x9;eval_333 = kermeta.standard.helper.IntegerWrapper.equals(size(), 0);&#xA;&#xA;&#x9;if( eval_333 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.EmptyCollection&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;java.lang.Boolean found = false;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_334 = false;&#xA;&#x9;while( !eval_334 ) {&#xA;&#x9;eval_334 = kermeta.standard.helper.BooleanWrapper.or(found, it.isOff());&#xA;&#x9;if ( eval_334 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean eval_335 = false;&#xA;&#x9;eval_335 = element.equals(it.next());&#xA;&#xA;&#x9;if( eval_335 ) {&#xA;&#xA;&#x9;found = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;java.lang.Boolean eval_336 = false;&#xA;&#x9;eval_336 = found;&#xA;&#xA;&#x9;if( eval_336 ) {&#xA;&#xA;&#x9;result = i;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="elementAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the element at rank index in the OrderedCollection&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_337 = false;&#xA;&#x9;eval_337 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(size(), 1)));&#xA;&#xA;&#x9;if( eval_337 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.elementAt(this, index);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="first">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the first element in the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_338 = false;&#xA;&#x9;eval_338 = kermeta.standard.helper.IntegerWrapper.equals(size(), 0);&#xA;&#xA;&#x9;if( eval_338 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.EmptyCollection&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = elementAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedCollection/G"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Collection">
          <eTypeArguments eTypeParameter="#/3/standard/OrderedCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedSet">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An OrderedSet is a Set that contained ordered distinct elements&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=true isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted in head&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides OrderedCollection&lt;G>.addAt(Integer, G)&#xD;&#xA;&#x9; * Adds element in the OrderedSet at rank index if the ordered set does&#xD;&#xA;&#x9; * not already contain the element, does nothing otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean eval_339 = false;&#xA;&#x9;eval_339 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( eval_339 ) {&#xA;&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted at rank index&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, subject);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
          <eParameters name="subject">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * See OrderedCollection&lt;G>.equals(Object) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = //IP content of the current CallSuperOperation&#xA;super&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted in tail&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns element at rank index in the sequence&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedSet&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_340 = false;&#xA;&#x9;eval_340 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( eval_340 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean eval_341 = false;&#xA;&#x9;while( !eval_341 ) {&#xA;&#x9;eval_341 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( eval_341 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="add" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * See Set&lt;G>.add(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//IP content of the current CallSuperOperation&#xA;super&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="subSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet composed of elements of current ordered&#xD;&#xA;&#x9; * set from rank min to rank max (order is respected)&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xD;&#xA;&#x9; * the size of the ordered set or min is larger than max&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.OrderedSet&lt;G>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_342 = false;&#xA;&#x9;eval_342 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( eval_342 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_343 = false;&#xA;&#x9;while( !eval_343 ) {&#xA;&#x9;eval_343 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( eval_343 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_344 = false;&#xA;&#x9;while( !eval_344 ) {&#xA;&#x9;eval_344 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( eval_344 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/3/standard/JavaInteger"/>
          <eParameters name="max" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Set">
          <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/3/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/3/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Sequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A Sequence is an OrderedCollection of elements allowing duplicates&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="subSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence composed of elements of current sequence&#xD;&#xA;&#x9; * from rank min to rank max (order is respected)&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xD;&#xA;&#x9; * the size of the sequence or min is larger than max&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;java.lang.Boolean eval_345 = false;&#xA;&#x9;eval_345 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( eval_345 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_346 = false;&#xA;&#x9;while( !eval_346 ) {&#xA;&#x9;eval_346 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( eval_346 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean eval_347 = false;&#xA;&#x9;while( !eval_347 ) {&#xA;&#x9;eval_347 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( eval_347 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/3/standard/JavaInteger"/>
          <eParameters name="max" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted in head&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted at rank index&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides OrderedCollection&lt;G>.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Sequence&#x9;&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = //IP content of the current CallSuperOperation&#xA;super&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/3/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted in tail&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.standard.Sequence&lt;G>&quot;);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/3/standard/Sequence">
            <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns element at rank index in the sequence&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the Sequence&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_348 = false;&#xA;&#x9;eval_348 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( eval_348 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean eval_349 = false;&#xA;&#x9;while( !eval_349 ) {&#xA;&#x9;eval_349 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( eval_349 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IndexOutOfBound&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Sequence/G"/>
          <eParameters name="index" eType="#/3/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/3/standard/Bag">
          <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/3/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/3/standard/Sequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Iterator" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Iterator to be used with Collection&#xD;&#xA; * See also Collection&lt;G>.getIterator()&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=javaIterator javaClass=java.util.Iterator"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=kermetaCollection classDefinitionQN=kermeta::standard::Collection"/>
        </eAnnotations>
        <eTypeParameters name="G">
          <eBounds eClassifier="#/3/language/structure/Object"/>
        </eTypeParameters>
        <eOperations name="hasNext" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the iterator has a next element&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.hasNext(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="next">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the next element of the iterator&#xD;&#xA;&#x9; * Raises IteratorIsOff exception in case the iterator is on the last element &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean eval_350 = false;&#xA;&#x9;eval_350 = kermeta.standard.helper.BooleanWrapper.not(hasNext());&#xA;&#xA;&#x9;if( eval_350 ) {&#xA;&#xA;&#x9;&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( (kermeta.exceptions.IteratorIsOff) org.kermeta.compil.runtime.helper.language.ClassUtil._new(&quot;kermeta.exceptions.IteratorIsOff&quot;) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.next(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/3/standard/Iterator/G"/>
        </eOperations>
        <eOperations name="isOff" eType="#/3/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the iterator is on the last element&#xD;&#xA;&#x9; * i.e. returns not self.hasNext()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(hasNext());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="javaIterator">
          <eGenericType eClassifier="#/3/standard/KermetaProperty_Iterator_javaIterator">
            <eTypeArguments eTypeParameter="#/3/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="kermetaCollection">
          <eGenericType eClassifier="#/3/standard/Collection">
            <eTypeArguments eTypeParameter="#/3/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Collection_values"
          instanceClassName="java.util.ArrayList">
        <eTypeParameters name="G"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Iterator_javaIterator"
          instanceClassName="java.util.Iterator">
        <eTypeParameters name="G"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="exceptions" nsURI="http://www.kermeta.org/kermeta/exceptions/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/exceptions"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains the definition of a Kermeta exception and a few basic exceptions.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/exceptions_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Exception" eSuperTypes="#/3/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Generic exceptions&#xD;&#xA; * The main class from which all the exception inherit&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The message attached to the exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedException" eType="#/3/exceptions/Exception"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Any nested exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stackTrace" eType="#/3/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * The stack trace as a String&#xD;&#xA;     * Filled by the interpreted when the exception is raised&#xD;&#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RuntimeError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Exception for interpreter exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/3/language/behavior/Expression"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The code that raised the exception */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CallOnVoidTarget" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when a feature is called on void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeCastError" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Occurs when a cast (Object::asType operation) fails&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotImplementedException" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Use this exception when you want to forbid the access to an unimplemented operation &#xD;&#xA; * and invite to implement it&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UpperBoundReachedError" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xD;&#xA; * Use this exception when user tries to add an element to a property which type is collection&#xD;&#xA; * which has an upper bound != -1 ( ie *)&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractClassInstantiationError"
          eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Creation on an abstract class. Usually this is detected by the type-checker. The only&#xD;&#xA; * case where this happens is when instantiating a type variable, whose bound type turns&#xD;&#xA; * out to be abstract.&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IncompatibleTypeError" eSuperTypes="#/3/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Raised by the Object::set operation if the type of the &#xD;&#xA; * Object to set has an incompatible type.&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DivisionByZero" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** well-known attempt to divide with a zero valued divider */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OverflowError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the figure oversteps the capacity of the numeric variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="VoidOperandError" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** one of the required operands is void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringIndexOutOfBound" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the data overstep the size of the string variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringFormatException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IndexOutOfBound" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access out of bounds elements */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EmptyCollection" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access element on an empty collection */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IteratorIsOff" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Occurs when calling next() operation while iterator is already&#xD;&#xA; * positioned on the last element of a collection&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IOException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** an interaction with the underlying system failed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileNotFoundException" eSuperTypes="#/3/exceptions/IOException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the file has not be found on the underlying system */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPre" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the pre-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPost" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the post-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedInv" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** some fixes declared in the invariant condition ave been changed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceLoadException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource loading fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceSaveException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceCreateException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to crate a Resource already existing in the Repository */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceUnconformityException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when user tries to add an object that is not conform to the metamodel */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpressionException" eSuperTypes="#/3/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KRuntimeError" instanceClassName="org.kermeta.compil.runtime.helper.error.KRuntimeError"
          serializable="false"/>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="ecore" nsURI="http://www.eclipse.org/emf/2002/Ecore/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.eclipse.org/emf/2002/Ecore"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="EAttribute" eSuperTypes="#/4/EStructuralFeature">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAttributeType" lowerBound="1"
          eType="#/4/EDataType" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="iD" eType="#/4/EBoolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBoolean" instanceClassName="boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EAnnotation" eSuperTypes="#/4/EModelElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="references" upperBound="-1"
          eType="#/4/EObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="details" upperBound="-1"
          eType="#/4/EStringToStringMapEntry" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="source" eType="#/4/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
          eType="#/4/EObject" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eModelElement" eType="#/4/EModelElement"
          transient="true" eOpposite="#/4/EModelElement/eAnnotations">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EString" instanceClassName="java.lang.String">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EClass" abstract="true" eSuperTypes="#/4/EClassifier">
      <eOperations name="getFeatureID" eType="#/4/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/4/EStructuralFeature"/>
      </eOperations>
      <eOperations name="getEStructuralFeature" eType="#/4/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="featureName" eType="#/4/EString"/>
      </eOperations>
      <eOperations name="isSuperTypeOf" eType="#/4/EBoolean">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="someClass" eType="#/4/EClass"/>
      </eOperations>
      <eOperations name="getFeatureCount" eType="#/4/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="op_getEStructuralFeature" eType="#/4/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="featureID" eType="#/4/EInt"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eStructuralFeatures"
          upperBound="-1" eType="#/4/EStructuralFeature" containment="true" eOpposite="#/4/EStructuralFeature/eContainingClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_abstract" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOperations" upperBound="-1"
          eType="#/4/EOperation" containment="true" eOpposite="#/4/EOperation/eContainingClass"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllAttributes" upperBound="-1"
          eType="#/4/EAttribute" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eReferences" upperBound="-1"
          eType="#/4/EReference" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_interface" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSuperTypes" upperBound="-1"
          eType="#/4/EClass"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllReferences" upperBound="-1"
          eType="#/4/EReference" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllContainments" upperBound="-1"
          eType="#/4/EReference" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericSuperTypes" upperBound="-1"
          eType="#/4/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllGenericSuperTypes"
          upperBound="-1" eType="#/4/EGenericType" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAttributes" upperBound="-1"
          eType="#/4/EAttribute" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eIDAttribute" eType="#/4/EAttribute"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllOperations" upperBound="-1"
          eType="#/4/EOperation" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllStructuralFeatures"
          upperBound="-1" eType="#/4/EStructuralFeature" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllSuperTypes" upperBound="-1"
          eType="#/4/EClass" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EClassifier" abstract="true" eSuperTypes="#/4/ENamedElement">
      <eOperations name="isInstance" eType="#/4/EBoolean">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="object" eType="#/4/EJavaObject"/>
      </eOperations>
      <eOperations name="getClassifierID" eType="#/4/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceClassName" eType="#/4/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" eType="#/4/EPackage"
          transient="true" eOpposite="#/4/EPackage/eClassifiers">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceClass" transient="true"
          derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
        <eGenericType eClassifier="#/4/EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="#/4/EJavaObject"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameters" upperBound="-1"
          eType="#/4/ETypeParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceTypeName" eType="#/4/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EJavaClass" instanceClassName="java.lang.Class">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Class"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="T"/>
      </eAnnotations>
      <eTypeParameters name="T"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EJavaObject" instanceClassName="java.lang.Object">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EDataType" eSuperTypes="#/4/EClassifier">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="serializable" eType="#/4/EBoolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EEnum" abstract="true" eSuperTypes="#/4/EDataType">
      <eOperations name="op_getEEnumLiteral" eType="#/4/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="name" eType="#/4/EString"/>
      </eOperations>
      <eOperations name="getEEnumLiteral" eType="#/4/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="value" eType="#/4/EInt"/>
      </eOperations>
      <eOperations name="getEEnumLiteralByLiteral" eType="#/4/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="literal" eType="#/4/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eLiterals" upperBound="-1"
          eType="#/4/EEnumLiteral" containment="true" eOpposite="#/4/EEnumLiteral/eEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EEnumLiteral" eSuperTypes="#/4/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eEnum" eType="#/4/EEnum"
          transient="true" eOpposite="#/4/EEnum/eLiterals">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/4/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instance" eType="#/4/EEnumerator"
          transient="true">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="literal" eType="#/4/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EInt" instanceClassName="int">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="int"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EEnumerator" instanceClassName="org.eclipse.emf.common.util.Enumerator"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.Enumerator"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EFactory" abstract="true" eSuperTypes="#/4/EModelElement">
      <eOperations name="createFromString" eType="#/4/EJavaObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="eDataType" eType="#/4/EDataType"/>
        <eParameters name="literalValue" eType="#/4/EString"/>
      </eOperations>
      <eOperations name="convertToString" eType="#/4/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="eDataType" eType="#/4/EDataType"/>
        <eParameters name="instanceValue" eType="#/4/EJavaObject"/>
      </eOperations>
      <eOperations name="create" eType="#/4/EObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="eClass" eType="#/4/EClass"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" lowerBound="1"
          eType="#/4/EPackage" transient="true" eOpposite="#/4/EPackage/eFactoryInstance">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EModelElement" abstract="true" eSuperTypes="#/4/EObject">
      <eOperations name="getEAnnotation" eType="#/4/EAnnotation">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="source" eType="#/4/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAnnotations" upperBound="-1"
          eType="#/4/EAnnotation" containment="true" eOpposite="#/4/EAnnotation/eModelElement"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ENamedElement" abstract="true" eSuperTypes="#/4/EModelElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/4/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EObject" abstract="true" eSuperTypes="#/3/language/structure/Object">
      <eOperations name="eUnset">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/4/EStructuralFeature"/>
      </eOperations>
      <eOperations name="eGet" eType="#/4/EJavaObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/4/EStructuralFeature"/>
        <eParameters name="resolve" eType="#/4/EBoolean"/>
      </eOperations>
      <eOperations name="eSet">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/4/EStructuralFeature"/>
        <eParameters name="newValue" eType="#/4/EJavaObject"/>
      </eOperations>
      <eOperations name="eContainer" eType="#/4/EObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eCrossReferences">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eGenericType eClassifier="#/4/EEList">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="eResource" eType="#/4/EResource">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eContainingFeature" eType="#/4/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eContainmentFeature" eType="#/4/EReference">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eContents">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eGenericType eClassifier="#/4/EEList">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="eIsProxy" eType="#/4/EBoolean">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eClass" eType="#/4/EClass">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eAllContents">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eGenericType eClassifier="#/4/ETreeIterator">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="op_eGet" eType="#/4/EJavaObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/4/EStructuralFeature"/>
      </eOperations>
      <eOperations name="eIsSet" eType="#/4/EBoolean">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/4/EStructuralFeature"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EOperation" eSuperTypes="#/4/ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eContainingClass" eType="#/4/EClass"
          transient="true" eOpposite="#/4/EClass/eOperations">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericExceptions" upperBound="-1"
          eType="#/4/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eParameters" upperBound="-1"
          eType="#/4/EParameter" containment="true" eOpposite="#/4/EParameter/eOperation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameters" upperBound="-1"
          eType="#/4/ETypeParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eExceptions" upperBound="-1"
          eType="#/4/EClassifier"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EPackage" abstract="true" eSuperTypes="#/4/ENamedElement">
      <eOperations name="getEClassifier" eType="#/4/EClassifier">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eParameters name="name" eType="#/4/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nsURI" eType="#/4/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSubpackages" upperBound="-1"
          eType="#/4/EPackage" containment="true" eOpposite="#/4/EPackage/eSuperPackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSuperPackage" eType="#/4/EPackage"
          transient="true" eOpposite="#/4/EPackage/eSubpackages">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nsPrefix" eType="#/4/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifiers" upperBound="-1"
          eType="#/4/EClassifier" containment="true" eOpposite="#/4/EClassifier/ePackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eFactoryInstance" lowerBound="1"
          eType="#/4/EFactory" transient="true" eOpposite="#/4/EFactory/ePackage">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EParameter" eSuperTypes="#/4/ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOperation" eType="#/4/EOperation"
          transient="true" eOpposite="#/4/EOperation/eParameters">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EReference" eSuperTypes="#/4/EStructuralFeature">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eReferenceType" lowerBound="1"
          eType="#/4/EClass" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOpposite" eType="#/4/EReference"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="resolveProxies" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="container" eType="#/4/EBoolean"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eKeys" upperBound="-1"
          eType="#/4/EAttribute"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="containment" eType="#/4/EBoolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EStructuralFeature" abstract="true"
        eSuperTypes="#/4/ETypedElement">
      <eOperations name="getFeatureID" eType="#/4/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getContainerClass">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eGenericType eClassifier="#/4/EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_volatile" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValueLiteral"
          eType="#/4/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eContainingClass" eType="#/4/EClass"
          transient="true" eOpposite="#/4/EClass/eStructuralFeatures">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_transient" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unsettable" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="derived" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="#/4/EJavaObject"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="changeable" eType="#/4/EBoolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ETypedElement" abstract="true" eSuperTypes="#/4/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="many" eType="#/4/EBoolean"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBound" eType="#/4/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unique" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eType" eType="#/4/EClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ordered" eType="#/4/EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="required" eType="#/4/EBoolean"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBound" eType="#/4/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericType" eType="#/4/EGenericType"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EStringToStringMapEntry" eSuperTypes="#/3/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/4/EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="#/4/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EGenericType" eSuperTypes="#/4/EObject">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eUpperBound" eType="#/4/EGenericType"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeArguments" upperBound="-1"
          eType="#/4/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifier" eType="#/4/EClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eRawType" lowerBound="1"
          eType="#/4/EClassifier" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameter" eType="#/4/ETypeParameter"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eLowerBound" eType="#/4/EGenericType"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ETypeParameter" eSuperTypes="#/4/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eBounds" upperBound="-1"
          eType="#/4/EGenericType" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBigDecimal" instanceClassName="java.math.BigDecimal">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.math.BigDecimal"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBigInteger" instanceClassName="java.math.BigInteger">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.math.BigInteger"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBooleanObject" instanceClassName="java.lang.Boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByte" instanceClassName="byte">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="byte"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByteArray" instanceClassName="byte[]">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="byte[]"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByteObject" instanceClassName="java.lang.Byte">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Byte"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EChar" instanceClassName="char">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="char"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ECharacterObject" instanceClassName="java.lang.Character">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Character"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDate" instanceClassName="java.util.Date">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.util.Date"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDiagnosticChain" instanceClassName="org.eclipse.emf.common.util.DiagnosticChain"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.DiagnosticChain"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDouble" instanceClassName="double">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="double"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDoubleObject" instanceClassName="java.lang.Double">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Double"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EEList" instanceClassName="org.eclipse.emf.common.util.EList"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.EList"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="E"/>
      </eAnnotations>
      <eTypeParameters name="E"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFeatureMap" instanceClassName="org.eclipse.emf.ecore.util.FeatureMap"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.util.FeatureMap"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFeatureMapEntry" instanceClassName="org.eclipse.emf.ecore.util.FeatureMap$Entry"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::ecore::EFeatureMapEntry"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.util.FeatureMap$Entry"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFloat" instanceClassName="float">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="float"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFloatObject" instanceClassName="java.lang.Float">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Float"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EIntegerObject" instanceClassName="java.lang.Integer">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ELong" instanceClassName="long">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="long"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ELongObject" instanceClassName="java.lang.Long">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Long"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EMap" instanceClassName="java.util.Map"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.util.Map"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="K , V"/>
      </eAnnotations>
      <eTypeParameters name="K"/>
      <eTypeParameters name="V"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EResource" instanceClassName="org.eclipse.emf.ecore.resource.Resource"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.resource.Resource"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EResourceSet" instanceClassName="org.eclipse.emf.ecore.resource.ResourceSet"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.resource.ResourceSet"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EShort" instanceClassName="short">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="short"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EShortObject" instanceClassName="java.lang.Short">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Short"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ETreeIterator" instanceClassName="org.eclipse.emf.common.util.TreeIterator"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.TreeIterator"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="E"/>
      </eAnnotations>
      <eTypeParameters name="E"/>
    </eClassifiers>
  </ecore:EPackage>
</xmi:XMI>
