<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModelingUnit">
    <details key="require" value=""/>
    <details key="using" value="km2ecore::helper::java|kermeta::language::structure|kermeta::language|km2ecore|kermeta::standard|ecore|traceability|km2ecore::helper::ecore|kermeta::language::behavior|kermeta::utils|km2ecore::helper::kermeta|km2ecore::helper|simk|km2ecore::common::exception|kermeta::exceptions|km2ecore::helper::simk|km2ecore::common|kermeta::persistence|kermeta::compiler|kermeta|kermeta::kunit|kermeta::interpreter|kermeta::io|kermeta::ecore|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="km2ecore" nsURI="http://www.kermeta.org/km2ecore/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/km2ecore"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="SourceTracer" eSuperTypes="#/2/language/structure/Object">
      <eOperations name="addSourceInformation" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;traceability.TraceModel model = context.getTraceModel();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1 = false;&#xA;&#x9;idIfCond_1 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(model));&#xA;&#xA;&#x9;if( idIfCond_1 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.Reference> it_ft1 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.Reference>convertAsSet(model.getReferences()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_2 = false;&#xA;&#x9;while( !idLoopCond_2 ) {&#xA;&#x9;idLoopCond_2 = it_ft1.isOff();&#xA;&#x9;if ( idLoopCond_2 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;traceability.Reference r_lbdExp1 = it_ft1.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_3 = false;&#xA;&#x9;idIfCond_3 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(r_lbdExp1, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.ModelReference&quot;));&#xA;&#xA;&#x9;if( idIfCond_3 ) {&#xA;&#xA;&#x9;traceability.ModelReference mr = ((traceability.ModelReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(r_lbdExp1, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.ModelReference&quot;)));&#xA;&#xA;&#x9;traceability.TextReference tr = ((traceability.TraceabilityHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(traceability.TraceabilityPackage.eINSTANCE.getTraceabilityHelper())).getFirstTextReference(mr);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_4 = false;&#xA;&#x9;idIfCond_4 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tr));&#xA;&#xA;&#x9;if( idIfCond_4 ) {&#xA;&#xA;&#x9;mr.getRefObject().setFileName(tr.getFileURI());&#xA;&#xA;&#x9;mr.getRefObject().setFile(((traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(traceability.TraceabilityPackage.eINSTANCE.getFile())).getFileEMF_renameAs(model, tr.getFileURI()));&#xA;&#xA;&#x9;mr.getRefObject().setLineNumber(tr.getLineBeginAt());&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;"/>
        </eAnnotations>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="KM2EcoreContext" eSuperTypes="#/2/language/structure/Object">
      <eOperations name="getLoopConditionId" eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the identifier&#xD;&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;idLoopCond_&quot;, this.getCondStack().peek());&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="pushKRErrorStack">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setInc_kRErrorStack(kermeta.standard.helper.IntegerWrapper.plus(this.getInc_kRErrorStack(), 1));&#xA;&#xA;&#x9;this.getKRErrorStack().push(kermeta.standard.helper.IntegerWrapper.toString(this.getInc_kRErrorStack()));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="save">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setSimkOutput(kermeta.standard.helper.StringWrapper.replaceExtension(this.getKmInput(), &quot;simk&quot;));&#xA;&#xA;&#x9;kermeta.persistence.Resource simkResource = this.getOutputRepository().createResource(this.getSimkOutput(), &quot;http://www.kermeta.org/simk&quot;);&#xA;&#xA;&#x9;simkResource.add(this.getSimkModel());&#xA;&#xA;&#x9;simkResource.save();&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getIfConditionId" eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the identifier&#xD;&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;idIfCond_&quot;, this.getCondStack().peek());&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="printLbdExpSuffix" eType="#/2/standard/JavaString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_5 = false;&#xA;&#x9;idIfCond_5 = kermeta.standard.helper.BooleanWrapper.and(this.getFtSuffixActivation(), kermeta.standard.helper.IntegerWrapper.isGreater(this.getFtSuffix().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_5 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_lbdExp&quot;, this.getFtSuffix().peek());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getResultLastStatementType" eType="#/2/standard/JavaString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_6 = false;&#xA;&#x9;idIfCond_6 = kermeta.standard.helper.IntegerWrapper.isGreater(this.getResultLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_6 ) {&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> str_set = kermeta.standard.helper.StringWrapper.split(this.getResultLastStatementStack().peek(), this.getTYPE_SEPARATOR());&#xA;&#xA;&#x9;result = str_set.last();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initializeConstants">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA;&#x9; * Initialize the constants&#xD;&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setJAVA_CLASS_EXCEPTION_SWITCHER(&quot;org.kermeta.compil.runtime.helper.error.KRuntimeError&quot;);&#xA;&#xA;&#x9;this.setVARIABLE_EXCEPTION_SWITCHER(&quot;ex_switcher&quot;);&#xA;&#xA;&#x9;this.setCOLLECTION_UTIL_CLASS(&quot;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil&quot;);&#xA;&#xA;&#x9;this.setOBJECT_UTIL_CLASS(&quot;org.kermeta.compil.runtime.helper.language.ObjectUtil&quot;);&#xA;&#xA;&#x9;this.setJAVA_CLASS_EXECUTION_CONTEXT(&quot;org.kermeta.compil.runtime.ExecutionContext&quot;);&#xA;&#xA;&#x9;this.setJAVA_INSTANCE_EXECUTION_CONTEXT(kermeta.standard.helper.StringWrapper.plus(this.getJAVA_CLASS_EXECUTION_CONTEXT(), &quot;.getInstance()&quot;));&#xA;&#xA;&#x9;this.setNOT_EVALUATED_MESSAGE(&quot;//FIXME This statement cannot be evaluated without an assignment: &quot;);&#xA;&#xA;&#x9;this.setSELF_EXPRESSION_TO_REPLACE(&quot;SELF_EXPRESSION_TO_REPLACE_STR&quot;);&#xA;&#xA;&#x9;this.setRETURN_EXPRESSION_TO_REPLACE(&quot;RETURN_EXPRESSION_TO_REPLACE_STR&quot;);&#xA;&#xA;&#x9;this.setRETURN_EXPRESSION_TO_REPLACE_SPECIAL(&quot;RETURN_EXPRESSION_TO_REPLACE_SPECIAL_STR&quot;);&#xA;&#xA;&#x9;this.setSEPARATOR_STATEMENT_FT(&quot;SEPARATOR_STATEMENT_FT_STR&quot;);&#xA;&#xA;&#x9;this.setPREVIOUS_STATEMENT_FT(&quot;PREVIOUS_STATEMENT_FT_STR&quot;);&#xA;&#xA;&#x9;this.setTYPE_SEPARATOR(&quot;TYPE_SEPARATOR&quot;);&#xA;&#xA;&#x9;this.setFUNCTION_TYPE_COMPILATION_TASK(&quot;FunctionType_Compilation&quot;);&#xA;&#xA;&#x9;this.setKERMETA_SEPARATOR(&quot;::&quot;);&#xA;&#xA;&#x9;this.setJAVA_SEPARATOR(&quot;.&quot;);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="pushFtSuffix">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setInc_ftSuffix(kermeta.standard.helper.IntegerWrapper.plus(this.getInc_ftSuffix(), 1));&#xA;&#xA;&#x9;this.getFtSuffix().push(kermeta.standard.helper.IntegerWrapper.toString(this.getInc_ftSuffix()));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="popResultLastStatementStack">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_7 = false;&#xA;&#x9;idIfCond_7 = kermeta.standard.helper.IntegerWrapper.isGreater(this.getResultLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_7 ) {&#xA;&#xA;&#x9;this.setInc_resultLastStatementStack(this.getInc_resultLastStatementStack());&#xA;&#xA;&#x9;this.getResultLastStatementStack().pop();&#xA;}&#xA;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initializeFrameworkOperations">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;getMetaClass&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;container&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;checkInvariants&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;checkAllInvariants&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;equals&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isNotEqual&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isKindOf&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;get&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;set&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isSet&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;unset&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;oid&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;toString&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isFrozen&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isVoid&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;hashcode&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;freeze&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;asType&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isInstanceOf&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;containingResource&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;clone&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;deepClone&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isInstance&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isSuperTypeOf&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isSubTypeOf&quot;);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="printFtSuffix" eType="#/2/standard/JavaString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_8 = false;&#xA;&#x9;idIfCond_8 = kermeta.standard.helper.BooleanWrapper.and(this.getFtSuffixActivation(), kermeta.standard.helper.IntegerWrapper.isGreater(this.getFtSuffix().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_8 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_ft&quot;, this.getFtSuffix().peek());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="pushCondStack">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setInc_condStack(kermeta.standard.helper.IntegerWrapper.plus(this.getInc_condStack(), 1));&#xA;&#xA;&#x9;this.getCondStack().push(kermeta.standard.helper.IntegerWrapper.toString(this.getInc_condStack()));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initialize">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setKmInput(modelInput);&#xA;&#xA;&#x9;this.setTraceabilityInput(traceInput);&#xA;&#xA;&#x9;this.setTasks_stack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.getTasks_stack().push(&quot;Start&quot;);&#xA;&#xA;&#x9;this.setCondStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setInc_condStack(0);&#xA;&#xA;&#x9;this.setKRErrorStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setInc_kRErrorStack(0);&#xA;&#xA;&#x9;this.initializeConstants();&#xA;&#xA;&#x9;this.setCompiledJavaExtern(&quot;&quot;);&#xA;&#xA;&#x9;this.setCurrent_valueType(null);&#xA;&#xA;&#x9;this.setFtStack(((kermeta.utils.Stack&lt;kermeta.language.behavior.LambdaExpression>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setCurrent_param_ft(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.getCurrent_param_ft().push(&quot;&quot;);&#xA;&#xA;&#x9;this.setFtSuffix(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setInc_ftSuffix(0);&#xA;&#xA;&#x9;this.setFtSuffixActivation(false);&#xA;&#xA;&#x9;this.setAfterLbdExpActivation(false);&#xA;&#xA;&#x9;this.setFtContextualSelf(&quot;&quot;);&#xA;&#xA;&#x9;this.setFtReturnType(&quot;&quot;);&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;this.setFtProductTypeStack(((kermeta.utils.Stack&lt;kermeta.language.structure.ProductType>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setFtMapTypeStack(((kermeta.utils.Stack&lt;kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type>>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setResultLastStatementStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStack())));&#xA;&#xA;&#x9;this.setInc_resultLastStatementStack(0);&#xA;&#xA;&#x9;this.setJavaKeyWordList(((km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.common.CommonPackage.eINSTANCE.getJavaKeyWordList())));&#xA;&#xA;&#x9;this.getJavaKeyWordList().initialize();&#xA;&#xA;&#x9;this.initializeFrameworkOperations();&#xA;&#xA;&#x9;this.setStaticOperationMode(false);&#xA;&#xA;&#x9;this.setInputRepository(((kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFRepository())));&#xA;&#xA;&#x9;kermeta.persistence.Resource modelResource = this.getInputRepository().createResource(modelInput, &quot;http://www.kermeta.org/kermeta/1_2_0//kermeta&quot;);&#xA;&#xA;&#x9;modelResource.load();&#xA;&#xA;&#x9;this.setMu(((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(modelResource.instances().one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_9 = false;&#xA;&#x9;idIfCond_9 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(traceInput)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(traceInput, &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_9 ) {&#xA;&#xA;&#x9;kermeta.persistence.Resource traceResource = this.getInputRepository().createResource(traceInput, &quot;http://www.kermeta.org/Traceability&quot;);&#xA;&#xA;&#x9;traceResource.load();&#xA;&#xA;&#x9;this.setTraceModel(((traceability.TraceModel) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(traceResource.instances().one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.TraceModel&quot;))));&#xA;&#xA;&#x9;((km2ecore.SourceTracer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getSourceTracer())).addSourceInformation(this);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setOutputRepository(((kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getEMFRepository())));&#xA;&#xA;&#x9;this.setSimkModel(((simk.SIMKModel) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSIMKModel())));&#xA;"/>
        </eAnnotations>
        <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
        <eParameters name="traceInput" eType="#/2/standard/JavaString"/>
      </eOperations>
      <eOperations name="getResultLastStatementId" eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the identifier&#xD;&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_10 = false;&#xA;&#x9;idIfCond_10 = kermeta.standard.helper.IntegerWrapper.isGreater(this.getResultLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_10 ) {&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> str_set = kermeta.standard.helper.StringWrapper.split(this.getResultLastStatementStack().peek(), this.getTYPE_SEPARATOR());&#xA;&#xA;&#x9;result = str_set.first();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAVA_INSTANCE_EXECUTION_CONTEXT"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="javaKeyWordList" eType="#/1/common/JavaKeyWordList">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/******/"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Unique instance of the JavaKeyWordList */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceModel" lowerBound="1"
          eType="#/4/TraceModel">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#x9;The trace model dedicated to the km model (kmt2km) used for the transformation */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="TYPE_SEPARATOR" lowerBound="1"
          eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="NOT_EVALUATED_MESSAGE"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SEPARATOR_STATEMENT_FT"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="outputRepository" lowerBound="1"
          eType="#/2/persistence/EMFRepository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**  */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="inputRepository" lowerBound="1"
          eType="#/2/persistence/EMFRepository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Unique instance of the JavaTypeMapping */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**  */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resultLastStatementStack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="frameworkOperations"
          upperBound="-1" eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** List of the method from the framework */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="COLLECTION_UTIL_CLASS"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="compiledJavaExtern" lowerBound="1"
          eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/********/"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**  */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="current_valueType" eType="#/2/language/structure/ClassDefinition">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/********/"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftSuffix">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/*** params for FunctionType contextual compiling ***/"/>
        </eAnnotations>
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeFunctionTypeResult"
          eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_condStack" eType="#/2/standard/JavaInteger"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftMapTypeStack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/utils/Hashtable">
            <eTypeArguments eClassifier="#/2/language/structure/Type"/>
            <eTypeArguments eClassifier="#/2/language/structure/Type"/>
          </eTypeArguments>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="simkModel" lowerBound="1"
          eType="#/3/SIMKModel"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAVA_SEPARATOR" lowerBound="1"
          eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftProductTypeStack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/language/structure/ProductType"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="current_param_ft">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ftContextualSelf" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="PREVIOUS_STATEMENT_FT"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAVA_CLASS_EXECUTION_CONTEXT"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeLambdaExpressionResult"
          eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ftReturnType" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="OBJECT_UTIL_CLASS" lowerBound="1"
          eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="VARIABLE_EXCEPTION_SWITCHER"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="kRErrorStack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ftSuffixActivation" lowerBound="1"
          eType="#/2/standard/JavaBoolean" defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="RETURN_EXPRESSION_TO_REPLACE_SPECIAL"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_resultLastStatementStack"
          eType="#/2/standard/JavaInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueTypeMapping" upperBound="-1"
          eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** List of the ValueTypes filled during the pass1 */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="RETURN_EXPRESSION_TO_REPLACE"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mode" lowerBound="1"
          eType="#/1/CompilingMode" transient="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The choosen compiling mode */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="staticOperationMode"
          eType="#/2/standard/JavaBoolean" defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kmInput" lowerBound="1"
          eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The input model (as input of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="condStack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftStack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/language/behavior/LambdaExpression"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="simkOutput" lowerBound="1"
          eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The output Ecore models (as output of the transformation) */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The simk model (as output of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAVA_CLASS_EXCEPTION_SWITCHER"
          lowerBound="1" eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** CONSTANTS */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="afterLbdExpActivation"
          lowerBound="1" eType="#/2/standard/JavaBoolean" defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="FUNCTION_TYPE_COMPILATION_TASK"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_kRErrorStack" eType="#/2/standard/JavaInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="traceabilityInput" lowerBound="1"
          eType="#/2/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The input model (as input of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="tasks_stack">
        <eGenericType eClassifier="#/2/utils/Stack">
          <eTypeArguments eClassifier="#/2/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="mu" lowerBound="1" eType="#/2/language/structure/ModelingUnit">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The modeling units source */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SELF_EXPRESSION_TO_REPLACE"
          lowerBound="1" eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="KERMETA_SEPARATOR" lowerBound="1"
          eType="#/2/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_ftSuffix" eType="#/2/standard/JavaInteger"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="CompilingMode">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Enumeration representing the different compiling modes */"/>
      </eAnnotations>
      <eLiterals name="onlyEcore" literal="onlyEcore"/>
      <eLiterals name="behaviorKmt" value="1" literal="behaviorKmt"/>
      <eLiterals name="behaviorJava" value="2" literal="behaviorJava"/>
    </eClassifiers>
    <eSubpackages name="helper" nsURI="http://www.kermeta.org/km2ecore/helper/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper"/>
      </eAnnotations>
      <eSubpackages name="java" nsURI="http://www.kermeta.org/km2ecore/helper/java/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/java"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="IdentifierHelper" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="getMangledIdentifier" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** An underscore is added if the identifier is used as keyword */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_11 = false;&#xA;&#x9;idIfCond_11 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(id);&#xA;&#xA;&#x9;if( idIfCond_11 ) {&#xA;&#xA;&#x9;result = id;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_12 = false;&#xA;&#x9;idIfCond_12 = context.getJavaKeyWordList().isKeyword(id);&#xA;&#xA;&#x9;if( idIfCond_12 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_&quot;, id);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = id;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="id" eType="#/2/standard/JavaString"/>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="ecore" nsURI="http://www.kermeta.org/km2ecore/helper/ecore/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/ecore"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="ENamedElementHelper" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="asString" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_13 = false;&#xA;&#x9;idIfCond_13 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.ENamedElement&quot;)));&#xA;&#xA;&#x9;if( idIfCond_13 ) {&#xA;&#xA;&#x9;result = ((ecore.ENamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.ENamedElement&quot;))).getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/5/EObject"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EcoreModelElementHelper" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="findEOperationProxy" eType="#/5/EOperation">
            <eAnnotations source="kermeta">
              <details key="deprecated" value="unused"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EOperation result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getClassDefinition()));&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(op));&#xA;&#xA;&#x9;ecore.EOperation eop = null;&#xA;//BIft:detect&#xA;&#xA;ecore.EOperation result_ft2 = null;&#xA;&#xA;&#x9;ecore.EOperation elem_ft2 = null;&#xA;&#xA;&#x9;result_ft2 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EOperation> it_ft2 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(cd.getEcoreModelElement().getEOperations()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_14 = false;&#xA;&#x9;while( !idLoopCond_14 ) {&#xA;&#x9;idLoopCond_14 = kermeta.standard.helper.BooleanWrapper.or(it_ft2.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft2, null));&#xA;&#x9;if ( idLoopCond_14 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft2 = it_ft2.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_15 = false;&#xA;//BIle:detector&#xA;ecore.EOperation c_lbdExp2 = elem_ft2;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_16 = false;&#xA;&#x9;idIfCond_16 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(c_lbdExp2, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EOperation&quot;));&#xA;&#xA;&#x9;if( idIfCond_16 ) {&#xA;&#xA;&#x9;idIfCond_15 = kermeta.standard.helper.StringWrapper.equals(((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(c_lbdExp2, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EOperation&quot;))).getName(), op.getName());&#xA;}&#xA;&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_15 ) {&#xA;&#xA;&#x9;result_ft2 = elem_ft2;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;eop = result_ft2;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;result = ((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(eop, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EOperation&quot;)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="op" eType="#/2/language/structure/Operation"/>
          </eOperations>
          <eOperations name="setEStructuralFeatureProperties">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecoreStructuralFeature.setName(self_.getFinalName(context));&#xA;&#xA;&#x9;ecoreStructuralFeature.setOrdered(self_.getIsOrdered());&#xA;&#xA;&#x9;ecoreStructuralFeature.setUnique(self_.getIsUnique());&#xA;&#xA;&#x9;ecoreStructuralFeature.setLowerBound(self_.getLower());&#xA;&#xA;&#x9;ecoreStructuralFeature.setUpperBound(self_.getUpper());&#xA;&#xA;&#x9;ecoreStructuralFeature.setChangeable(kermeta.standard.helper.BooleanWrapper.not(self_.getIsReadOnly()));&#xA;&#xA;&#x9;ecoreStructuralFeature.setDefaultValueLiteral(self_.get_default());&#xA;&#xA;&#x9;ecoreStructuralFeature.setDerived(self_.getIsDerived());&#xA;"/>
            </eAnnotations>
            <eParameters name="self_" eType="#/2/language/structure/Property"/>
            <eParameters name="ecoreStructuralFeature" eType="#/5/EStructuralFeature"/>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="findEClassProxy" eType="#/5/EClass">
            <eAnnotations source="kermeta">
              <details key="deprecated" value="unused"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getPackage()));&#xA;&#xA;&#x9;pack = (kermeta.language.structure.Package) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Package>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(cd));&#xA;&#xA;&#x9;ecore.EClassifier eclassifier = null;&#xA;//BIft:detect&#xA;&#xA;ecore.EClassifier result_ft3 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft3 = null;&#xA;&#xA;&#x9;result_ft3 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft3 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(pack.getEcoreModelElement().getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_17 = false;&#xA;&#x9;while( !idLoopCond_17 ) {&#xA;&#x9;idLoopCond_17 = kermeta.standard.helper.BooleanWrapper.or(it_ft3.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft3, null));&#xA;&#x9;if ( idLoopCond_17 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft3 = it_ft3.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_18 = false;&#xA;//BIle:detector&#xA;ecore.EClassifier c_lbdExp3 = elem_ft3;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_19 = false;&#xA;&#x9;idIfCond_19 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(c_lbdExp3, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;));&#xA;&#xA;&#x9;if( idIfCond_19 ) {&#xA;&#xA;&#x9;idIfCond_18 = kermeta.standard.helper.StringWrapper.equals(((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(c_lbdExp3, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;))).getName(), cd.getName());&#xA;}&#xA;&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_18 ) {&#xA;&#xA;&#x9;result_ft3 = elem_ft3;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;eclassifier = result_ft3;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;result = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(eclassifier, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cd" eType="#/2/language/structure/ClassDefinition"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelAnalizer" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="isInterfaceBy" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.isExtendedBy(extended_class, super_class));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="extended_class" eType="#/5/EClass"/>
            <eParameters name="super_class" eType="#/5/EClass"/>
          </eOperations>
          <eOperations name="isExtendedBy" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_20 = false;&#xA;&#x9;idIfCond_20 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(super_class, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(extended_class.getEGenericSuperTypes()).first().getEClassifier());&#xA;&#xA;&#x9;if( idIfCond_20 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="extended_class" eType="#/5/EClass"/>
            <eParameters name="super_class" eType="#/5/EClass"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EAnnotationHelper" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="addAnnotationPropGetter">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Not used&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="deprecated" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_21 = false;&#xA;&#x9;idIfCond_21 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(eModelElement));&#xA;&#xA;&#x9;if( idIfCond_21 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).add(this.create(&quot;kompiledderivedProp.getter&quot;, &quot;body&quot;, body));&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="eModelElement" eType="#/5/EModelElement"/>
            <eParameters name="body" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="createEmpty" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation annotation = ((ecore.EAnnotation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEAnnotation()));&#xA;&#xA;&#x9;annotation.setSource(source);&#xA;&#xA;&#x9;result = annotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="source" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="existsAnnotationGenModelImpl" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft4 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft4 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EAnnotation> it_ft4 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_22 = false;&#xA;&#x9;while( !idLoopCond_22 ) {&#xA;&#x9;idLoopCond_22 = kermeta.standard.helper.BooleanWrapper.or(it_ft4.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft4, false));&#xA;&#x9;if ( idLoopCond_22 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft4 = null;&#xA;//BIle:func&#xA;ecore.EAnnotation a_lbdExp4 = it_ft4.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft5 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft5 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EStringToStringMapEntry> it_ft5 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(a_lbdExp4.getDetails()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_23 = false;&#xA;&#x9;while( !idLoopCond_23 ) {&#xA;&#x9;idLoopCond_23 = kermeta.standard.helper.BooleanWrapper.or(it_ft5.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft5, false));&#xA;&#x9;if ( idLoopCond_23 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft5 = null;&#xA;//BIle:func&#xA;ecore.EStringToStringMapEntry d_lbdExp5 = it_ft5.next();&#xA;&#xA;&#x9;result_lambda_ft5 = kermeta.standard.helper.StringWrapper.equals(d_lbdExp5.getKey(), &quot;body&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft5 = kermeta.standard.helper.BooleanWrapper.or(test_ft5, result_lambda_ft5);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft5 = test_ft5;&#xA;//EIft:exists&#xA;result_lambda_ft4 = result = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(a_lbdExp4.getSource(), &quot;http://www.eclipse.org/emf/2002/GenModel&quot;), result_ft5);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft4 = kermeta.standard.helper.BooleanWrapper.or(test_ft4, result_lambda_ft4);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft4 = test_ft4;&#xA;&#xA;//CE&#xA;result = result_ft4;&#xA;//EIft:exists&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="eModelElement" eType="#/5/EModelElement"/>
          </eOperations>
          <eOperations name="addEntry">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EStringToStringMapEntry entry = ((ecore.EStringToStringMapEntry) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEStringToStringMapEntry()));&#xA;&#xA;&#x9;entry.setKey(key);&#xA;&#xA;&#x9;entry.setValue(value);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(annotation.getDetails()).add(entry);&#xA;"/>
            </eAnnotations>
            <eParameters name="annotation" eType="#/5/EAnnotation"/>
            <eParameters name="key" eType="#/2/standard/JavaString"/>
            <eParameters name="value" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="addAnnotationGenModelImpl">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_24 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft6 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_25 = false;&#xA;&#x9;idIfCond_25 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(eModelElement));&#xA;&#xA;&#x9;if( idIfCond_25 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object v_lbdExp6 = null;&#xA;&#xA;&#x9;result_ft6 = kermeta.standard.helper.BooleanWrapper.not(this.existsAnnotationGenModelImpl(eModelElement));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft6 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_24 = result_ft6;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_24 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).add(this.create(&quot;http://www.eclipse.org/emf/2002/GenModel&quot;, &quot;body&quot;, body));&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="eModelElement" eType="#/5/EModelElement"/>
            <eParameters name="body" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="createKermetaEAnnotation" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = this.create(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationSource.getByName(&quot;kermeta&quot;).getName()), key, value);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="key" eType="#/2/standard/JavaString"/>
            <eParameters name="value" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="createAbstract" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = this.createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;isAbstract&quot;).getName()), &quot;true&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getKermetaEAnnotation" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_26 = false;&#xA;&#x9;idIfCond_26 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj)));&#xA;&#xA;&#x9;if( idIfCond_26 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Property ecoreMEProp = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj).getPropertyValue(&quot;ecoreModelElement&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_27 = false;&#xA;&#x9;idIfCond_27 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ecoreMEProp)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj), ecoreMEProp))));&#xA;&#xA;&#x9;if( idIfCond_27 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;ecore.EAnnotation result_ft7 = null;&#xA;&#xA;&#x9;ecore.EAnnotation elem_ft7 = null;&#xA;&#xA;&#x9;result_ft7 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EAnnotation> it_ft7 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(((ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj), ecoreMEProp), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EModelElement&quot;))).getEAnnotations()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_28 = false;&#xA;&#x9;while( !idLoopCond_28 ) {&#xA;&#x9;idLoopCond_28 = kermeta.standard.helper.BooleanWrapper.or(it_ft7.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft7, null));&#xA;&#x9;if ( idLoopCond_28 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft7 = it_ft7.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_29 = false;&#xA;//BIle:detector&#xA;ecore.EAnnotation t_lbdExp7 = elem_ft7;&#xA;&#xA;&#x9;idIfCond_29 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp7.getSource(), kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationSource.getByName(&quot;kermeta&quot;).getName()));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_29 ) {&#xA;&#xA;&#x9;result_ft7 = elem_ft7;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = result_ft7;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_30 = false;&#xA;&#x9;idIfCond_30 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_30 ) {&#xA;&#xA;&#x9;result = this.getEmptyKermetaEAnnotation();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = this.getEmptyKermetaEAnnotation();&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.getEmptyKermetaEAnnotation();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="getEmptyKermetaEAnnotation" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation annotation = ((ecore.EAnnotation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEAnnotation()));&#xA;&#xA;&#x9;annotation.setSource(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationSource.getByName(&quot;kermeta&quot;).getName()));&#xA;&#xA;&#x9;result = annotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="addAnnotationPropSetter">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Not used&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="deprecated" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_31 = false;&#xA;&#x9;idIfCond_31 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(eModelElement));&#xA;&#xA;&#x9;if( idIfCond_31 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).add(this.create(&quot;kompiledderivedProp.setter&quot;, &quot;body&quot;, body));&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="eModelElement" eType="#/5/EModelElement"/>
            <eParameters name="body" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="create" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation annotation = this.createEmpty(source);&#xA;&#xA;&#x9;this.addEntry(annotation, key, value);&#xA;&#xA;&#x9;result = annotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="source" eType="#/2/standard/JavaString"/>
            <eParameters name="key" eType="#/2/standard/JavaString"/>
            <eParameters name="value" eType="#/2/standard/JavaString"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="KermetaEAnnotationSource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Enumeration that lists the different keys among the Kermeta annotation in the Ecore side */"/>
          </eAnnotations>
          <eLiterals name="kermeta" literal="kermeta"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="KermetaEAnnotationKey">
          <eLiterals name="isAbstract" literal="isAbstract"/>
          <eLiterals name="alias" value="1" literal="alias"/>
          <eLiterals name="superOperation" value="2" literal="superOperation"/>
          <eLiterals name="isReadOnly" value="3" literal="isReadOnly"/>
          <eLiterals name="documentation" value="4" literal="documentation"/>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="kermeta" nsURI="http://www.kermeta.org/km2ecore/helper/kermeta/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/kermeta"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinitionHelper" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="getKermetaSpecialType" eType="#/5/EClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * FIXME CF: this method should be deprecated, because the function type are included in the resulted Ecore&#xD;&#xA;&#x9; * or we could create only the signature of the method&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;ecore.EClass specialType = null;&#xA;&#xA;&#x9;java.lang.String name_KermetaSspecialType = &quot;KermetaSpecialTypesAlias&quot;;&#xA;&#xA;&#x9;ecore.EClassifier retrieveSpecialType = null;&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;ecore.EClassifier result_ft8 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft8 = null;&#xA;&#xA;&#x9;result_ft8 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft8 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_32 = false;&#xA;&#x9;while( !idLoopCond_32 ) {&#xA;&#x9;idLoopCond_32 = kermeta.standard.helper.BooleanWrapper.or(it_ft8.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft8, null));&#xA;&#x9;if ( idLoopCond_32 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft8 = it_ft8.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_33 = false;&#xA;//BIle:detector&#xA;ecore.EClassifier c_lbdExp8 = elem_ft8;&#xA;&#xA;&#x9;idIfCond_33 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(c_lbdExp8, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;)), kermeta.standard.helper.StringWrapper.equals(c_lbdExp8.getName(), name_KermetaSspecialType));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_33 ) {&#xA;&#xA;&#x9;result_ft8 = elem_ft8;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;retrieveSpecialType = result_ft8;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_34 = false;&#xA;&#x9;idIfCond_34 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(retrieveSpecialType));&#xA;&#xA;&#x9;if( idIfCond_34 ) {&#xA;&#xA;&#x9;result = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(retrieveSpecialType, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;specialType = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEClass()));&#xA;&#xA;&#x9;specialType.setName(name_KermetaSspecialType);&#xA;&#xA;&#x9;specialType.setInstanceClassName(&quot;org.eclipse.emf.ecore.EObject&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(specialType);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(specialType.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;alias&quot;).getName()), &quot;KermetaSpecialTypesAlias&quot;));&#xA;&#xA;&#x9;result = specialType;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="p" eType="#/2/language/structure/Package"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CompilerHelperJava" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; * Class containing some helpers dedicated to the Kermeta compiler&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="ppComaSeparatedNodes" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * This helper is used for the pretty printing of the parameters in a CallFeature&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft9 = expressions.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_35 = false;&#xA;&#x9;while( !idLoopCond_35 ) {&#xA;&#x9;idLoopCond_35 = it_ft9.isOff();&#xA;&#x9;if ( idLoopCond_35 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Expression e_lbdExp9 = it_ft9.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_36 = false;&#xA;&#x9;idIfCond_36 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);&#xA;&#xA;&#x9;if( idIfCond_36 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String str_param = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_37 = false;&#xA;&#x9;idIfCond_37 = kermeta.standard.helper.BooleanWrapper.not(e_lbdExp9.isFunctionTypeVariable());&#xA;&#xA;&#x9;if( idIfCond_37 ) {&#xA;&#xA;&#x9;str_param = e_lbdExp9.createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_38 = false;&#xA;&#x9;idIfCond_38 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(context.getCurrent_valueType())), context.getStaticOperationMode()), kermeta.standard.helper.StringWrapper.equals(str_param, &quot;this&quot;));&#xA;&#xA;&#x9;if( idIfCond_38 ) {&#xA;&#xA;&#x9;str_param = &quot;self&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_39 = false;&#xA;&#x9;idIfCond_39 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(e_lbdExp9, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(e_lbdExp9, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(e_lbdExp9, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(e_lbdExp9, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;)))), kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(e_lbdExp9.getStaticType().getTypeQName(), &quot;kermeta::language::structure::Class&quot;), kermeta.standard.helper.StringWrapper.equals(e_lbdExp9.getStaticType().getTypeQName(), &quot;kermeta::language::structure::Type&quot;)));&#xA;&#xA;&#x9;if( idIfCond_39 ) {&#xA;&#xA;&#x9;str_param = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getJAVA_INSTANCE_EXECUTION_CONTEXT(), &quot;.getMetaClass(\&quot;&quot;), str_param), &quot;\&quot;)&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.String type_label = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.language.behavior.LambdaExpression theLambdaExp = context.getFtStack().peek();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_40 = false;&#xA;&#x9;idIfCond_40 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(e_lbdExp9), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;if( idIfCond_40 ) {&#xA;&#xA;&#x9;java.lang.String lambdaExp_returnType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_41 = false;&#xA;&#x9;idIfCond_41 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(lambdaExp_returnType));&#xA;&#xA;&#x9;if( idIfCond_41 ) {&#xA;&#xA;&#x9;type_label = lambdaExp_returnType;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_42 = false;&#xA;&#x9;idIfCond_42 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(type_label, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_42 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;result_lambda&quot;, context.printFtSuffix()), &quot; = &quot;), context.getTYPE_SEPARATOR()), type_label));&#xA;&#xA;&#x9;((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(e_lbdExp9), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).setBeforeLambdaExpressionResult(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(e_lbdExp9), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getBeforeLambdaExpressionResult(), &quot;\n&quot;), type_label), &quot; result_lambda&quot;), context.printFtSuffix()), &quot; = null;\n&quot;), e_lbdExp9.createBehaviorJava(context)));&#xA;&#xA;&#x9;str_param = kermeta.standard.helper.StringWrapper.plus(&quot;result_lambda&quot;, context.printFtSuffix());&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA; else {&#xA;&#xA;&#x9;str_param = e_lbdExp9.createBehaviorJava(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, str_param);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="expressions">
              <eGenericType eClassifier="#/2/standard/Set">
                <eTypeArguments eClassifier="#/2/language/behavior/Expression"/>
              </eGenericType>
            </eParameters>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppCRSeparatedNode" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft10 = expressions.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_43 = false;&#xA;&#x9;while( !idLoopCond_43 ) {&#xA;&#x9;idLoopCond_43 = it_ft10.isOff();&#xA;&#x9;if ( idLoopCond_43 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Expression e_lbdExp10 = it_ft10.next();&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, e_lbdExp10.createBehaviorJava(context));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="expressions">
              <eGenericType eClassifier="#/2/standard/OrderedSet">
                <eTypeArguments eClassifier="#/2/language/behavior/Expression"/>
              </eGenericType>
            </eParameters>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppTypeFromMultiplicityElement" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_44 = false;&#xA;&#x9;idIfCond_44 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem.getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_44 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_45 = false;&#xA;&#x9;idIfCond_45 = elem.getIsOrdered();&#xA;&#xA;&#x9;if( idIfCond_45 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_46 = false;&#xA;&#x9;idIfCond_46 = elem.getIsUnique();&#xA;&#xA;&#x9;if( idIfCond_46 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.OrderedSet&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.Sequence&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_47 = false;&#xA;&#x9;idIfCond_47 = elem.getIsUnique();&#xA;&#xA;&#x9;if( idIfCond_47 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.Set&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.Bag&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;&lt;&quot;), elem.getType().createBehaviorJava(context)), &quot;>&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, elem.getType().createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="elem" eType="#/2/language/structure/MultiplicityElement"/>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppEmfLikeCreateFactory" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Give the pp string corresponding to the CreateFactory in EMF-like of a type&#xD;&#xA;&#x9; * @deprecated&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> name_set = kermeta.standard.helper.StringWrapper.split(localType, &quot;\\.&quot;);&#xA;&#xA;&#x9;java.lang.String allPackages_label = kermeta.standard.helper.StringWrapper.substring(localType, 0, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(localType), kermeta.standard.helper.StringWrapper.size(name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 1)))));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_48 = false;&#xA;&#x9;idIfCond_48 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(name_set.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_48 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot; = &quot;, allPackages_label), kermeta.standard.helper.StringWrapper.capName(name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 2)))), &quot;Factory.eINSTANCE.create&quot;), name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 1))), &quot;()&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="localType" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="ppEmfLikeGetEMF" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;localType = kermeta.standard.helper.StringWrapper.split(localType, &quot;&lt;&quot;).first();&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> name_set = kermeta.standard.helper.StringWrapper.split(localType, &quot;\\.&quot;);&#xA;&#xA;&#x9;java.lang.String allPackages_label = kermeta.standard.helper.StringWrapper.substring(localType, 0, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(localType), kermeta.standard.helper.StringWrapper.size(name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 1)))));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_49 = false;&#xA;&#x9;idIfCond_49 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(name_set.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_49 ) {&#xA;&#xA;&#x9;java.lang.String class_label = name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 1));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_50 = false;&#xA;&#x9;idIfCond_50 = kermeta.standard.helper.StringWrapper.equals(class_label, &quot;Class&quot;);&#xA;&#xA;&#x9;if( idIfCond_50 ) {&#xA;&#xA;&#x9;class_label = kermeta.standard.helper.StringWrapper.plus(class_label, &quot;_&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(allPackages_label, kermeta.standard.helper.StringWrapper.capName(name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 2)))), &quot;Package.eINSTANCE.get&quot;), class_label), &quot;()&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="localType" eType="#/2/standard/JavaString"/>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="simk" nsURI="http://www.kermeta.org/km2ecore/helper/simk/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/simk"/>
        </eAnnotations>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="common" nsURI="http://www.kermeta.org/km2ecore/common/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/common"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="JavaKeyWordList" eSuperTypes="#/2/language/structure/Object">
        <eOperations name="isKeyword" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getKeywords().getValue(str)));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="str" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="addKeyword">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.getKeywords().put(kw, kw);&#xA;"/>
          </eAnnotations>
          <eParameters name="kw" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="initialize">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** This list has been created from the content of the web page: http://java.sun.com/docs/books/tutorial/java/nutsandbolts/_keywords.html */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setKeywords(((kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable())));&#xA;&#xA;&#x9;this.addKeyword(&quot;abstract&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;continue&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;for&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;new&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;switch&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;assert&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;default&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;goto&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;package&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;synchronized&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;boolean&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;do&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;if&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;private&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;this&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;break&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;double&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;implements&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;protected&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;throw&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;byte&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;else&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;import&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;public&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;throws&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;case&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;enum&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;instanceof&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;return&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;transient&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;catch&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;extends&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;int&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;short&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;try&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;char&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;final&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;interface&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;static&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;void&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;class&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;finally&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;long&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;strictfp&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;volatile&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;const&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;float&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;native&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;super&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;while&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;true&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;false&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;null&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;result&quot;);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="keywords" containment="true">
          <eGenericType eClassifier="#/2/utils/Hashtable">
            <eTypeArguments eClassifier="#/2/standard/JavaString"/>
            <eTypeArguments eClassifier="#/2/standard/JavaString"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eSubpackages name="exception" nsURI="http://www.kermeta.org/km2ecore/common/exception/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/common/exception"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="UndefinedUriEPackageException"
            eSuperTypes="#/2/exceptions/Exception"/>
        <eClassifiers xsi:type="ecore:EClass" name="UndefinedValueTypeInstanceClassNameException"
            eSuperTypes="#/2/exceptions/Exception"/>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="kermeta" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta"/>
    </eAnnotations>
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xA; * The root package. See the other packages if you want to browse the classes of Kermeta api.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kermeta_packages.png&quot;/>&#xA; */"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/2/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
      </eAnnotations>
    </eClassifiers>
    <eSubpackages name="language" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains the implementation of Kermeta reflective collections.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; * func : &lt;Object -> Object> because we need to visit the tags.&#xD;&#xA; *&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="usage" value="containment_traversable"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveCollection">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * ReflectiveCollection is a special collection that is used to define the type &#xA; * of attributes that have an upper multiplicity > 1 in a class. It indeed handles&#xA; * the update of opposite property if such an attribute has got one.&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::Collection&lt;G>.clear(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.remove(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.add(G)&#xA;&#x9; * Add an element to this collection and update its opposite property if it exists.&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Set">
          <eTypeArguments eTypeParameter="#/2/language/ReflectiveCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveSequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * ReflectiveSequence is an ordered ReflectiveCollection.&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.clear()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.helper.ReflectiveCollectionSuper.super_clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.addAt(Integer)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.removeAt(Integer)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.remove(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.helper.ReflectiveCollectionSuper.super_remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.equals(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = super.equals(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.add(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.helper.ReflectiveCollectionSuper.super_add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/OrderedSet">
          <eTypeArguments eTypeParameter="#/2/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/2/language/ReflectiveCollection">
          <eTypeArguments eTypeParameter="#/2/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
        </eAnnotations>
      </eClassifiers>
      <eSubpackages name="structure" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This Modeling Unit is used to define and store the traceability during the Km to Ecore process&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="usage" value="traceability"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Contains the concrete implementation (including the operation bodies) &#xA; * of the classes of the &lt;code>kermeta::reflection&lt;/code> package.&#xA; * If you need more documentation, please take a look at the&#xA; * &lt;code>kermeta::reflection&lt;/code> package which is more complete.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_package.png&quot;/>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_visitor_view.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** We have to visit property in order to print the behavior of the getter and setter */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xA; - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xA; - Property with isComposite == false : EReference"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.String javaCode = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_51 = false;&#xA;&#x9;idIfCond_51 = this.getIsDerived();&#xA;&#xA;&#x9;if( idIfCond_51 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_52 = false;&#xA;&#x9;idIfCond_52 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getIsReadOnly()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getSetterBody())));&#xA;&#xA;&#x9;if( idIfCond_52 ) {&#xA;&#xA;&#x9;javaCode = this.getSetterBody().createBehaviorJava(context);&#xA;&#xA;&#x9;ecore.EOperation setterEOp = ((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEOperation()));&#xA;&#xA;&#x9;setterEOp.setName(this.printSetAccessor(context));&#xA;&#xA;&#x9;setterEOp.setOrdered(this.getEcoreModelElement().isOrdered());&#xA;&#xA;&#x9;setterEOp.setUnique(this.getEcoreModelElement().isUnique());&#xA;&#xA;&#x9;ecore.EParameter param_setterEOp = ((ecore.EParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEParameter()));&#xA;&#xA;&#x9;param_setterEOp.setName(&quot;value&quot;);&#xA;&#xA;&#x9;((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getLinkSetterForTypedElement())).setLinks(this, param_setterEOp, context);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EParameter>convertAsOrderedSet(setterEOp.getEParameters()).add(param_setterEOp);&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addAnnotationGenModelImpl(setterEOp, javaCode);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement().getEOperations()).add(setterEOp);&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.String type_label = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_53 = false;&#xA;&#x9;idIfCond_53 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_53 ) {&#xA;&#xA;&#x9;type_label = context.getFtReturnType();&#xA;&#xA;&#x9;context.setFtReturnType(&quot;&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;type_label = ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppTypeFromMultiplicityElement(this, context);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_54 = false;&#xA;&#x9;idIfCond_54 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(type_label));&#xA;&#xA;&#x9;if( idIfCond_54 ) {&#xA;&#xA;&#x9;javaCode = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(javaCode, &quot;\n&quot;), type_label), &quot; result&quot;), context.printFtSuffix()), &quot; = null;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_55 = false;&#xA;&#x9;idIfCond_55 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getGetterBody()));&#xA;&#xA;&#x9;if( idIfCond_55 ) {&#xA;&#xA;&#x9;javaCode = kermeta.standard.helper.StringWrapper.plus(javaCode, this.getGetterBody().createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode = kermeta.standard.helper.StringWrapper.plus(javaCode, this.ppReturnResult(context));&#xA;&#xA;&#x9;ecore.EOperation getterEOp = ((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEOperation()));&#xA;&#xA;&#x9;getterEOp.setName(this.printGetAccessor(context));&#xA;&#xA;&#x9;getterEOp.setUpperBound(this.getEcoreModelElement().getUpperBound());&#xA;&#xA;&#x9;getterEOp.setOrdered(this.getEcoreModelElement().isOrdered());&#xA;&#xA;&#x9;getterEOp.setUnique(this.getEcoreModelElement().isUnique());&#xA;&#xA;&#x9;((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getLinkSetterForTypedElement())).setLinks(this, getterEOp, context);&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addAnnotationGenModelImpl(getterEOp, javaCode);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;))).getEOperations()).add(getterEOp);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement().getEStructuralFeatures()).remove(this.getEcoreModelElement());&#xA;&#xA;&#x9;this.setEcoreModelElement(null);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EStructuralFeature ecoreStructuralFeature = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(c.getEcoreModelElement().getEStructuralFeatures()).add(ecoreStructuralFeature);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreStructuralFeature);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft12 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_56 = false;&#xA;&#x9;while( !idLoopCond_56 ) {&#xA;&#x9;idLoopCond_56 = it_ft12.isOff();&#xA;&#x9;if ( idLoopCond_56 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp12 = it_ft12.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp11 = o_lbdExp12;&#xA;&#xA;&#x9;o_lbdExp11.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.helper.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EStructuralFeature">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EStructuralFeature result = null;&#xA;&#xA;&#x9;ecore.EStructuralFeature ecoreStructuralFeature = null;&#xA;&#xA;&#x9;kermeta.language.structure.Type current_type = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Type&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_57 = false;&#xA;&#x9;idIfCond_57 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(current_type.isValueType(), current_type.isEnumeration()), current_type.isEDataType());&#xA;&#xA;&#x9;if( idIfCond_57 ) {&#xA;&#xA;&#x9;ecoreStructuralFeature = ((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEAttribute()));&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecoreStructuralFeature = ((ecore.EReference) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEReference()));&#xA;&#xA;&#x9;((ecore.EReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(ecoreStructuralFeature, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EReference&quot;))).setContainment(this.getIsComposite());&#xA;}&#xA;&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EcoreModelElementHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEcoreModelElementHelper())).setEStructuralFeatureProperties(this, ecoreStructuralFeature, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_58 = false;&#xA;&#x9;idIfCond_58 = this.getIsDerived();&#xA;&#xA;&#x9;if( idIfCond_58 ) {&#xA;&#xA;&#x9;ecore.EAnnotation annotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;isReadOnly&quot;).getName()), kermeta.standard.helper.BooleanWrapper.toString(this.getIsReadOnly()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreStructuralFeature.getEAnnotations()).add(annotation);&#xA;}&#xA;&#xA;&#xA;&#x9;ecoreStructuralFeature.set_transient(this.getEMFIsTransient());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_59 = false;&#xA;&#x9;idIfCond_59 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(ecoreStructuralFeature.is_transient()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(ecoreStructuralFeature, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EAttribute&quot;))), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this.getType()).getTypeDefinition().qualifiedName(), &quot;kermeta::language::structure::Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_59 ) {&#xA;&#xA;&#x9;((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(ecoreStructuralFeature, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EAttribute&quot;))).set_transient(true);&#xA;}&#xA;&#xA;&#xA;&#x9;result = ecoreStructuralFeature;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="printGetAccessor" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_60 = false;&#xA;&#x9;idIfCond_60 = this.getIsDerived();&#xA;&#xA;&#x9;if( idIfCond_60 ) {&#xA;&#xA;&#x9;result = &quot;getter&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean isBoolean = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_61 = false;&#xA;&#x9;idIfCond_61 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getEcoreModelElement()));&#xA;&#xA;&#x9;if( idIfCond_61 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_62 = false;&#xA;&#x9;idIfCond_62 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EAttribute&quot;));&#xA;&#xA;&#x9;if( idIfCond_62 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_63 = false;&#xA;&#x9;idIfCond_63 = kermeta.standard.helper.StringWrapper.equals(this.getType().getEMFEDataTypeInstanceClassName(), &quot;boolean&quot;);&#xA;&#xA;&#x9;if( idIfCond_63 ) {&#xA;&#xA;&#x9;isBoolean = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_64 = false;&#xA;&#x9;idIfCond_64 = isBoolean;&#xA;&#xA;&#x9;if( idIfCond_64 ) {&#xA;&#xA;&#x9;result = &quot;is&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;get&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, kermeta.standard.helper.StringWrapper.capName(this.getFinalName(context)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="printSetAccessor" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_65 = false;&#xA;&#x9;idIfCond_65 = this.getIsDerived();&#xA;&#xA;&#x9;if( idIfCond_65 ) {&#xA;&#xA;&#x9;result = &quot;setter&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;set&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, kermeta.standard.helper.StringWrapper.capName(this.getFinalName(context)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getLinkSetterForTypedElement())).setLinks(this, this.getEcoreModelElement(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_66 = false;&#xA;&#x9;idIfCond_66 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getOpposite()));&#xA;&#xA;&#x9;if( idIfCond_66 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_67 = false;&#xA;&#x9;idIfCond_67 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getOpposite().getEcoreModelElement()));&#xA;&#xA;&#x9;if( idIfCond_67 ) {&#xA;&#xA;&#x9;((ecore.EReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EReference&quot;))).setEOpposite(((ecore.EReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getOpposite().getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EReference&quot;))));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_68 = false;&#xA;&#x9;idIfCond_68 = kermeta.standard.helper.StringWrapper.equals(this.getType().getTypeQName(), &quot;kermeta::standard::Boolean&quot;);&#xA;&#xA;&#x9;if( idIfCond_68 ) {&#xA;&#xA;&#x9;java.lang.Boolean mustSetted = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_69 = false;&#xA;&#x9;idIfCond_69 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getEcoreModelElement().getDefaultValueLiteral());&#xA;&#xA;&#x9;if( idIfCond_69 ) {&#xA;&#xA;&#x9;mustSetted = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_70 = false;&#xA;&#x9;idIfCond_70 = kermeta.standard.helper.StringWrapper.equals(this.getEcoreModelElement().getDefaultValueLiteral(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_70 ) {&#xA;&#xA;&#x9;mustSetted = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_71 = false;&#xA;&#x9;idIfCond_71 = mustSetted;&#xA;&#xA;&#x9;if( idIfCond_71 ) {&#xA;&#xA;&#x9;this.getEcoreModelElement().setDefaultValueLiteral(&quot;false&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft14 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_72 = false;&#xA;&#x9;while( !idLoopCond_72 ) {&#xA;&#x9;idLoopCond_72 = it_ft14.isOff();&#xA;&#x9;if ( idLoopCond_72 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp14 = it_ft14.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp13 = o_lbdExp14;&#xA;&#xA;&#x9;p_lbdExp13.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;&#xA;&#x9;this.createBehaviorJava(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="_default" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" eType="#/2/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Opposite Property of the Property, void if the Property has no opposite"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="If True, the value of the property is not stored but computed from other properties"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="getterBody" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property is read-only"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="setterBody" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isID" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the property allows to identify its containing Object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/2/language/structure/ClassDefinition"
              eOpposite="#/2/language/structure/ClassDefinition/ownedAttribute">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition that owns the Property"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSetterAbstract"
              eType="#/2/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the setter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property has a containment role"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isGetterAbstract"
              eType="#/2/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the getter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EStructuralFeature"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/MultiplicityElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; * TraceSource aspect keeps track of source information like the file name &#xD;&#xA; * and the line number where objects are declared. This is used for Java generation.&#xD;&#xA; * At runtime this information can be used for debug purpose or stack printing. &#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_needProperty" value="name=oid javaClass=java.lang.Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_needProperty" value="name=internalContainingResource classDefinitionQN=kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Object definition: all entities of Kermeta metamodel explicitly inherit from Object"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Super method */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="interpretBooleanTag" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_73 = false;&#xA;&#x9;idIfCond_73 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getUniqueTagValue(str_tag), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_73 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_74 = false;&#xA;&#x9;idIfCond_74 = kermeta.standard.helper.StringWrapper.equals(this.getUniqueTagValue(str_tag), &quot;true&quot;);&#xA;&#xA;&#x9;if( idIfCond_74 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="str_tag" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="getContainerAsTypeIn" eType="#/2/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object obj = this;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_75 = false;&#xA;&#x9;while( !idLoopCond_75 ) {&#xA;&#x9;idLoopCond_75 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.equals(i, 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(obj, stop_type));&#xA;&#x9;if ( idLoopCond_75 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_76 = false;&#xA;&#x9;idIfCond_76 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj)));&#xA;&#xA;&#x9;if( idIfCond_76 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_77 = false;&#xA;&#x9;idIfCond_77 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj), type);&#xA;&#xA;&#x9;if( idIfCond_77 ) {&#xA;&#xA;&#x9;i = 1;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj);&#xA;}&#xA; else {&#xA;&#xA;&#x9;obj = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/2/language/structure/Type"/>
            <eParameters name="stop_type" eType="#/2/language/structure/Type"/>
          </eOperations>
          <eOperations name="isKindOf" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the current Object is an instance of the given Class&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).equals(cl);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cl" eType="#/2/language/structure/Class"/>
          </eOperations>
          <eOperations name="getMetaClass" eType="#/2/language/structure/Class">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the Class object that is the metaclass of current Object&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Class>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( this ));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Sets the &lt;code>element&lt;/code> to the &lt;code>~property&lt;/code> of the object &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_78 = false;&#xA;&#x9;idIfCond_78 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, property.getType());&#xA;&#xA;&#x9;if( idIfCond_78 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.EnumerationLiteral v = null;&#xA;&#xA;&#x9;v = (kermeta.language.structure.EnumerationLiteral) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.EnumerationLiteral>asTypeOrVoid(element);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_79 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft15 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_80 = false;&#xA;&#x9;idIfCond_80 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(v, null);&#xA;&#xA;&#x9;if( idIfCond_80 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object e_lbdExp15 = null;&#xA;&#xA;&#x9;result_ft15 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(property.getType(), v.getEnumeration());&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft15 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_79 = result_ft15;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_79 ) {&#xA;&#xA;&#x9;fr.irisa.triskell.kermeta.runtime.language.Object.set(this, property, v);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIncompatibleTypeError()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/2/language/structure/Property"/>
            <eParameters name="element" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft17 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_81 = false;&#xA;&#x9;while( !idLoopCond_81 ) {&#xA;&#x9;idLoopCond_81 = it_ft17.isOff();&#xA;&#x9;if ( idLoopCond_81 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp17 = it_ft17.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp16 = o_lbdExp17;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_82 = false;&#xA;&#x9;idIfCond_82 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp16.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_82 ) {&#xA;&#xA;&#x9;p_lbdExp16.applyPass2(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEMFEDataTypeInstanceClassName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the EDataType_instanceClassName&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;ecore.EDataType_instanceClassName&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getPropertyValue" eType="#/2/language/structure/Property">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Property result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDefinition = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Property result_ft18 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft18 = null;&#xA;&#xA;&#x9;result_ft18 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft18 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDefinition.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_83 = false;&#xA;&#x9;while( !idLoopCond_83 ) {&#xA;&#x9;idLoopCond_83 = kermeta.standard.helper.BooleanWrapper.or(it_ft18.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft18, null));&#xA;&#x9;if ( idLoopCond_83 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft18 = it_ft18.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_84 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Property p_lbdExp18 = elem_ft18;&#xA;&#xA;&#x9;idIfCond_84 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(p_lbdExp18, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName(), propertyName);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_84 ) {&#xA;&#xA;&#x9;result_ft18 = elem_ft18;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;result = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(result_ft18, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="propertyName" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Runs checking of invariants defined for the metaclass of the Object&#xA;&#x9; * Also check the multiplicity of attributes (except derived and transient attributes)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getterClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_85 = false;&#xA;&#x9;idIfCond_85 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd));&#xA;&#xA;&#x9;if( idIfCond_85 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft19 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_86 = false;&#xA;&#x9;while( !idLoopCond_86 ) {&#xA;&#x9;idLoopCond_86 = it_ft19.isOff();&#xA;&#x9;if ( idLoopCond_86 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp19 = it_ft19.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft20 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft20 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft20 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(p_lbdExp19.getTag()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_88 = false;&#xA;&#x9;while( !idLoopCond_88 ) {&#xA;&#x9;idLoopCond_88 = kermeta.standard.helper.BooleanWrapper.or(it_ft20.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft20, false));&#xA;&#x9;if ( idLoopCond_88 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft20 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp20 = it_ft20.next();&#xA;&#xA;&#x9;result_lambda_ft20 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp20.getName(), &quot;ecore.isTransient&quot;);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft20 = kermeta.standard.helper.BooleanWrapper.or(test_ft20, result_lambda_ft20);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft20 = test_ft20;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_87 = false;&#xA;&#x9;idIfCond_87 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft20), kermeta.standard.helper.BooleanWrapper.not(p_lbdExp19.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_87 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, p_lbdExp19);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_89 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft21 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_90 = false;&#xA;&#x9;idIfCond_90 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_90 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object f_lbdExp21 = null;&#xA;&#xA;&#x9;result_ft21 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft21 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_89 = result_ft21;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_89 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_91 = false;&#xA;&#x9;idIfCond_91 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p_lbdExp19.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p_lbdExp19.getUpper()));&#xA;&#xA;&#x9;if( idIfCond_91 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp19.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_92 = false;&#xA;&#x9;idIfCond_92 = kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p_lbdExp19.getLower());&#xA;&#xA;&#x9;if( idIfCond_92 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp19.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_93 = false;&#xA;&#x9;idIfCond_93 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p_lbdExp19.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(v));&#xA;&#xA;&#x9;if( idIfCond_93 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ConstraintViolatedInv e = ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getConstraintViolatedInv()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Inv lower bound of &quot;, cd.getName()), &quot;.&quot;), p_lbdExp19.getName()), &quot; violated on &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(this);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getEMFInstanceClassName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the instanceClassName&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;EMF_instanceClassName&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isVoid" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Object is Void&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="oid" eType="#/2/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the unique Oid of the Object&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Integer>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(this));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getTagValues">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the values for the tags having as key: &lt;key : String>&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> value_list = ((kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft22 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_94 = false;&#xA;&#x9;while( !idLoopCond_94 ) {&#xA;&#x9;idLoopCond_94 = it_ft22.isOff();&#xA;&#x9;if ( idLoopCond_94 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag t_lbdExp22 = it_ft22.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_95 = false;&#xA;&#x9;idIfCond_95 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(t_lbdExp22.getName()));&#xA;&#xA;&#x9;if( idIfCond_95 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_96 = false;&#xA;&#x9;idIfCond_96 = kermeta.standard.helper.StringWrapper.equals(t_lbdExp22.getName(), key);&#xA;&#xA;&#x9;if( idIfCond_96 ) {&#xA;&#xA;&#x9;value_list.add(t_lbdExp22.getValue());&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = value_list;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eClassifier="#/2/standard/JavaString"/>
            </eGenericType>
            <eParameters name="key" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="isInstanceOf" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the current Object conforms to given Type&#xA;&#x9; * This means: is this object an instance of this type, or is it an instance of its subtype &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, type.getClass().getName()));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/2/language/structure/Type"/>
          </eOperations>
          <eOperations name="getCompiledJavaExtern" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the compiledJavaExtern call for replacing the current one&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;compiledJavaExtern&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Recursively runs checking of invariants defined for the metaclass of the Object&#xA;&#x9; * and its supertypes&#xA;&#x9; * Ignores derived attributes. &#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_97 = false;&#xA;&#x9;idIfCond_97 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this, null);&#xA;&#xA;&#x9;if( idIfCond_97 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariantsSwitcher(this);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition());&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft23 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_98 = false;&#xA;&#x9;while( !idLoopCond_98 ) {&#xA;&#x9;idLoopCond_98 = it_ft23.isOff();&#xA;&#x9;if ( idLoopCond_98 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp23 = it_ft23.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_99 = false;&#xA;&#x9;idIfCond_99 = kermeta.standard.helper.BooleanWrapper.and(prop_lbdExp23.getIsComposite(), kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp23.getIsDerived()));&#xA;&#xA;&#x9;if( idIfCond_99 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_100 = false;&#xA;&#x9;idIfCond_100 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp23)));&#xA;&#xA;&#x9;if( idIfCond_100 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_101 = false;&#xA;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft24 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft24 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft24 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp23)).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_102 = false;&#xA;&#x9;while( !idLoopCond_102 ) {&#xA;&#x9;idLoopCond_102 = kermeta.standard.helper.BooleanWrapper.or(it_ft24.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft24, false));&#xA;&#x9;if ( idLoopCond_102 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft24 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp24 = it_ft24.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_103 = false;&#xA;&#x9;idIfCond_103 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp24, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_103 ) {&#xA;&#xA;&#x9;result_lambda_ft24 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp24, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_lambda_ft24 = false;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft24 = kermeta.standard.helper.BooleanWrapper.or(test_ft24, result_lambda_ft24);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft24 = test_ft24;&#xA;&#xA;//CEC&#xA;idIfCond_101 = result_ft24;&#xA;//EIft:exists&#xA;&#xA;&#xA;&#x9;if( idIfCond_101 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;kermeta.language.structure.Object>>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp23));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft25 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_104 = false;&#xA;&#x9;while( !idLoopCond_104 ) {&#xA;&#x9;idLoopCond_104 = it_ft25.isOff();&#xA;&#x9;if ( idLoopCond_104 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object aSubObjInstances_lbdExp25 = it_ft25.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(aSubObjInstances_lbdExp25);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariantsSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(this, prop_lbdExp23));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getWrapperValueTypeSelfExpression" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the Wrapprings of ValueType's SelfExpression for tackle the  eplacing the current one&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;WrapperValueTypeSelfExpression&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft27 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_105 = false;&#xA;&#x9;while( !idLoopCond_105 ) {&#xA;&#x9;idLoopCond_105 = it_ft27.isOff();&#xA;&#x9;if ( idLoopCond_105 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp27 = it_ft27.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp26 = o_lbdExp27;&#xA;&#xA;&#x9;p_lbdExp26.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEMFNeedProperty">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the EMF_needProperty&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = this.getTagValues(&quot;EMF_needProperty&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eClassifier="#/2/standard/JavaString"/>
            </eGenericType>
          </eOperations>
          <eOperations name="getDeprecated" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the deprecated tag&#xD;&#xA;&#x9; * Specific method for detecting the deprecated model elements&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;deprecated&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="mustBeAssigned" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSet" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * True if the &lt;code>~property&lt;/code> of the object has been set&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(this, property));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/2/language/structure/Property"/>
          </eOperations>
          <eOperations name="get" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** &#xA;&#x9; * Returns the instances of the given property for this Object.&#xA;&#x9; *&#xA;&#x9; * Example : &#xA;&#x9; * &lt;pre>&#xA;&#x9; * class A { reference attr : String }&#xA;&#x9; * &lt;/pre>&#xA;&#x9; * Using A :&#xA;&#x9; * &lt;pre>&#xA;&#x9; * operation getAProp() is do&#xA;&#x9; *    var a : A&#xA;&#x9; *    var s : String&#xA;&#x9; *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xA;&#x9; *    s ?= a.get(the_attr)&#xA;&#x9; * end&#xA;&#x9; * &lt;/pre>&#xA;&#x9; * The user has to cast&#xA;&#x9; * the result of this method according to the type and the upper multiplicity&#xA;&#x9; * of this property. If upper multiplicity > 1, than the effective type of the &#xA;&#x9; * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xA;&#x9; * the name of the given Property (i.e the type of the property instance).&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/2/language/structure/Property"/>
          </eOperations>
          <eOperations name="getWrapperValueTypeReturnType" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the Wrapprings of ValueType's ReturnType for tackle the  eplacing the current one&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;WrapperValueTypeReturnType&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="equals" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * semantic equality,&#xA;&#x9; * if you wish to test for object identity you need to use the method oid&#xA;&#x9; * ex: x.oid == y.oid&#xA;&#x9; * by default, (ie. if not overloaded), the equals method for class Object implements &#xA;&#x9; * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xA;&#x9; * reference values x and y, this method returns true if and only if x and y refer to the same &#xA;&#x9; * object (x.oid == y.oid has the value true). &#xA;&#x9; *&#xA;&#x9; * note1: the operator == is mapped to this &#xA;&#x9; * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this, element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorKmt" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEMFIsTransient" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the isTransient&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.interpretBooleanTag(&quot;ecore.isTransient&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFrozen" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Object is currently in a&#xA;&#x9; * frozen state&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(this));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode" eType="#/2/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * code used in hashtable in order to identify an object in the hashtable keys&#xA;&#x9; * This system is similar to the hashcode used in java. Please refer to java documentation&#xA;&#x9; * for more information about hashcode&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Integer>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(this));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="callsFunctionType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_106 = false;&#xA;&#x9;idIfCond_106 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_106 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_107 = false;&#xA;&#x9;idIfCond_107 = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).isCallFeatureAsStaticOperation();&#xA;&#xA;&#x9;if( idIfCond_107 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_108 = false;&#xA;&#x9;idIfCond_108 = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticOperation().isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_108 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getRootPackage" eType="#/2/language/structure/Package">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Package result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package topPack = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(topPack));&#xA;&#x9;java.lang.Boolean idLoopCond_109 = false;&#xA;&#x9;while( !idLoopCond_109 ) {&#xA;&#x9;idLoopCond_109 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(topPack);&#xA;&#x9;if ( idLoopCond_109 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = topPack;&#xA;&#xA;&#x9;topPack = (kermeta.language.structure.Package) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Package>asTypeOrVoid(topPack.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getUniqueTagValue" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the values for the tags having as key: &lt;key : String>&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> value_list = this.getTagValues(key);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_110 = false;&#xA;&#x9;idIfCond_110 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(value_list)), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(value_list.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_110 ) {&#xA;&#xA;&#x9;result = value_list.first();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="key" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="getContainerAsType" eType="#/2/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object obj = this;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_111 = false;&#xA;&#x9;while( !idLoopCond_111 ) {&#xA;&#x9;idLoopCond_111 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);&#xA;&#x9;if ( idLoopCond_111 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_112 = false;&#xA;&#x9;idIfCond_112 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj)));&#xA;&#xA;&#x9;if( idIfCond_112 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_113 = false;&#xA;&#x9;idIfCond_113 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj), type);&#xA;&#xA;&#x9;if( idIfCond_113 ) {&#xA;&#xA;&#x9;i = 1;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj);&#xA;}&#xA; else {&#xA;&#xA;&#x9;obj = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(obj);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/2/language/structure/Type"/>
          </eOperations>
          <eOperations name="getEMFEDataTypeIsSerializable" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the EDataType_isSerializable&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.interpretBooleanTag(&quot;ecore.EDataType_isSerializable&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNotEqual" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * See kermeta::language::structure::Object.equals(Object)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this, element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Freeze the Object&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(this);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="container" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the Object that contains current Object, void if the Object has&#xA;&#x9; * no container&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Remove the element set as the &lt;code>~property&lt;/code> of the object.&#xA;&#x9; * The &lt;code>isSet(~property)&lt;/code> method will then return False&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/2/language/structure/Property"/>
          </eOperations>
          <eOperations name="containingResource" eType="#/2/persistence/Resource">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the Resource currently containing (directly or indirectly) the Object &#xA;&#x9; * or void if the object belongs to no Resource&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.persistence.Resource>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(this));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="asType" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Implementation of OCL like cast. It returns self if the object object conforms to the type given as parameter.&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeSelfExpression" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_114 = false;&#xA;&#x9;idIfCond_114 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, type);&#xA;&#xA;&#x9;if( idIfCond_114 ) {&#xA;&#xA;&#x9;result = this;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getTypeCastError())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/2/language/structure/Class"/>
          </eOperations>
          <eOperations name="toString" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Implements Object.toString()&#xA; &#x9; * Returns a String of form [qn:oid] where 'qn' is the qualified name of&#xA; &#x9; * the object type, and oid the unique ID of the object&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;[&quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition().qualifiedName()), &quot;:&quot;), kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(this))), &quot;]&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="tag" upperBound="-1"
              eType="#/2/language/structure/Tag" eOpposite="#/2/language/structure/Tag/object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An Object can be tagged by a Tag. &#xA;They are typically used to put comments/documentation on the object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="file" eType="#/4/File">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** The calculated kmt file */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="fileName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** The kmt file that declares the object. */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineNumber" eType="#/2/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** The line number where the object is declared in the source file. */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTags" upperBound="-1"
              eType="#/2/language/structure/Tag" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An object can contains a Tag.  &#xA;Be careful, owning a tag doesn't means that the tag applies to the Object&#xA;To know which Tags apply to the object use the &quot;tag&quot; reference"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="oid" eType="#/2/language/structure/KermetaProperty_Object_oid"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="internalContainingResource"
              eType="#/2/persistence/Resource"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition" eSuperTypes="#/2/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstracts the definition of generic type definitions (i.e. type definitions that&#xA;can be parameterized), namely, for ClassDefinition and ModelTypeDefinition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/2/language/structure/TypeVariable" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type variables defined for the GenericTypeDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="#/2/language/structure/TypedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value=" Model elements with a multiplicity [lower..upper] inherit this class"/>
          </eAnnotations>
          <eOperations name="getRecopyInValueTypes" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the RecopyInValueTypes reference of an Operation&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;RecopyInValueTypes&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getFinalName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_115 = false;&#xA;&#x9;idIfCond_115 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getEMFRenameAs(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_115 ) {&#xA;&#xA;&#x9;result = this.getEMFRenameAs();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEMFRenameAs" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get the EMFRenameAs reference of an Operation&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;EMF_renameAs&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="ppReturnResult" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Generation of the String representing the end of a method: return of the result value */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;\nreturn &quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_116 = false;&#xA;&#x9;idIfCond_116 = kermeta.standard.helper.IntegerWrapper.equals(this.getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_116 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;result&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, context.getCOLLECTION_UTIL_CLASS()), &quot;.convertAsEList(result)&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;;\n&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the element is ordered"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="#/2/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Max cardinality of the element, '-1' for '*'"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="#/2/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Min cardinality of the element"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether duplicated elements are allowed"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any element that contain a  name (example : Operation, Property) inherit this&#xA;class."/>
          </eAnnotations>
          <eOperations name="getGenModelQualifiedName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(this.getRootPackage().getGenModelBasePackage(), &quot;::&quot;), this.qualifiedName());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getJavaQualifiedName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(this.qualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getGenModelJavaQualifiedName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(this.getGenModelQualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="qualifiedName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the qualified name of this named element. Qualified name is &#xA;&#x9; * the list of the names of the packages hierarchically ordered, delimited by&#xA;&#x9; * a &quot;::&quot;, followed by the name of this named element.&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.NamedElement elem = this;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_117 = false;&#xA;&#x9;idIfCond_117 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;));&#xA;&#xA;&#x9;if( idIfCond_117 ) {&#xA;&#xA;&#x9;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.NamedElement>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem));&#xA;&#x9;java.lang.Boolean idLoopCond_118 = false;&#xA;&#x9;while( !idLoopCond_118 ) {&#xA;&#x9;idLoopCond_118 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(elem, null);&#xA;&#x9;if ( idLoopCond_118 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(elem.getName(), &quot;::&quot;), result);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_119 = false;&#xA;&#x9;idIfCond_119 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;));&#xA;&#xA;&#x9;if( idIfCond_119 ) {&#xA;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.NamedElement>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(elem));&#xA;}&#xA; else {&#xA;&#xA;&#x9;elem = null;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1"
              eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of this named element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Alias to kermeta::standard::Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Base class definition for the &lt;b>use&lt;/b> of a type."/>
          </eAnnotations>
          <eOperations name="isMappedToJavaRawType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_120 = false;&#xA;&#x9;idIfCond_120 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_120 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_121 = false;&#xA;&#x9;idIfCond_121 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_121 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isMappedToJavaRawType();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="clone" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a copy of passed Object built by recursively copying attribute&#xA;&#x9; * properties, and referencing original reference properties values&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="kermeta.language.structure.Object result = null;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns a copy of passed Object built by recursively copying values of&#xA;&#x9; * all properties, no matter the property kind&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="kermeta.language.structure.Object result = null;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="getClassFromPrimitiveType" eType="#/2/language/structure/Class">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_122 = false;&#xA;&#x9;idIfCond_122 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_122 ) {&#xA;&#xA;&#x9;kermeta.language.structure.PrimitiveType pt = ((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_123 = false;&#xA;&#x9;idIfCond_123 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(pt.getInstanceType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_123 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(pt.getInstanceType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = pt.getInstanceType().getClassFromPrimitiveType();&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = null;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isBooleanTypeDef" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Tests whether the Type t corresponds to the Kermeta Boolean type, which can be encoded&#xD;&#xA;&#x9; * either as the Boolean PrimitiveType or the Boolean class.&#xD;&#xA;&#x9; * @param t : Type&#xD;&#xA;&#x9; * @return true or false&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_124 = false;&#xA;&#x9;idIfCond_124 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this));&#xA;&#xA;&#x9;if( idIfCond_124 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_125 = false;&#xA;&#x9;idIfCond_125 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_125 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeDefinition().getName(), &quot;Boolean&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_126 = false;&#xA;&#x9;idIfCond_126 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_126 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_127 = false;&#xA;&#x9;idIfCond_127 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;kermeta::standard::Boolean&quot;), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;kermeta::language::structure::Boolean&quot;)), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;java.lang.Boolean&quot;)), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;Boolean&quot;));&#xA;&#xA;&#x9;if( idIfCond_127 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isValueType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Type theType = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_128 = false;&#xA;&#x9;idIfCond_128 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_128 ) {&#xA;&#xA;&#x9;theType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getClassFromPrimitiveType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Type&quot;)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;theType = this;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_129 = false;&#xA;&#x9;idIfCond_129 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(theType, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_129 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ParameterizedType pt = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theType, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_130 = false;&#xA;&#x9;idIfCond_130 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(pt.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_130 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(pt.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNumericalTypeDef" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Tests whether the Type t corresponds to a Kermeta numerical type, which can be encoded&#xD;&#xA;&#x9; * either as the Integer/Real PrimitiveType or the Integer/Real class.&#xD;&#xA;&#x9; * @param t : Type&#xD;&#xA;&#x9; * @return true or false&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_131 = false;&#xA;&#x9;idIfCond_131 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this));&#xA;&#xA;&#x9;if( idIfCond_131 ) {&#xA;&#xA;&#x9;java.lang.String tName = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_132 = false;&#xA;&#x9;idIfCond_132 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_132 ) {&#xA;&#xA;&#x9;tName = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_133 = false;&#xA;&#x9;idIfCond_133 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(tName, &quot;Integer&quot;), kermeta.standard.helper.StringWrapper.equals(tName, &quot;Real&quot;));&#xA;&#xA;&#x9;if( idIfCond_133 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_134 = false;&#xA;&#x9;idIfCond_134 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_134 ) {&#xA;&#xA;&#x9;tName = ((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_135 = false;&#xA;&#x9;idIfCond_135 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(tName, &quot;Integer&quot;), kermeta.standard.helper.StringWrapper.equals(tName, &quot;Real&quot;));&#xA;&#xA;&#x9;if( idIfCond_135 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getTypeName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_136 = false;&#xA;&#x9;idIfCond_136 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_136 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_137 = false;&#xA;&#x9;idIfCond_137 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_137 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;result = otv.getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_138 = false;&#xA;&#x9;idIfCond_138 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_138 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = this.getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_139 = false;&#xA;&#x9;idIfCond_139 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_139 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;))).getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_140 = false;&#xA;&#x9;idIfCond_140 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.VoidType&quot;));&#xA;&#xA;&#x9;if( idIfCond_140 ) {&#xA;&#xA;&#x9;result = &quot;VoidType&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_141 = false;&#xA;//BIft:orElse&#xA;&#xA;java.lang.Boolean result_ft28 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_142 = false;&#xA;&#x9;idIfCond_142 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_142 ) {&#xA;&#xA;&#x9;result_ft28 = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object v_lbdExp28 = null;&#xA;&#xA;&#x9;result_ft28 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(result);&#xA;//EIle:right&#xA;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_141 = result_ft28;&#xA;//EIft:orElse&#xA;&#xA;&#xA;&#x9;if( idIfCond_141 ) {&#xA;&#xA;&#x9;result = &quot;VoidType&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getTypeQName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_143 = false;&#xA;&#x9;idIfCond_143 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_143 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_144 = false;&#xA;&#x9;idIfCond_144 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_144 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;result = otv.qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_145 = false;&#xA;&#x9;idIfCond_145 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_145 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = this.getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_146 = false;&#xA;&#x9;idIfCond_146 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_146 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;))).qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_147 = false;&#xA;&#x9;idIfCond_147 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.VoidType&quot;));&#xA;&#xA;&#x9;if( idIfCond_147 ) {&#xA;&#xA;&#x9;result = &quot;kermeta::language::structure::VoidType&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_148 = false;&#xA;//BIft:orElse&#xA;&#xA;java.lang.Boolean result_ft29 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_149 = false;&#xA;&#x9;idIfCond_149 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result);&#xA;&#xA;&#x9;if( idIfCond_149 ) {&#xA;&#xA;&#x9;result_ft29 = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object v_lbdExp29 = null;&#xA;&#xA;&#x9;result_ft29 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(result);&#xA;//EIle:right&#xA;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_148 = result_ft29;&#xA;//EIft:orElse&#xA;&#xA;&#xA;&#x9;if( idIfCond_148 ) {&#xA;&#xA;&#x9;result = &quot;kermeta::language::structure::VoidType&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Implements Type.isSubTypeOf(Type)&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xA; &#x9; * to extend it.&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.TypeUtil.isSuperTypeOfSwitcher(object, this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/2/language/structure/Type"/>
          </eOperations>
          <eOperations name="isPrimitiveType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isInstance" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Implements Type.isInstance(Object)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element, this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="isEDataType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_150 = false;&#xA;&#x9;idIfCond_150 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getEMFEDataTypeInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_150 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSuperTypeOf" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Implements Type.isSuperTypeOf(Type)&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xA; &#x9; * to extend it.&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.TypeUtil.hasSubType(this, object));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/2/language/structure/Type"/>
          </eOperations>
          <eOperations name="isEnumeration" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeContainer" eType="#/2/language/structure/TypeContainer"
              eOpposite="#/2/language/structure/TypeContainer/containedType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning TypeContainer, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for operation parameter"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="isRunnable" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_151 = false;&#xA;&#x9;idIfCond_151 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(this.getUpper(), 1), kermeta.standard.helper.StringWrapper.equals(this.getType().getTypeQName(), &quot;kermeta::standard::String&quot;));&#xA;&#xA;&#x9;if( idIfCond_151 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isBooleanFunctionType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_152 = false;&#xA;&#x9;idIfCond_152 = this.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_152 ) {&#xA;&#xA;&#x9;kermeta.language.structure.FunctionType ft = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_153 = false;&#xA;&#x9;idIfCond_153 = ft.getRight().isBooleanTypeDef(context);&#xA;&#xA;&#x9;if( idIfCond_153 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EParameter ecoreParameter = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_154 = false;&#xA;&#x9;idIfCond_154 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_154 ) {&#xA;&#xA;&#x9;ecoreParameter = ((ecore.EParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEParameter()));&#xA;&#xA;&#x9;ecoreParameter.setName(this.getName());&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecoreParameter = this.createEcoreModelElement(context);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.Operation o = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EParameter>convertAsOrderedSet(o.getEcoreModelElement().getEParameters()).add(ecoreParameter);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreParameter);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.helper.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EParameter result = null;&#xA;&#xA;&#x9;ecore.EParameter ecoreParameter = ((ecore.EParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEParameter()));&#xA;&#xA;&#x9;ecoreParameter.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;ecoreParameter.setOrdered(this.getIsOrdered());&#xA;&#xA;&#x9;ecoreParameter.setUnique(this.getIsUnique());&#xA;&#xA;&#x9;ecoreParameter.setLowerBound(this.getLower());&#xA;&#xA;&#x9;ecoreParameter.setUpperBound(this.getUpper());&#xA;&#xA;&#x9;result = ecoreParameter;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_155 = false;&#xA;&#x9;idIfCond_155 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_155 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Parameter.setLinks FunctionType: &quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getType())), &quot; self.ecoreModelElement: &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getEcoreModelElement())));&#xA;&#xA;&#x9;kermeta.language.structure.FunctionType ft = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;this.getEcoreModelElement().setEType(((km2ecore.helper.kermeta.GenericTypeDefinitionHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getGenericTypeDefinitionHelper())).getKermetaSpecialType(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)))));&#xA;&#xA;&#x9;ecore.EAnnotation ft_annotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createEmpty(&quot;kermeta.functionType&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_156 = false;&#xA;&#x9;idIfCond_156 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ft.getLeft()));&#xA;&#xA;&#x9;if( idIfCond_156 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addEntry(ft_annotation, &quot;0&quot;, ft.getLeft().getTypeQName());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_157 = false;&#xA;&#x9;idIfCond_157 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ft.getLeft()));&#xA;&#xA;&#x9;if( idIfCond_157 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addEntry(ft_annotation, &quot;1&quot;, ft.getRight().getTypeQName());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(this.getEcoreModelElement().getEAnnotations()).add(ft_annotation);&#xA;&#xA;&#x9;ft.setEcoreModelElement(ft_annotation);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.LinkSetterForTypedElement s = ((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getLinkSetterForTypedElement()));&#xA;&#xA;&#x9;s.setLinks(this, this.getEcoreModelElement(), context);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isFunctionType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return true if the given operation is a FunctionType&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft31 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_158 = false;&#xA;&#x9;while( !idLoopCond_158 ) {&#xA;&#x9;idLoopCond_158 = it_ft31.isOff();&#xA;&#x9;if ( idLoopCond_158 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp31 = it_ft31.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp30 = o_lbdExp31;&#xA;&#xA;&#x9;p_lbdExp30.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="operation" eType="#/2/language/structure/Operation"
              transient="true" eOpposite="#/2/language/structure/Operation/ownedParameter">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EParameter"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/MultiplicityElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Operation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** We have to visit operation in order to print the result initialization and the return statement */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Every one knows what an operation is."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="isRunnable" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter param = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.structure.Parameter result_ft32 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft32 = null;&#xA;&#xA;&#x9;result_ft32 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft32 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_159 = false;&#xA;&#x9;while( !idLoopCond_159 ) {&#xA;&#x9;idLoopCond_159 = kermeta.standard.helper.BooleanWrapper.or(it_ft32.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft32, null));&#xA;&#x9;if ( idLoopCond_159 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft32 = it_ft32.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_160 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Parameter param_lbdExp32 = elem_ft32;&#xA;&#xA;&#x9;idIfCond_160 = kermeta.standard.helper.BooleanWrapper.not(param_lbdExp32.isRunnable());&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_160 ) {&#xA;&#xA;&#x9;result_ft32 = elem_ft32;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;param = result_ft32;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_161 = false;&#xA;&#x9;idIfCond_161 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(param);&#xA;&#xA;&#x9;if( idIfCond_161 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.utils.StringBuffer javaCode = ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_162 = false;&#xA;&#x9;idIfCond_162 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getBody()));&#xA;&#xA;&#x9;if( idIfCond_162 ) {&#xA;&#xA;&#x9;java.lang.String type_label = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_163 = false;&#xA;&#x9;idIfCond_163 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_163 ) {&#xA;&#xA;&#x9;type_label = context.getFtReturnType();&#xA;&#xA;&#x9;context.setFtReturnType(&quot;&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;type_label = ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppTypeFromMultiplicityElement(this, context);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_164 = false;&#xA;&#x9;idIfCond_164 = kermeta.standard.helper.BooleanWrapper.not(this.isVoidType(type_label));&#xA;&#xA;&#x9;if( idIfCond_164 ) {&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, type_label), &quot; result&quot;), context.printFtSuffix()), &quot; = null;\n&quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode.append(this.createBehaviorJavaFromPre(context));&#xA;&#xA;&#x9;javaCode.append(this.getBody().createBehaviorJava(context));&#xA;&#xA;&#x9;javaCode.append(this.createBehaviorJavaFromPost(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_165 = false;&#xA;&#x9;idIfCond_165 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.isVoidType(type_label)), kermeta.standard.helper.BooleanWrapper.not(context.getFtSuffixActivation()));&#xA;&#xA;&#x9;if( idIfCond_165 ) {&#xA;&#xA;&#x9;javaCode.append(this.ppReturnResult(context));&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_166 = false;&#xA;&#x9;idIfCond_166 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(this.getType().getTypeQName()));&#xA;&#xA;&#x9;if( idIfCond_166 ) {&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppTypeFromMultiplicityElement(this, context), &quot; result = null;\n&quot;));&#xA;&#xA;&#x9;javaCode.append(this.ppReturnResult(context));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_167 = false;&#xA;&#x9;idIfCond_167 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getTasks_stack().peek(), context.getFUNCTION_TYPE_COMPILATION_TASK()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(context.getCurrent_valueType()));&#xA;&#xA;&#x9;if( idIfCond_167 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addAnnotationGenModelImpl(this.getEcoreModelElement(), javaCode.toString());&#xA;}&#xA;&#xA;&#xA;&#x9;result = javaCode.toString();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="mustBeCompiled" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Helper method to determine if an operation has to be compiled&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_container = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_168 = false;&#xA;&#x9;idIfCond_168 = cd_container.isValueType();&#xA;&#xA;&#x9;if( idIfCond_168 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_169 = false;&#xA;&#x9;idIfCond_169 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(cd_container.getEMFInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_169 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getOptimizedStaticCall" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_170 = false;&#xA;&#x9;idIfCond_170 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;));&#xA;&#xA;&#x9;if( idIfCond_170 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_171 = false;&#xA;&#x9;idIfCond_171 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()).size(), 1);&#xA;&#xA;&#x9;if( idIfCond_171 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_172 = false;&#xA;&#x9;idIfCond_172 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;));&#xA;&#xA;&#x9;if( idIfCond_172 ) {&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> static_call_set_1 = kermeta.standard.helper.StringWrapper.split(((kermeta.language.behavior.JavaStaticCall) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;))).createBehaviorJava(context), &quot;(&quot;);&#xA;&#xA;&#x9;result = static_call_set_1.first();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_173 = false;&#xA;&#x9;idIfCond_173 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;));&#xA;&#xA;&#x9;if( idIfCond_173 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_174 = false;&#xA;&#x9;idIfCond_174 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;));&#xA;&#xA;&#x9;if( idIfCond_174 ) {&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> static_call_set_2 = kermeta.standard.helper.StringWrapper.split(((kermeta.language.behavior.JavaStaticCall) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;))).createBehaviorJava(context), &quot;(&quot;);&#xA;&#xA;&#x9;result = static_call_set_2.first();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createBehaviorJavaFromPost" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft33 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPost()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_175 = false;&#xA;&#x9;while( !idLoopCond_175 ) {&#xA;&#x9;idLoopCond_175 = it_ft33.isOff();&#xA;&#x9;if ( idLoopCond_175 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint constraint_lbdExp33 = it_ft33.next();&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;result_post = &quot;, context.getTYPE_SEPARATOR()), &quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\nif( &quot;), context.getJAVA_CLASS_EXECUTION_CONTEXT()), &quot;.getInstance().mustBeChecked( \&quot;post__&quot;), kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(constraint_lbdExp33))), &quot;__&quot;), constraint_lbdExp33.getName()), &quot;\&quot; ) ) {\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;java.lang.Boolean result_post = false;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, constraint_lbdExp33.createBehaviorJava(context)), &quot;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;if( !result_post ) {\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;throw new &quot;), context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot;(exp);\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;}\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;}\n&quot;);&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_176 = false;&#xA;&#x9;idIfCond_176 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_176 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\n//PostConditions Checking\n{&quot;, result), &quot;}&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EOperation ecoreOperation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(c.getEcoreModelElement().getEOperations()).add(ecoreOperation);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreOperation);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft35 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_177 = false;&#xA;&#x9;while( !idLoopCond_177 ) {&#xA;&#x9;idLoopCond_177 = it_ft35.isOff();&#xA;&#x9;if ( idLoopCond_177 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp35 = it_ft35.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp34 = o_lbdExp35;&#xA;&#xA;&#x9;o_lbdExp34.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft36 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_178 = false;&#xA;&#x9;while( !idLoopCond_178 ) {&#xA;&#x9;idLoopCond_178 = it_ft36.isOff();&#xA;&#x9;if ( idLoopCond_178 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter o_lbdExp36 = it_ft36.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter o_lbdExp34 = o_lbdExp36;&#xA;&#xA;&#x9;o_lbdExp34.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft37 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPre()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_179 = false;&#xA;&#x9;while( !idLoopCond_179 ) {&#xA;&#x9;idLoopCond_179 = it_ft37.isOff();&#xA;&#x9;if ( idLoopCond_179 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp37 = it_ft37.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp34 = o_lbdExp37;&#xA;&#xA;&#x9;o_lbdExp34.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft38 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPost()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_180 = false;&#xA;&#x9;while( !idLoopCond_180 ) {&#xA;&#x9;idLoopCond_180 = it_ft38.isOff();&#xA;&#x9;if ( idLoopCond_180 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp38 = it_ft38.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp34 = o_lbdExp38;&#xA;&#xA;&#x9;o_lbdExp34.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft39 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_181 = false;&#xA;&#x9;while( !idLoopCond_181 ) {&#xA;&#x9;idLoopCond_181 = it_ft39.isOff();&#xA;&#x9;if ( idLoopCond_181 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp39 = it_ft39.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable o_lbdExp34 = t_lbdExp39;&#xA;&#xA;&#x9;o_lbdExp34.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_182 = false;&#xA;&#x9;idIfCond_182 = kermeta.standard.helper.BooleanWrapper.not(this.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_182 ) {&#xA;&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.helper.ObjectSuper.super_applyPass2(this, context);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.LinkSetterForTypedElement s = ((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getLinkSetterForTypedElement()));&#xA;&#xA;&#x9;s.setLinks(this, this.getEcoreModelElement(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_183 = false;&#xA;&#x9;idIfCond_183 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getSuperOperation()));&#xA;&#xA;&#x9;if( idIfCond_183 ) {&#xA;&#xA;&#x9;java.lang.String qualifiedName = this.getSuperOperation().getOwningClass().qualifiedName();&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;superOperation&quot;).getName()), qualifiedName);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(this.getEcoreModelElement().getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isFunctionType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return true if the given operation is a FunctionType&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_184 = false;&#xA;&#x9;idIfCond_184 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getFunctionTypeParameter())), kermeta.standard.helper.IntegerWrapper.isGreater(this.getFunctionTypeParameter().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_184 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="compilingInSimkMode">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Compiling in Simk mode all the methods (inherited methods included) from ValueType&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;simk.SMContext sMContext = context.getSimkModel().retrieveOrCreateContextForWrapper(this, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_185 = false;&#xA;&#x9;idIfCond_185 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sMContext));&#xA;&#xA;&#x9;if( idIfCond_185 ) {&#xA;&#xA;&#x9;simk.SMMethod staticMethod = ((simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMMethod()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(context.getSimkModel().getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(sMContext.getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;staticMethod.setName(this.getName());&#xA;&#xA;&#x9;staticMethod.setWrapperUsage();&#xA;&#xA;&#x9;simk.SMParameter self_param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMParameter()));&#xA;&#xA;&#x9;self_param.setName(&quot;self&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_186 = false;&#xA;&#x9;idIfCond_186 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getWrapperValueTypeSelfExpression(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_186 ) {&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = kermeta.standard.helper.StringWrapper.getPropertyInfos(this.getWrapperValueTypeSelfExpression());&#xA;&#xA;&#x9;java.lang.String map_value = map_infos.getValue(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_187 = false;&#xA;&#x9;idIfCond_187 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(map_value));&#xA;&#xA;&#x9;if( idIfCond_187 ) {&#xA;&#xA;&#x9;self_param.setType(map_value);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_188 = false;&#xA;&#x9;idIfCond_188 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(self_param.getType());&#xA;&#xA;&#x9;if( idIfCond_188 ) {&#xA;&#xA;&#x9;self_param.setType(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(self_param);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft40 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_189 = false;&#xA;&#x9;while( !idLoopCond_189 ) {&#xA;&#x9;idLoopCond_189 = it_ft40.isOff();&#xA;&#x9;if ( idLoopCond_189 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter p_lbdExp40 = it_ft40.next();&#xA;&#xA;&#x9;simk.SMParameter param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMParameter()));&#xA;&#xA;&#x9;param.setName(p_lbdExp40.getName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_190 = false;&#xA;&#x9;idIfCond_190 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(p_lbdExp40.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;if( idIfCond_190 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_191 = false;&#xA;&#x9;idIfCond_191 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(p_lbdExp40.getType().getTypeQName(), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName()), kermeta.standard.helper.StringWrapper.equals(p_lbdExp40.getType().getTypeQName(), &quot;kermeta::language::structure::Object&quot;));&#xA;&#xA;&#x9;if( idIfCond_191 ) {&#xA;&#xA;&#x9;param.setType(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;}&#xA; else {&#xA;&#xA;&#x9;param.setType(p_lbdExp40.getType().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_192 = false;&#xA;&#x9;idIfCond_192 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(param.getType());&#xA;&#xA;&#x9;if( idIfCond_192 ) {&#xA;&#xA;&#x9;param.setType(&quot;void&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(param);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;simk.SMReturn sMReturn = ((simk.SMReturn) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMReturn()));&#xA;&#xA;&#x9;staticMethod.setSMReturn(sMReturn);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_193 = false;&#xA;&#x9;idIfCond_193 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getWrapperValueTypeReturnType(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_193 ) {&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = kermeta.standard.helper.StringWrapper.getPropertyInfos(this.getWrapperValueTypeReturnType());&#xA;&#xA;&#x9;java.lang.String map_value = map_infos.getValue(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_194 = false;&#xA;&#x9;idIfCond_194 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(map_value));&#xA;&#xA;&#x9;if( idIfCond_194 ) {&#xA;&#xA;&#x9;sMReturn.setType(map_value);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_195 = false;&#xA;&#x9;idIfCond_195 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sMReturn.getType());&#xA;&#xA;&#x9;if( idIfCond_195 ) {&#xA;&#xA;&#x9;sMReturn.setType(this.getType().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_196 = false;&#xA;&#x9;idIfCond_196 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(sMReturn.getType());&#xA;&#xA;&#x9;if( idIfCond_196 ) {&#xA;&#xA;&#x9;sMReturn.setType(&quot;void&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(&quot;//Protection of the following code\n&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_197 = false;&#xA;&#x9;idIfCond_197 = kermeta.standard.helper.StringWrapper.equals(this.getName(), &quot;equals&quot;);&#xA;&#xA;&#x9;if( idIfCond_197 ) {&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;if( self == null || &quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).first().getName()), &quot; == null ) {\n&quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;return self == &quot;), org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).first().getName()), &quot;;\n&quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;}\n\n&quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_198 = false;&#xA;&#x9;idIfCond_198 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(this.getName());&#xA;&#xA;&#x9;if( idIfCond_198 ) {&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;if( self == null || ((java.lang.Object) self) instanceof kermeta.language.structure.Object ) {\n&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_199 = false;&#xA;&#x9;idIfCond_199 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(staticMethod.getSMReturn().getType(), &quot;void&quot;);&#xA;&#xA;&#x9;if( idIfCond_199 ) {&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;return (&quot;), staticMethod.getSMReturn().getType()), &quot;) &quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), context.getOBJECT_UTIL_CLASS()), &quot;.&quot;), this.getName()), &quot;((kermeta.language.structure.Object) ((java.lang.Object) self)&quot;));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft41 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_200 = false;&#xA;&#x9;while( !idLoopCond_200 ) {&#xA;&#x9;idLoopCond_200 = it_ft41.isOff();&#xA;&#x9;if ( idLoopCond_200 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter p_lbdExp41 = it_ft41.next();&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;, &quot;), p_lbdExp41.getName()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;);\n&quot;));&#xA;}&#xA; else {&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;if( self == null ) {\n&quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;kermeta.exceptions.CallOnVoidTarget exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createCallOnVoidTarget();\n&quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;exp.setMessage(\&quot;Initialize the &quot;), context.getCurrent_valueType().getName()), &quot; expression\&quot;);\n&quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;throw new &quot;), context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot;(exp);\n&quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;}\n//End of the protection\n\n&quot;));&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), this.createBehaviorJava(context)));&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="mustBeDuplicated" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Unused for the moment&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="deprecated" value=""/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_201 = false;&#xA;&#x9;idIfCond_201 = kermeta.standard.helper.BooleanWrapper.or(this.getType().isValueType(), this.hasAValueTypedParameter());&#xA;&#xA;&#x9;if( idIfCond_201 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createBehaviorJavaFromPre" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft42 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPre()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_202 = false;&#xA;&#x9;while( !idLoopCond_202 ) {&#xA;&#x9;idLoopCond_202 = it_ft42.isOff();&#xA;&#x9;if ( idLoopCond_202 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint constraint_lbdExp42 = it_ft42.next();&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;result_pre = &quot;, context.getTYPE_SEPARATOR()), &quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\nif( &quot;), context.getJAVA_CLASS_EXECUTION_CONTEXT()), &quot;.getInstance().mustBeChecked( \&quot;pre__&quot;), kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(constraint_lbdExp42))), &quot;__&quot;), constraint_lbdExp42.getName()), &quot;\&quot; ) ) {\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;java.lang.Boolean result_pre = false;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, constraint_lbdExp42.createBehaviorJava(context)), &quot;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;if( !result_pre ) {\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;throw new &quot;), context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot;(exp);\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;}\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;}\n&quot;);&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_203 = false;&#xA;&#x9;idIfCond_203 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_203 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\n//PreConditions Checking\n{&quot;, result), &quot;}&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getFunctionTypeParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter> result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter> ft_parameters = null;&#xA;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter> result_ft43 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft43 = null;&#xA;&#xA;&#x9;result_ft43 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft43 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_204 = false;&#xA;&#x9;while( !idLoopCond_204 ) {&#xA;&#x9;idLoopCond_204 = it_ft43.isOff();&#xA;&#x9;if ( idLoopCond_204 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft43 = it_ft43.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_205 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Parameter p_lbdExp43 = elem_ft43;&#xA;&#xA;&#x9;idIfCond_205 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(p_lbdExp43.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_205 ) {&#xA;&#xA;&#x9;result_ft43.add(elem_ft43);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;ft_parameters = result_ft43;&#xA;//EIft:select&#xA;&#xA;&#xA;&#x9;result = ft_parameters;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/Sequence">
              <eTypeArguments eClassifier="#/2/language/structure/Parameter"/>
            </eGenericType>
          </eOperations>
          <eOperations name="isVoidType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_206 = false;&#xA;&#x9;idIfCond_206 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(type_label, &quot;null&quot;), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;VoidType&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta::standard::Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta::language::structure::VoidType&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta.standard.Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta.language.structure.VoidType&quot;));&#xA;&#xA;&#x9;if( idIfCond_206 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type_label" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EOperation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EOperation result = null;&#xA;&#xA;&#x9;ecore.EOperation ecoreOperation = ((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEOperation()));&#xA;&#xA;&#x9;ecoreOperation.setName(this.getFinalName(context));&#xA;&#xA;&#x9;ecoreOperation.setOrdered(this.getIsOrdered());&#xA;&#xA;&#x9;ecoreOperation.setUnique(this.getIsUnique());&#xA;&#xA;&#x9;ecoreOperation.setLowerBound(this.getLower());&#xA;&#xA;&#x9;ecoreOperation.setUpperBound(this.getUpper());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_207 = false;&#xA;&#x9;idIfCond_207 = this.getIsAbstract();&#xA;&#xA;&#x9;if( idIfCond_207 ) {&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createAbstract();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreOperation.getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;&#xA;&#x9;result = ecoreOperation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="hasAValueTypedParameter" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * The given operation has at least a parameter having ValueType as type&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter p = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.structure.Parameter result_ft44 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft44 = null;&#xA;&#xA;&#x9;result_ft44 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft44 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_208 = false;&#xA;&#x9;while( !idLoopCond_208 ) {&#xA;&#x9;idLoopCond_208 = kermeta.standard.helper.BooleanWrapper.or(it_ft44.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft44, null));&#xA;&#x9;if ( idLoopCond_208 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft44 = it_ft44.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_209 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Parameter p_lbdExp44 = elem_ft44;&#xA;&#xA;&#x9;idIfCond_209 = p_lbdExp44.getType().isValueType();&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_209 ) {&#xA;&#xA;&#x9;result_ft44 = elem_ft44;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;p = result_ft44;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_210 = false;&#xA;&#x9;idIfCond_210 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(p));&#xA;&#xA;&#x9;if( idIfCond_210 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_211 = false;&#xA;&#x9;idIfCond_211 = kermeta.standard.helper.BooleanWrapper.not(this.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_211 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_212 = false;&#xA;&#x9;idIfCond_212 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(context.getCurrent_valueType());&#xA;&#xA;&#x9;if( idIfCond_212 ) {&#xA;&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft46 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_213 = false;&#xA;&#x9;while( !idLoopCond_213 ) {&#xA;&#x9;idLoopCond_213 = it_ft46.isOff();&#xA;&#x9;if ( idLoopCond_213 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp46 = it_ft46.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp45 = o_lbdExp46;&#xA;&#xA;&#x9;p_lbdExp45.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft47 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_214 = false;&#xA;&#x9;while( !idLoopCond_214 ) {&#xA;&#x9;idLoopCond_214 = it_ft47.isOff();&#xA;&#x9;if ( idLoopCond_214 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter o_lbdExp47 = it_ft47.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter p_lbdExp45 = o_lbdExp47;&#xA;&#xA;&#x9;p_lbdExp45.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft48 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPre()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_215 = false;&#xA;&#x9;while( !idLoopCond_215 ) {&#xA;&#x9;idLoopCond_215 = it_ft48.isOff();&#xA;&#x9;if ( idLoopCond_215 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp48 = it_ft48.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint p_lbdExp45 = o_lbdExp48;&#xA;&#xA;&#x9;p_lbdExp45.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft49 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPost()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_216 = false;&#xA;&#x9;while( !idLoopCond_216 ) {&#xA;&#x9;idLoopCond_216 = it_ft49.isOff();&#xA;&#x9;if ( idLoopCond_216 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp49 = it_ft49.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint p_lbdExp45 = o_lbdExp49;&#xA;&#xA;&#x9;p_lbdExp45.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft50 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_217 = false;&#xA;&#x9;while( !idLoopCond_217 ) {&#xA;&#x9;idLoopCond_217 = it_ft50.isOff();&#xA;&#x9;if ( idLoopCond_217 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp50 = it_ft50.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable p_lbdExp45 = t_lbdExp50;&#xA;&#xA;&#x9;p_lbdExp45.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;&#xA;&#x9;this.createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_218 = false;&#xA;&#x9;idIfCond_218 = this.isRunnable();&#xA;&#xA;&#x9;if( idIfCond_218 ) {&#xA;&#xA;&#x9;simk.SMContext smContext = context.getSimkModel().retrieveOrCreateContextForRunner(this, context);&#xA;&#xA;&#x9;simk.SMMethod staticMethod = ((simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMMethod()));&#xA;&#xA;&#x9;java.lang.String cd_qn = kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;&#x9;java.lang.String class_label = ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppEmfLikeGetEMF(cd_qn);&#xA;&#xA;&#x9;staticMethod.setName(&quot;main&quot;);&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, cd_qn), &quot; anExec = (&quot;), cd_qn), &quot;)&quot;), &quot; org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;), class_label), &quot;);&quot;), &quot;\nanExec.&quot;), this.getFinalName(context)), &quot;(&quot;));&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft51 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_219 = false;&#xA;&#x9;while( !idLoopCond_219 ) {&#xA;&#x9;idLoopCond_219 = it_ft51.isOff();&#xA;&#x9;if ( idLoopCond_219 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter params_lbdExp51 = it_ft51.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_220 = false;&#xA;&#x9;idIfCond_220 = kermeta.standard.helper.IntegerWrapper.isGreater(i, 0);&#xA;&#xA;&#x9;if( idIfCond_220 ) {&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;, &quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot; args[&quot;), kermeta.standard.helper.IntegerWrapper.toString(i)), &quot;]&quot;));&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;);\n&quot;));&#xA;&#xA;&#x9;staticMethod.setUsages(simk.SMUsage.getByName(&quot;Runner&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(context.getSimkModel().getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(smContext.getSMMethods()).add(staticMethod);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.compilingInSimkMode(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/2/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeParameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the Operation, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="cuid" eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Operation is abstract"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="post" upperBound="-1"
              eType="#/2/language/structure/Constraint" containment="true" eOpposite="#/2/language/structure/Constraint/postOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Post-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
              eType="#/2/language/structure/Parameter" containment="true" eOpposite="#/2/language/structure/Parameter/operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException"
              upperBound="-1" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Exceptions raised by the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="pre" upperBound="-1"
              eType="#/2/language/structure/Constraint" containment="true" eOpposite="#/2/language/structure/Constraint/preOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Pre-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superOperation" eType="#/2/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Super-operation of the Operation, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="lambdaExpression"
              eType="#/2/language/behavior/LambdaExpression"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/2/language/structure/ClassDefinition"
              eOpposite="#/2/language/structure/ClassDefinition/ownedOperation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition owning the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EOperation"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/MultiplicityElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="#/2/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class definition for the &lt;pre>Void&lt;/pre> type"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;null&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA;type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA;&lt;pre>alias MyString : kermeta::standard::String&lt;/pre>. Another example could be: &lt;code>root::apackage::AClass&lt;/code>&#xD;&#xA;&lt;pre>alias MyClass : root::apackage::AClass&lt;/pre>, thus a primitive type may be not a subtype of ValueType (ValueType is a concept from the Kermeta framework)."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_221 = false;&#xA;&#x9;idIfCond_221 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.isValueType()), this.isEDataType());&#xA;&#xA;&#x9;if( idIfCond_221 ) {&#xA;&#xA;&#x9;result = this.getEMFEDataTypeInstanceClassName();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_222 = false;&#xA;&#x9;idIfCond_222 = kermeta.standard.helper.StringWrapper.equals(result, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_222 ) {&#xA;&#xA;&#x9;result = this.getInstanceType().createBehaviorJava(context);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EDataType eModelElement = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Package p = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(eModelElement);&#xA;&#xA;&#x9;this.setEcoreModelElement(eModelElement);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft53 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_223 = false;&#xA;&#x9;while( !idLoopCond_223 ) {&#xA;&#x9;idLoopCond_223 = it_ft53.isOff();&#xA;&#x9;if ( idLoopCond_223 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp53 = it_ft53.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag cd_lbdExp52 = o_lbdExp53;&#xA;&#xA;&#x9;cd_lbdExp52.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EDataType">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EDataType result = null;&#xA;&#xA;&#x9;ecore.EDataType eModelElement = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEDataType()));&#xA;&#xA;&#x9;eModelElement.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(&quot;java.lang.Object&quot;);&#xA;&#xA;&#x9;java.lang.String instanceClassName = this.getEMFEDataTypeInstanceClassName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_224 = false;&#xA;&#x9;idIfCond_224 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(instanceClassName, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_224 ) {&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(instanceClassName);&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> etps = kermeta.standard.helper.StringWrapper.split(this.getUniqueTagValue(&quot;ecore.EDataType_eTypeParameters&quot;), &quot; , &quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_225 = false;&#xA;&#x9;idIfCond_225 = kermeta.standard.helper.IntegerWrapper.isGreater(etps.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_225 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft54 = etps.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_226 = false;&#xA;&#x9;while( !idLoopCond_226 ) {&#xA;&#x9;idLoopCond_226 = it_ft54.isOff();&#xA;&#x9;if ( idLoopCond_226 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String etp_lbdExp54 = it_ft54.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_227 = false;&#xA;&#x9;idIfCond_227 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(etp_lbdExp54, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_227 ) {&#xA;&#xA;&#x9;ecore.ETypeParameter ecoreTypeParameter = ((ecore.ETypeParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getETypeParameter()));&#xA;&#xA;&#x9;ecoreTypeParameter.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(etp_lbdExp54, context));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(eModelElement.getETypeParameters()).add(ecoreTypeParameter);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;eModelElement.setSerializable(this.getEMFEDataTypeIsSerializable());&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition typeDef = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getClassFromPrimitiveType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeDefinition();&#xA;&#xA;&#x9;java.lang.String typeDef_EMFInstanceClassName = typeDef.getEMFInstanceClassName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_228 = false;&#xA;&#x9;idIfCond_228 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(typeDef_EMFInstanceClassName, &quot;&quot;), kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(eModelElement.getInstanceClassName(), &quot;&quot;), kermeta.standard.helper.StringWrapper.equals(eModelElement.getInstanceClassName(), &quot;java.lang.Object&quot;)));&#xA;&#xA;&#x9;if( idIfCond_228 ) {&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(typeDef_EMFInstanceClassName);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String qualifiedName = typeDef.qualifiedName();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;alias&quot;).getName()), qualifiedName));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_229 = false;&#xA;&#x9;idIfCond_229 = kermeta.standard.helper.StringWrapper.equals(eModelElement.getInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_229 ) {&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(kermeta.standard.helper.StringWrapper.replace(qualifiedName, context.getKERMETA_SEPARATOR(), context.getJAVA_SEPARATOR()));&#xA;}&#xA;&#xA;&#xA;&#x9;result = eModelElement;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type the primitive type is linked with"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EDataType"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/DataType"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/TypeContainer"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" eSuperTypes="#/2/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for Parameterized types, namely, Class and ModelType"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_230 = false;&#xA;&#x9;idIfCond_230 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getTypeDefinition().getEMFInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_230 ) {&#xA;&#xA;&#x9;result = this.getTypeDefinition().getEMFInstanceClassName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(this.getTypeQName(), &quot;::&quot;, &quot;.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String str_tpb = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariableBinding> it_ft55 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(this.getTypeParamBinding()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_231 = false;&#xA;&#x9;while( !idLoopCond_231 ) {&#xA;&#x9;idLoopCond_231 = it_ft55.isOff();&#xA;&#x9;if ( idLoopCond_231 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariableBinding tpb_lbdExp55 = it_ft55.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_232 = false;&#xA;&#x9;idIfCond_232 = kermeta.standard.helper.BooleanWrapper.not(context.getFtSuffixActivation());&#xA;&#xA;&#x9;if( idIfCond_232 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_233 = false;&#xA;&#x9;idIfCond_233 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, 1);&#xA;&#xA;&#x9;if( idIfCond_233 ) {&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, &quot;, &quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_234 = false;&#xA;&#x9;idIfCond_234 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tpb_lbdExp55.getType()));&#xA;&#xA;&#x9;if( idIfCond_234 ) {&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, tpb_lbdExp55.getType().createBehaviorJava(context));&#xA;}&#xA; else {&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Type type_from_map = context.getFtMapTypeStack().peek().getValue(tpb_lbdExp55.getType());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_235 = false;&#xA;&#x9;idIfCond_235 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(type_from_map));&#xA;&#xA;&#x9;if( idIfCond_235 ) {&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, type_from_map.createBehaviorJava(context));&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_236 = false;&#xA;&#x9;idIfCond_236 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(context.getFtProductTypeStack().peek().getTypeByIndex(i), this);&#xA;&#xA;&#x9;if( idIfCond_236 ) {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_237 = false;&#xA;&#x9;idIfCond_237 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(context.getFtProductTypeStack().peek().getTypeByIndex(i)));&#xA;&#xA;&#x9;if( idIfCond_237 ) {&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, context.getFtProductTypeStack().peek().getTypeByIndex(i).createBehaviorJava(context));&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_238 = false;&#xA;&#x9;idIfCond_238 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(str_tpb, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_238 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_239 = false;&#xA;&#x9;idIfCond_239 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_239 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;&lt;&quot;), str_tpb), &quot;>&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = str_tpb;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getClassDefinitionAsTyped" eType="#/2/language/structure/ClassDefinition">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.ClassDefinition result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_240 = false;&#xA;&#x9;idIfCond_240 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_240 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/2/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Bindings between type variables and provided types "/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" lowerBound="1"
              eType="#/2/language/structure/GenericTypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Definition of the Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualTypeBinding"
              upperBound="-1" eType="#/2/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_241 = false;&#xA;&#x9;idIfCond_241 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_241 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Type type_from_map = context.getFtMapTypeStack().peek().getValue(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_242 = false;&#xA;&#x9;idIfCond_242 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(type_from_map));&#xA;&#xA;&#x9;if( idIfCond_242 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;Please contact the Kermeta Development team, if you are in this case [ObjectTypeVariable::createBehaviorJava - not type_from_map.isVoid()] &quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this)));&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;result = type_from_map.createBehaviorJava(context);&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.structure.Object obj = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.structure.TypeVariable result_ft56 = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeVariable elem_ft56 = null;&#xA;&#xA;&#x9;result_ft56 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft56 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_243 = false;&#xA;&#x9;while( !idLoopCond_243 ) {&#xA;&#x9;idLoopCond_243 = kermeta.standard.helper.BooleanWrapper.or(it_ft56.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft56, null));&#xA;&#x9;if ( idLoopCond_243 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft56 = it_ft56.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_244 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.TypeVariable otv_lbdExp56 = elem_ft56;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_245 = false;&#xA;&#x9;idIfCond_245 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(otv_lbdExp56, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_245 ) {&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_244 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this, otv_lbdExp56);&#xA;}&#xA;&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_244 ) {&#xA;&#xA;&#x9;result_ft56 = elem_ft56;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;obj = result_ft56;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_246 = false;&#xA;&#x9;idIfCond_246 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(obj)), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, 0));&#xA;&#xA;&#x9;if( idIfCond_246 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_247 = false;&#xA;&#x9;idIfCond_247 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getFtProductTypeStack().peek().getTypeByIndex(i), this);&#xA;&#xA;&#x9;if( idIfCond_247 ) {&#xA;&#xA;&#x9;result = context.getFtProductTypeStack().peek().getTypeByIndex(i).createBehaviorJava(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.ETypeParameter ecoreTypeParameter = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Object container = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_248 = false;&#xA;&#x9;idIfCond_248 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_248 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement().getETypeParameters()).add(ecoreTypeParameter);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_249 = false;&#xA;&#x9;idIfCond_249 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_249 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getEcoreModelElement().getETypeParameters()).add(ecoreTypeParameter);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreTypeParameter);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/ETypeParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.ETypeParameter result = null;&#xA;&#xA;&#x9;ecore.ETypeParameter ecoreTypeParameter = ((ecore.ETypeParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getETypeParameter()));&#xA;&#xA;&#x9;ecoreTypeParameter.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;result = ecoreTypeParameter;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/ETypeParameter"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/TypeVariable"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for Enumeration"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(this.qualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="clone" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Implements kermeta::language::structure::Type.clone(Object)&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( &quot;NOT IMPLEMENTED&quot; );&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EEnum ecoreEnumeration = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Package p = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(ecoreEnumeration);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreEnumeration);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft58 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_250 = false;&#xA;&#x9;while( !idLoopCond_250 ) {&#xA;&#x9;idLoopCond_250 = it_ft58.isOff();&#xA;&#x9;if ( idLoopCond_250 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp58 = it_ft58.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag l_lbdExp57 = o_lbdExp58;&#xA;&#xA;&#x9;l_lbdExp57.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.EnumerationLiteral> it_ft59 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.EnumerationLiteral>convertAsOrderedSet(this.getOwnedLiteral()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_251 = false;&#xA;&#x9;while( !idLoopCond_251 ) {&#xA;&#x9;idLoopCond_251 = it_ft59.isOff();&#xA;&#x9;if ( idLoopCond_251 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.EnumerationLiteral l_lbdExp59 = it_ft59.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.EnumerationLiteral l_lbdExp57 = l_lbdExp59;&#xA;&#xA;&#x9;l_lbdExp57.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EEnum">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EEnum result = null;&#xA;&#xA;&#x9;ecore.EEnum ecoreEnumeration = ((ecore.EEnum) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEEnum()));&#xA;&#xA;&#x9;ecoreEnumeration.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;result = ecoreEnumeration;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1"
              eType="#/2/language/structure/EnumerationLiteral" containment="true"
              eOpposite="#/2/language/structure/EnumerationLiteral/enumeration">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owned items in an Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EEnum"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/DataType"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type used to define the use of lambda expressions.&#xA; Uses :&#xA; &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xA;     var test : Boolean init true&#xA;     from var it : Iterator&lt;G> init iterator&#xA;     until it.isOff&#xA;     loop&#xA;        test := test and func(it.next)&#xA;     end&#xA;     result := test&#xA; end&#xA; &lt;/pre>&#xA; *&#xA; In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xA; Boolean, with a parameter of type G and a return type of type Boolean&#xA; The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter."/>
          </eAnnotations>
          <eAnnotations source="kermeta.inv">
            <details key="resultType" value=""/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.helper.TypeSuper.super_createBehaviorJava(this, context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the function (a ProductType for multiple parameters)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Result type of the function"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EAnnotation"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/TypeContainer"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Type"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ProductType" eSuperTypes="#/2/language/structure/TypeContainer #/2/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type corresponding to a set of Types&#xA;Only used in the context of FunctionType"/>
          </eAnnotations>
          <eOperations name="getTypeByIndex" eType="#/2/language/structure/Type">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Type result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_252 = false;&#xA;&#x9;idIfCond_252 = kermeta.standard.helper.IntegerWrapper.isLower(index, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).size());&#xA;&#xA;&#x9;if( idIfCond_252 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_253 = false;&#xA;&#x9;idIfCond_253 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).elementAt(index), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_253 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).elementAt(index), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).elementAt(index);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="index" eType="#/2/standard/JavaInteger"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" unique="false"
              upperBound="-1" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Types "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Constraint">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Constraint is part of a contract implementation in a Class definition or an operation.&#xA;Three kinds of constraints are available : pre, post, and inv (invariant constraint)"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_254 = false;&#xA;&#x9;idIfCond_254 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;));&#xA;&#xA;&#x9;if( idIfCond_254 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.getBody().createBehaviorJava(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).setIsLastExpression(true);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.getBody().createExpression(context, ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer()))).toString());&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setSimkForInvariant">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;simk.SMContext smContext = context.getSimkModel().retrieveOrCreateContextForInvariant(this, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_255 = false;&#xA;&#x9;idIfCond_255 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(smContext));&#xA;&#xA;&#x9;if( idIfCond_255 ) {&#xA;&#xA;&#x9;simk.SMMethod staticMethod = ((simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMMethod()));&#xA;&#xA;&#x9;staticMethod.setName(kermeta.standard.helper.StringWrapper.plus(&quot;checkInvariant_&quot;, this.getId()));&#xA;&#xA;&#x9;staticMethod.setBody(&quot;java.lang.Boolean result = false;\n&quot;);&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;result = &quot;, context.getTYPE_SEPARATOR()), &quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;java.lang.Boolean staticOperationMode_backup = context.getStaticOperationMode();&#xA;&#xA;&#x9;context.setStaticOperationMode(true);&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), this.createBehaviorJava(context)));&#xA;&#xA;&#x9;context.setStaticOperationMode(staticOperationMode_backup);&#xA;&#xA;&#x9;staticMethod.setBody(kermeta.standard.helper.StringWrapper.plus(staticMethod.getBody(), &quot;\nreturn result;&quot;));&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;&#xA;&#x9;staticMethod.setUsages(simk.SMUsage.getByName(&quot;Invariant&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(context.getSimkModel().getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(smContext.getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;simk.SMReturn smReturn = ((simk.SMReturn) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMReturn()));&#xA;&#xA;&#x9;smReturn.setType(&quot;java.lang.Boolean&quot;);&#xA;&#xA;&#x9;staticMethod.setSMReturn(smReturn);&#xA;&#xA;&#x9;simk.SMParameter default_param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMParameter()));&#xA;&#xA;&#x9;default_param.setName(&quot;self&quot;);&#xA;&#xA;&#x9;default_param.setType(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), context.getKERMETA_SEPARATOR(), context.getJAVA_SEPARATOR()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(default_param);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Object c = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this);&#xA;&#xA;&#x9;kermeta.language.structure.Property p = c.getPropertyValue(&quot;ecoreModelElement&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_256 = false;&#xA;&#x9;idIfCond_256 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p, null);&#xA;&#xA;&#x9;if( idIfCond_256 ) {&#xA;&#xA;&#x9;ecore.EModelElement ecoreModelElement = ((ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(c, p), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EModelElement&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreModelElement.getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreAnnotation);&#xA;&#xA;&#x9;this.setId(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(this)), &quot;__&quot;), this.getName()));&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.helper.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;java.lang.String body = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_257 = false;&#xA;&#x9;idIfCond_257 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getStereotype(), kermeta.language.structure.ConstraintType.getByName(&quot;inv&quot;));&#xA;&#xA;&#x9;if( idIfCond_257 ) {&#xA;&#xA;&#x9;result = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).create(&quot;kermeta.inv&quot;, this.getName(), body);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_258 = false;&#xA;&#x9;idIfCond_258 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getStereotype(), kermeta.language.structure.ConstraintType.getByName(&quot;pre&quot;));&#xA;&#xA;&#x9;if( idIfCond_258 ) {&#xA;&#xA;&#x9;result = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).create(&quot;kermeta.pre&quot;, this.getName(), body);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_259 = false;&#xA;&#x9;idIfCond_259 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getStereotype(), kermeta.language.structure.ConstraintType.getByName(&quot;post&quot;));&#xA;&#xA;&#x9;if( idIfCond_259 ) {&#xA;&#xA;&#x9;result = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).create(&quot;kermeta.post&quot;, this.getName(), body);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isPre" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Not used for the moment&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getStereotype(), kermeta.language.structure.ConstraintType.getByName(&quot;pre&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="c" eType="#/2/language/structure/Constraint"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_260 = false;&#xA;&#x9;idIfCond_260 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getStereotype(), kermeta.language.structure.ConstraintType.getByName(&quot;inv&quot;));&#xA;&#xA;&#x9;if( idIfCond_260 ) {&#xA;&#xA;&#x9;this.setSimkForInvariant(context);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isPost" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Not used for the moment&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getStereotype(), kermeta.language.structure.ConstraintType.getByName(&quot;post&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="c" eType="#/2/language/structure/Constraint"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false"
              lowerBound="1" eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the constraint, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="preOwner" eType="#/2/language/structure/Operation"
              eOpposite="#/2/language/structure/Operation/pre">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to pre-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" eType="#/2/language/structure/ConstraintType"
              transient="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Constraint (precond/postcond/inv)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="postOwner" eType="#/2/language/structure/Operation"
              eOpposite="#/2/language/structure/Operation/post">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to post-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="#/2/language/structure/ConstraintLanguage"
              transient="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Language in which the constraint is expressed"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="invOwner" eType="#/2/language/structure/ClassDefinition"
              eOpposite="#/2/language/structure/ClassDefinition/inv">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning ClassDefinition if Constraint corresponds to invariant"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EAnnotation"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/2/language/structure/NamedElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Traceability" eSuperTypes="#/2/language/structure/Object">
          <eTypeParameters name="X"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ecoreModelElement">
            <eGenericType eTypeParameter="#/2/language/structure/Traceability/X"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelingUnit">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xA;It also reference others modeling unit."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="retrievePackage" eType="#/2/language/structure/Package">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Package result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> set_qname = kermeta.standard.helper.StringWrapper.split(qname, &quot;::&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_261 = false;&#xA;&#x9;idIfCond_261 = kermeta.standard.helper.IntegerWrapper.equals(set_qname.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_261 ) {&#xA;&#xA;&#x9;set_qname.add(qname);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.structure.Package result_ft60 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft60 = null;&#xA;&#xA;&#x9;result_ft60 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft60 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_262 = false;&#xA;&#x9;while( !idLoopCond_262 ) {&#xA;&#x9;idLoopCond_262 = kermeta.standard.helper.BooleanWrapper.or(it_ft60.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft60, null));&#xA;&#x9;if ( idLoopCond_262 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft60 = it_ft60.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_263 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Package p_lbdExp60 = elem_ft60;&#xA;&#xA;&#x9;idIfCond_263 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp60.getName(), set_qname.at(0));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_263 ) {&#xA;&#xA;&#x9;result_ft60 = elem_ft60;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;pack = result_ft60;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_264 = false;&#xA;&#x9;idIfCond_264 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(pack));&#xA;&#xA;&#x9;if( idIfCond_264 ) {&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 1;&#xA;&#x9;java.lang.Boolean idLoopCond_265 = false;&#xA;&#x9;while( !idLoopCond_265 ) {&#xA;&#x9;idLoopCond_265 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, set_qname.size());&#xA;&#x9;if ( idLoopCond_265 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Package result_ft61 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft61 = null;&#xA;&#xA;&#x9;result_ft61 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft61 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_266 = false;&#xA;&#x9;while( !idLoopCond_266 ) {&#xA;&#x9;idLoopCond_266 = kermeta.standard.helper.BooleanWrapper.or(it_ft61.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft61, null));&#xA;&#x9;if ( idLoopCond_266 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft61 = it_ft61.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_267 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Package p_lbdExp61 = elem_ft61;&#xA;&#xA;&#x9;idIfCond_267 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp61.getName(), set_qname.at(i));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_267 ) {&#xA;&#xA;&#x9;result_ft61 = elem_ft61;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;pack = result_ft61;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result = pack;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="qname" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="createKRuntimeError">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * We cannot use an Alias to define this indiretion because the concept of KRuntimeError does not exist&#xD;&#xA;&#x9; * in framework.ecore, thus we create in this operation a new EDataType that targets the KRuntimeError Java Impl&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EDataType exception_EDataType = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEDataType()));&#xA;&#xA;&#x9;exception_EDataType.setName(&quot;KRuntimeError&quot;);&#xA;&#xA;&#x9;exception_EDataType.setInstanceClassName(context.getJAVA_CLASS_EXCEPTION_SWITCHER());&#xA;&#xA;&#x9;exception_EDataType.setSerializable(false);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(this.retrievePackage(&quot;kermeta::exceptions&quot;).getEcoreModelElement().getEClassifiers()).add(exception_EDataType);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreAnnotation);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft63 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_268 = false;&#xA;&#x9;while( !idLoopCond_268 ) {&#xA;&#x9;idLoopCond_268 = it_ft63.isOff();&#xA;&#x9;if ( idLoopCond_268 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp63 = it_ft63.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp62 = o_lbdExp63;&#xA;&#xA;&#x9;p_lbdExp62.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Require> it_ft64 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Require>convertAsOrderedSet(this.getRequires()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_269 = false;&#xA;&#x9;while( !idLoopCond_269 ) {&#xA;&#x9;idLoopCond_269 = it_ft64.isOff();&#xA;&#x9;if ( idLoopCond_269 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Require p_lbdExp64 = it_ft64.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Require p_lbdExp62 = p_lbdExp64;&#xA;&#xA;&#x9;p_lbdExp62.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Using> it_ft65 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Using>convertAsOrderedSet(this.getUsings()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_270 = false;&#xA;&#x9;while( !idLoopCond_270 ) {&#xA;&#x9;idLoopCond_270 = it_ft65.isOff();&#xA;&#x9;if ( idLoopCond_270 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Using p_lbdExp65 = it_ft65.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Using p_lbdExp62 = p_lbdExp65;&#xA;&#xA;&#x9;p_lbdExp62.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft66 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_271 = false;&#xA;&#x9;while( !idLoopCond_271 ) {&#xA;&#x9;idLoopCond_271 = it_ft66.isOff();&#xA;&#x9;if ( idLoopCond_271 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp66 = it_ft66.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp62 = p_lbdExp66;&#xA;&#xA;&#x9;p_lbdExp62.applyPass1(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft67 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_272 = false;&#xA;&#x9;while( !idLoopCond_272 ) {&#xA;&#x9;idLoopCond_272 = it_ft67.isOff();&#xA;&#x9;if ( idLoopCond_272 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp67 = it_ft67.next();&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;ecore.EPackage> eps = null;&#xA;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;ecore.EPackage> result_ft68 = null;&#xA;&#xA;&#x9;ecore.EPackage elem_ft68 = null;&#xA;&#xA;&#x9;result_ft68 = ((kermeta.standard.Sequence&lt;ecore.EPackage>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft68 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getEcorePackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_273 = false;&#xA;&#x9;while( !idLoopCond_273 ) {&#xA;&#x9;idLoopCond_273 = it_ft68.isOff();&#xA;&#x9;if ( idLoopCond_273 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft68 = it_ft68.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_274 = false;&#xA;//BIle:selector&#xA;ecore.EPackage ep_lbdExp68 = elem_ft68;&#xA;&#xA;&#x9;idIfCond_274 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.toLowerCase(p_lbdExp67.getName()), kermeta.standard.helper.StringWrapper.toLowerCase(ep_lbdExp68.getName()));&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_274 ) {&#xA;&#xA;&#x9;result_ft68.add(elem_ft68);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;eps = result_ft68;&#xA;//EIft:select&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_275 = false;&#xA;&#x9;idIfCond_275 = kermeta.standard.helper.IntegerWrapper.isGreater(eps.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_275 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_276 = false;&#xA;&#x9;idIfCond_276 = kermeta.standard.helper.IntegerWrapper.equals(eps.size(), 1);&#xA;&#xA;&#x9;if( idIfCond_276 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Package result_ft69 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft69 = null;&#xA;&#xA;&#x9;result_ft69 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft69 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_277 = false;&#xA;&#x9;while( !idLoopCond_277 ) {&#xA;&#x9;idLoopCond_277 = kermeta.standard.helper.BooleanWrapper.or(it_ft69.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft69, null));&#xA;&#x9;if ( idLoopCond_277 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft69 = it_ft69.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_278 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Package pack_lbdExp69 = elem_ft69;&#xA;&#xA;&#x9;idIfCond_278 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.toLowerCase(pack_lbdExp69.getName()), kermeta.standard.helper.StringWrapper.toLowerCase(p_lbdExp67.getName()));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_278 ) {&#xA;&#xA;&#x9;result_ft69 = elem_ft69;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;result_ft69.setGenModelBasePackage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.toLowerCase(p_lbdExp67.getName()), &quot;0&quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;p_lbdExp67.setGenModelBasePackage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.toLowerCase(p_lbdExp67.getName()), kermeta.standard.helper.IntegerWrapper.toString(eps.size())));&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getEcorePackages()).add(p_lbdExp67.getEcoreModelElement());&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="compileSuperOperation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft70 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getSuperOperationsToCompileInHelper()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_279 = false;&#xA;&#x9;while( !idLoopCond_279 ) {&#xA;&#x9;idLoopCond_279 = it_ft70.isOff();&#xA;&#x9;if ( idLoopCond_279 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation op_lbdExp70 = it_ft70.next();&#xA;&#xA;&#x9;java.lang.Boolean staticOperationMode_backup = context.getStaticOperationMode();&#xA;&#xA;&#x9;context.setStaticOperationMode(true);&#xA;&#xA;&#x9;this.compileStaticOperation(op_lbdExp70, context);&#xA;&#xA;&#x9;context.setStaticOperationMode(staticOperationMode_backup);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="postprocess">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.compileSuperOperation(context);&#xA;&#xA;&#x9;this.cleanEObject();&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEClassifierByQualifiedName" eType="#/5/EClassifier">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get a EClassifer contained in the given Modeling Unit by qualifiedName&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClassifier result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> set_qname = kermeta.standard.helper.StringWrapper.split(qname, &quot;::&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_280 = false;&#xA;&#x9;idIfCond_280 = kermeta.standard.helper.IntegerWrapper.equals(set_qname.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_280 ) {&#xA;&#xA;&#x9;set_qname.add(qname);&#xA;}&#xA;&#xA;&#xA;&#x9;ecore.EPackage pack = null;&#xA;//BIft:detect&#xA;&#xA;ecore.EPackage result_ft71 = null;&#xA;&#xA;&#x9;ecore.EPackage elem_ft71 = null;&#xA;&#xA;&#x9;result_ft71 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft71 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getEcorePackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_281 = false;&#xA;&#x9;while( !idLoopCond_281 ) {&#xA;&#x9;idLoopCond_281 = kermeta.standard.helper.BooleanWrapper.or(it_ft71.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft71, null));&#xA;&#x9;if ( idLoopCond_281 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft71 = it_ft71.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_282 = false;&#xA;//BIle:detector&#xA;ecore.EPackage p_lbdExp71 = elem_ft71;&#xA;&#xA;&#x9;idIfCond_282 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp71.getName(), set_qname.at(0));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_282 ) {&#xA;&#xA;&#x9;result_ft71 = elem_ft71;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;pack = result_ft71;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_283 = false;&#xA;&#x9;idIfCond_283 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(pack));&#xA;&#xA;&#x9;if( idIfCond_283 ) {&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 1;&#xA;&#x9;java.lang.Boolean idLoopCond_284 = false;&#xA;&#x9;while( !idLoopCond_284 ) {&#xA;&#x9;idLoopCond_284 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1));&#xA;&#x9;if ( idLoopCond_284 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;ecore.EPackage result_ft72 = null;&#xA;&#xA;&#x9;ecore.EPackage elem_ft72 = null;&#xA;&#xA;&#x9;result_ft72 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft72 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(pack.getESubpackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_285 = false;&#xA;&#x9;while( !idLoopCond_285 ) {&#xA;&#x9;idLoopCond_285 = kermeta.standard.helper.BooleanWrapper.or(it_ft72.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft72, null));&#xA;&#x9;if ( idLoopCond_285 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft72 = it_ft72.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_286 = false;&#xA;//BIle:detector&#xA;ecore.EPackage p_lbdExp72 = elem_ft72;&#xA;&#xA;&#x9;idIfCond_286 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp72.getName(), set_qname.at(i));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_286 ) {&#xA;&#xA;&#x9;result_ft72 = elem_ft72;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;pack = result_ft72;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;ecore.EClassifier result_ft73 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft73 = null;&#xA;&#xA;&#x9;result_ft73 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft73 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(pack.getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_287 = false;&#xA;&#x9;while( !idLoopCond_287 ) {&#xA;&#x9;idLoopCond_287 = kermeta.standard.helper.BooleanWrapper.or(it_ft73.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft73, null));&#xA;&#x9;if ( idLoopCond_287 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft73 = it_ft73.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_288 = false;&#xA;//BIle:detector&#xA;ecore.EClassifier c_lbdExp73 = elem_ft73;&#xA;&#xA;&#x9;idIfCond_288 = kermeta.standard.helper.StringWrapper.equals(c_lbdExp73.getName(), set_qname.at(kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1)));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_288 ) {&#xA;&#xA;&#x9;result_ft73 = elem_ft73;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = result_ft73;&#xA;//EIft:detect&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="qname" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="cleanEObject">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_289 = false;&#xA;&#x9;idIfCond_289 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getEClassifierByQualifiedName(&quot;ecore::EObject&quot;)));&#xA;&#xA;&#x9;if( idIfCond_289 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getEClassifierByQualifiedName(&quot;ecore::EObject&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;))).getEOperations()).clear();&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="preprocess">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.createKRuntimeError(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="compileStaticOperation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;simk.SMContext smContext = context.getSimkModel().retrieveOrCreateContextForSuper(op, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_290 = false;&#xA;&#x9;idIfCond_290 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(smContext));&#xA;&#xA;&#x9;if( idIfCond_290 ) {&#xA;&#xA;&#x9;simk.SMMethod staticMethod = ((simk.SMMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMMethod()));&#xA;&#xA;&#x9;staticMethod.setName(kermeta.standard.helper.StringWrapper.plus(&quot;super_&quot;, op.getFinalName(context)));&#xA;&#xA;&#x9;staticMethod.setTypeParameters(&quot;G&quot;);&#xA;&#xA;&#x9;staticMethod.setBody(op.createBehaviorJava(context));&#xA;&#xA;&#x9;staticMethod.setUsages(simk.SMUsage.getByName(&quot;Super&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(context.getSimkModel().getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(smContext.getSMMethods()).add(staticMethod);&#xA;&#xA;&#x9;simk.SMReturn smReturn = ((simk.SMReturn) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMReturn()));&#xA;&#xA;&#x9;smReturn.setType(op.getType().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_291 = false;&#xA;&#x9;idIfCond_291 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(smReturn.getType());&#xA;&#xA;&#x9;if( idIfCond_291 ) {&#xA;&#xA;&#x9;smReturn.setType(&quot;void&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;staticMethod.setSMReturn(smReturn);&#xA;&#xA;&#x9;simk.SMParameter default_param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMParameter()));&#xA;&#xA;&#x9;default_param.setName(&quot;self&quot;);&#xA;&#xA;&#x9;default_param.setType(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(op), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), context.getKERMETA_SEPARATOR(), context.getJAVA_SEPARATOR()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(default_param);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft74 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(op.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_292 = false;&#xA;&#x9;while( !idLoopCond_292 ) {&#xA;&#x9;idLoopCond_292 = it_ft74.isOff();&#xA;&#x9;if ( idLoopCond_292 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Parameter p_lbdExp74 = it_ft74.next();&#xA;&#xA;&#x9;simk.SMParameter param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMParameter()));&#xA;&#xA;&#x9;param.setName(p_lbdExp74.getName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_293 = false;&#xA;&#x9;idIfCond_293 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(p_lbdExp74.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;if( idIfCond_293 ) {&#xA;&#xA;&#x9;param.setType(p_lbdExp74.getType().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_294 = false;&#xA;&#x9;idIfCond_294 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(param.getType());&#xA;&#xA;&#x9;if( idIfCond_294 ) {&#xA;&#xA;&#x9;param.setType(&quot;void&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(param);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="op" eType="#/2/language/structure/Operation"/>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((ecore.EAnnotation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEAnnotation()));&#xA;&#xA;&#x9;ecoreAnnotation.setSource(&quot;ModelingUnit&quot;);&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry requireEntry = ((ecore.EStringToStringMapEntry) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEStringToStringMapEntry()));&#xA;&#xA;&#x9;requireEntry.setKey(&quot;require&quot;);&#xA;&#xA;&#x9;requireEntry.setValue(&quot;&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).add(requireEntry);&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry usingEntry = ((ecore.EStringToStringMapEntry) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEStringToStringMapEntry()));&#xA;&#xA;&#x9;usingEntry.setKey(&quot;using&quot;);&#xA;&#xA;&#x9;usingEntry.setValue(&quot;&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).add(usingEntry);&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getAllPackages">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft75 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_295 = false;&#xA;&#x9;while( !idLoopCond_295 ) {&#xA;&#x9;idLoopCond_295 = it_ft75.isOff();&#xA;&#x9;if ( idLoopCond_295 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp75 = it_ft75.next();&#xA;&#xA;&#x9;result.add(p_lbdExp75);&#xA;&#xA;&#x9;result.addAll(p_lbdExp75.getAllSubPackages());&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eClassifier="#/2/language/structure/Package"/>
            </eGenericType>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft77 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_296 = false;&#xA;&#x9;while( !idLoopCond_296 ) {&#xA;&#x9;idLoopCond_296 = it_ft77.isOff();&#xA;&#x9;if ( idLoopCond_296 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp77 = it_ft77.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp76 = o_lbdExp77;&#xA;&#xA;&#x9;p_lbdExp76.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Require> it_ft78 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Require>convertAsOrderedSet(this.getRequires()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_297 = false;&#xA;&#x9;while( !idLoopCond_297 ) {&#xA;&#x9;idLoopCond_297 = it_ft78.isOff();&#xA;&#x9;if ( idLoopCond_297 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Require p_lbdExp78 = it_ft78.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Require p_lbdExp76 = p_lbdExp78;&#xA;&#xA;&#x9;p_lbdExp76.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Using> it_ft79 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Using>convertAsOrderedSet(this.getUsings()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_298 = false;&#xA;&#x9;while( !idLoopCond_298 ) {&#xA;&#x9;idLoopCond_298 = it_ft79.isOff();&#xA;&#x9;if ( idLoopCond_298 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Using p_lbdExp79 = it_ft79.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Using p_lbdExp76 = p_lbdExp79;&#xA;&#xA;&#x9;p_lbdExp76.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft80 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_299 = false;&#xA;&#x9;while( !idLoopCond_299 ) {&#xA;&#x9;idLoopCond_299 = it_ft80.isOff();&#xA;&#x9;if ( idLoopCond_299 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp80 = it_ft80.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp76 = p_lbdExp80;&#xA;&#xA;&#x9;p_lbdExp76.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getTypeDefinitionByQualifiedName" eType="#/2/language/structure/TypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get a TypeDefinition contained in the given Modeling Unit by qualifiedName&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.TypeDefinition result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> set_qname = kermeta.standard.helper.StringWrapper.split(qname, &quot;::&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_300 = false;&#xA;&#x9;idIfCond_300 = kermeta.standard.helper.IntegerWrapper.equals(set_qname.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_300 ) {&#xA;&#xA;&#x9;set_qname.add(qname);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.structure.Package result_ft81 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft81 = null;&#xA;&#xA;&#x9;result_ft81 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft81 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_301 = false;&#xA;&#x9;while( !idLoopCond_301 ) {&#xA;&#x9;idLoopCond_301 = kermeta.standard.helper.BooleanWrapper.or(it_ft81.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft81, null));&#xA;&#x9;if ( idLoopCond_301 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft81 = it_ft81.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_302 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Package p_lbdExp81 = elem_ft81;&#xA;&#xA;&#x9;idIfCond_302 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp81.getName(), set_qname.at(0));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_302 ) {&#xA;&#xA;&#x9;result_ft81 = elem_ft81;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;pack = result_ft81;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 1;&#xA;&#x9;java.lang.Boolean idLoopCond_303 = false;&#xA;&#x9;while( !idLoopCond_303 ) {&#xA;&#x9;idLoopCond_303 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1));&#xA;&#x9;if ( idLoopCond_303 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Package result_ft82 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft82 = null;&#xA;&#xA;&#x9;result_ft82 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft82 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_304 = false;&#xA;&#x9;while( !idLoopCond_304 ) {&#xA;&#x9;idLoopCond_304 = kermeta.standard.helper.BooleanWrapper.or(it_ft82.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft82, null));&#xA;&#x9;if ( idLoopCond_304 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft82 = it_ft82.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_305 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Package p_lbdExp82 = elem_ft82;&#xA;&#xA;&#x9;idIfCond_305 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp82.getName(), set_qname.at(i));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_305 ) {&#xA;&#xA;&#x9;result_ft82 = elem_ft82;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;pack = result_ft82;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.TypeDefinition result_ft83 = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition elem_ft83 = null;&#xA;&#xA;&#x9;result_ft83 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft83 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack.getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_306 = false;&#xA;&#x9;while( !idLoopCond_306 ) {&#xA;&#x9;idLoopCond_306 = kermeta.standard.helper.BooleanWrapper.or(it_ft83.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft83, null));&#xA;&#x9;if ( idLoopCond_306 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft83 = it_ft83.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_307 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.TypeDefinition c_lbdExp83 = elem_ft83;&#xA;&#xA;&#x9;idIfCond_307 = kermeta.standard.helper.StringWrapper.equals(c_lbdExp83.getName(), set_qname.at(kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1)));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_307 ) {&#xA;&#xA;&#x9;result_ft83 = elem_ft83;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = result_ft83;&#xA;//EIft:detect&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="qname" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ecorePackages" upperBound="-1"
              eType="#/5/EPackage"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="usings" upperBound="-1"
              eType="#/2/language/structure/Using" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;using&quot; statement associated with this ModelingUnit. Ie. list of &quot;syntatic shortcut&quot;&#xA;that can be used within this unit."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includeFilters" upperBound="-1"
              eType="#/2/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;only element whose qualified name begins with one of these filter will be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="packages" upperBound="-1"
              eType="#/2/language/structure/Package" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="root packages contained by this ModelingUnit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superOperationsToCompileInHelper"
              upperBound="-1" eType="#/2/language/structure/Operation"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="excludeFilters" upperBound="-1"
              eType="#/2/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;element whose qualified name begins with one of these filter will NOT be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="referencedModelingUnits"
              upperBound="-1" eType="#/2/language/structure/ModelingUnit">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="requires" upperBound="-1"
              eType="#/2/language/structure/Require" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;require&quot; statements associated with this ModelingUnit. Ie. list of the other&#xA;files required to run this unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="entryPoints" upperBound="-1"
              eType="#/5/EAnnotation"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EAnnotation"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Package">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Package in kermeta. Each kermeta model must have a root package. "/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EPackage ecorePackage = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Package p = this.getNestingPackage();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_308 = false;&#xA;&#x9;idIfCond_308 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(p, null);&#xA;&#xA;&#x9;if( idIfCond_308 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(p.getEcoreModelElement().getESubpackages()).add(ecorePackage);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecorePackage);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.Package pack_ft84 = this;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft85 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(pack_ft84.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_309 = false;&#xA;&#x9;while( !idLoopCond_309 ) {&#xA;&#x9;idLoopCond_309 = it_ft85.isOff();&#xA;&#x9;if ( idLoopCond_309 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp85 = it_ft85.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag cd_lbdExp84 = o_lbdExp85;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_310 = false;&#xA;&#x9;idIfCond_310 = kermeta.standard.helper.StringWrapper.equals(cd_lbdExp84.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_310 ) {&#xA;&#xA;&#x9;cd_lbdExp84.applyPass1(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft86 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack_ft84.getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_311 = false;&#xA;&#x9;while( !idLoopCond_311 ) {&#xA;&#x9;idLoopCond_311 = it_ft86.isOff();&#xA;&#x9;if ( idLoopCond_311 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeDefinition o_lbdExp86 = it_ft86.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeDefinition cd_lbdExp84 = o_lbdExp86;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_312 = false;&#xA;&#x9;idIfCond_312 = kermeta.standard.helper.StringWrapper.equals(cd_lbdExp84.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_312 ) {&#xA;&#xA;&#x9;cd_lbdExp84.applyPass1(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft87 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack_ft84.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_313 = false;&#xA;&#x9;while( !idLoopCond_313 ) {&#xA;&#x9;idLoopCond_313 = it_ft87.isOff();&#xA;&#x9;if ( idLoopCond_313 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp87 = it_ft87.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package cd_lbdExp84 = p_lbdExp87;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_314 = false;&#xA;&#x9;idIfCond_314 = kermeta.standard.helper.StringWrapper.equals(cd_lbdExp84.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_314 ) {&#xA;&#xA;&#x9;cd_lbdExp84.applyPass1(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EPackage">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EPackage result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot; + Package &quot;, this.qualifiedName()), &quot; in progress&quot;));&#xA;&#xA;&#x9;ecore.EPackage ecorePackage = ((ecore.EPackage) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEPackage()));&#xA;&#xA;&#x9;ecorePackage.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_315 = false;&#xA;&#x9;idIfCond_315 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getUri())), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getUri(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_315 ) {&#xA;&#xA;&#x9;ecorePackage.setNsURI(kermeta.standard.helper.StringWrapper.plus(this.getUri(), &quot;/kermeta_temp_uri&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecorePackage.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createKermetaEAnnotation(&quot;ecoreUri&quot;, this.getUri()));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.String default_uri = kermeta.standard.helper.StringWrapper.plus(&quot;http://www.kermeta.org/&quot;, kermeta.standard.helper.StringWrapper.replace(this.qualifiedName(), &quot;::&quot;, &quot;/&quot;));&#xA;&#xA;&#x9;ecorePackage.setNsURI(kermeta.standard.helper.StringWrapper.plus(default_uri, &quot;/kermeta_temp_uri&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecorePackage.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).createKermetaEAnnotation(&quot;ecoreUri&quot;, default_uri));&#xA;}&#xA;&#xA;&#xA;&#x9;ecorePackage.setNsPrefix(&quot;&quot;);&#xA;&#xA;&#x9;result = ecorePackage;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getAllSubPackages">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft88 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_316 = false;&#xA;&#x9;while( !idLoopCond_316 ) {&#xA;&#x9;idLoopCond_316 = it_ft88.isOff();&#xA;&#x9;if ( idLoopCond_316 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp88 = it_ft88.next();&#xA;&#xA;&#x9;result.add(p_lbdExp88);&#xA;&#xA;&#x9;result.addAll(p_lbdExp88.getAllSubPackages());&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eClassifier="#/2/language/structure/Package"/>
            </eGenericType>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.Package pack_ft89 = this;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft90 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(pack_ft89.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_317 = false;&#xA;&#x9;while( !idLoopCond_317 ) {&#xA;&#x9;idLoopCond_317 = it_ft90.isOff();&#xA;&#x9;if ( idLoopCond_317 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp90 = it_ft90.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp89 = o_lbdExp90;&#xA;&#xA;&#x9;p_lbdExp89.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft91 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack_ft89.getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_318 = false;&#xA;&#x9;while( !idLoopCond_318 ) {&#xA;&#x9;idLoopCond_318 = it_ft91.isOff();&#xA;&#x9;if ( idLoopCond_318 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeDefinition o_lbdExp91 = it_ft91.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeDefinition p_lbdExp89 = o_lbdExp91;&#xA;&#xA;&#x9;p_lbdExp89.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft92 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack_ft89.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_319 = false;&#xA;&#x9;while( !idLoopCond_319 ) {&#xA;&#x9;idLoopCond_319 = it_ft92.isOff();&#xA;&#x9;if ( idLoopCond_319 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp92 = it_ft92.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp89 = p_lbdExp92;&#xA;&#xA;&#x9;p_lbdExp89.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" eType="#/2/language/structure/Package"
              transient="true" eOpposite="#/2/language/structure/Package/nestedPackage">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Package, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="genModelBasePackage"
              eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" upperBound="-1"
              eType="#/2/language/structure/Package" containment="true" eOpposite="#/2/language/structure/Package/nestingPackage">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Nested Packages contained by the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Uri of the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/NamedElement"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/TypeDefinitionContainer"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EPackage"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Item definition for enumeration"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EEnumLiteral ecoreEnumLiteral = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Enumeration e = ((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getEnumeration(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EEnumLiteral>convertAsOrderedSet(e.getEcoreModelElement().getELiterals()).add(ecoreEnumLiteral);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreEnumLiteral);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EEnumLiteral">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EEnumLiteral result = null;&#xA;&#xA;&#x9;ecore.EEnumLiteral ecoreEnumerationLiteral = ((ecore.EEnumLiteral) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEEnumLiteral()));&#xA;&#xA;&#x9;ecoreEnumerationLiteral.setName(this.getName());&#xA;&#xA;&#x9;ecoreEnumerationLiteral.setLiteral(this.getName());&#xA;&#xA;&#x9;ecoreEnumerationLiteral.setValue(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EEnumLiteral>convertAsOrderedSet(((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getEnumeration(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;))).getEcoreModelElement().getELiterals()).size());&#xA;&#xA;&#x9;result = ecoreEnumerationLiteral;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" eType="#/2/language/structure/Enumeration"
              transient="true" eOpposite="#/2/language/structure/Enumeration/ownedLiteral">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/NamedElement"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EEnumLiteral"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The definition of a class definition :)&#xA; &lt;pre>class A&#xA;{ &#xA;  attribute s : String&#xA;}&#xA;  &lt;/pre> is a class definition; in :&#xA;&lt;pre>&#xA;main() : A is do end&#xA;&lt;/pre>&#xA;A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="isMappedToJavaRawType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_326 = false;&#xA;&#x9;idIfCond_326 = kermeta.standard.helper.BooleanWrapper.or(this.isCollection(), this.isIterator());&#xA;&#xA;&#x9;if( idIfCond_326 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="initEmfNeedProperty">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft97 = this.getEMFNeedProperty().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_327 = false;&#xA;&#x9;while( !idLoopCond_327 ) {&#xA;&#x9;idLoopCond_327 = it_ft97.isOff();&#xA;&#x9;if ( idLoopCond_327 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;java.lang.String emfNeedProperty_lbdExp97 = it_ft97.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_328 = false;&#xA;&#x9;idIfCond_328 = kermeta.standard.helper.IntegerWrapper.isGreater(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_328 ) {&#xA;&#xA;&#x9;ecore.EStructuralFeature newProperty = ((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEAttribute()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_329 = false;&#xA;&#x9;idIfCond_329 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;javaClass&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;javaClass&quot;), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_329 ) {&#xA;&#xA;&#x9;newProperty = ((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEAttribute()));&#xA;&#xA;&#x9;newProperty.setName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;name&quot;));&#xA;&#xA;&#x9;newProperty.set_transient(false);&#xA;&#xA;&#x9;ecore.EDataType newProperty_EDataType = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEDataType()));&#xA;&#xA;&#x9;newProperty_EDataType.setName(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;KermetaProperty_&quot;, this.getName()), &quot;_&quot;), kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;name&quot;)));&#xA;&#xA;&#x9;newProperty_EDataType.setInstanceClassName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;javaClass&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).getEcoreModelElement().getEClassifiers()).add(newProperty_EDataType);&#xA;&#xA;&#x9;ecore.EGenericType newJavaCollection_EGenericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;newJavaCollection_EGenericType.setEClassifier(newProperty_EDataType);&#xA;&#xA;&#x9;newProperty.setEGenericType(newJavaCollection_EGenericType);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_330 = false;&#xA;&#x9;idIfCond_330 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_330 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.ETypeParameter> it_ft98 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_331 = false;&#xA;&#x9;while( !idLoopCond_331 ) {&#xA;&#x9;idLoopCond_331 = it_ft98.isOff();&#xA;&#x9;if ( idLoopCond_331 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;ecore.ETypeParameter etp_lbdExp98 = it_ft98.next();&#xA;&#xA;&#x9;ecore.ETypeParameter newEtp = ((ecore.ETypeParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getETypeParameter()));&#xA;&#xA;&#x9;newEtp.setName(etp_lbdExp98.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(newProperty_EDataType.getETypeParameters()).add(newEtp);&#xA;&#xA;&#x9;ecore.EGenericType eta = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;eta.setETypeParameter(etp_lbdExp98);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(newProperty.getEGenericType().getETypeArguments()).add(eta);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_332 = false;&#xA;&#x9;idIfCond_332 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;classDefinitionQN&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;classDefinitionQN&quot;), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_332 ) {&#xA;&#xA;&#x9;newProperty = ((ecore.EReference) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEReference()));&#xA;&#xA;&#x9;newProperty.setName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;name&quot;));&#xA;&#xA;&#x9;newProperty.set_transient(false);&#xA;&#xA;&#x9;ecore.EClassifier retrieved_EClassifier = context.getMu().getEClassifierByQualifiedName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty_lbdExp97).getValue(&quot;classDefinitionQN&quot;));&#xA;&#xA;&#x9;ecore.EGenericType newJavaCollection_EGenericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;newJavaCollection_EGenericType.setEClassifier(retrieved_EClassifier);&#xA;&#xA;&#x9;newProperty.setEGenericType(newJavaCollection_EGenericType);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_333 = false;&#xA;&#x9;idIfCond_333 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_333 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.ETypeParameter> it_ft99 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_334 = false;&#xA;&#x9;while( !idLoopCond_334 ) {&#xA;&#x9;idLoopCond_334 = it_ft99.isOff();&#xA;&#x9;if ( idLoopCond_334 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;ecore.ETypeParameter etp_lbdExp99 = it_ft99.next();&#xA;&#xA;&#x9;ecore.EGenericType eta = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;eta.setETypeParameter(etp_lbdExp99);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(newProperty.getEGenericType().getETypeArguments()).add(eta);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;newProperty.set_transient(true);&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition retrievedTypeDef = context.getMu().getTypeDefinitionByQualifiedName(&quot;ecore::EEList&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_335 = false;&#xA;&#x9;idIfCond_335 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_335 ) {&#xA;&#xA;&#x9;newProperty.setEType(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_336 = false;&#xA;&#x9;idIfCond_336 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_336 ) {&#xA;&#xA;&#x9;newProperty.setEType(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;))).getEStructuralFeatures()).add(newProperty);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setSubClassDefinitionToSuperTypes();&#xA;&#xA;&#x9;kermeta.language.structure.Package p = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_337 = false;&#xA;&#x9;idIfCond_337 = this.isValueType();&#xA;&#xA;&#x9;if( idIfCond_337 ) {&#xA;&#xA;&#x9;java.lang.String instanceClassName = this.getEMFInstanceClassName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_338 = false;&#xA;&#x9;idIfCond_338 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(instanceClassName, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_338 ) {&#xA;&#xA;&#x9;ecore.EDataType eDataType = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEDataType()));&#xA;&#xA;&#x9;eDataType.setName(kermeta.standard.helper.StringWrapper.plus(&quot;Java&quot;, this.getName()));&#xA;&#xA;&#x9;eDataType.setInstanceClassName(instanceClassName);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getValueTypeMapping()).add(instanceClassName);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(eDataType);&#xA;&#xA;&#x9;this.setEcoreDataType(eDataType);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_339 = false;&#xA;&#x9;idIfCond_339 = kermeta.standard.helper.BooleanWrapper.not(this.getIsAbstract());&#xA;&#xA;&#x9;if( idIfCond_339 ) {&#xA;&#xA;&#x9;ecore.EClass eClass = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEClass()));&#xA;&#xA;&#x9;eClass.setName(this.getName());&#xA;&#xA;&#x9;this.setEcoreModelElement(eClass);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).getEcoreModelElement().getEClassifiers()).add(eClass);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_340 = false;&#xA;&#x9;idIfCond_340 = kermeta.standard.helper.BooleanWrapper.not(this.getIsAbstract());&#xA;&#xA;&#x9;if( idIfCond_340 ) {&#xA;&#xA;&#x9;km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException except = ((km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.common.exception.ExceptionPackage.eINSTANCE.getUndefinedValueTypeInstanceClassNameException()));&#xA;&#xA;&#x9;except.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;The class definition: &quot;, this.qualifiedName()), &quot; is a ValueType, but the tag: @EMF_instanceClassName has not been correctly setted, please check this one in the *.km file that you try to load.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( except );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecore.EClass ecoreClass = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(ecoreClass);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreClass);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_ft100 = this;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft101 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft100.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_341 = false;&#xA;&#x9;while( !idLoopCond_341 ) {&#xA;&#x9;idLoopCond_341 = it_ft101.isOff();&#xA;&#x9;if ( idLoopCond_341 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp101 = it_ft101.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp100 = o_lbdExp101;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_342 = false;&#xA;&#x9;idIfCond_342 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_342 ) {&#xA;&#xA;&#x9;o_lbdExp100.applyPass1(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_343 = false;&#xA;&#x9;idIfCond_343 = kermeta.standard.helper.BooleanWrapper.not(op.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_343 ) {&#xA;&#xA;&#x9;op.applyPass1(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft102 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cd_ft100.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_344 = false;&#xA;&#x9;while( !idLoopCond_344 ) {&#xA;&#x9;idLoopCond_344 = it_ft102.isOff();&#xA;&#x9;if ( idLoopCond_344 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property o_lbdExp102 = it_ft102.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property o_lbdExp100 = o_lbdExp102;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_345 = false;&#xA;&#x9;idIfCond_345 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_345 ) {&#xA;&#xA;&#x9;o_lbdExp100.applyPass1(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_346 = false;&#xA;&#x9;idIfCond_346 = kermeta.standard.helper.BooleanWrapper.not(op.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_346 ) {&#xA;&#xA;&#x9;op.applyPass1(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft103 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft100.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_347 = false;&#xA;&#x9;while( !idLoopCond_347 ) {&#xA;&#x9;idLoopCond_347 = it_ft103.isOff();&#xA;&#x9;if ( idLoopCond_347 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp103 = it_ft103.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp100 = o_lbdExp103;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_348 = false;&#xA;&#x9;idIfCond_348 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_348 ) {&#xA;&#xA;&#x9;o_lbdExp100.applyPass1(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_349 = false;&#xA;&#x9;idIfCond_349 = kermeta.standard.helper.BooleanWrapper.not(op.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_349 ) {&#xA;&#xA;&#x9;op.applyPass1(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft104 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft100.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_350 = false;&#xA;&#x9;while( !idLoopCond_350 ) {&#xA;&#x9;idLoopCond_350 = it_ft104.isOff();&#xA;&#x9;if ( idLoopCond_350 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint i_lbdExp104 = it_ft104.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint o_lbdExp100 = i_lbdExp104;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_351 = false;&#xA;&#x9;idIfCond_351 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_351 ) {&#xA;&#xA;&#x9;o_lbdExp100.applyPass1(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_352 = false;&#xA;&#x9;idIfCond_352 = kermeta.standard.helper.BooleanWrapper.not(op.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_352 ) {&#xA;&#xA;&#x9;op.applyPass1(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft105 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft100.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_353 = false;&#xA;&#x9;while( !idLoopCond_353 ) {&#xA;&#x9;idLoopCond_353 = it_ft105.isOff();&#xA;&#x9;if ( idLoopCond_353 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp105 = it_ft105.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable o_lbdExp100 = t_lbdExp105;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_354 = false;&#xA;&#x9;idIfCond_354 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_354 ) {&#xA;&#xA;&#x9;o_lbdExp100.applyPass1(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(o_lbdExp100, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_355 = false;&#xA;&#x9;idIfCond_355 = kermeta.standard.helper.BooleanWrapper.not(op.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_355 ) {&#xA;&#xA;&#x9;op.applyPass1(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.helper.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft106 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_356 = false;&#xA;&#x9;while( !idLoopCond_356 ) {&#xA;&#x9;idLoopCond_356 = it_ft106.isOff();&#xA;&#x9;if ( idLoopCond_356 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp106 = it_ft106.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_357 = false;&#xA;&#x9;idIfCond_357 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp106, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_357 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDefinition = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp106, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_358 = false;&#xA;&#x9;idIfCond_358 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getEcoreModelElement()));&#xA;&#xA;&#x9;if( idIfCond_358 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_359 = false;&#xA;&#x9;idIfCond_359 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(classDefinition.getEcoreModelElement()));&#xA;&#xA;&#x9;if( idIfCond_359 ) {&#xA;&#xA;&#x9;ecore.EGenericType new_eGenericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;new_eGenericType.setEClassifier(classDefinition.getEcoreModelElement());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getEGenericSuperTypes()).add(new_eGenericType);&#xA;&#xA;&#x9;((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp106, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).setEcoreModelElement(new_eGenericType);&#xA;&#xA;&#x9;((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp106, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).setLinks(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isValueType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.isSubTypeOf(&quot;kermeta::standard::ValueType&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="setSubClassDefinitionToSuperTypes">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft107 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_360 = false;&#xA;&#x9;while( !idLoopCond_360 ) {&#xA;&#x9;idLoopCond_360 = it_ft107.isOff();&#xA;&#x9;if ( idLoopCond_360 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp107 = it_ft107.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_361 = false;&#xA;&#x9;idIfCond_361 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp107, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_361 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_362 = false;&#xA;&#x9;idIfCond_362 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp107, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_362 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.ClassDefinition>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(t_lbdExp107, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getSubClassDefinitions()).add(this);&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isAddedValueType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.String qName = this.qualifiedName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_363 = false;&#xA;&#x9;idIfCond_363 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(qName, &quot;kermeta::standard::String&quot;), kermeta.standard.helper.StringWrapper.equals(qName, &quot;kermeta::standard::Integer&quot;)), kermeta.standard.helper.StringWrapper.equals(qName, &quot;kermeta::standard::Boolean&quot;)), kermeta.standard.helper.StringWrapper.equals(qName, &quot;kermeta::standard::Character&quot;)), kermeta.standard.helper.StringWrapper.equals(qName, &quot;kermeta::standard::Real&quot;));&#xA;&#xA;&#x9;if( idIfCond_363 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Type res = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.structure.Type result_ft108 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Type elem_ft108 = null;&#xA;&#xA;&#x9;result_ft108 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft108 = this.allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_364 = false;&#xA;&#x9;while( !idLoopCond_364 ) {&#xA;&#x9;idLoopCond_364 = kermeta.standard.helper.BooleanWrapper.or(it_ft108.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft108, null));&#xA;&#x9;if ( idLoopCond_364 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft108 = it_ft108.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_365 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Type st_lbdExp108 = elem_ft108;&#xA;&#xA;&#x9;idIfCond_365 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(st_lbdExp108, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;)), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(st_lbdExp108, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), superType_qualifiedName));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_365 ) {&#xA;&#xA;&#x9;result_ft108 = elem_ft108;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;res = result_ft108;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_366 = false;&#xA;&#x9;idIfCond_366 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(res));&#xA;&#xA;&#x9;if( idIfCond_366 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="superType_qualifiedName" eType="#/2/standard/JavaString"/>
          </eOperations>
          <eOperations name="allSuperTypes">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Type> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> allSuperClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> superClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;superClasses.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.not(superClasses.isEmpty());&#xA;&#x9;java.lang.Boolean idLoopCond_367 = false;&#xA;&#x9;while( !idLoopCond_367 ) {&#xA;&#x9;idLoopCond_367 = superClasses.isEmpty();&#xA;&#x9;if ( idLoopCond_367 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;allSuperClasses.addAll(superClasses);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> temp = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft109 = superClasses.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_368 = false;&#xA;&#x9;while( !idLoopCond_368 ) {&#xA;&#x9;idLoopCond_368 = it_ft109.isOff();&#xA;&#x9;if ( idLoopCond_368 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type s_lbdExp109 = it_ft109.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_369 = false;&#xA;&#x9;idIfCond_369 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(s_lbdExp109, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_369 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_370 = false;&#xA;&#x9;idIfCond_370 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(s_lbdExp109, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_370 ) {&#xA;&#xA;&#x9;temp.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(s_lbdExp109, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getSuperType()));&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;superClasses.clear();&#xA;&#xA;&#x9;superClasses.addAll(temp);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = allSuperClasses;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eClassifier="#/2/language/structure/Type"/>
            </eGenericType>
          </eOperations>
          <eOperations name="isIterator" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;result = this.isSubTypeOf(&quot;kermeta::standard::Iterator&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_371 = false;&#xA;&#x9;idIfCond_371 = kermeta.standard.helper.StringWrapper.equals(this.qualifiedName(), &quot;kermeta::standard::Iterator&quot;);&#xA;&#xA;&#x9;if( idIfCond_371 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isCollection" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;result = this.isSubTypeOf(&quot;kermeta::standard::Collection&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_372 = false;&#xA;&#x9;idIfCond_372 = kermeta.standard.helper.StringWrapper.equals(this.qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;&#xA;&#x9;if( idIfCond_372 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EClass">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;ecore.EClass ecoreClass = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEClass()));&#xA;&#xA;&#x9;ecoreClass.set_interface(false);&#xA;&#xA;&#x9;ecoreClass.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;ecoreClass.set_abstract(this.getIsAbstract());&#xA;&#xA;&#x9;result = ecoreClass;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_373 = false;&#xA;&#x9;idIfCond_373 = kermeta.standard.helper.BooleanWrapper.not(this.isAddedValueType());&#xA;&#xA;&#x9;if( idIfCond_373 ) {&#xA;&#xA;&#x9;this.setLinks(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_valueType = null;&#xA;&#xA;&#x9;cd_valueType = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(context.getMu().getTypeDefinitionByQualifiedName(&quot;kermeta::standard::ValueType&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClass>convertAsOrderedSet(this.getEcoreModelElement().getESuperTypes()).add(cd_valueType.getEcoreModelElement());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_374 = false;&#xA;&#x9;idIfCond_374 = kermeta.standard.helper.BooleanWrapper.and(this.isValueType(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getName(), &quot;Numeric&quot;));&#xA;&#xA;&#x9;if( idIfCond_374 ) {&#xA;&#xA;&#x9;context.setCurrent_valueType(this);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft110 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_375 = false;&#xA;&#x9;while( !idLoopCond_375 ) {&#xA;&#x9;idLoopCond_375 = it_ft110.isOff();&#xA;&#x9;if ( idLoopCond_375 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation op_lbdExp110 = it_ft110.next();&#xA;&#xA;&#x9;op_lbdExp110.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft111 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_376 = false;&#xA;&#x9;while( !idLoopCond_376 ) {&#xA;&#x9;idLoopCond_376 = it_ft111.isOff();&#xA;&#x9;if ( idLoopCond_376 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp111 = it_ft111.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_377 = false;&#xA;&#x9;idIfCond_377 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), t_lbdExp111);&#xA;&#xA;&#x9;if( idIfCond_377 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Class>asTypeOrVoid(t_lbdExp111);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(c.getTypeDefinition());&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft112 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsSet(cDef.getterAllOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_378 = false;&#xA;&#x9;while( !idLoopCond_378 ) {&#xA;&#x9;idLoopCond_378 = it_ft112.isOff();&#xA;&#x9;if ( idLoopCond_378 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation p_lbdExp112 = it_ft112.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_379 = false;&#xA;&#x9;idIfCond_379 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp112.getRecopyInValueTypes(), &quot;true&quot;);&#xA;&#xA;&#x9;if( idIfCond_379 ) {&#xA;&#xA;&#x9;p_lbdExp112.applyPass2BehaviorJava(context);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;context.setCurrent_valueType(null);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_380 = false;&#xA;&#x9;idIfCond_380 = kermeta.standard.helper.BooleanWrapper.not(this.isAddedValueType());&#xA;&#xA;&#x9;if( idIfCond_380 ) {&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_ft113 = this;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft114 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft113.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_381 = false;&#xA;&#x9;while( !idLoopCond_381 ) {&#xA;&#x9;idLoopCond_381 = it_ft114.isOff();&#xA;&#x9;if ( idLoopCond_381 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp114 = it_ft114.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag p_lbdExp113 = o_lbdExp114;&#xA;&#xA;&#x9;p_lbdExp113.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft115 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cd_ft113.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_382 = false;&#xA;&#x9;while( !idLoopCond_382 ) {&#xA;&#x9;idLoopCond_382 = it_ft115.isOff();&#xA;&#x9;if ( idLoopCond_382 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property o_lbdExp115 = it_ft115.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp113 = o_lbdExp115;&#xA;&#xA;&#x9;p_lbdExp113.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft116 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft113.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_383 = false;&#xA;&#x9;while( !idLoopCond_383 ) {&#xA;&#x9;idLoopCond_383 = it_ft116.isOff();&#xA;&#x9;if ( idLoopCond_383 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp116 = it_ft116.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation p_lbdExp113 = o_lbdExp116;&#xA;&#xA;&#x9;p_lbdExp113.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft117 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft113.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_384 = false;&#xA;&#x9;while( !idLoopCond_384 ) {&#xA;&#x9;idLoopCond_384 = it_ft117.isOff();&#xA;&#x9;if ( idLoopCond_384 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint i_lbdExp117 = it_ft117.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint p_lbdExp113 = i_lbdExp117;&#xA;&#xA;&#x9;p_lbdExp113.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft118 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft113.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_385 = false;&#xA;&#x9;while( !idLoopCond_385 ) {&#xA;&#x9;idLoopCond_385 = it_ft118.isOff();&#xA;&#x9;if ( idLoopCond_385 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp118 = it_ft118.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable p_lbdExp113 = t_lbdExp118;&#xA;&#xA;&#x9;p_lbdExp113.applyPass2BehaviorJava(context);&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.initEmfNeedProperty(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getterAllOperation" ordered="false" upperBound="-1" eType="#/2/language/structure/Operation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Operation> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;result.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getOwnedOperation()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft93 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_320 = false;&#xA;&#x9;while( !idLoopCond_320 ) {&#xA;&#x9;idLoopCond_320 = it_ft93.isOff();&#xA;&#x9;if ( idLoopCond_320 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp93 = it_ft93.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_321 = false;&#xA;&#x9;idIfCond_321 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), t_lbdExp93);&#xA;&#xA;&#x9;if( idIfCond_321 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Class>asTypeOrVoid(t_lbdExp93);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(c.getTypeDefinition());&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft94 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsSet(cDef.getterAllOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_322 = false;&#xA;&#x9;while( !idLoopCond_322 ) {&#xA;&#x9;idLoopCond_322 = it_ft94.isOff();&#xA;&#x9;if ( idLoopCond_322 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation p_lbdExp94 = it_ft94.next();&#xA;&#xA;&#x9;result.add(p_lbdExp94);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterAllAttribute" ordered="false" upperBound="-1" eType="#/2/language/structure/Property">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Property> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;result.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(this.getOwnedAttribute()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft95 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_323 = false;&#xA;&#x9;while( !idLoopCond_323 ) {&#xA;&#x9;idLoopCond_323 = it_ft95.isOff();&#xA;&#x9;if ( idLoopCond_323 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp95 = it_ft95.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_324 = false;&#xA;&#x9;idIfCond_324 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), t_lbdExp95);&#xA;&#xA;&#x9;if( idIfCond_324 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Class>asTypeOrVoid(t_lbdExp95);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(c.getTypeDefinition());&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft96 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cDef.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_325 = false;&#xA;&#x9;while( !idLoopCond_325 ) {&#xA;&#x9;idLoopCond_325 = it_ft96.isOff();&#xA;&#x9;if ( idLoopCond_325 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property p_lbdExp96 = it_ft96.next();&#xA;&#xA;&#x9;result.add(p_lbdExp96);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
              eType="#/2/language/structure/Operation" containment="true" eOpposite="#/2/language/structure/Operation/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Operations owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the ClassDefinition is abstract (which means that&#xA;no instance can be allocated)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1"
              eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Classes from which this ClassDefinition inherits."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="inv" upperBound="-1"
              eType="#/2/language/structure/Constraint" containment="true" eOpposite="#/2/language/structure/Constraint/invOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Invariants defined for this ClassDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="subClassDefinitions"
              upperBound="-1" eType="#/2/language/structure/ClassDefinition"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
              eType="#/2/language/structure/Property" containment="true" eOpposite="#/2/language/structure/Property/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Attributes, References, and derived Properties owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ecoreDataType" eType="#/5/EDataType"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/GenericTypeDefinition"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/TypeContainer"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EClass"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Returns the Attributes, References, and derived Properties owned by&#xA;the ClassDefinition of this Class."/>
          </eAnnotations>
          <eOperations name="clone" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.cloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.deepCloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="_new" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Instantiates a new occurence for this Class&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(this.getTypeDefinition().qualifiedName().replace(&quot;::&quot;, &quot;.&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="allAttributes">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Never used for the moment */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Property> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Property> properties = ((kermeta.standard.Set&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Property> result_ft120 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft120 = null;&#xA;&#xA;&#x9;result_ft120 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft120 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(this.getterOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_388 = false;&#xA;&#x9;while( !idLoopCond_388 ) {&#xA;&#x9;idLoopCond_388 = it_ft120.isOff();&#xA;&#x9;if ( idLoopCond_388 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft120 = it_ft120.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_389 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Property p_lbdExp120 = elem_ft120;&#xA;&#xA;&#x9;idIfCond_389 = p_lbdExp120.getIsComposite();&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_389 ) {&#xA;&#xA;&#x9;result_ft120.add(elem_ft120);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;properties.addAll(result_ft120);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft121 = this.allSuperClasses().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_390 = false;&#xA;&#x9;while( !idLoopCond_390 ) {&#xA;&#x9;idLoopCond_390 = it_ft121.isOff();&#xA;&#x9;if ( idLoopCond_390 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Class s_lbdExp121 = it_ft121.next();&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Property> result_ft122 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft122 = null;&#xA;&#xA;&#x9;result_ft122 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft122 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(s_lbdExp121.getterOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_391 = false;&#xA;&#x9;while( !idLoopCond_391 ) {&#xA;&#x9;idLoopCond_391 = it_ft122.isOff();&#xA;&#x9;if ( idLoopCond_391 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft122 = it_ft122.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_392 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Property p_lbdExp122 = elem_ft122;&#xA;&#xA;&#x9;idIfCond_392 = p_lbdExp122.getIsComposite();&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_392 ) {&#xA;&#xA;&#x9;result_ft122.add(elem_ft122);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;properties.addAll(result_ft122);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = properties;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eClassifier="#/2/language/structure/Property"/>
            </eGenericType>
          </eOperations>
          <eOperations name="allSuperClasses">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Never used for the moment */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Class> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Class> allSuperClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Class> superClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;superClasses.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsOrderedSet(this.getterSuperClass()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Class> temp = ((kermeta.standard.Set&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.not(superClasses.isEmpty());&#xA;&#x9;java.lang.Boolean idLoopCond_393 = false;&#xA;&#x9;while( !idLoopCond_393 ) {&#xA;&#x9;idLoopCond_393 = superClasses.isEmpty();&#xA;&#x9;if ( idLoopCond_393 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;allSuperClasses.addAll(superClasses);&#xA;&#xA;&#x9;temp.clear();&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft123 = superClasses.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_394 = false;&#xA;&#x9;while( !idLoopCond_394 ) {&#xA;&#x9;idLoopCond_394 = it_ft123.isOff();&#xA;&#x9;if ( idLoopCond_394 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Class s_lbdExp123 = it_ft123.next();&#xA;&#xA;&#x9;temp.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsOrderedSet(s_lbdExp123.getterSuperClass()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;superClasses.clear();&#xA;&#xA;&#x9;superClasses.addAll(temp);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = allSuperClasses;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eClassifier="#/2/language/structure/Class"/>
            </eGenericType>
          </eOperations>
          <eOperations name="equals" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ClassUtil.equals(this, other));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="other" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="toString" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Returns the String representation of this class. &#xA;&#x9; *  Note : throws an exception if this class has no classDefinition&#xA;&#x9; *  or if the classDefinition is not well constructed.&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getTypeDefinition().getName();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariableBinding> it_ft124 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(this.getTypeParamBinding()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_395 = false;&#xA;&#x9;while( !idLoopCond_395 ) {&#xA;&#x9;idLoopCond_395 = it_ft124.isOff();&#xA;&#x9;if ( idLoopCond_395 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariableBinding tpb_lbdExp124 = it_ft124.next();&#xA;&#xA;&#x9;ecore.EGenericType typeArgument = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_396 = false;&#xA;&#x9;idIfCond_396 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_396 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_397 = false;&#xA;&#x9;idIfCond_397 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_397 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreDataType());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getETypeArguments()).add(typeArgument);&#xA;&#xA;&#x9;((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).setEcoreModelElement(typeArgument);&#xA;&#xA;&#x9;((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).setLinks(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_398 = false;&#xA;&#x9;idIfCond_398 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_398 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;typeArgument.setETypeParameter(otv.getEcoreModelElement());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_399 = false;&#xA;&#x9;idIfCond_399 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_399 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = tpb_lbdExp124.getType().getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_400 = false;&#xA;&#x9;idIfCond_400 = tpb_lbdExp124.getType().isEDataType();&#xA;&#xA;&#x9;if( idIfCond_400 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_401 = false;&#xA;&#x9;idIfCond_401 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_401 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreDataType());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_402 = false;&#xA;&#x9;idIfCond_402 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tpb_lbdExp124.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.VoidType&quot;));&#xA;&#xA;&#x9;if( idIfCond_402 ) {&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getterOwnedOperation" ordered="false" upperBound="-1"
              eType="#/2/language/structure/Operation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Operation> result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(this.getTypeDefinition());&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cDef.getOwnedOperation());&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterSuperClass" upperBound="-1" eType="#/2/language/structure/Class">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Class> result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(this.getTypeDefinition());&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Class> supertypes = ((kermeta.standard.OrderedSet&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft119 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(cDef.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_386 = false;&#xA;&#x9;while( !idLoopCond_386 ) {&#xA;&#x9;idLoopCond_386 = it_ft119.isOff();&#xA;&#x9;if ( idLoopCond_386 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type elem_lbdExp119 = it_ft119.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_387 = false;&#xA;&#x9;idIfCond_387 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), elem_lbdExp119);&#xA;&#xA;&#x9;if( idIfCond_387 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Class>asTypeOrVoid(elem_lbdExp119);&#xA;&#xA;&#x9;supertypes.add(c);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = supertypes;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterIsAbstract" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(this.getTypeDefinition());&#xA;&#xA;&#x9;result = cDef.getIsAbstract();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getTypeDefinition().getName();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterClassDefinition" eType="#/2/language/structure/ClassDefinition">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.ClassDefinition result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(this.getTypeDefinition());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getterOwnedAttribute" upperBound="-1" eType="#/2/language/structure/Property">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Property> result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(this.getTypeDefinition());&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cDef.getOwnedAttribute());&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eGenericSuperTypes eClassifier="#/2/language/structure/ParameterizedType"/>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EGenericType"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Tag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Tag is intended to be used to add documentation on a  model element,&#xA;or add some textual information that cannot be expressed with any&#xA;model element definition."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; *&#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Object c = org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_403 = false;&#xA;&#x9;idIfCond_403 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;));&#xA;&#xA;&#x9;if( idIfCond_403 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))).getEntryPoints()).add(ecoreAnnotation);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Property p = c.getPropertyValue(&quot;ecoreModelElement&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_404 = false;&#xA;&#x9;idIfCond_404 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(p));&#xA;&#xA;&#x9;if( idIfCond_404 ) {&#xA;&#xA;&#x9;ecore.EModelElement ecoreModelElement_retrieved = ((ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(c, p), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EModelElement&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreModelElement_retrieved.getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreAnnotation);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).getKermetaEAnnotation(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_405 = false;&#xA;&#x9;idIfCond_405 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getName());&#xA;&#xA;&#x9;if( idIfCond_405 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addEntry(ecoreAnnotation, kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;documentation&quot;).getName()), this.getValue());&#xA;}&#xA; else {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getEAnnotationHelper())).addEntry(ecoreAnnotation, this.getName(), this.getValue());&#xA;}&#xA;&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="String value of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="object" lowerBound="1"
              upperBound="-1" eType="#/2/language/structure/Object" eOpposite="#/2/language/structure/Object/tag">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Objects to which the Tag is attached to"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/2/language/structure/Traceability">
            <eTypeArguments eClassifier="#/5/EAnnotation"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Require" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; * &#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.createEcoreModelElement(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry requireEntry = null;&#xA;//BIft:detect&#xA;&#xA;ecore.EStringToStringMapEntry result_ft125 = null;&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry elem_ft125 = null;&#xA;&#xA;&#x9;result_ft125 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EStringToStringMapEntry> it_ft125 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_406 = false;&#xA;&#x9;while( !idLoopCond_406 ) {&#xA;&#x9;idLoopCond_406 = kermeta.standard.helper.BooleanWrapper.or(it_ft125.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft125, null));&#xA;&#x9;if ( idLoopCond_406 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft125 = it_ft125.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_407 = false;&#xA;//BIle:detector&#xA;ecore.EStringToStringMapEntry d_lbdExp125 = elem_ft125;&#xA;&#xA;&#x9;idIfCond_407 = kermeta.standard.helper.StringWrapper.equals(d_lbdExp125.getKey(), &quot;require&quot;);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_407 ) {&#xA;&#xA;&#x9;result_ft125 = elem_ft125;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;requireEntry = result_ft125;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;requireEntry.setValue(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(requireEntry.getValue(), this.getUri()), &quot;|&quot;));&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Using" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; * &#xD;&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.createEcoreModelElement(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/5/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry usingEntry = null;&#xA;//BIft:detect&#xA;&#xA;ecore.EStringToStringMapEntry result_ft126 = null;&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry elem_ft126 = null;&#xA;&#xA;&#x9;result_ft126 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EStringToStringMapEntry> it_ft126 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_408 = false;&#xA;&#x9;while( !idLoopCond_408 ) {&#xA;&#x9;idLoopCond_408 = kermeta.standard.helper.BooleanWrapper.or(it_ft126.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft126, null));&#xA;&#x9;if ( idLoopCond_408 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft126 = it_ft126.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_409 = false;&#xA;//BIle:detector&#xA;ecore.EStringToStringMapEntry d_lbdExp126 = elem_ft126;&#xA;&#xA;&#x9;idIfCond_409 = kermeta.standard.helper.StringWrapper.equals(d_lbdExp126.getKey(), &quot;using&quot;);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_409 ) {&#xA;&#xA;&#x9;result_ft126 = elem_ft126;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;usingEntry = result_ft126;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;usingEntry.setValue(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(usingEntry.getValue(), this.getQualifiedName()), &quot;|&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).add(usingEntry);&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LinkSetterForTypedElement" eSuperTypes="#/2/language/structure/Object">
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_410 = false;&#xA;&#x9;idIfCond_410 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ecoreModelElement)), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(element.getType().getTypeQName())));&#xA;&#xA;&#x9;if( idIfCond_410 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_411 = false;&#xA;&#x9;idIfCond_411 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_411 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;)));&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDefinition = c.getClassDefinitionAsTyped();&#xA;&#xA;&#x9;ecore.EGenericType genericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_412 = false;&#xA;&#x9;idIfCond_412 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(classDefinition.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_412 ) {&#xA;&#xA;&#x9;genericType.setEClassifier(classDefinition.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;genericType.setEClassifier(classDefinition.getEcoreDataType());&#xA;}&#xA;&#xA;&#xA;&#x9;ecoreModelElement.setEGenericType(genericType);&#xA;&#xA;&#x9;c.setEcoreModelElement(genericType);&#xA;&#xA;&#x9;c.setLinks(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_413 = false;&#xA;&#x9;idIfCond_413 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_413 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = element.getType().getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_414 = false;&#xA;&#x9;idIfCond_414 = element.getType().isEDataType();&#xA;&#xA;&#x9;if( idIfCond_414 ) {&#xA;&#xA;&#x9;ecore.EGenericType newEGT = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;newEGT.setEClassifier(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;&#xA;&#x9;ecoreModelElement.setEGenericType(newEGT);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.ETypeParameter> it_ft127 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement().getETypeParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_415 = false;&#xA;&#x9;while( !idLoopCond_415 ) {&#xA;&#x9;idLoopCond_415 = it_ft127.isOff();&#xA;&#x9;if ( idLoopCond_415 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;ecore.ETypeParameter etp_lbdExp127 = it_ft127.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_416 = false;&#xA;&#x9;idIfCond_416 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ecoreModelElement.getEGenericType()));&#xA;&#xA;&#x9;if( idIfCond_416 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(newEGT.getETypeArguments()).add(((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType())));&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_417 = false;&#xA;&#x9;idIfCond_417 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_417 ) {&#xA;&#xA;&#x9;ecoreModelElement.setEType(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecoreModelElement.setEType(cd.getEcoreDataType());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_418 = false;&#xA;&#x9;idIfCond_418 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_418 ) {&#xA;&#xA;&#x9;ecoreModelElement.setEType(((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_419 = false;&#xA;&#x9;idIfCond_419 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_419 ) {&#xA;&#xA;&#x9;ecore.EGenericType genericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(ecore.EcorePackage.eINSTANCE.getEGenericType()));&#xA;&#xA;&#x9;genericType.setETypeParameter(((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;))).getEcoreModelElement());&#xA;&#xA;&#x9;ecoreModelElement.setEGenericType(genericType);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/2/language/structure/TypedElement"/>
            <eParameters name="ecoreModelElement" eType="#/5/ETypedElement"/>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType" eSuperTypes="#/2/language/structure/Type #/2/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type of a model, consisting of a set of included type definitions"/>
          </eAnnotations>
          <eOperations name="_new" eType="#/2/language/structure/Model">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * To be written ##########################################&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Model result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Model) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.Model>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ModelTypeUtil.newObject(this));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isModelTypeOf" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * To be written ##########################################&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ModelTypeUtil.isModelTypeOf(this, m));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="m" eType="#/2/language/structure/Model"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includedTypeDefinition"
              upperBound="-1" eType="#/2/language/structure/TypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Is the holder of a set of model elements (Object) that are compatible with the ModelType that has &#xA;instantiated this Model."/>
          </eAnnotations>
          <eOperations name="addCompatible" eType="#/2/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xA; &#x9; * Returns the object if it has been added (One can check that some element have been ignored or not)&#xA; &#x9; * return Void if not added&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents());&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ModelUtil.addCompatible(this, objectToAdd);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToAdd" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Remove an object from the model&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(contents, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xA; &#x9; * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Collection&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft128 = objectsToAdd.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_420 = false;&#xA;&#x9;while( !idLoopCond_420 ) {&#xA;&#x9;idLoopCond_420 = it_ft128.isOff();&#xA;&#x9;if ( idLoopCond_420 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object obj_lbdExp128 = it_ft128.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object addedObject = this.addCompatible(obj_lbdExp128);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_421 = false;&#xA;&#x9;idIfCond_421 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(addedObject));&#xA;&#xA;&#x9;if( idIfCond_421 ) {&#xA;&#xA;&#x9;result.add(obj_lbdExp128);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eClassifier="#/2/language/structure/Object"/>
            </eGenericType>
            <eParameters name="objectsToAdd">
              <eGenericType eClassifier="#/2/standard/Collection">
                <eTypeArguments eClassifier="#/2/language/structure/Object"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ModelUtil.add(this, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/2/language/structure/Object"/>
          </eOperations>
          <eOperations name="filter">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA; &#x9; * Returns a set of all the elements of the model that are instance of the given Type&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Object> result_ft129 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object elem_ft129 = null;&#xA;&#xA;&#x9;result_ft129 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft129 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_422 = false;&#xA;&#x9;while( !idLoopCond_422 ) {&#xA;&#x9;idLoopCond_422 = it_ft129.isOff();&#xA;&#x9;if ( idLoopCond_422 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft129 = it_ft129.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_423 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Object o_lbdExp129 = elem_ft129;&#xA;&#xA;&#x9;idIfCond_423 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(typeName, o_lbdExp129);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_423 ) {&#xA;&#xA;&#x9;result_ft129.add(elem_ft129);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;result = result_ft129.asSet();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eClassifier="#/2/language/structure/Object"/>
            </eGenericType>
            <eParameters name="typeName" eType="#/2/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
              eType="#/2/language/structure/Object" changeable="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contents of this model..."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::String"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Boolean"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeContainer" abstract="true"
            eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Phantom class : EMF reflexive editors need that any element of a metamodel &#xA;has a direct or indirect containment relationship with the root model element of&#xA;the metamodel. This class resolves this technical requirement."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="containedType" upperBound="-1"
              eType="#/2/language/structure/Type" containment="true" eOpposite="#/2/language/structure/Type/typeContainer">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained types"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding" eSuperTypes="#/2/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a binding between a TypeVariable and a Type"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Assigned Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
              eType="#/2/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeVariable"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Integer">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true"
            eSuperTypes="#/2/language/structure/TypeContainer #/2/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of typed element : each element &#xA;that is typed inherits this class."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the model element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="#/2/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This boolean allows to tell if this Type definition is an aspect or not&#xA;If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xA;TypeDefinition that has exactly the same qualified name"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xA;this class)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAspect" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="#/2/language/structure/Type #/2/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Special type definition for Enumeration, PrimitiveType"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintType">
          <eLiterals name="inv" literal="inv"/>
          <eLiterals name="pre" value="1" literal="pre"/>
          <eLiterals name="post" value="2" literal="post"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintLanguage">
          <eLiterals name="kermeta" literal="kermeta"/>
          <eLiterals name="ocl" value="1" literal="ocl"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true"
            eSuperTypes="#/2/language/structure/TypeContainer #/2/language/structure/Type #/2/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a type variable for generic types :  &#xA;in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="supertype" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Reference to the supertype, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelTypeVariable" eSuperTypes="#/2/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualType" upperBound="-1"
              eType="#/2/language/structure/VirtualType" containment="true" eOpposite="#/2/language/structure/VirtualType/modelType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualType" eSuperTypes="#/2/language/structure/ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="modelType" lowerBound="1"
              eType="#/2/language/structure/ModelTypeVariable" eOpposite="#/2/language/structure/ModelTypeVariable/virtualType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/2/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              lowerBound="1" eType="#/2/language/structure/ClassDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Filter" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Filter is the class that represent a filter on a ModelingUnit.&#xA;the qualifiedName represent the beginning of the matched names"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer" abstract="true"
            eSuperTypes="#/2/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xA;element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xA;package definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeDefinition"
              upperBound="-1" eType="#/2/language/structure/TypeDefinition" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained TypeDefinitions"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Object_oid"
            instanceClassName="java.lang.Integer"/>
      </eSubpackages>
      <eSubpackages name="behavior" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#/2/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="The base class for every entity used to define a behavior in operation body."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_424 = false;&#xA;&#x9;idIfCond_424 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getCompiledJavaExtern(), &quot;&quot;), kermeta.standard.helper.StringWrapper.equals(context.getCompiledJavaExtern(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_424 ) {&#xA;&#xA;&#x9;context.setCompiledJavaExtern(this.getCompiledJavaExtern());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_425 = false;&#xA;&#x9;idIfCond_425 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_425 ) {&#xA;&#xA;&#x9;context.setCompiledJavaExtern(kermeta.standard.helper.StringWrapper.split(kermeta.standard.helper.StringWrapper.replace(context.getCompiledJavaExtern(), &quot;(&quot;, &quot;%&quot;), &quot;%&quot;).first());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_426 = false;&#xA;&#x9;idIfCond_426 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(context.getCurrent_valueType())), context.getStaticOperationMode());&#xA;&#xA;&#x9;if( idIfCond_426 ) {&#xA;&#xA;&#x9;context.setCompiledJavaExtern(kermeta.standard.helper.StringWrapper.replace(context.getCompiledJavaExtern(), &quot;this&quot;, &quot;self&quot;));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="endOfExpressionFixer" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Check if the current element is at the end of an Expression, if so a &quot;;&quot; is added&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_427 = false;&#xA;&#x9;idIfCond_427 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_427 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_428 = false;&#xA;&#x9;idIfCond_428 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Rescue&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Constraint&quot;)));&#xA;&#xA;&#x9;if( idIfCond_428 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_429 = false;&#xA;&#x9;idIfCond_429 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;));&#xA;&#xA;&#x9;if( idIfCond_429 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.Assignment assignment = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_430 = false;&#xA;&#x9;idIfCond_430 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(assignment.getTarget(), this);&#xA;&#xA;&#x9;if( idIfCond_430 ) {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_431 = false;&#xA;&#x9;idIfCond_431 = assignment.getTarget().isCallFeatureAsStaticProperty();&#xA;&#xA;&#x9;if( idIfCond_431 ) {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_432 = false;&#xA;&#x9;idIfCond_432 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(assignment), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_432 ) {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getValueTypeCastSuffix(), ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).ppCastSuffix()), &quot;;&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;;&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="mustBeAssigned" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_433 = false;&#xA;&#x9;idIfCond_433 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Literal&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.VoidType&quot;)));&#xA;&#xA;&#x9;if( idIfCond_433 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_434 = false;&#xA;&#x9;idIfCond_434 = this.isFunctionTypeVariable();&#xA;&#xA;&#x9;if( idIfCond_434 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createExpression" eType="#/2/utils/StringBuffer">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.utils.StringBuffer result = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression stm = this;&#xA;&#xA;&#x9;java.lang.String str_statement = kermeta.standard.helper.StringWrapper.normalizeStatement(stm.createBehaviorJava(context));&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> str_statement_splitted = kermeta.standard.helper.StringWrapper.split(str_statement, context.getSEPARATOR_STATEMENT_FT());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_435 = false;&#xA;&#x9;idIfCond_435 = kermeta.standard.helper.IntegerWrapper.equals(str_statement_splitted.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_435 ) {&#xA;&#xA;&#x9;java.lang.String s1 = str_statement_splitted.first();&#xA;&#xA;&#x9;java.lang.String s2 = str_statement_splitted.last();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_436 = false;&#xA;&#x9;idIfCond_436 = kermeta.standard.helper.StringWrapper.contains(s2, context.getPREVIOUS_STATEMENT_FT());&#xA;&#xA;&#x9;if( idIfCond_436 ) {&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(s2, context.getPREVIOUS_STATEMENT_FT(), s1);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(str_statement, kermeta.standard.helper.StringWrapper.plus(context.getSEPARATOR_STATEMENT_FT(), &quot;//&quot;), &quot;//&quot;);&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(str_statement, kermeta.standard.helper.StringWrapper.plus(context.getRETURN_EXPRESSION_TO_REPLACE(), &quot;result&quot;), &quot;result&quot;);&#xA;&#xA;&#x9;javaCode.append(context.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;javaCode.append(&quot;\n\t&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_437 = false;&#xA;//BIft:andThen&#xA;&#xA;java.lang.Boolean result_ft130 = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_438 = false;&#xA;&#x9;idIfCond_438 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getIsLastExpression()));&#xA;&#xA;&#x9;if( idIfCond_438 ) {&#xA;&#xA;&#x9;//BIle:right&#xA;/*This variable should be never used*/ kermeta.language.structure.Object i_lbdExp130 = null;&#xA;&#xA;&#x9;result_ft130 = this.getIsLastExpression();&#xA;//EIle:right&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result_ft130 = false;&#xA;}&#xA;&#xA;&#xA;//CEC&#xA;idIfCond_437 = result_ft130;&#xA;//EIft:andThen&#xA;&#xA;&#xA;&#x9;if( idIfCond_437 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_439 = false;&#xA;&#x9;idIfCond_439 = stm.mustBeAssigned();&#xA;&#xA;&#x9;if( idIfCond_439 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_440 = false;&#xA;&#x9;idIfCond_440 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_440 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_441 = false;&#xA;&#x9;idIfCond_441 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getStaticType().getTypeName());&#xA;&#xA;&#x9;if( idIfCond_441 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_442 = false;&#xA;&#x9;idIfCond_442 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Constraint&quot;))), kermeta.standard.helper.IntegerWrapper.equals(context.getResultLastStatementStack().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_442 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_443 = false;&#xA;&#x9;idIfCond_443 = kermeta.standard.helper.StringWrapper.equals(context.getResultLastStatementType(), ((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getStaticType().createBehaviorJava(context));&#xA;&#xA;&#x9;if( idIfCond_443 ) {&#xA;&#xA;&#x9;javaCode.append(context.getResultLastStatementId());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_444 = false;&#xA;&#x9;idIfCond_444 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)), kermeta.standard.helper.IntegerWrapper.isGreater(context.getResultLastStatementStack().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_444 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_445 = false;&#xA;&#x9;idIfCond_445 = kermeta.standard.helper.StringWrapper.equals(context.getResultLastStatementType(), ((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getStaticType().createBehaviorJava(context));&#xA;&#xA;&#x9;if( idIfCond_445 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_446 = false;&#xA;&#x9;idIfCond_446 = stm.callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_446 ) {&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_statement, context.getResultLastStatementId()), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getCalledFtResult()), &quot;;\n&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_447 = false;&#xA;&#x9;idIfCond_447 = kermeta.standard.helper.StringWrapper.contains(str_statement, context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL());&#xA;&#xA;&#x9;if( idIfCond_447 ) {&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(str_statement, context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL(), context.getResultLastStatementId());&#xA;}&#xA; else {&#xA;&#xA;&#x9;javaCode.append(context.getResultLastStatementId());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_448 = false;&#xA;&#x9;idIfCond_448 = stm.mustBeAssigned();&#xA;&#xA;&#x9;if( idIfCond_448 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_449 = false;&#xA;&#x9;idIfCond_449 = kermeta.standard.helper.StringWrapper.contains(str_statement, context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL());&#xA;&#xA;&#x9;if( idIfCond_449 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_450 = false;&#xA;&#x9;idIfCond_450 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.contains(str_statement, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;(\&quot;&quot;, context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL()), &quot;\&quot;)&quot;)));&#xA;&#xA;&#x9;if( idIfCond_450 ) {&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(str_statement, context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL(), &quot;&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode.append(str_statement);&#xA;&#xA;&#x9;result = javaCode;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
            <eParameters name="javaCode" eType="#/2/utils/StringBuffer"/>
          </eOperations>
          <eOperations name="isFunctionTypeVariable" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_451 = false;&#xA;&#x9;idIfCond_451 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_451 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_452 = false;&#xA;&#x9;idIfCond_452 = ((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))).isFunctionTypeVariable();&#xA;&#xA;&#x9;if( idIfCond_452 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeLambdaExpressionResult"
              eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isLastExpression"
              eType="#/2/standard/JavaBoolean" defaultValueLiteral="false"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticType" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Expression (set by type checking)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallVariable" eSuperTypes="#/2/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="We call &quot;CallVariable&quot; the use of a variable in a statement.&#xA;in &lt;code>i := j + 1&lt;/code>, i and j are 2 CallVariables."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_453 = false;&#xA;&#x9;idIfCond_453 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(context.getTasks_stack().peek(), context.getFUNCTION_TYPE_COMPILATION_TASK()), this.isFunctionTypeVariable());&#xA;&#xA;&#x9;if( idIfCond_453 ) {&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;kermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getLambdaExpression();&#xA;&#xA;&#x9;this.setLambdaExpression(theLambdaExp);&#xA;&#xA;&#x9;java.lang.String str_toInclude = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_454 = false;&#xA;&#x9;idIfCond_454 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_454 ) {&#xA;&#xA;&#x9;java.lang.String lambdaExp_returnType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_455 = false;&#xA;&#x9;idIfCond_455 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(lambdaExp_returnType));&#xA;&#xA;&#x9;if( idIfCond_455 ) {&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer inc_param = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.LambdaParameter> it_ft131 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.LambdaParameter>convertAsOrderedSet(theLambdaExp.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_456 = false;&#xA;&#x9;while( !idLoopCond_456 ) {&#xA;&#x9;idLoopCond_456 = it_ft131.isOff();&#xA;&#x9;if ( idLoopCond_456 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.LambdaParameter p_lbdExp131 = it_ft131.next();&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;java.lang.String type_param_ = context.getFtProductTypeStack().peek().getTypeByIndex(inc_param).createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_457 = false;&#xA;&#x9;idIfCond_457 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(type_param_);&#xA;&#xA;&#x9;if( idIfCond_457 ) {&#xA;&#xA;&#x9;type_param_ = &quot;/*This variable should be never used*/ kermeta.language.structure.Object&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;str_toInclude = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_toInclude, type_param_), &quot; &quot;), p_lbdExp131.getName()), &quot;_lbdExp&quot;), ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getCuid());&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;str_toInclude = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_toInclude, &quot; = &quot;), org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).elementAt(inc_param).createBehaviorJava(context)), &quot;;\n&quot;);&#xA;&#xA;&#x9;inc_param = kermeta.standard.helper.IntegerWrapper.plus(inc_param, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;context.setAfterLbdExpActivation(false);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;//BIle:&quot;), this.getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, str_toInclude), theLambdaExp.getBody().createBehaviorJava(context));&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;//EIle:&quot;), this.getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setAfterLbdExpActivation(true);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_458 = false;&#xA;&#x9;idIfCond_458 = kermeta.standard.helper.StringWrapper.equals(this.getName(), &quot;stdio&quot;);&#xA;&#xA;&#x9;if( idIfCond_458 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance()&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_459 = false;&#xA;&#x9;idIfCond_459 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.isParameter()), kermeta.standard.helper.BooleanWrapper.not(this.isParameterForOwningOperation()));&#xA;&#xA;&#x9;if( idIfCond_459 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context)), this.printSuffix(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_460 = false;&#xA;&#x9;idIfCond_460 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(this.isParameterSingle(), this.isParameterForOwningOperationSingle()), this.isParameterManyAndForOwningOperation());&#xA;&#xA;&#x9;if( idIfCond_460 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context)), this.printSuffix(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Parameter c_param = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_461 = false;&#xA;&#x9;idIfCond_461 = this.isParameterForOwningOperation();&#xA;&#xA;&#x9;if( idIfCond_461 ) {&#xA;&#xA;&#x9;c_param = this.retrieveCorrespondingParameter();&#xA;}&#xA; else {&#xA;&#xA;&#x9;c_param = this.getCallFeatureCorrespondingParameter();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeParamBinding()).first().getType().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_462 = false;&#xA;&#x9;idIfCond_462 = this.isParameterMany();&#xA;&#xA;&#x9;if( idIfCond_462 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsEList(&quot;), result);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_463 = false;&#xA;&#x9;idIfCond_463 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(c_param.getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(c_param.getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_463 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsBag(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_464 = false;&#xA;&#x9;idIfCond_464 = kermeta.standard.helper.BooleanWrapper.and(c_param.getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(c_param.getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_464 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_465 = false;&#xA;&#x9;idIfCond_465 = kermeta.standard.helper.BooleanWrapper.and(c_param.getIsUnique(), c_param.getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_465 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsOrderedSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_466 = false;&#xA;&#x9;idIfCond_466 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(c_param.getIsUnique()), c_param.getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_466 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsSequence(&quot;), result);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context)), this.printSuffix(context)), &quot;)&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isParameterManyAndForOwningOperation" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_467 = false;&#xA;&#x9;idIfCond_467 = kermeta.standard.helper.BooleanWrapper.and(this.isParameterMany(), this.isParameterForOwningOperation());&#xA;&#xA;&#x9;if( idIfCond_467 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isDeclaredInLambdaExpression" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_468 = false;&#xA;&#x9;idIfCond_468 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_468 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.Block tmp_block = null;&#xA;&#xA;&#x9;tmp_block = (kermeta.language.behavior.Block) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.behavior.Block>asTypeOrVoid(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)));&#xA;&#xA;&#x9;kermeta.language.behavior.Expression aStatement = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_469 = false;&#xA;&#x9;idIfCond_469 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_block));&#xA;&#xA;&#x9;if( idIfCond_469 ) {&#xA;&#xA;&#x9;aStatement = this.getVariableDeclInBlock(tmp_block);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_470 = false;&#xA;&#x9;idIfCond_470 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(aStatement));&#xA;&#xA;&#x9;if( idIfCond_470 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_471 = false;&#xA;&#x9;idIfCond_471 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(aStatement, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_471 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.VariableDecl theVariableDecl = ((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(aStatement, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(theVariableDecl.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_472 = false;&#xA;&#x9;idIfCond_472 = kermeta.standard.helper.BooleanWrapper.not(result);&#xA;&#xA;&#x9;if( idIfCond_472 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.Loop tmp_loop = null;&#xA;&#xA;&#x9;tmp_loop = (kermeta.language.behavior.Loop) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.behavior.Loop>asTypeOrVoid(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;)));&#xA;&#xA;&#x9;kermeta.language.behavior.Expression aStatement_ = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_473 = false;&#xA;&#x9;idIfCond_473 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_loop));&#xA;&#xA;&#x9;if( idIfCond_473 ) {&#xA;&#xA;&#x9;aStatement_ = this.getVariableDeclInLoop(tmp_loop);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_474 = false;&#xA;&#x9;idIfCond_474 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(aStatement_));&#xA;&#xA;&#x9;if( idIfCond_474 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_475 = false;&#xA;&#x9;idIfCond_475 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(aStatement_, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_475 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.VariableDecl theVariableDecl = ((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(aStatement_, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(theVariableDecl.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getCorrespondingLambdaExpressionParameter" eType="#/2/language/behavior/LambdaParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.behavior.LambdaParameter result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_476 = false;&#xA;&#x9;idIfCond_476 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_476 ) {&#xA;&#xA;&#x9;result = this.getLambdaParameter(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isLambdaExpressionParameter" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_477 = false;&#xA;&#x9;idIfCond_477 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_477 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getLambdaParameter(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))))));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getVariableDeclInBlock" eType="#/2/language/behavior/Expression">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.behavior.Expression result = null;&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft132 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft132 = null;&#xA;&#xA;&#x9;result_ft132 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft132 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(block.getStatement()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_478 = false;&#xA;&#x9;while( !idLoopCond_478 ) {&#xA;&#x9;idLoopCond_478 = kermeta.standard.helper.BooleanWrapper.or(it_ft132.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft132, null));&#xA;&#x9;if ( idLoopCond_478 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft132 = it_ft132.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_479 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression s_lbdExp132 = elem_ft132;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_480 = false;&#xA;&#x9;idIfCond_480 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(s_lbdExp132, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_480 ) {&#xA;&#xA;&#x9;idIfCond_479 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(s_lbdExp132, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;))).getIdentifier(), this.getName());&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_479 = false;&#xA;}&#xA;&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_479 ) {&#xA;&#xA;&#x9;result_ft132 = elem_ft132;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = result_ft132;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_481 = false;&#xA;&#x9;idIfCond_481 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(block.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_481 ) {&#xA;&#xA;&#x9;result = this.getVariableDeclInBlock(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(block.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="block" eType="#/2/language/behavior/Block"/>
          </eOperations>
          <eOperations name="getLambdaParameter" eType="#/2/language/behavior/LambdaParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.behavior.LambdaParameter result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_482 = false;&#xA;&#x9;idIfCond_482 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(lambdaExpression));&#xA;&#xA;&#x9;if( idIfCond_482 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.behavior.LambdaParameter result_ft133 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.LambdaParameter elem_ft133 = null;&#xA;&#xA;&#x9;result_ft133 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.LambdaParameter> it_ft133 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.LambdaParameter>convertAsOrderedSet(lambdaExpression.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_483 = false;&#xA;&#x9;while( !idLoopCond_483 ) {&#xA;&#x9;idLoopCond_483 = kermeta.standard.helper.BooleanWrapper.or(it_ft133.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft133, null));&#xA;&#x9;if ( idLoopCond_483 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft133 = it_ft133.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_484 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.LambdaParameter p_lbdExp133 = elem_ft133;&#xA;&#xA;&#x9;idIfCond_484 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp133.getName(), this.getName());&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_484 ) {&#xA;&#xA;&#x9;result_ft133 = elem_ft133;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = result_ft133;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_485 = false;&#xA;&#x9;idIfCond_485 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(lambdaExpression.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_485 ) {&#xA;&#xA;&#x9;result = this.getLambdaParameter(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(lambdaExpression.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="lambdaExpression" eType="#/2/language/behavior/LambdaExpression"/>
          </eOperations>
          <eOperations name="isDeclaredInAFunctionType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_486 = false;&#xA;&#x9;idIfCond_486 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))));&#xA;&#xA;&#x9;if( idIfCond_486 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_487 = false;&#xA;&#x9;idIfCond_487 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_487 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.Block tmp_block = null;&#xA;&#xA;&#x9;tmp_block = (kermeta.language.behavior.Block) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.behavior.Block>asTypeOrVoid(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)));&#xA;&#xA;&#x9;kermeta.language.behavior.Expression aStatement = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_488 = false;&#xA;&#x9;idIfCond_488 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_block));&#xA;&#xA;&#x9;if( idIfCond_488 ) {&#xA;&#xA;&#x9;aStatement = this.getVariableDeclInBlock(tmp_block);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_489 = false;&#xA;&#x9;idIfCond_489 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(aStatement));&#xA;&#xA;&#x9;if( idIfCond_489 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_490 = false;&#xA;&#x9;idIfCond_490 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(aStatement, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_490 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.VariableDecl theVariableDecl = ((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(aStatement, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theVariableDecl.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_491 = false;&#xA;&#x9;idIfCond_491 = kermeta.standard.helper.BooleanWrapper.not(result);&#xA;&#xA;&#x9;if( idIfCond_491 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.Loop tmp_loop = null;&#xA;&#xA;&#x9;tmp_loop = (kermeta.language.behavior.Loop) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.behavior.Loop>asTypeOrVoid(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;)));&#xA;&#xA;&#x9;kermeta.language.behavior.Expression aStatement_ = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_492 = false;&#xA;&#x9;idIfCond_492 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tmp_loop));&#xA;&#xA;&#x9;if( idIfCond_492 ) {&#xA;&#xA;&#x9;aStatement_ = this.getVariableDeclInLoop(tmp_loop);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_493 = false;&#xA;&#x9;idIfCond_493 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(aStatement_));&#xA;&#xA;&#x9;if( idIfCond_493 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_494 = false;&#xA;&#x9;idIfCond_494 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(aStatement_, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_494 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.VariableDecl theVariableDecl = ((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(aStatement_, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theVariableDecl.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getCallFeatureCorrespondingParameter" eType="#/2/language/structure/Parameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Parameter result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_495 = false;&#xA;&#x9;idIfCond_495 = this.isParameter();&#xA;&#xA;&#x9;if( idIfCond_495 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.behavior.Expression exp = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft134 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft134 = null;&#xA;&#xA;&#x9;result_ft134 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft134 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_496 = false;&#xA;&#x9;while( !idLoopCond_496 ) {&#xA;&#x9;idLoopCond_496 = kermeta.standard.helper.BooleanWrapper.or(it_ft134.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft134, null));&#xA;&#x9;if ( idLoopCond_496 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft134 = it_ft134.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_497 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp134 = elem_ft134;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_497 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp134, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_497 ) {&#xA;&#xA;&#x9;result_ft134 = elem_ft134;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;exp = result_ft134;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Parameter&quot;)));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isParameterForOwningOperation" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_498 = false;&#xA;&#x9;idIfCond_498 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_498 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Parameter result_ft135 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft135 = null;&#xA;&#xA;&#x9;result_ft135 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft135 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_499 = false;&#xA;&#x9;while( !idLoopCond_499 ) {&#xA;&#x9;idLoopCond_499 = kermeta.standard.helper.BooleanWrapper.or(it_ft135.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft135, null));&#xA;&#x9;if ( idLoopCond_499 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft135 = it_ft135.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_500 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Parameter p_lbdExp135 = elem_ft135;&#xA;&#xA;&#x9;idIfCond_500 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp135.getName(), this.getName());&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_500 ) {&#xA;&#xA;&#x9;result_ft135 = elem_ft135;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft135));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isParameterMany" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_501 = false;&#xA;&#x9;idIfCond_501 = this.isParameter();&#xA;&#xA;&#x9;if( idIfCond_501 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.behavior.Expression exp = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft136 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft136 = null;&#xA;&#xA;&#x9;result_ft136 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft136 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_502 = false;&#xA;&#x9;while( !idLoopCond_502 ) {&#xA;&#x9;idLoopCond_502 = kermeta.standard.helper.BooleanWrapper.or(it_ft136.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft136, null));&#xA;&#x9;if ( idLoopCond_502 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft136 = it_ft136.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_503 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp136 = elem_ft136;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_503 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp136, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_503 ) {&#xA;&#xA;&#x9;result_ft136 = elem_ft136;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;exp = result_ft136;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_504 = false;&#xA;&#x9;idIfCond_504 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Parameter&quot;))).getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_504 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isParameterSingle" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_505 = false;&#xA;&#x9;idIfCond_505 = this.isParameter();&#xA;&#xA;&#x9;if( idIfCond_505 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.behavior.Expression exp = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft137 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft137 = null;&#xA;&#xA;&#x9;result_ft137 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft137 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_506 = false;&#xA;&#x9;while( !idLoopCond_506 ) {&#xA;&#x9;idLoopCond_506 = kermeta.standard.helper.BooleanWrapper.or(it_ft137.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft137, null));&#xA;&#x9;if ( idLoopCond_506 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft137 = it_ft137.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_507 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp137 = elem_ft137;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_507 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp137, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_507 ) {&#xA;&#xA;&#x9;result_ft137 = elem_ft137;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;exp = result_ft137;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_508 = false;&#xA;&#x9;idIfCond_508 = kermeta.standard.helper.IntegerWrapper.equals(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Parameter&quot;))).getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_508 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isParameterForOwningOperationMany" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_509 = false;&#xA;&#x9;idIfCond_509 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.retrieveCorrespondingParameter()));&#xA;&#xA;&#x9;if( idIfCond_509 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_510 = false;&#xA;&#x9;idIfCond_510 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.retrieveCorrespondingParameter().getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_510 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="printSuffix" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_511 = false;&#xA;&#x9;idIfCond_511 = this.isLambdaExpressionParameter();&#xA;&#xA;&#x9;if( idIfCond_511 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_lbdExp&quot;, ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getCorrespondingLambdaExpressionParameter()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))).getCuid());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_512 = false;&#xA;&#x9;idIfCond_512 = this.isDeclaredInAFunctionType();&#xA;&#xA;&#x9;if( idIfCond_512 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_513 = false;&#xA;&#x9;idIfCond_513 = kermeta.standard.helper.BooleanWrapper.and(context.getAfterLbdExpActivation(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.printFtSuffix(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_513 ) {&#xA;&#xA;&#x9;result = context.printFtSuffix();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_ft&quot;, kermeta.standard.helper.StringWrapper.toString(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getCuid()));&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_514 = false;&#xA;&#x9;idIfCond_514 = this.isDeclaredInLambdaExpression();&#xA;&#xA;&#x9;if( idIfCond_514 ) {&#xA;&#xA;&#x9;result = context.printFtSuffix();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getFunctionTypeParameter" eType="#/2/language/structure/Parameter">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Retrieve in an operation signature, the parameter that is a function type */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Parameter result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter ftParam = this.retrieveCorrespondingParameter();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_515 = false;&#xA;&#x9;idIfCond_515 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ftParam));&#xA;&#xA;&#x9;if( idIfCond_515 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_516 = false;&#xA;&#x9;idIfCond_516 = ftParam.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_516 ) {&#xA;&#xA;&#x9;result = ftParam;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="retrieveCorrespondingParameter" eType="#/2/language/structure/Parameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Parameter result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_517 = false;&#xA;&#x9;idIfCond_517 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))));&#xA;&#xA;&#x9;if( idIfCond_517 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Parameter result_ft138 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft138 = null;&#xA;&#xA;&#x9;result_ft138 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft138 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_518 = false;&#xA;&#x9;while( !idLoopCond_518 ) {&#xA;&#x9;idLoopCond_518 = kermeta.standard.helper.BooleanWrapper.or(it_ft138.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft138, null));&#xA;&#x9;if ( idLoopCond_518 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft138 = it_ft138.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_519 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Parameter p_lbdExp138 = elem_ft138;&#xA;&#xA;&#x9;idIfCond_519 = kermeta.standard.helper.StringWrapper.equals(p_lbdExp138.getName(), this.getName());&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_519 ) {&#xA;&#xA;&#x9;result_ft138 = elem_ft138;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = result_ft138;&#xA;//EIft:detect&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getVariableDeclInLoop" eType="#/2/language/behavior/Expression">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.behavior.Expression result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_520 = false;&#xA;&#x9;idIfCond_520 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(l));&#xA;&#xA;&#x9;if( idIfCond_520 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_521 = false;&#xA;&#x9;idIfCond_521 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(l.getInitialization()));&#xA;&#xA;&#x9;if( idIfCond_521 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_522 = false;&#xA;&#x9;idIfCond_522 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(l.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_522 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_523 = false;&#xA;&#x9;idIfCond_523 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(l.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;))).getIdentifier(), this.getName());&#xA;&#xA;&#x9;if( idIfCond_523 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(l.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_524 = false;&#xA;&#x9;idIfCond_524 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(l.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_524 ) {&#xA;&#xA;&#x9;result = this.getVariableDeclInLoop(((kermeta.language.behavior.Loop) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(l.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;))));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="l" eType="#/2/language/behavior/Loop"/>
          </eOperations>
          <eOperations name="isParameter" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_525 = false;&#xA;&#x9;idIfCond_525 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_525 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.Expression exp = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft139 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft139 = null;&#xA;&#xA;&#x9;result_ft139 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft139 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_526 = false;&#xA;&#x9;while( !idLoopCond_526 ) {&#xA;&#x9;idLoopCond_526 = kermeta.standard.helper.BooleanWrapper.or(it_ft139.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft139, null));&#xA;&#x9;if ( idLoopCond_526 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft139 = it_ft139.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_527 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp139 = elem_ft139;&#xA;&#xA;&#x9;idIfCond_527 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp139, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_527 ) {&#xA;&#xA;&#x9;result_ft139 = elem_ft139;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;exp = result_ft139;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_528 = false;&#xA;&#x9;idIfCond_528 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(exp));&#xA;&#xA;&#x9;if( idIfCond_528 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isParameterForOwningOperationSingle" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_529 = false;&#xA;&#x9;idIfCond_529 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.retrieveCorrespondingParameter()));&#xA;&#xA;&#x9;if( idIfCond_529 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_530 = false;&#xA;&#x9;idIfCond_530 = kermeta.standard.helper.IntegerWrapper.equals(this.retrieveCorrespondingParameter().getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_530 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFunctionTypeVariable" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter ftParam = this.retrieveCorrespondingParameter();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_531 = false;&#xA;&#x9;idIfCond_531 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ftParam));&#xA;&#xA;&#x9;if( idIfCond_531 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_532 = false;&#xA;&#x9;idIfCond_532 = ftParam.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_532 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallVariable represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="lambdaExpression"
              eType="#/2/language/behavior/LambdaExpression"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallFeature" eSuperTypes="#/2/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallFeature is the model element that refers to the use of a feature, i.e either &#xA;a property or an operation in a statement. In &lt;code>stdio.writeln(&quot;hello&quot;)&lt;/code>, &#xA;&lt;code>writeln&lt;/code> is a CallFeature."/>
          </eAnnotations>
          <eOperations name="fromUtil" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_533 = false;&#xA;&#x9;idIfCond_533 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;kermeta::language::structure::Object&quot;), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;))))))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;kermeta::language::structure::Type&quot;), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;)))))));&#xA;&#xA;&#x9;if( idIfCond_533 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getFunctionType" eType="#/2/language/structure/FunctionType">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.FunctionType result = null;&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.structure.Type result_ft140 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Type elem_ft140 = null;&#xA;&#xA;&#x9;result_ft140 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft140 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getContainedType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_534 = false;&#xA;&#x9;while( !idLoopCond_534 ) {&#xA;&#x9;idLoopCond_534 = kermeta.standard.helper.BooleanWrapper.or(it_ft140.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft140, null));&#xA;&#x9;if ( idLoopCond_534 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft140 = it_ft140.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_535 = false;&#xA;//BIle:detector&#xA;kermeta.language.structure.Type t_lbdExp140 = elem_ft140;&#xA;&#xA;&#x9;idIfCond_535 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(t_lbdExp140, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_535 ) {&#xA;&#xA;&#x9;result_ft140 = elem_ft140;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;result = (kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.FunctionType>asTypeOrVoid(result_ft140);&#xA;//EIft:detect&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean ppCast = false;&#xA;&#xA;&#x9;java.lang.String cf_prop_suffix = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_536 = false;&#xA;&#x9;idIfCond_536 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getTarget());&#xA;&#xA;&#x9;if( idIfCond_536 ) {&#xA;&#xA;&#x9;this.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.behavior.BehaviorPackage.eINSTANCE.getSelfExpression())));&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression tgt = this.getTarget();&#xA;&#xA;&#x9;java.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getName(), context);&#xA;&#xA;&#x9;java.lang.String static_call = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_537 = false;&#xA;&#x9;idIfCond_537 = this.isCallFeatureAsStaticOperation();&#xA;&#xA;&#x9;if( idIfCond_537 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_538 = false;&#xA;&#x9;idIfCond_538 = this.callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_538 ) {&#xA;&#xA;&#x9;context.getTasks_stack().push(context.getFUNCTION_TYPE_COMPILATION_TASK());&#xA;&#xA;&#x9;context.setAfterLbdExpActivation(false);&#xA;&#xA;&#x9;java.lang.String ft_str = this.createStringFromFunctionType(context);&#xA;&#xA;&#x9;context.getTasks_stack().pop();&#xA;&#xA;&#x9;result = ft_str;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_539 = false;&#xA;&#x9;idIfCond_539 = this.fromUtil(context);&#xA;&#xA;&#x9;if( idIfCond_539 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_540 = false;&#xA;&#x9;idIfCond_540 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType();&#xA;&#xA;&#x9;if( idIfCond_540 ) {&#xA;&#xA;&#x9;static_call = this.getStaticOperation().getOptimizedStaticCall(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_541 = false;&#xA;&#x9;idIfCond_541 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_541 ) {&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).qualifiedName(), &quot;::&quot;, &quot;.&quot;), &quot;.helper.&quot;), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Wrapper.&quot;), fName);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;static_call = this.getStaticOperation().getOptimizedStaticCall(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_542 = false;&#xA;&#x9;idIfCond_542 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_542 ) {&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.language.&quot;, ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Util.&quot;), fName), &quot;Switcher&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_543 = false;&#xA;&#x9;idIfCond_543 = kermeta.standard.helper.StringWrapper.equals(fName, &quot;asType&quot;);&#xA;&#xA;&#x9;if( idIfCond_543 ) {&#xA;&#xA;&#x9;ppCast = true;&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;(&quot;, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).first().createBehaviorJava(context)), &quot;) &quot;), static_call);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_544 = false;&#xA;&#x9;idIfCond_544 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt));&#xA;&#xA;&#x9;if( idIfCond_544 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_545 = false;&#xA;&#x9;idIfCond_545 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt.getStaticType()));&#xA;&#xA;&#x9;if( idIfCond_545 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_546 = false;&#xA;&#x9;idIfCond_546 = tgt.getStaticType().isValueType();&#xA;&#xA;&#x9;if( idIfCond_546 ) {&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.&quot;, tgt.getStaticType().getTypeName()), &quot;Util.&quot;), fName);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_547 = false;&#xA;&#x9;idIfCond_547 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStaticOperation().getBody())));&#xA;&#xA;&#x9;if( idIfCond_547 ) {&#xA;&#xA;&#x9;static_call = this.getStaticOperation().getOptimizedStaticCall(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_548 = false;&#xA;&#x9;idIfCond_548 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, &quot;_new&quot;), this.isFromClass()), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;))));&#xA;&#xA;&#x9;if( idIfCond_548 ) {&#xA;&#xA;&#x9;java.lang.String type_label = tgt.createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_549 = false;&#xA;&#x9;idIfCond_549 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.isValueType(type_label, context));&#xA;&#xA;&#x9;if( idIfCond_549 ) {&#xA;&#xA;&#x9;java.lang.String class_label = ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppEmfLikeGetEMF(type_label);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;((&quot;), type_label), &quot;) &quot;), &quot;org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;), class_label), &quot;))&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;new &quot;, type_label), &quot;()&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_550 = false;&#xA;&#x9;idIfCond_550 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt));&#xA;&#xA;&#x9;if( idIfCond_550 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_551 = false;&#xA;&#x9;idIfCond_551 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_551 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_552 = false;&#xA;&#x9;idIfCond_552 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_552 ) {&#xA;&#xA;&#x9;java.lang.String tgt_staticType_str = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_553 = false;&#xA;&#x9;idIfCond_553 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(tgt.getStaticType()));&#xA;&#xA;&#x9;if( idIfCond_553 ) {&#xA;&#xA;&#x9;tgt_staticType_str = org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(tgt.getStaticType());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_554 = false;&#xA;&#x9;idIfCond_554 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.TypeLiteral&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tgt_staticType_str, &quot;Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_554 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\&quot;&quot;), tgt.createBehaviorJava(context)), &quot;\&quot;)&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_555 = false;&#xA;&#x9;idIfCond_555 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_555 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;.&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_556 = false;&#xA;&#x9;idIfCond_556 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallExpression&quot;)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this).callsFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_556 ) {&#xA;&#xA;&#x9;java.lang.String resultPrefix = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_557 = false;&#xA;&#x9;idIfCond_557 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)));&#xA;&#xA;&#x9;if( idIfCond_557 ) {&#xA;&#xA;&#x9;resultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_558 = false;&#xA;&#x9;idIfCond_558 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Constraint&quot;)));&#xA;&#xA;&#x9;if( idIfCond_558 ) {&#xA;&#xA;&#x9;resultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_559 = false;&#xA;&#x9;idIfCond_559 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getContainerAsTypeIn(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_559 ) {&#xA;&#xA;&#x9;resultPrefix = context.getRETURN_EXPRESSION_TO_REPLACE_SPECIAL();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_560 = false;&#xA;&#x9;idIfCond_560 = kermeta.standard.helper.BooleanWrapper.not(this.isParameter());&#xA;&#xA;&#x9;if( idIfCond_560 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), context.getRETURN_EXPRESSION_TO_REPLACE()), this.getCalledFtResult());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, resultPrefix), context.getPREVIOUS_STATEMENT_FT()), this.getCalledFtResult());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getCalledFtResult()));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_561 = false;&#xA;&#x9;idIfCond_561 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_561 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_562 = false;&#xA;&#x9;idIfCond_562 = this.isCallFeatureAsStaticEnumLiteral();&#xA;&#xA;&#x9;if( idIfCond_562 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;getByName(\&quot;&quot;), fName), &quot;\&quot;)&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_563 = false;&#xA;&#x9;idIfCond_563 = this.isCallFeatureAsStaticProperty();&#xA;&#xA;&#x9;if( idIfCond_563 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_564 = false;&#xA;&#x9;idIfCond_564 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getStaticProperty().getUpper(), 1), kermeta.standard.helper.BooleanWrapper.not(this.isParameterMany()));&#xA;&#xA;&#x9;if( idIfCond_564 ) {&#xA;&#xA;&#x9;java.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeParamBinding()).first().getType().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_565 = false;&#xA;&#x9;idIfCond_565 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_565 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsBag(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_566 = false;&#xA;&#x9;idIfCond_566 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_566 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_567 = false;&#xA;&#x9;idIfCond_567 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_567 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsOrderedSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_568 = false;&#xA;&#x9;idIfCond_568 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_568 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsSequence(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;cf_prop_suffix = &quot;)&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.printGetAccessor(context)), &quot;()&quot;), cf_prop_suffix);&#xA;&#xA;&#x9;cf_prop_suffix = &quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_569 = false;&#xA;&#x9;idIfCond_569 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_569 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_570 = false;&#xA;&#x9;idIfCond_570 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getStaticOperation().getUpper(), 1), kermeta.standard.helper.BooleanWrapper.not(this.isParameterMany()));&#xA;&#xA;&#x9;if( idIfCond_570 ) {&#xA;&#xA;&#x9;java.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeParamBinding()).first().getType().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_571 = false;&#xA;&#x9;idIfCond_571 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_571 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsBag(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_572 = false;&#xA;&#x9;idIfCond_572 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_572 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_573 = false;&#xA;&#x9;idIfCond_573 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticOperation().getIsUnique(), this.getStaticOperation().getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_573 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsOrderedSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_574 = false;&#xA;&#x9;idIfCond_574 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticOperation().getIsUnique()), this.getStaticOperation().getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_574 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCOLLECTION_UTIL_CLASS(), &quot;.&lt;&quot;), type_binding), &quot;>convertAsSequence(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;cf_prop_suffix = &quot;)&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.getStaticOperation().getFinalName(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_575 = false;&#xA;&#x9;idIfCond_575 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallExpression&quot;)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this).callsFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_575 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_576 = false;&#xA;&#x9;idIfCond_576 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_576 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_577 = false;&#xA;&#x9;idIfCond_577 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cf_.getStaticOperation()));&#xA;&#xA;&#x9;if( idIfCond_577 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_578 = false;&#xA;&#x9;idIfCond_578 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), this.isParameter()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(cf_.getStaticOperation().getCompiledJavaExtern(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_578 ) {&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;.&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_579 = false;&#xA;&#x9;idIfCond_579 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(cf_.getStaticProperty()));&#xA;&#xA;&#x9;if( idIfCond_579 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;.&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_580 = false;&#xA;&#x9;idIfCond_580 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());&#xA;&#xA;&#x9;if( idIfCond_580 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, context.getRETURN_EXPRESSION_TO_REPLACE(), kermeta.standard.helper.StringWrapper.plus(static_call, &quot;(&quot;));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.String tmp_prefix = &quot;&quot;;&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft141 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft141 = null;&#xA;&#xA;&#x9;result_ft141 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft141 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_582 = false;&#xA;&#x9;while( !idLoopCond_582 ) {&#xA;&#x9;idLoopCond_582 = kermeta.standard.helper.BooleanWrapper.or(it_ft141.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft141, null));&#xA;&#x9;if ( idLoopCond_582 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft141 = it_ft141.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_583 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp141 = elem_ft141;&#xA;&#xA;&#x9;idIfCond_583 = p_lbdExp141.callsFunctionType();&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_583 ) {&#xA;&#xA;&#x9;result_ft141 = elem_ft141;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;java.lang.Boolean idIfCond_581 = false;&#xA;&#x9;idIfCond_581 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft141));&#xA;&#xA;&#x9;if( idIfCond_581 ) {&#xA;&#xA;&#x9;tmp_prefix = context.getRETURN_EXPRESSION_TO_REPLACE();&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(tmp_prefix, static_call), &quot;(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_584 = false;&#xA;&#x9;idIfCond_584 = ppCast;&#xA;&#xA;&#x9;if( idIfCond_584 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;(&quot;, result);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_585 = false;&#xA;&#x9;idIfCond_585 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_585 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_586 = false;&#xA;&#x9;idIfCond_586 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_586 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;(&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;static_call = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_587 = false;&#xA;&#x9;idIfCond_587 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_587 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;), cf_prop_suffix);&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_588 = false;&#xA;&#x9;idIfCond_588 = ppCast;&#xA;&#xA;&#x9;if( idIfCond_588 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;)&quot;);&#xA;&#xA;&#x9;ppCast = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getParamBindings" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Unused for the moment&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft142 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_589 = false;&#xA;&#x9;while( !idLoopCond_589 ) {&#xA;&#x9;idLoopCond_589 = it_ft142.isOff();&#xA;&#x9;if ( idLoopCond_589 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Expression param_lbdExp142 = it_ft142.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_590 = false;&#xA;&#x9;idIfCond_590 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp142, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;&#xA;&#x9;if( idIfCond_590 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_591 = false;&#xA;&#x9;idIfCond_591 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(param_lbdExp142, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;));&#xA;&#xA;&#x9;if( idIfCond_591 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft143 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(param_lbdExp142, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;))).getType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_592 = false;&#xA;&#x9;while( !idLoopCond_592 ) {&#xA;&#x9;idLoopCond_592 = it_ft143.isOff();&#xA;&#x9;if ( idLoopCond_592 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type t_lbdExp143 = it_ft143.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_593 = false;&#xA;&#x9;idIfCond_593 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);&#xA;&#xA;&#x9;if( idIfCond_593 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, t_lbdExp143.getTypeQName());&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_594 = false;&#xA;&#x9;idIfCond_594 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_594 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;&lt;&quot;, result), &quot;>&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getFunctionTypeReturnType" eType="#/2/language/structure/Type">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Type result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_595 = false;&#xA;&#x9;idIfCond_595 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_595 ) {&#xA;&#xA;&#x9;result = this.getFunctionType().getRight();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFromClass" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_596 = false;&#xA;&#x9;idIfCond_596 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStaticOperation()));&#xA;&#xA;&#x9;if( idIfCond_596 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_597 = false;&#xA;&#x9;idIfCond_597 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;kermeta::language::structure::Class&quot;);&#xA;&#xA;&#x9;if( idIfCond_597 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="printGetAccessor" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getStaticProperty().printGetAccessor(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isParameter" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_598 = false;&#xA;&#x9;idIfCond_598 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_598 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft144 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft144 = null;&#xA;&#xA;&#x9;result_ft144 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft144 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_599 = false;&#xA;&#x9;while( !idLoopCond_599 ) {&#xA;&#x9;idLoopCond_599 = kermeta.standard.helper.BooleanWrapper.or(it_ft144.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft144, null));&#xA;&#x9;if ( idLoopCond_599 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft144 = it_ft144.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_600 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp144 = elem_ft144;&#xA;&#xA;&#x9;idIfCond_600 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp144, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_600 ) {&#xA;&#xA;&#x9;result_ft144 = elem_ft144;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft144));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="printSetAccessor" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getStaticProperty().printSetAccessor(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createStringFromFunctionType" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression tgt = this.getTarget();&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable()));&#xA;&#xA;&#x9;java.lang.Integer inc_tp = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft145 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_601 = false;&#xA;&#x9;while( !idLoopCond_601 ) {&#xA;&#x9;idLoopCond_601 = it_ft145.isOff();&#xA;&#x9;if ( idLoopCond_601 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Type type__lbdExp145 = it_ft145.next();&#xA;&#xA;&#x9;map_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), type__lbdExp145);&#xA;&#xA;&#x9;inc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;context.getFtMapTypeStack().push(map_type);&#xA;&#xA;&#x9;context.pushFtSuffix();&#xA;&#xA;&#x9;kermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getType()));&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft146 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft146 = null;&#xA;&#xA;&#x9;result_ft146 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft146 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_603 = false;&#xA;&#x9;while( !idLoopCond_603 ) {&#xA;&#x9;idLoopCond_603 = kermeta.standard.helper.BooleanWrapper.or(it_ft146.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft146, null));&#xA;&#x9;if ( idLoopCond_603 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft146 = it_ft146.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_604 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression param_lbdExp146 = elem_ft146;&#xA;&#xA;&#x9;idIfCond_604 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp146, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_604 ) {&#xA;&#xA;&#x9;result_ft146 = elem_ft146;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;java.lang.Boolean idIfCond_602 = false;&#xA;&#x9;idIfCond_602 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(result_ft146));&#xA;&#xA;&#x9;if( idIfCond_602 ) {&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft147 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft147 = null;&#xA;&#xA;&#x9;result_ft147 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft147 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_605 = false;&#xA;&#x9;while( !idLoopCond_605 ) {&#xA;&#x9;idLoopCond_605 = kermeta.standard.helper.BooleanWrapper.or(it_ft147.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft147, null));&#xA;&#x9;if ( idLoopCond_605 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft147 = it_ft147.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_606 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression param_lbdExp147 = elem_ft147;&#xA;&#xA;&#x9;idIfCond_606 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(param_lbdExp147, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_606 ) {&#xA;&#xA;&#x9;result_ft147 = elem_ft147;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;kermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(result_ft147, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)));&#xA;&#xA;&#x9;context.getFtStack().push(theLambdaExp);&#xA;&#xA;&#x9;this.getStaticOperation().setLambdaExpression(theLambdaExp);&#xA;&#xA;&#x9;theLambdaExp.setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));&#xA;&#xA;&#x9;this.getStaticOperation().setCuid(kermeta.standard.helper.IntegerWrapper.toString(context.getInc_ftSuffix()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_607 = false;&#xA;&#x9;idIfCond_607 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_607 ) {&#xA;&#xA;&#x9;kermeta.language.structure.FunctionType current_functionType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_608 = false;&#xA;&#x9;idIfCond_608 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;));&#xA;&#xA;&#x9;if( idIfCond_608 ) {&#xA;&#xA;&#x9;context.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(current_functionType.getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;))));&#xA;}&#xA;&#xA;&#xA;&#x9;ftRightType = current_functionType.getRight();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String ft_str = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_609 = false;&#xA;&#x9;idIfCond_609 = tgt.callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_609 ) {&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;context.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;context.setFtContextualSelf(tgt.createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;java.lang.String callElement = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_610 = false;&#xA;&#x9;idIfCond_610 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_610 ) {&#xA;&#xA;&#x9;callElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;))).getIdentifier(), context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_611 = false;&#xA;&#x9;idIfCond_611 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_611 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;Please contact the development team if you have this case !&quot;);&#xA;&#xA;&#x9;callElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))).getName(), context);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_612 = false;&#xA;&#x9;idIfCond_612 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_612 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;null;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String ppCastSuffix = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.String ppValueTypeCastSuffix = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_613 = false;&#xA;&#x9;idIfCond_613 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;));&#xA;&#xA;&#x9;if( idIfCond_613 ) {&#xA;&#xA;&#x9;ppCastSuffix = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).ppCastSuffix();&#xA;&#xA;&#x9;ppValueTypeCastSuffix = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getValueTypeCastSuffix();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_614 = false;&#xA;&#x9;idIfCond_614 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;));&#xA;&#xA;&#x9;if( idIfCond_614 ) {&#xA;&#xA;&#x9;callElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget().createBehaviorJava(context);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_615 = false;&#xA;&#x9;idIfCond_615 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_615 ) {&#xA;&#xA;&#x9;callElement = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget().createBehaviorJava(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), &quot;//BIft:&quot;), this.getStaticOperation().getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;java.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;context.setFtReturnType(type_ftReturnType);&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_616 = false;&#xA;&#x9;idIfCond_616 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_616 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;\n//CE\n&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_617 = false;&#xA;&#x9;idIfCond_617 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getResultLastStatementId(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_617 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), &quot;result&quot;), context.printFtSuffix()), ppValueTypeCastSuffix), ppCastSuffix), &quot;;\n&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), &quot; = result&quot;), context.printFtSuffix()), &quot;;\n&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_618 = false;&#xA;&#x9;idIfCond_618 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, &quot;&quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;)));&#xA;&#xA;&#x9;if( idIfCond_618 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_619 = false;&#xA;&#x9;idIfCond_619 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;));&#xA;&#xA;&#x9;if( idIfCond_619 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;\n//CER\n&quot;);&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getRETURN_EXPRESSION_TO_REPLACE()), &quot;result&quot;), context.printFtSuffix()), ppValueTypeCastSuffix), ppCastSuffix), &quot;;\n&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_620 = false;&#xA;&#x9;idIfCond_620 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(callElement, &quot;&quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;&#xA;&#x9;if( idIfCond_620 ) {&#xA;&#xA;&#x9;java.lang.String str_binding = kermeta.standard.helper.StringWrapper.replace(context.getResultLastStatementId(), &quot; = &quot;, &quot;&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_621 = false;&#xA;&#x9;idIfCond_621 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(str_binding, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_621 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;\n//CEVD\n&quot;);&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), &quot; = &quot;), str_binding), &quot;;\n&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_622 = false;&#xA;&#x9;idIfCond_622 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, &quot;&quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;)));&#xA;&#xA;&#x9;if( idIfCond_622 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;\n//CEC\n&quot;);&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getResultLastStatementId()), &quot;result&quot;), context.printFtSuffix()), &quot;;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_623 = false;&#xA;&#x9;idIfCond_623 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, &quot;&quot;), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getOperation())).isVoidType(this.getStaticType().getTypeName())));&#xA;&#xA;&#x9;if( idIfCond_623 ) {&#xA;&#xA;&#x9;this.setCalledFtResult(kermeta.standard.helper.StringWrapper.plus(&quot;result&quot;, context.printFtSuffix()));&#xA;}&#xA;&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;//EIft:&quot;), this.getStaticOperation().getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;context.getFtMapTypeStack().pop();&#xA;&#xA;&#x9;context.getFtProductTypeStack().pop();&#xA;&#xA;&#x9;context.getFtSuffix().pop();&#xA;&#xA;&#x9;result = ft_str;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isParameterMany" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_624 = false;&#xA;&#x9;idIfCond_624 = this.isParameter();&#xA;&#xA;&#x9;if( idIfCond_624 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.behavior.Expression exp = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft148 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft148 = null;&#xA;&#xA;&#x9;result_ft148 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft148 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_625 = false;&#xA;&#x9;while( !idLoopCond_625 ) {&#xA;&#x9;idLoopCond_625 = kermeta.standard.helper.BooleanWrapper.or(it_ft148.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft148, null));&#xA;&#x9;if ( idLoopCond_625 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft148 = it_ft148.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_626 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp148 = elem_ft148;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_626 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp148, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_626 ) {&#xA;&#xA;&#x9;result_ft148 = elem_ft148;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;exp = result_ft148;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_627 = false;&#xA;&#x9;idIfCond_627 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Parameter&quot;))).getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_627 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isParameterSingle" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_628 = false;&#xA;&#x9;idIfCond_628 = this.isParameter();&#xA;&#xA;&#x9;if( idIfCond_628 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.behavior.Expression exp = null;&#xA;//BIft:detect&#xA;&#xA;kermeta.language.behavior.Expression result_ft149 = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression elem_ft149 = null;&#xA;&#xA;&#x9;result_ft149 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft149 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(cf_.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_629 = false;&#xA;&#x9;while( !idLoopCond_629 ) {&#xA;&#x9;idLoopCond_629 = kermeta.standard.helper.BooleanWrapper.or(it_ft149.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft149, null));&#xA;&#x9;if ( idLoopCond_629 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft149 = it_ft149.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_630 = false;&#xA;//BIle:detector&#xA;kermeta.language.behavior.Expression p_lbdExp149 = elem_ft149;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_630 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(p_lbdExp149, this);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_630 ) {&#xA;&#xA;&#x9;result_ft149 = elem_ft149;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;exp = result_ft149;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_631 = false;&#xA;&#x9;idIfCond_631 = kermeta.standard.helper.IntegerWrapper.equals(((kermeta.language.structure.Parameter) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(cf_.getStaticOperation().getOwnedParameter()).elementAt(i), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Parameter&quot;))).getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_631 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticOperation"
              eType="#/2/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The method which will be executed (operation case)&#xA;and the result value passed to the caller"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="calledFtResult" eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallFeature represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target Expression (the owner of the feature)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticEnumLiteral"
              eType="#/2/language/structure/EnumerationLiteral">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticProperty" eType="#/2/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The object which will be returned (property case)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Block is the model-element representation for the &lt;code>do...end&lt;/code> block."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;kermeta.utils.StringBuffer javaCode = ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getStringBuffer()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_632 = false;&#xA;&#x9;idIfCond_632 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Constraint&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_632 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;{\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_633 = false;&#xA;&#x9;idIfCond_633 = this.containsRescue();&#xA;&#xA;&#x9;if( idIfCond_633 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;try {&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer nbrStm = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getStatement()).size();&#xA;&#xA;&#x9;java.lang.Integer i_stm = 0;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft150 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getStatement()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_634 = false;&#xA;&#x9;while( !idLoopCond_634 ) {&#xA;&#x9;idLoopCond_634 = it_ft150.isOff();&#xA;&#x9;if ( idLoopCond_634 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Expression stm_lbdExp150 = it_ft150.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_635 = false;&#xA;&#x9;idIfCond_635 = kermeta.standard.helper.IntegerWrapper.equals(i_stm, kermeta.standard.helper.IntegerWrapper.minus(nbrStm, 1));&#xA;&#xA;&#x9;if( idIfCond_635 ) {&#xA;&#xA;&#x9;((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(stm_lbdExp150, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).setIsLastExpression(true);&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode = stm_lbdExp150.createExpression(context, javaCode);&#xA;&#xA;&#x9;javaCode.append(&quot;\n&quot;);&#xA;&#xA;&#x9;i_stm = kermeta.standard.helper.IntegerWrapper.plus(i_stm, 1);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_636 = false;&#xA;&#x9;idIfCond_636 = this.containsRescue();&#xA;&#xA;&#x9;if( idIfCond_636 ) {&#xA;&#xA;&#x9;context.pushKRErrorStack();&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;} catch( &quot;, context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot; &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot; ) {\n&quot;));&#xA;&#xA;&#x9;java.lang.String caught_str = kermeta.standard.helper.StringWrapper.plus(&quot;caught_&quot;, context.getKRErrorStack().peek());&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;boolean &quot;, caught_str), &quot; = false;\n&quot;));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Rescue> it_ft151 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Rescue>convertAsOrderedSet(this.getRescueBlock()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_637 = false;&#xA;&#x9;while( !idLoopCond_637 ) {&#xA;&#x9;idLoopCond_637 = it_ft151.isOff();&#xA;&#x9;if ( idLoopCond_637 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Rescue e_lbdExp151 = it_ft151.next();&#xA;&#xA;&#x9;javaCode.append(e_lbdExp151.createBehaviorJava(context));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nif( !&quot;, caught_str), &quot; ) { throw &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot;; }\n&quot;));&#xA;&#xA;&#x9;javaCode.append(&quot;\n}\n&quot;);&#xA;&#xA;&#x9;context.getKRErrorStack().pop();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_638 = false;&#xA;&#x9;idIfCond_638 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Constraint&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_638 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;}&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = javaCode.toString();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="containsRescue" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_639 = false;&#xA;&#x9;idIfCond_639 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Rescue>convertAsOrderedSet(this.getRescueBlock()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Rescue>convertAsOrderedSet(this.getRescueBlock()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_639 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="statement" upperBound="-1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of statements composing the block"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="rescueBlock" upperBound="-1"
              eType="#/2/language/behavior/Rescue" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of rescues defined for the block"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Assignment is the model-element representation of the assignment statement &lt;code>x := y&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_assign_expressions.png&quot;/>"/>
          </eAnnotations>
          <eOperations name="ppCastPrefix" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_640 = false;&#xA;&#x9;idIfCond_640 = this.getIsCast();&#xA;&#xA;&#x9;if( idIfCond_640 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(this.ppCast(context), context.getJAVA_INSTANCE_EXECUTION_CONTEXT()), &quot;.&lt;&quot;), this.getCastTypeQName(context)), &quot;>asTypeOrVoid(&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;this.initCast(context);&#xA;&#xA;&#x9;java.lang.String left = this.getTarget().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.String ppCastPrefix = this.ppCastPrefix(context);&#xA;&#xA;&#x9;java.lang.String ppCastSuffix = this.ppCastSuffix();&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(left, &quot; = &quot;), ppCastPrefix), this.getValueTypeCastPrefix()), context.getTYPE_SEPARATOR()), this.getTarget().getStaticType().createBehaviorJava(context)));&#xA;&#xA;&#x9;java.lang.String right = this.getValue().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_641 = false;&#xA;&#x9;idIfCond_641 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;&#xA;&#x9;if( idIfCond_641 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().errorln(&quot;Please contact the Kermeta development team if you are in this case: createBehaviorJava Assignment&quot;);&#xA;&#xA;&#x9;right = kermeta.standard.helper.StringWrapper.plus(&quot;function &quot;, right);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_642 = false;&#xA;&#x9;idIfCond_642 = this.getTarget().isCallFeatureAsStaticProperty();&#xA;&#xA;&#x9;if( idIfCond_642 ) {&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;java.lang.String> tabLeft = kermeta.standard.helper.StringWrapper.split(left, &quot;\\.&quot;);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_643 = false;&#xA;&#x9;while( !idLoopCond_643 ) {&#xA;&#x9;idLoopCond_643 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, tabLeft.size());&#xA;&#x9;if ( idLoopCond_643 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_644 = false;&#xA;&#x9;idIfCond_644 = kermeta.standard.helper.IntegerWrapper.isLower(i, kermeta.standard.helper.IntegerWrapper.minus(tabLeft.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_644 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, tabLeft.elementAt(i)), &quot;.&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_645 = false;&#xA;&#x9;idIfCond_645 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.minus(tabLeft.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_645 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_646 = false;&#xA;&#x9;idIfCond_646 = this.getValue().callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_646 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(right, result), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).printSetAccessor(context)), &quot;(&quot;), ppCastPrefix), this.getValueTypeCastPrefix()), ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getCalledFtResult()), this.getValueTypeCastSuffix()), ppCastSuffix), &quot;);&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).printSetAccessor(context)), &quot;(&quot;), ppCastPrefix), this.getValueTypeCastPrefix()), right), this.getValueTypeCastSuffix()), ppCastSuffix), &quot;);&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_647 = false;&#xA;&#x9;idIfCond_647 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;));&#xA;&#xA;&#x9;if( idIfCond_647 ) {&#xA;&#xA;&#x9;result = right;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_648 = false;&#xA;&#x9;idIfCond_648 = kermeta.standard.helper.StringWrapper.contains(right, context.getRETURN_EXPRESSION_TO_REPLACE());&#xA;&#xA;&#x9;if( idIfCond_648 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(right, context.getRETURN_EXPRESSION_TO_REPLACE(), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(left, &quot; = &quot;), ppCastPrefix), this.getValueTypeCastPrefix()));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_649 = false;&#xA;&#x9;idIfCond_649 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;))), kermeta.standard.helper.BooleanWrapper.or(this.getValue().callsFunctionType(), this.getValue().isFunctionTypeVariable()));&#xA;&#xA;&#x9;if( idIfCond_649 ) {&#xA;&#xA;&#x9;result = right;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(left, &quot; = &quot;), ppCastPrefix), this.getValueTypeCastPrefix()), right);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppCast" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_650 = false;&#xA;&#x9;idIfCond_650 = this.getIsCast();&#xA;&#xA;&#x9;if( idIfCond_650 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;(&quot;, this.getCastTypeQName(context)), &quot;) &quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="requireConversionObjectToValueType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.String right_type = this.getValue().getStaticType().getTypeQName();&#xA;&#xA;&#x9;kermeta.standard.Set&lt;java.lang.String> value_type_list = ((kermeta.standard.Set&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::String&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Boolean&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Integer&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Character&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Real&quot;);&#xA;&#xA;&#x9;java.lang.String castType = this.getCastTypeQName(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_651 = false;&#xA;&#x9;idIfCond_651 = kermeta.standard.helper.StringWrapper.equals(right_type, &quot;kermeta::language::structure::Object&quot;);&#xA;&#xA;&#x9;if( idIfCond_651 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_652 = false;&#xA;&#x9;idIfCond_652 = value_type_list.contains(castType);&#xA;&#xA;&#x9;if( idIfCond_652 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;a conversion is required&quot;);&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getCastTypeQName" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_653 = false;&#xA;&#x9;idIfCond_653 = this.getIsCast();&#xA;&#xA;&#x9;if( idIfCond_653 ) {&#xA;&#xA;&#x9;result = this.getTarget().getStaticType().createBehaviorJava(context);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppValueTypeCastPrefix" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_654 = false;&#xA;&#x9;idIfCond_654 = this.requireConversionValueTypeToObject(context);&#xA;&#xA;&#x9;if( idIfCond_654 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(context.getOBJECT_UTIL_CLASS(), &quot;.convertAsObject(&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="initCast">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setValueTypeCastPrefix(this.ppValueTypeCastPrefix(context));&#xA;&#xA;&#x9;this.setValueTypeCastSuffix(this.ppValueTypeCastSuffix(context));&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppCastSuffix" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_655 = false;&#xA;&#x9;idIfCond_655 = this.getIsCast();&#xA;&#xA;&#x9;if( idIfCond_655 ) {&#xA;&#xA;&#x9;result = &quot;)&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="ppValueTypeCastSuffix" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_656 = false;&#xA;&#x9;idIfCond_656 = this.requireConversionValueTypeToObject(context);&#xA;&#xA;&#x9;if( idIfCond_656 ) {&#xA;&#xA;&#x9;result = &quot;)&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="requireConversionValueTypeToObject" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.String left_type = this.getTarget().getStaticType().getTypeQName();&#xA;&#xA;&#x9;kermeta.standard.Set&lt;java.lang.String> value_type_list = ((kermeta.standard.Set&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::String&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Boolean&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Integer&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Character&quot;);&#xA;&#xA;&#x9;value_type_list.add(&quot;kermeta::standard::Real&quot;);&#xA;&#xA;&#x9;java.lang.String castType = this.getValue().getStaticType().getTypeQName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_657 = false;&#xA;&#x9;idIfCond_657 = kermeta.standard.helper.StringWrapper.equals(left_type, &quot;kermeta::language::structure::Object&quot;);&#xA;&#xA;&#x9;if( idIfCond_657 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_658 = false;&#xA;&#x9;idIfCond_658 = value_type_list.contains(castType);&#xA;&#xA;&#x9;if( idIfCond_658 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueTypeCastSuffix"
              eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Value to be assigned, as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
              eType="#/2/language/behavior/CallExpression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target of the assignment, as a CallExpression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCast" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether current assignment corresponds to a cast operation "/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueTypeCastPrefix"
              eType="#/2/standard/JavaString"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallExpression" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any callable expression inherits this class, e.g : &#xA;  - variable call&#xA;  - feature call ( &lt;code>a.b&lt;/code> : b is a feature call)&#xA;&#xA;&lt;img alt=&quot;&quot;  height=&quot;90%&quot; width=&quot;90%&quot;  src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_call_expressions.png&quot; />"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = null;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isCallFeatureAsStaticEnumLiteral" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_659 = false;&#xA;&#x9;idIfCond_659 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_659 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_660 = false;&#xA;&#x9;idIfCond_660 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticEnumLiteral()));&#xA;&#xA;&#x9;if( idIfCond_660 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isCallFeatureAsStaticOperation" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_661 = false;&#xA;&#x9;idIfCond_661 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_661 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_662 = false;&#xA;&#x9;idIfCond_662 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticOperation()));&#xA;&#xA;&#x9;if( idIfCond_662 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isCallFeatureAsStaticProperty" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_663 = false;&#xA;&#x9;idIfCond_663 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_663 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_664 = false;&#xA;&#x9;idIfCond_664 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticProperty()));&#xA;&#xA;&#x9;if( idIfCond_664 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticTypeVariableBindings"
              upperBound="-1" eType="#/2/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="A call must be named"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Kermeta calls can embedd expressions as parameters"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallResult" eSuperTypes="#/2/language/behavior/CallVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the special internal variable &quot;result&quot; that is used to store the return value of any operation "/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallVariable"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;result&quot;;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, context.printFtSuffix());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallValue" eSuperTypes="#/2/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallValue refers to the use of the &lt;code>value&lt;/code> reserved keyword. This keyword is&#xA;only used in the body of the &lt;code>setter&lt;/code> part of derived properties."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;value&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallSuperOperation" eSuperTypes="#/2/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the operataion in the parent class&#xA;&#x9;In the following example, the type of super(element) is CallSuperOperation:&#xA;&#xA;class ParentClass {&#xA;  operation op(element : Integer) : Integer is do&#xA;      result := element + 1&#xA;  end&#xA;}&#xA; *&#xA;class ChildClass {&#xA;  method op(element : Integer) : Integer is do&#xA;      result := super(element)&#xA;  end&#xA;}"/>
          </eAnnotations>
          <eOperations name="getCallStaticSignature" eType="#/2/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(owningOperation.getSuperOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).qualifiedName(), &quot;::&quot;, &quot;.&quot;)), &quot;.helper.&quot;), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(owningOperation.getSuperOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Super.super_&quot;), owningOperation.getSuperOperation().getFinalName(context)), &quot;(&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_665 = false;&#xA;&#x9;idIfCond_665 = context.getStaticOperationMode();&#xA;&#xA;&#x9;if( idIfCond_665 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;self&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;this&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_666 = false;&#xA;&#x9;idIfCond_666 = kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_666 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_667 = false;&#xA;&#x9;idIfCond_667 = context.getStaticOperationMode();&#xA;&#xA;&#x9;if( idIfCond_667 ) {&#xA;&#xA;&#x9;((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getModelingUnit())).compileStaticOperation(owningOperation.getSuperOperation(), context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(context.getMu().getSuperOperationsToCompileInHelper()).add(owningOperation.getSuperOperation());&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="owningOperation" eType="#/2/language/structure/Operation"/>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;kermeta.language.structure.Operation owningOperation = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.String fromOperation_cd = kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(owningOperation.getSuperOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;ecore.EClass extended_class = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;ecore.EClass super_class = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(owningOperation.getSuperOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_668 = false;&#xA;&#x9;idIfCond_668 = kermeta.standard.helper.BooleanWrapper.not(owningOperation.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_668 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_669 = false;&#xA;&#x9;idIfCond_669 = kermeta.standard.helper.BooleanWrapper.and(((km2ecore.helper.ecore.ModelAnalizer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.ecore.EcorePackage.eINSTANCE.getModelAnalizer())).isExtendedBy(extended_class, super_class), kermeta.standard.helper.BooleanWrapper.not(context.getStaticOperationMode()));&#xA;&#xA;&#x9;if( idIfCond_669 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;super.&quot;), owningOperation.getFinalName(context)), &quot;(&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.getCallStaticSignature(owningOperation, context));&#xA;}&#xA;&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;);&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;A callSuperFunctionType has been detected: &quot;, owningOperation.qualifiedName()), &quot; - signature: &quot;), this.getCallStaticSignature(owningOperation, context)));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VariableDecl" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="refers to variable declaration &lt;code>var x : X init a&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_var_expressions.png&quot;/>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.String localType = this.getStaticType().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.String var_id = kermeta.standard.helper.StringWrapper.plus(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getIdentifier(), context), context.printFtSuffix());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, localType), &quot; &quot;), var_id);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_670 = false;&#xA;&#x9;idIfCond_670 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getInitialization()));&#xA;&#xA;&#x9;if( idIfCond_670 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_671 = false;&#xA;&#x9;idIfCond_671 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;));&#xA;&#xA;&#x9;if( idIfCond_671 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(var_id, &quot; = &quot;), context.getTYPE_SEPARATOR()), localType));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; = null;\n&quot;), this.getInitialization().createBehaviorJava(context));&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; = &quot;), this.getInitialization().createBehaviorJava(context));&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; = null;&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/2/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the declared variable"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaExpression" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to lambda expression definition (&lt;code>function { e | stdio.writeln(e.toString) }&lt;/code>)&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_lambda_expressions.png&quot;/>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the lambda expression providede as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="cuid" eType="#/2/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/2/language/behavior/LambdaParameter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the lambda expression"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaParameter" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to parameter definition in lambda expression"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the lambda parameter"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/2/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written ################################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeReference" eSuperTypes="#/2/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="TypeReference refers to the type used in a variable declaration"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.helper.ObjectSuper.super_createBehaviorJava(this, context);&#xA;&#xA;&#x9;result = this.getType().createBehaviorJava(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Raise" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to raise exception block"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nif (true)\n\tthrow new &quot;, context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot;( &quot;), this.getExpression().createBehaviorJava(context)), &quot; );\n&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written #######################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Rescue" eSuperTypes="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to rescue exception block"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_672 = false;&#xA;&#x9;idIfCond_672 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getExceptionType()));&#xA;&#xA;&#x9;if( idIfCond_672 ) {&#xA;&#xA;&#x9;java.lang.String str_exceptionType = this.getExceptionType().createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;if( &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot;.getRealException() instanceof &quot;), str_exceptionType), &quot; ) {\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;caught_&quot;), context.getKRErrorStack().peek()), &quot; = true;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, str_exceptionType), &quot; &quot;), this.getExceptionName()), &quot; = (&quot;), str_exceptionType), &quot;) &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot;.getRealException();\n&quot;);&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft153 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_673 = false;&#xA;&#x9;while( !idLoopCond_673 ) {&#xA;&#x9;idLoopCond_673 = it_ft153.isOff();&#xA;&#x9;if ( idLoopCond_673 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp153 = it_ft153.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag e_lbdExp152 = o_lbdExp153;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, e_lbdExp152.createBehaviorJava(context));&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft154 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getBody()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_674 = false;&#xA;&#x9;while( !idLoopCond_674 ) {&#xA;&#x9;idLoopCond_674 = it_ft154.isOff();&#xA;&#x9;if ( idLoopCond_674 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Expression s_lbdExp154 = it_ft154.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.behavior.Expression e_lbdExp152 = s_lbdExp154;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, e_lbdExp152.createBehaviorJava(context));&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n}&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              upperBound="-1" eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the rescue block, specified as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="exceptionName" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the catched exception"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionType" lowerBound="1"
              eType="#/2/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the cathed exception"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SelfExpression" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to &lt;code>self&lt;/code> use"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;this&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_675 = false;&#xA;&#x9;idIfCond_675 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(context.getCurrent_valueType())), context.getStaticOperationMode());&#xA;&#xA;&#x9;if( idIfCond_675 ) {&#xA;&#xA;&#x9;result = &quot;self&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_676 = false;&#xA;&#x9;idIfCond_676 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_676 ) {&#xA;&#xA;&#x9;result = context.getFtContextualSelf();&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Condition is the model-element representation for the &lt;code>&lt;/code> "/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;context.pushCondStack();&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;java.lang.Boolean &quot;, context.getIfConditionId()), &quot; = false;&quot;);&#xA;&#xA;&#x9;java.lang.String str_condition = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_677 = false;&#xA;&#x9;idIfCond_677 = this.conditionIsCallFeatureThatCallsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_677 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getIfConditionId(), &quot; = &quot;), context.getTYPE_SEPARATOR()), &quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n&quot;), this.getCondition().createBehaviorJava(context));&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_678 = false;&#xA;&#x9;idIfCond_678 = kermeta.standard.helper.StringWrapper.equals(context.printFtSuffix(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_678 ) {&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n\t&quot;), context.getIfConditionId()), &quot; = &quot;), this.getCondition().createBehaviorJava(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_679 = false;&#xA;&#x9;idIfCond_679 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;)));&#xA;&#xA;&#x9;if( idIfCond_679 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Parameter ftParam = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_680 = false;&#xA;&#x9;idIfCond_680 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_680 ) {&#xA;&#xA;&#x9;ftParam = ((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))).getFunctionTypeParameter();&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_681 = false;&#xA;&#x9;idIfCond_681 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(ftParam));&#xA;&#xA;&#x9;if( idIfCond_681 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_682 = false;&#xA;&#x9;idIfCond_682 = ftParam.isBooleanFunctionType(context);&#xA;&#xA;&#x9;if( idIfCond_682 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getIfConditionId(), &quot; = &quot;), context.getTYPE_SEPARATOR()), &quot;java.lang.Boolean&quot;));&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n&quot;), this.getCondition().createBehaviorJava(context));&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA; else {&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n\t&quot;), context.getIfConditionId()), &quot; = &quot;), this.getCondition().createBehaviorJava(context));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_683 = false;&#xA;&#x9;idIfCond_683 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;));&#xA;&#xA;&#x9;if( idIfCond_683 ) {&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n\t&quot;), context.getIfConditionId()), &quot; = &quot;), this.getCondition().createBehaviorJava(context));&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, str_condition);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\n\tif( &quot;), context.getIfConditionId()), &quot; ) &quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_684 = false;&#xA;&#x9;idIfCond_684 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getThenBody()));&#xA;&#xA;&#x9;if( idIfCond_684 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.getThenBody().createBehaviorJava(context)), &quot;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_685 = false;&#xA;&#x9;idIfCond_685 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getElseBody()));&#xA;&#xA;&#x9;if( idIfCond_685 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; else &quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.getElseBody().createBehaviorJava(context)), &quot;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;context.getCondStack().pop();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="conditionIsCallFeatureThatCallsFunctionType" eType="#/2/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_686 = false;&#xA;&#x9;idIfCond_686 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_686 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_687 = false;&#xA;&#x9;idIfCond_687 = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_687 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="thenBody" lowerBound="1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Then part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Condition expression of conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Optional else part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Loop" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Loop refers to &lt;code>from var x : X init a until booleanCondition loop ... end&lt;/code>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;context.pushCondStack();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_688 = false;&#xA;&#x9;idIfCond_688 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_688 ) {&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_689 = false;&#xA;&#x9;idIfCond_689 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_689 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n&quot;), &quot;{\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t&quot;), this.getInitialization().createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\tjava.lang.Boolean &quot;), context.getLoopConditionId()), &quot; = false;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\twhile( !&quot;), context.getLoopConditionId()), &quot; ) {&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t&quot;), context.getLoopConditionId()), &quot; = &quot;), this.getStopCondition().createBehaviorJava(context)), &quot;;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\tif ( &quot;), context.getLoopConditionId()), &quot; ) {&quot;);&#xA;&#xA;&#x9;context.getCondStack().pop();&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t} else &quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.getBody().createBehaviorJava(context));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t}&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_690 = false;&#xA;&#x9;idIfCond_690 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(this.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_690 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n}\n&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/2/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="stopCondition" lowerBound="1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Stop condition of the loop, is interpreted as a Bollean value"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="JavaStaticCall" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represent a call to an extern Java operation. &#xA;This Java operation must be static and have at least one RuntimeO"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_691 = false;&#xA;&#x9;idIfCond_691 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getCompiledJavaExtern(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_691 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_692 = false;&#xA;&#x9;idIfCond_692 = kermeta.standard.helper.IntegerWrapper.isLower(kermeta.standard.helper.StringWrapper.split(kermeta.standard.helper.StringWrapper.replace(context.getCompiledJavaExtern(), &quot;(&quot;, &quot;%&quot;), &quot;%&quot;).size(), 2);&#xA;&#xA;&#x9;if( idIfCond_692 ) {&#xA;&#xA;&#x9;context.setCompiledJavaExtern(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getCompiledJavaExtern(), &quot;(&quot;), ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_693 = false;&#xA;&#x9;idIfCond_693 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(context.getCompiledJavaExtern(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_693 ) {&#xA;&#xA;&#x9;result = context.getCompiledJavaExtern();&#xA;&#xA;&#x9;context.setCompiledJavaExtern(&quot;&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_694 = false;&#xA;&#x9;idIfCond_694 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType();&#xA;&#xA;&#x9;if( idIfCond_694 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.&quot;, ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Util.&quot;), this.getJmethod());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(this.getJclass(), &quot;::&quot;, &quot;.&quot;), &quot;.&quot;), ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.java.JavaPackage.eINSTANCE.getIdentifierHelper())).getMangledIdentifier(this.getJmethod(), context));&#xA;}&#xA;&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;(&quot;), ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.helper.kermeta.KermetaPackage.eINSTANCE.getCompilerHelperJava())).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;);&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jmethod" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Java method to be launched in the identified Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/2/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Java static call provided as KerMeta expressions"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jclass" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Qualified name of the targeted Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Literal" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Literal refers to String values, Integer values, etc."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="#/2/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a String value, typically : &quot;my string&quot;"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = this.getValue();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_695 = false;&#xA;&#x9;idIfCond_695 = kermeta.standard.helper.StringWrapper.equals(result, &quot;.&quot;);&#xA;&#xA;&#x9;if( idIfCond_695 ) {&#xA;&#xA;&#x9;result = &quot;\&quot;.\&quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, &quot;\\&quot;, &quot;\\\\&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\&quot;&quot;, kermeta.standard.helper.StringWrapper.replace(result, &quot;\&quot;&quot;, &quot;\\\&quot;&quot;)), &quot;\&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, &quot;\n&quot;, &quot;\\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, &quot;\t&quot;, &quot;\\t&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, &quot;\r&quot;, &quot;\\r&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="#/2/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing an Integer value"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.toString(this.getValue());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="#/2/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Boolean value, typically : true or false keyword"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.toString(this.getValue());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeLiteral" eSuperTypes="#/2/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Type.&#xA;for example, in &#xA;   Integer.new&#xA;Integer is a type literal representing the type kermeta::standard::Integer"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = this.getTyperef().createBehaviorJava(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeref" lowerBound="1"
              eType="#/2/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type refered by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidLiteral" eSuperTypes="#/2/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class is used to represent the special expression void"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/2/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;null&quot;;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/1/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EmptyExpression" eSuperTypes="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="As suggested by its name, this class represents an expression that do nothing. Like a &quot;nop&quot;"/>
          </eAnnotations>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="standard" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/standard/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/standard"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Defines value types &#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/primitive_types_view.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains types dedicated to dealing with java objects&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Defines Collection types &#xA; * &lt;img src=&quot;./figures/collections_view.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaString" instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EClass" name="String" eSuperTypes="#/2/standard/ValueType">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/KermetaProperty_String_value"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Void" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The class Void &#xA; * By convention it is a sub-type of everything&#xA; */"/>
        </eAnnotations>
        <eOperations name="isVoid" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return true&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isInstanceOf" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="type" eType="#/2/language/structure/Type"/>
        </eOperations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the String identifier '&lt;void>'&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&lt;void>&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValueType" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstract class ValueType does not contain any feature.&#xA; * However, any instance of a sub-class of ValueType will be passed by value &#xA; * instead of by reference for any other objects.&#xA; * that means that each time you := such object it will call the clone function associated to it (Not implemented yet except for Integer, String and boolean!!!)&#xA; * &#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comparable" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstract class Comparable defines a set of operation&#xA; * to compare instances of a class.&#xA; * Sub-classes only has to implement abstract operation compareTo.&#xA; * All other methods are defined w.r.t. the compareTo operation&#xA; */"/>
        </eAnnotations>
        <eOperations name="isLower" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self &lt; other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreaterOrEqual" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self >= other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="compareTo" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * This method should be implemented by any class that inherits&#xA;&#x9; * from Comparable.&#xA;&#x9; * returns 0 if self = other&#xA;&#x9; * returns > 0 if  self > other&#xA;&#x9; * returns &lt; 0 if  self &lt; other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="java.lang.Integer result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="isLowerOrEqual" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self &lt;= other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreater" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * return true if self > other&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/2/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Summable" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstract class Summable defines a set of operation&#xA; * to sum instances of a class.&#xA; * Sub-classes only has to implement abstract operation plus.&#xA;  */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="plus">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Summarization method to be implemented by any summable class.&#xA;&#x9; * The parameter must have the same type (or one of its subtypes)&#xA;&#x9; *  than the current object .&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="G result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/Summable/G"/>
          <eParameters name="other">
            <eGenericType eTypeParameter="#/2/standard/Summable/G"/>
          </eParameters>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotComparableException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * raised when two objects are not comparable&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaBoolean" instanceClassName="java.lang.Boolean"/>
      <eClassifiers xsi:type="ecore:EClass" name="Boolean" eSuperTypes="#/2/standard/ValueType">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/KermetaProperty_Boolean_value"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaNumeric" instanceClassName="java.lang.Number"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaInteger" instanceClassName="java.lang.Integer"/>
      <eClassifiers xsi:type="ecore:EClass" name="Integer" eSuperTypes="#/2/standard/ValueType">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/KermetaProperty_Integer_value"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaReal" instanceClassName="java.lang.Double"/>
      <eClassifiers xsi:type="ecore:EClass" name="Real" eSuperTypes="#/2/standard/ValueType">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/KermetaProperty_Real_value"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaCharacter" instanceClassName="java.lang.Character"/>
      <eClassifiers xsi:type="ecore:EClass" name="Character" eSuperTypes="#/2/standard/ValueType">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/2/standard/KermetaProperty_Character_value"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Integer">
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::standard::Integer"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Unlimited natural is used for reflection.&#xA; * It is mapped to integer.equals().&#xA; * Any negative number is interpreted as '*'&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnknownJavaObject" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xA;  * This special object is used to represent java objects that cannot be concretely used with kermeta&#xA;  * &lt;b>the only actions possible on these objects are : assignment and passing them as parameter&lt;/b>&#xA;  * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xA;  */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; &#x9; * NOT IMPLEMENTED&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;toString of  UnknownJavaObject not implemented yet&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Collection" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Collection is the root abstract class for all kermeta collections&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=values isUnique=false isOrdered=false javaClass=org.eclipse.emf.common.util.EList"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="count" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the number of instances of element in the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_ft192 = null;&#xA;&#xA;&#x9;G elem_ft192 = null;&#xA;&#xA;&#x9;result_ft192 = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft192 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_851 = false;&#xA;&#x9;while( !idLoopCond_851 ) {&#xA;&#x9;idLoopCond_851 = it_ft192.isOff();&#xA;&#x9;if ( idLoopCond_851 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft192 = it_ft192.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_852 = false;&#xA;//BIle:selector&#xA;G e_lbdExp192 = elem_ft192;&#xA;&#xA;&#x9;idIfCond_852 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp192, element);&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_852 ) {&#xA;&#xA;&#x9;result_ft192.add(elem_ft192);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;result = result_ft192.size();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes all instances of element from the Collection, based on&#xA;&#x9; * G.equals(Object) definition&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;//BIft:detect&#xA;&#xA;G result_ft193 = null;&#xA;&#xA;&#x9;G elem_ft193 = null;&#xA;&#xA;&#x9;result_ft193 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft193 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_854 = false;&#xA;&#x9;while( !idLoopCond_854 ) {&#xA;&#x9;idLoopCond_854 = kermeta.standard.helper.BooleanWrapper.or(it_ft193.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft193, null));&#xA;&#x9;if ( idLoopCond_854 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft193 = it_ft193.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_855 = false;&#xA;//BIle:detector&#xA;G e_lbdExp193 = elem_ft193;&#xA;&#xA;&#x9;idIfCond_855 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp193, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_855 ) {&#xA;&#xA;&#x9;result_ft193 = elem_ft193;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft193;&#xA;//EIft:detect&#xA;&#xA;&#x9;java.lang.Boolean idLoopCond_853 = false;&#xA;&#x9;while( !idLoopCond_853 ) {&#xA;&#x9;idLoopCond_853 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(elem, null);&#xA;&#x9;if ( idLoopCond_853 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;G result_ft194 = null;&#xA;&#xA;&#x9;G elem_ft194 = null;&#xA;&#xA;&#x9;result_ft194 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft194 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_856 = false;&#xA;&#x9;while( !idLoopCond_856 ) {&#xA;&#x9;idLoopCond_856 = kermeta.standard.helper.BooleanWrapper.or(it_ft194.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft194, null));&#xA;&#x9;if ( idLoopCond_856 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft194 = it_ft194.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_857 = false;&#xA;//BIle:detector&#xA;G e_lbdExp194 = elem_ft194;&#xA;&#xA;&#x9;idIfCond_857 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp194, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_857 ) {&#xA;&#xA;&#x9;result_ft194 = elem_ft194;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft194;&#xA;//EIft:detect&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__7240810__doesntContainsElementAnymore&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;result_post = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludes" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the Collection does not contain element&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="one">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an element from the Collection or void if the Collection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_858 = false;&#xA;&#x9;idIfCond_858 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_858 ) {&#xA;&#xA;&#x9;result = null;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
        </eOperations>
        <eOperations name="containsAll" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if current Collection contains all elements of Collection elements&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_859 = false;&#xA;&#x9;while( !idLoopCond_859 ) {&#xA;&#x9;idLoopCond_859 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( idLoopCond_859 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = this.contains(it.next());&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="sum">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Sum the element if they are summable (ie implement '+' operator by inheriting of the class Summable)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;G res = null;&#xA;&#xA;&#x9;kermeta.standard.Summable&lt;G> tmp = null;&#xA;&#xA;&#x9;G o = null;&#xA;&#xA;&#x9;o = this.one();&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Summable&lt;G>>asTypeOrVoid(o);&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_860 = false;&#xA;&#x9;idIfCond_860 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tmp, null);&#xA;&#xA;&#x9;if( idIfCond_860 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft195 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_861 = false;&#xA;&#x9;while( !idLoopCond_861 ) {&#xA;&#x9;idLoopCond_861 = it_ft195.isOff();&#xA;&#x9;if ( idLoopCond_861 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G elem_lbdExp195 = it_ft195.next();&#xA;&#xA;&#x9;o = elem_lbdExp195;&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Summable&lt;G>>asTypeOrVoid(o);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_862 = false;&#xA;&#x9;idIfCond_862 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(tmp, null);&#xA;&#xA;&#x9;if( idIfCond_862 ) {&#xA;&#xA;&#x9;res = tmp.plus(res);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
        </eOperations>
        <eOperations name="contains" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least one&#xA;&#x9; * instance of element, based on G.equals(elt : Object) definition&#xA;&#x9; * Note: for checking whether a physical element is contained by the collection,&#xA;&#x9; * make use of G.oid()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_863 = false;&#xA;&#x9;while( !idLoopCond_863 ) {&#xA;&#x9;idLoopCond_863 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), result);&#xA;&#x9;if ( idLoopCond_863 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(it.next(), element);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds an element in the Collection (default implementation)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludesAll" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the Collection contains no element of Collection elements&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_864 = false;&#xA;&#x9;while( !idLoopCond_864 ) {&#xA;&#x9;idLoopCond_864 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( idLoopCond_864 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(it.next()));&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Sequence built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="includes" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL API alignment, doeas the same as contains&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.contains(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes all elements from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isEmpty" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL alignment API, does the same as empty&#xA;&#x9; * See Collection&lt;G>.empty()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.empty();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="any">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an element from the Collection&#xA;&#x9; * Raises an EmptyCollection exception if the Collection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_865 = false;&#xA;&#x9;idIfCond_865 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_865 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/Collection/G"/>
        </eOperations>
        <eOperations name="empty" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a Boolean stating whether the Collection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isNotEmpty" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL alignment API&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least&#xA;&#x9; * one element &#xA;&#x9; * See also Collection&lt;G>.contains(Object)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.empty());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="iterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an Iterator on the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Iterator&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getIterator()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.iterator(this, result);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Iterator">
            <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="addAll">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds all elements from the Collection elements in the current Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft196 = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_866 = false;&#xA;&#x9;while( !idLoopCond_866 ) {&#xA;&#x9;idLoopCond_866 = it_ft196.isOff();&#xA;&#x9;if ( idLoopCond_866 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G element_lbdExp196 = it_ft196.next();&#xA;&#xA;&#x9;this.add(element_lbdExp196);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="includesAll" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * OCL API alignment, does the same as containsAll&#xA;&#x9; * See Collection&lt;G>.containsAll(Collection&lt;G>)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.containsAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="size" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the number of elements in the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Integer>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.size(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new OrderedSet built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set built from the Collection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="values">
          <eGenericType eClassifier="#/2/standard/KermetaProperty_Collection_values">
            <eTypeArguments eTypeParameter="#/2/standard/Collection/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Set">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A Set is a non-ordered collection that contains distinct elements&#xA; * (with regards to the G.equals(Object) operation)&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=true isOrdered=false javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the intersection of the Set elements&#xA;&#x9; * with the current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_867 = false;&#xA;&#x9;while( !idLoopCond_867 ) {&#xA;&#x9;idLoopCond_867 = it.isOff();&#xA;&#x9;if ( idLoopCond_867 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_868 = false;&#xA;&#x9;idIfCond_868 = elements.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_868 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="minus">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the difference between the&#xA;&#x9; * current Set and the Set elements, ie all elements contained by &#xA;&#x9; * the current Set that do not appear in the elements Set &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_869 = false;&#xA;&#x9;while( !idLoopCond_869 ) {&#xA;&#x9;idLoopCond_869 = it.isOff();&#xA;&#x9;if ( idLoopCond_869 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_870 = false;&#xA;&#x9;idIfCond_870 = kermeta.standard.helper.BooleanWrapper.not(elements.contains(elem));&#xA;&#xA;&#x9;if( idIfCond_870 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.remove(G)&#xA;&#x9; * Removes the element from the Set if it is contained by the Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft197 = null;&#xA;&#xA;&#x9;G elem_ft197 = null;&#xA;&#xA;&#x9;result_ft197 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft197 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_871 = false;&#xA;&#x9;while( !idLoopCond_871 ) {&#xA;&#x9;idLoopCond_871 = kermeta.standard.helper.BooleanWrapper.or(it_ft197.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft197, null));&#xA;&#x9;if ( idLoopCond_871 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft197 = it_ft197.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_872 = false;&#xA;//BIle:detector&#xA;G e_lbdExp197 = elem_ft197;&#xA;&#xA;&#x9;idIfCond_872 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp197, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_872 ) {&#xA;&#xA;&#x9;result_ft197 = elem_ft197;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft197;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_873 = false;&#xA;&#x9;idIfCond_873 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_873 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Object.equals(Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_874 = false;&#xA;&#x9;idIfCond_874 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_874 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_875 = false;&#xA;&#x9;idIfCond_875 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_875 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;G>>asTypeOrVoid(element);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_876 = false;&#xA;&#x9;idIfCond_876 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_876 ) {&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;java.lang.Boolean ok = true;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_877 = false;&#xA;&#x9;while( !idLoopCond_877 ) {&#xA;&#x9;idLoopCond_877 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(ok));&#xA;&#x9;if ( idLoopCond_877 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_878 = false;&#xA;&#x9;idIfCond_878 = kermeta.standard.helper.BooleanWrapper.not(collection.contains(elem));&#xA;&#xA;&#x9;if( idIfCond_878 ) {&#xA;&#xA;&#x9;ok = false;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;isEqual = ok;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.add(G)&#xA;&#x9; * Adds elt to the Set if it is not already contained by the&#xA;&#x9; * Set, does nothing otherwise&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_879 = false;&#xA;&#x9;idIfCond_879 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( idIfCond_879 ) {&#xA;&#xA;&#x9;super.add(element);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xA;&#x9; * Returns a new Sequence composed of all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="symmetricDifference">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set which contents corresponds to the symmetric&#xA;&#x9; * difference between current Set and Set s, ie all elements of&#xA;&#x9; * each Set that do not appear in the other one&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> res = s.minus(this);&#xA;&#xA;&#x9;result = this.minus(s);&#xA;&#xA;&#x9;result.addAll(res);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
          <eParameters name="s">
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a ordered set of the bag elements sorted using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Recursive sort of the given (ordered) set using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set which content includes all non-Collection elements&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xA;&#x9; * Set, as many elements as the Collection contains&#xA;&#x9; * Duplicates are removed&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_880 = false;&#xA;&#x9;idIfCond_880 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;G&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;if( idIfCond_880 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft198 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_881 = false;&#xA;&#x9;while( !idLoopCond_881 ) {&#xA;&#x9;idLoopCond_881 = it_ft198.isOff();&#xA;&#x9;if ( idLoopCond_881 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G e_lbdExp198 = it_ft198.next();&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;kermeta.language.structure.Object>>asTypeOrVoid(e_lbdExp198);&#xA;&#xA;&#x9;res.addAll(col);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eClassifier="#/2/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xA;&#x9; * Returns a new OrderedSet that contains all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xA;&#x9; * Returns a new Bag composed of all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the union of the Set elements&#xA;&#x9; * with the current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xA;&#x9; * Returns a new Set composed of all elements of current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="unionWithBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag corresponding to the union of the Bag elements&#xA;&#x9; * with the current Set&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Bag">
              <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Collection">
          <eTypeArguments eTypeParameter="#/2/standard/Set/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Bag">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Bag is a concrete non-ordered Collection allowing duplicates&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=false javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag corresponding to the intersection of elements&#xA;&#x9; * and the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_882 = false;&#xA;&#x9;while( !idLoopCond_882 ) {&#xA;&#x9;idLoopCond_882 = it.isOff();&#xA;&#x9;if ( idLoopCond_882 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_883 = false;&#xA;&#x9;idIfCond_883 = elements.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_883 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_884 = false;&#xA;&#x9;idIfCond_884 = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.count(elem), elements.count(elem));&#xA;&#xA;&#x9;if( idIfCond_884 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;it = elements.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_885 = false;&#xA;&#x9;while( !idLoopCond_885 ) {&#xA;&#x9;idLoopCond_885 = it.isOff();&#xA;&#x9;if ( idLoopCond_885 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_886 = false;&#xA;&#x9;idIfCond_886 = this.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_886 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_887 = false;&#xA;&#x9;idIfCond_887 = kermeta.standard.helper.IntegerWrapper.isLower(elements.count(elem), this.count(elem));&#xA;&#xA;&#x9;if( idIfCond_887 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Bag">
              <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Object.equals(elt : Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_888 = false;&#xA;&#x9;idIfCond_888 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_888 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_889 = false;&#xA;&#x9;idIfCond_889 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_889 ) {&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Bag&lt;G>>asTypeOrVoid(element);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> selfAsSet = this.asSet();&#xA;&#xA;&#x9;isEqual = selfAsSet.equals(collection.asSet());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xA;&#x9; * Returns a new Sequence containing all elements of current Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a sequence of the bag elements sorted using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Recursive sort of the given sequence using the given comparator.&#xA;&#x9; * The comparator must return :&lt;ul>&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/2/standard/Sequence">
              <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/2/standard/Sequence">
              <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/2/standard/Sequence">
              <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="excluding">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xA;&#x9; * current Bag from which all instances of object have been&#xA;&#x9; * removed&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.remove(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/2/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag which content includes all non-Collection elements&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xA;&#x9; * Bag, as many elements as the Collection contains&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Bag&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_890 = false;&#xA;&#x9;idIfCond_890 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;G&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;if( idIfCond_890 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft199 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_891 = false;&#xA;&#x9;while( !idLoopCond_891 ) {&#xA;&#x9;idLoopCond_891 = it_ft199.isOff();&#xA;&#x9;if ( idLoopCond_891 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;G e_lbdExp199 = it_ft199.next();&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;kermeta.language.structure.Object>>asTypeOrVoid(e_lbdExp199);&#xA;&#xA;&#x9;res.addAll(col);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eClassifier="#/2/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="intersectionWithSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Set corresponding to the intersection of a Set of&#xA;&#x9; * elements and the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_892 = false;&#xA;&#x9;while( !idLoopCond_892 ) {&#xA;&#x9;idLoopCond_892 = it.isOff();&#xA;&#x9;if ( idLoopCond_892 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_893 = false;&#xA;&#x9;idIfCond_893 = this.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_893 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Set">
              <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="including">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xA;&#x9; * current Bag and the element object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.add(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/2/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xA;&#x9; * Returns a new OrderedSet containing elements of the Bag without duplicates&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xA;&#x9; * Returns a new Bag containing all elements of current Bag&#x9;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a new Bag corresponding to the union of elements and&#xA;&#x9; * current Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Bag">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/2/standard/Collection">
              <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="removeOne">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes one instance of element from the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft200 = null;&#xA;&#xA;&#x9;G elem_ft200 = null;&#xA;&#xA;&#x9;result_ft200 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft200 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_894 = false;&#xA;&#x9;while( !idLoopCond_894 ) {&#xA;&#x9;idLoopCond_894 = kermeta.standard.helper.BooleanWrapper.or(it_ft200.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft200, null));&#xA;&#x9;if ( idLoopCond_894 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft200 = it_ft200.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_895 = false;&#xA;//BIle:detector&#xA;G e_lbdExp200 = elem_ft200;&#xA;&#xA;&#x9;idIfCond_895 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(e_lbdExp200, element);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_895 ) {&#xA;&#xA;&#x9;result_ft200 = elem_ft200;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft200;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_896 = false;&#xA;&#x9;idIfCond_896 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_896 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeFromOid">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes the element identified by the provided Oid from the Bag&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//BIft:detect&#xA;&#xA;G result_ft201 = null;&#xA;&#xA;&#x9;G elem_ft201 = null;&#xA;&#xA;&#x9;result_ft201 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft201 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_897 = false;&#xA;&#x9;while( !idLoopCond_897 ) {&#xA;&#x9;idLoopCond_897 = kermeta.standard.helper.BooleanWrapper.or(it_ft201.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft201, null));&#xA;&#x9;if ( idLoopCond_897 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft201 = it_ft201.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_898 = false;&#xA;//BIle:detector&#xA;G e_lbdExp201 = elem_ft201;&#xA;&#xA;&#x9;idIfCond_898 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(e_lbdExp201), elementOid);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_898 ) {&#xA;&#xA;&#x9;result_ft201 = elem_ft201;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;elem = result_ft201;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_899 = false;&#xA;&#x9;idIfCond_899 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(elem, null);&#xA;&#xA;&#x9;if( idIfCond_899 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__7242682__doesntContainsElementAnymore&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft202 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft202 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft202 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_900 = false;&#xA;&#x9;while( !idLoopCond_900 ) {&#xA;&#x9;idLoopCond_900 = kermeta.standard.helper.BooleanWrapper.or(it_ft202.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft202, false));&#xA;&#x9;if ( idLoopCond_900 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft202 = null;&#xA;//BIle:func&#xA;G e_lbdExp202 = it_ft202.next();&#xA;&#xA;&#x9;result_lambda_ft202 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.oidSwitcher(e_lbdExp202), elementOid);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft202 = kermeta.standard.helper.BooleanWrapper.or(test_ft202, result_lambda_ft202);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft202 = test_ft202;&#xA;//EIft:exists&#xA;result_post = kermeta.standard.helper.BooleanWrapper.not(result_ft202);&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="elementOid" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xA;&#x9; * Returns a new Set containing elements of the Bag without duplicates&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Collection">
          <eTypeArguments eTypeParameter="#/2/standard/Bag/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedCollection" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An OrderedCollection is the root abstract class for all ordered Collections.&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes the element at rank index from the OrderedCollection&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_901 = false;&#xA;&#x9;idIfCond_901 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1)));&#xA;&#xA;&#x9;if( idIfCond_901 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds element in the OrderedCollection at rank index&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_902 = false;&#xA;&#x9;idIfCond_902 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_902 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="last">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the last element in the OrderedCollection&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_903 = false;&#xA;&#x9;idIfCond_903 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_903 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.elementAt(kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/OrderedCollection/G"/>
        </eOperations>
        <eOperations name="equals" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Object.equals(Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_904 = false;&#xA;&#x9;idIfCond_904 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(element));&#xA;&#xA;&#x9;if( idIfCond_904 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_905 = false;&#xA;&#x9;idIfCond_905 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstanceSwitcher(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_905 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;G>>asTypeOrVoid(element);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_906 = false;&#xA;&#x9;idIfCond_906 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_906 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = this.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_907 = false;&#xA;&#x9;while( !idLoopCond_907 ) {&#xA;&#x9;idLoopCond_907 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_907 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_908 = false;&#xA;&#x9;idIfCond_908 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_908 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="indexOf" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * Returns the index of the first instance of element in the OrderedCollection&#xA;&#x9; * or -1 if the element is not contained by the OrderedCollection&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_909 = false;&#xA;&#x9;idIfCond_909 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_909 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Boolean found = false;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_910 = false;&#xA;&#x9;while( !idLoopCond_910 ) {&#xA;&#x9;idLoopCond_910 = kermeta.standard.helper.BooleanWrapper.or(found, it.isOff());&#xA;&#x9;if ( idLoopCond_910 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_911 = false;&#xA;&#x9;idIfCond_911 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(element, it.next());&#xA;&#xA;&#x9;if( idIfCond_911 ) {&#xA;&#xA;&#x9;found = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_912 = false;&#xA;&#x9;idIfCond_912 = found;&#xA;&#xA;&#x9;if( idIfCond_912 ) {&#xA;&#xA;&#x9;result = i;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="elementAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the element at rank index in the OrderedCollection&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedCollection&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_913 = false;&#xA;&#x9;idIfCond_913 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1)));&#xA;&#xA;&#x9;if( idIfCond_913 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;G>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.elementAt(this, index));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/OrderedCollection/G"/>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="first">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * Returns the first element in the OrderedCollection&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_914 = false;&#xA;&#x9;idIfCond_914 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_914 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getEmptyCollection())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.elementAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/OrderedCollection/G"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Collection">
          <eTypeArguments eTypeParameter="#/2/standard/OrderedCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedSet">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An OrderedSet is a Set that contained ordered distinct elements&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=true isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xA;&#x9; * inserted in head&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides OrderedCollection&lt;G>.addAt(Integer, G)&#xA;&#x9; * Adds element in the OrderedSet at rank index if the ordered set does&#xA;&#x9; * not already contain the element, does nothing otherwise&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_915 = false;&#xA;&#x9;idIfCond_915 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( idIfCond_915 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.OrderedCollectionSuper.super_addAt(this, index, element);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xA;&#x9; * inserted at rank index&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, subject);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
          <eParameters name="subject">
            <eGenericType eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * See OrderedCollection&lt;G>.equals(Object) &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.OrderedCollectionSuper.super_equals(this, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xA;&#x9; * inserted in tail&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns element at rank index in the sequence&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the OrderedSet&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_916 = false;&#xA;&#x9;idIfCond_916 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_916 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean idLoopCond_917 = false;&#xA;&#x9;while( !idLoopCond_917 ) {&#xA;&#x9;idLoopCond_917 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( idLoopCond_917 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/OrderedSet/G"/>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="add" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * See Set&lt;G>.add(G)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;super.add(element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="subSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new OrderedSet composed of elements of current ordered&#xA;&#x9; * set from rank min to rank max (order is respected)&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xA;&#x9; * the size of the ordered set or min is larger than max&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_918 = false;&#xA;&#x9;idIfCond_918 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( idIfCond_918 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_919 = false;&#xA;&#x9;while( !idLoopCond_919 ) {&#xA;&#x9;idLoopCond_919 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( idLoopCond_919 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_920 = false;&#xA;&#x9;while( !idLoopCond_920 ) {&#xA;&#x9;idLoopCond_920 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( idLoopCond_920 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/2/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/2/standard/JavaInteger"/>
          <eParameters name="max" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Set">
          <eTypeArguments eTypeParameter="#/2/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/2/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/2/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Sequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A Sequence is an OrderedCollection of elements allowing duplicates&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="subSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence composed of elements of current sequence&#xA;&#x9; * from rank min to rank max (order is respected)&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xA;&#x9; * the size of the sequence or min is larger than max&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_921 = false;&#xA;&#x9;idIfCond_921 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( idIfCond_921 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_922 = false;&#xA;&#x9;while( !idLoopCond_922 ) {&#xA;&#x9;idLoopCond_922 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( idLoopCond_922 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_923 = false;&#xA;&#x9;while( !idLoopCond_923 ) {&#xA;&#x9;idLoopCond_923 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( idLoopCond_923 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/2/standard/JavaInteger"/>
          <eParameters name="max" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xA;&#x9; * inserted in head&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xA;&#x9; * inserted at rank index&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides OrderedCollection&lt;G>.equals(Object)&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xA;&#x9; * current Sequence&#x9;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.OrderedCollectionSuper.super_equals(this, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xA;&#x9; * inserted in tail&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Sequence">
            <eTypeArguments eTypeParameter="#/2/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns element at rank index in the sequence&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xA;&#x9; * larger than the size of the Sequence&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_924 = false;&#xA;&#x9;idIfCond_924 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_924 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean idLoopCond_925 = false;&#xA;&#x9;while( !idLoopCond_925 ) {&#xA;&#x9;idLoopCond_925 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( idLoopCond_925 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIndexOutOfBound())) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/Sequence/G"/>
          <eParameters name="index" eType="#/2/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Bag">
          <eTypeArguments eTypeParameter="#/2/standard/Sequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/2/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/2/standard/Sequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Iterator" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Iterator to be used with Collection&#xA; * See also Collection&lt;G>.getIterator()&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=javaIterator javaClass=java.util.Iterator"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=kermetaCollection classDefinitionQN=kermeta::standard::Collection"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="hasNext" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the iterator has a next element&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.hasNext(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="next">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the next element of the iterator&#xA;&#x9; * Raises IteratorIsOff exception in case the iterator is on the last element &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_926 = false;&#xA;&#x9;idIfCond_926 = kermeta.standard.helper.BooleanWrapper.not(this.hasNext());&#xA;&#xA;&#x9;if( idIfCond_926 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IteratorIsOff) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getIteratorIsOff())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;G>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.next(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/standard/Iterator/G"/>
        </eOperations>
        <eOperations name="isOff" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns true if the iterator is on the last element&#xA;&#x9; * i.e. returns not self.hasNext()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.hasNext());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="javaIterator">
          <eGenericType eClassifier="#/2/standard/KermetaProperty_Iterator_javaIterator">
            <eTypeArguments eTypeParameter="#/2/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="kermetaCollection">
          <eGenericType eClassifier="#/2/standard/Collection">
            <eTypeArguments eTypeParameter="#/2/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_String_value"
          instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Boolean_value"
          instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Integer_value"
          instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Real_value" instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Character_value"
          instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Collection_values"
          instanceClassName="org.eclipse.emf.common.util.EList">
        <eTypeParameters name="G"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Iterator_javaIterator"
          instanceClassName="java.util.Iterator">
        <eTypeParameters name="G"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="utils" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/utils/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/utils"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xA; * metamodel&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xA; * metamodel&#xA; * &#xA; * &lt;img src=&quot;./figures/utils_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StringBuffer" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This class mimic the behavior of the java's StringBuffer class. This enables better performance in long&#xA; * string concatenation.&lt;br>&#xA; * &lt;b>Only work on Strings&lt;/b>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=content isUnique=true isOrdered=false javaClass=java.lang.StringBuffer"/>
        </eAnnotations>
        <eOperations name="append" eType="#/2/utils/StringBuffer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Append a given string at the end of this StringBuffer&#xA;&#x9; * @param arg0 A string to append at the end of this StringBuffer&#xA;&#x9; * @return A reference to this object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.utils.StringBuffer result = null;&#xA;&#xA;&#x9;result = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.utils.StringBuffer>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.append(this, arg0));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="arg0" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="length" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return the length of the StringBuffer&#xA;&#x9; * @return length of the StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Integer>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.length(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; *Convert this StringBuffer to String and return its value&#xA;&#x9; *@return The string value of this StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.String stringValue = null;&#xA;&#xA;&#x9;stringValue = (java.lang.String) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.String>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.toString(this));&#xA;&#xA;&#x9;result = stringValue;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" eType="#/2/utils/KermetaProperty_StringBuffer_content"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Stack">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An implementation of stack&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="pop">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Get and remove the element at the top of the stack&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.peek();&#xA;&#xA;&#x9;this.removeAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/utils/Stack/G"/>
        </eOperations>
        <eOperations name="peek">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Gets the element at the top of the stack&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.first();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/utils/Stack/G"/>
        </eOperations>
        <eOperations name="push">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Pushes an element into the stack&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.addAt(0, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/2/utils/Stack/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/2/standard/Sequence">
          <eTypeArguments eTypeParameter="#/2/utils/Stack/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Hashtable" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An implementation of hashtable&#xA; * This implementation is for speed optimisation it cannot be serialized. &#xA; * If your wish to serialize its content you need to copy its content into a classical ecore structure (attribute or references)&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=wrappedHashtable isUnique=false isOrdered=false javaClass=java.util.Hashtable"/>
        </eAnnotations>
        <eTypeParameters name="K"/>
        <eTypeParameters name="V"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes all elements from the Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getValue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the value for key 'key' if it exists, otherwise returns Void&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;V result = null;&#xA;&#xA;&#x9;result = (V) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;V>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.get(this, key));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/2/utils/Hashtable/V"/>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/2/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="containsKey" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#x9;&#xA;&#x9; * Returns a Boolean stating whether a key is present or not in this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getValue(key), null);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/2/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="put">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds a entry into the Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.put(this, key, value);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/2/utils/Hashtable/K"/>
          </eParameters>
          <eParameters name="value">
            <eGenericType eTypeParameter="#/2/utils/Hashtable/V"/>
          </eParameters>
        </eOperations>
        <eOperations name="values">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a collection containing the elements of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Collection&lt;V> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;V>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it_ft203 = this.keys().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_927 = false;&#xA;&#x9;while( !idLoopCond_927 ) {&#xA;&#x9;idLoopCond_927 = it_ft203.isOff();&#xA;&#x9;if ( idLoopCond_927 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;K k_lbdExp203 = it_ft203.next();&#xA;&#xA;&#x9;result.add(this.getValue(k_lbdExp203));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Collection">
            <eTypeArguments eTypeParameter="#/2/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Removes the entry with key equals to 'key'&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.remove(this, key);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/2/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="keys">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns a set containing the hash keys of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;K> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;K>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it = this.keyIterator();&#xA;&#x9;java.lang.Boolean idLoopCond_928 = false;&#xA;&#x9;while( !idLoopCond_928 ) {&#xA;&#x9;idLoopCond_928 = it.isOff();&#xA;&#x9;if ( idLoopCond_928 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eTypeParameter="#/2/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="keyIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an iterator over the Keys of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;K> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;K>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Iterator&lt;K>>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.keysIterator(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Iterator">
            <eTypeArguments eTypeParameter="#/2/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="valueIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns an iterator over the values of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;V> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;V>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Iterator&lt;V>>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.valueIterator(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Iterator">
            <eTypeArguments eTypeParameter="#/2/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="size" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the size of this Hashtable&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Integer>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.MapUtil.size(this));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="wrappedHashtable">
          <eGenericType eClassifier="#/2/utils/KermetaProperty_Hashtable_wrappedHashtable">
            <eTypeArguments eTypeParameter="#/2/utils/Hashtable/K"/>
            <eTypeArguments eTypeParameter="#/2/utils/Hashtable/V"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_StringBuffer_content"
          instanceClassName="java.lang.StringBuffer"/>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Hashtable_wrappedHashtable"
          instanceClassName="java.util.Hashtable">
        <eTypeParameters name="K"/>
        <eTypeParameters name="V"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="kunit" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kunit/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/kunit"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains the implementation of a unit test tool. This is a clone of&#xA; * JUnit architecture.&#xA; * Reference : http://junit.sourceforge.net/doc/cookstour/cookstour.htm&#xA; *&#xA; * Usage example of kunit can be found in fr.irisa.triskell.kermeta.samples project.&#xA; *&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * main features of the famous Unit test tool for Kermeta language&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidTestCaseNameException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This exception is rose if there is a problem on the name of the test method&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidParameterException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This is for when we try to build a suite from a class that isn't a TestCase&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Fallible" abstract="true" eSuperTypes="#/2/kunit/AbstractFallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This is represents the aspect of tests that they may go wrong.&#xA; * it defines the ability to define the conditions for success&#xA; * (assertions) and the mechanism for recording that those &#xA; * conditions have not been met.&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this._assert(condition);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="getLogKermeta" eType="#/2/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * where failures will be put &#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logDefined" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.kunit.Log result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is true&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.BooleanWrapper.not(condition), message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure &#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_929 = false;&#xA;&#x9;idIfCond_929 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_929 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if the two strings are not identical&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/2/standard/JavaString"/>
          <eParameters name="actual" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is true&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this._assert(kermeta.standard.helper.BooleanWrapper.not(condition));&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(condition, message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_930 = false;&#xA;&#x9;idIfCond_930 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_930 ) {&#xA;&#xA;&#x9;java.lang.String msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_931 = false;&#xA;&#x9;idIfCond_931 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_931 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, msg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="number" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * current order position of counter of assertions&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_932 = false;&#xA;&#x9;idIfCond_932 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getRank());&#xA;&#xA;&#x9;if( idIfCond_932 ) {&#xA;&#xA;&#x9;this.setRank(0);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setRank(kermeta.standard.helper.IntegerWrapper.plus(this.getRank(), 1));&#xA;&#xA;&#x9;result = this.getRank();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if condition is false&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_933 = false;&#xA;&#x9;idIfCond_933 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_933 ) {&#xA;&#xA;&#x9;java.lang.String realMsg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed: &quot;), msg);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_934 = false;&#xA;&#x9;idIfCond_934 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_934 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(realMsg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, realMsg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="mustStop" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_935 = false;&#xA;&#x9;idIfCond_935 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(this.getStopOnFailure());&#xA;&#xA;&#x9;if( idIfCond_935 ) {&#xA;&#xA;&#x9;this.setStopOnFailure(true);&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.getStopOnFailure();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stopOnFailure" eType="#/2/standard/JavaBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Set this attribute to false if you wish your test to not stop if the assert fails.&#xA;   * note : if set to false, the count of failures/errors may be bigger that the number of executed test operations&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="rank" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * counter of assertions in the test method&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Log" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Log is a log of failures and errors that happened to fallibles since start was called&#xA; */"/>
        </eAnnotations>
        <eOperations name="addSetUpError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds errors which occur during the SetUp phase&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getHarnessErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError())).initFrom(test, e).makeSetUp());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/2/kunit/Fallible"/>
          <eParameters name="e" eType="#/2/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addTestError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds an error to the list of errors&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError())).initFrom(test, e));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/2/kunit/Fallible"/>
          <eParameters name="e" eType="#/2/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addFailure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds a failed test to the list of failed tests&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getFailures()).add(((kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getFailure())).initFrom(test, msg));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/2/kunit/Fallible"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="addTearDownError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Adds errors which occur during the TearDown phase&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getHarnessErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getError())).initFrom(test, e).makeTearDown());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/2/kunit/Fallible"/>
          <eParameters name="e" eType="#/2/exceptions/Exception"/>
        </eOperations>
        <eOperations name="newAttempt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Increments the runtests counter&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_936 = false;&#xA;&#x9;idIfCond_936 = kermeta.standard.helper.IntegerWrapper.equals(this.getRuntests(), null);&#xA;&#xA;&#x9;if( idIfCond_936 ) {&#xA;&#xA;&#x9;this.setRuntests(0);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setRuntests(kermeta.standard.helper.IntegerWrapper.plus(1, this.getRuntests()));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failures" upperBound="-1"
            eType="#/2/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * list of detected assertion failures&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/2/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * list of detected test errors&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="runtests" eType="#/2/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * number of test that were run&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="harnessErrors" upperBound="-1"
            eType="#/2/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;* list of detected errors with the test harness&#xA;&#x9;*/"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Failure" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Failure represents an assertion failure stored in a failure log&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * overwrite the default method, in order to add the message&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getFailure()), &quot; &quot;), this.getMessage());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="#/2/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * initialization of the failure&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Failure result = null;&#xA;&#xA;&#x9;this.setFailure(fallible);&#xA;&#xA;&#x9;this.setMessage(msg);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="fallible" eType="#/2/kunit/Fallible"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the stored message (given or generated one)&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failure" eType="#/2/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the stored failure&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ErrorKind">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * all kinds of error we can meet&#xA; */"/>
        </eAnnotations>
        <eLiterals name="setUpError" literal="setUpError"/>
        <eLiterals name="testError" value="1" literal="testError"/>
        <eLiterals name="tearDownError" value="2" literal="tearDownError"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Error" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Error represents an occurrence of an exception in setUp, tearDown or a test&#xA; * and is stored in a failure log&#xA; */"/>
        </eAnnotations>
        <eOperations name="makeTearDown" eType="#/2/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Changes the type of an error to makeTearDownError, the best way to use&#xA;&#x9; * this method is to call it after the init from line:&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeTearDown&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;tearDownError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="makeSetUp" eType="#/2/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Changes the type of an error to SetUpError, the best way to use&#xA;&#x9; * this method is to call it after the init from line:&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeSetUp&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;setUpError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * overwrite the default method, in order to add :&#xA;&#x9; *   - the type&#xA;&#x9; *   - the message&#xA;&#x9; *   - the stack trace&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_937 = false;&#xA;&#x9;idIfCond_937 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getKind(), kermeta.kunit.ErrorKind.getByName(&quot;testError&quot;));&#xA;&#xA;&#x9;if( idIfCond_937 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getError());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this.getError()).getterName(), &quot;.&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_938 = false;&#xA;&#x9;idIfCond_938 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getKind(), kermeta.kunit.ErrorKind.getByName(&quot;setUpError&quot;));&#xA;&#xA;&#x9;if( idIfCond_938 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;setUp()&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;tearDown()&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; raised &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this.getException()).getterName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_939 = false;&#xA;&#x9;idIfCond_939 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getException().getMessage(), null);&#xA;&#xA;&#x9;if( idIfCond_939 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Caused by: &quot;), this.getException().getMessage());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no message)&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_940 = false;&#xA;&#x9;idIfCond_940 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getException().getStackTrace(), null);&#xA;&#xA;&#x9;if( idIfCond_940 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Stack Trace:\n&quot;), this.getException().getStackTrace());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no stack trace)&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="#/2/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Sets up a new error with failable object and the exception that occurred&#xA;&#x9; * by default it will be a test error. Use makeSetUp or makeTearDown to&#xA;&#x9; * change its type&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setError(error);&#xA;&#xA;&#x9;this.setException(e);&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;testError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="error" eType="#/2/kunit/Fallible"/>
          <eParameters name="e" eType="#/2/exceptions/Exception"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="error" eType="#/2/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the stored error&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exception" eType="#/2/exceptions/Exception">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the Kermeta exception corresponding to the error&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#/2/kunit/ErrorKind"
            transient="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the nature of the stored error&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Test" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The abstact notion of a test which is runnable and which has a log&#xA; * in which it can keep note of failures&#xA; */"/>
        </eAnnotations>
        <eOperations name="setLogKermeta">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Initializes the log where failures and errors will be put&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="setLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="paramNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__7244624__paramNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(log, null);&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;this.setLog(log);&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__7244630__logNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;result_post = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getLog(), null);&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="log" eType="#/2/kunit/Log"/>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Execute the test and verify its assertions&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initLog" eType="#/2/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * called when run by the java testrunner&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;this.setLog(((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getLog())));&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#/2/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * where failures and errors will be put &#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestSuite" eSuperTypes="#/2/kunit/Test">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A TestSuite is a structured collection of tests, using the&#xA; * composite pattern, all tests are runnable and have a log&#xA; * In addition a suite can be populated automatically from a&#xA; * test case class with one test case object for each test&#xA; * method in the class.&#xA; *  You can make a suite and populate it manually like this:&#xA; *&#xA; *  var suite : TestSuite init TestSuite.new.&#xA; *  suite.tests.add(t1)&#xA; *&#xA; *  Alternatively you can populate a suite automatically from&#xA; *  a class that inherits TestCase and which has several methods&#xA; *  called test:&#xA; *&#xA; *  var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xA; */"/>
        </eAnnotations>
        <eOperations name="addAllTestCasesFrom" eType="#/2/kunit/TestSuite">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * Add to this suite, a set of test cases of type c, one for each&#xA;&#x9;  * test method in class c. C must be a descendent of TestCase&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testCaseClassIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestSuite result = null;&#xA;&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__7244682__testCaseClassIsATestCase&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsOrderedSet(testCaseClass.getterSuperClass()).contains(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft204 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft204 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft204 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsOrderedSet(testCaseClass.getterSuperClass()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_942 = false;&#xA;&#x9;while( !idLoopCond_942 ) {&#xA;&#x9;idLoopCond_942 = kermeta.standard.helper.BooleanWrapper.or(it_ft204.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft204, false));&#xA;&#x9;if ( idLoopCond_942 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft204 = null;&#xA;//BIle:func&#xA;kermeta.language.structure.Class sc_lbdExp204 = it_ft204.next();&#xA;&#xA;&#x9;result_lambda_ft204 = sc_lbdExp204.equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft204 = kermeta.standard.helper.BooleanWrapper.or(test_ft204, result_lambda_ft204);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft204 = test_ft204;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_941 = false;&#xA;&#x9;idIfCond_941 = kermeta.standard.helper.BooleanWrapper.not(result_ft204);&#xA;&#xA;&#x9;if( idIfCond_941 ) {&#xA;&#xA;&#x9;kermeta.exceptions.Exception e = ((kermeta.kunit.InvalidParameterException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getInvalidParameterException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot build a suite from class: &quot;, testCaseClass.getterName()));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation> result_ft206 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Operation elem_ft206 = null;&#xA;&#xA;&#x9;result_ft206 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft206 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsSet(testCaseClass.getterOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_944 = false;&#xA;&#x9;while( !idLoopCond_944 ) {&#xA;&#x9;idLoopCond_944 = it_ft206.isOff();&#xA;&#x9;if ( idLoopCond_944 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft206 = it_ft206.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_945 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Operation o_lbdExp206 = elem_ft206;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_946 = false;&#xA;&#x9;idIfCond_946 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o_lbdExp206.getName()), 4);&#xA;&#xA;&#x9;if( idIfCond_946 ) {&#xA;&#xA;&#x9;idIfCond_945 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o_lbdExp206.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_945 = false;&#xA;}&#xA;&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_945 ) {&#xA;&#xA;&#x9;result_ft206.add(elem_ft206);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft205 = result_ft206.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_943 = false;&#xA;&#x9;while( !idLoopCond_943 ) {&#xA;&#x9;idLoopCond_943 = it_ft205.isOff();&#xA;&#x9;if ( idLoopCond_943 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp205 = it_ft205.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.kunit.TestCase>asTypeOrVoid(testCaseClass._new());&#xA;&#xA;&#x9;testCase.setTestMethodName(o_lbdExp205.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).add(testCase);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/2/language/structure/Class"/>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * Run all the tests in the test suite&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Test> it_ft207 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_947 = false;&#xA;&#x9;while( !idLoopCond_947 ) {&#xA;&#x9;idLoopCond_947 = it_ft207.isOff();&#xA;&#x9;if ( idLoopCond_947 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Test t_lbdExp207 = it_ft207.next();&#xA;&#xA;&#x9;t_lbdExp207.setLogKermeta(this.getLog());&#xA;&#xA;&#x9;t_lbdExp207.run();&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAllTestCasesFromAspects">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * to be written #####################################################&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation> result_ft209 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Operation elem_ft209 = null;&#xA;&#xA;&#x9;result_ft209 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft209 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(anAspect.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_949 = false;&#xA;&#x9;while( !idLoopCond_949 ) {&#xA;&#x9;idLoopCond_949 = it_ft209.isOff();&#xA;&#x9;if ( idLoopCond_949 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft209 = it_ft209.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_950 = false;&#xA;//BIle:selector&#xA;kermeta.language.structure.Operation o_lbdExp209 = elem_ft209;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_951 = false;&#xA;&#x9;idIfCond_951 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o_lbdExp209.getName()), 4);&#xA;&#xA;&#x9;if( idIfCond_951 ) {&#xA;&#xA;&#x9;idIfCond_950 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o_lbdExp209.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_950 = false;&#xA;}&#xA;&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_950 ) {&#xA;&#xA;&#x9;result_ft209.add(elem_ft209);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft208 = result_ft209.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_948 = false;&#xA;&#x9;while( !idLoopCond_948 ) {&#xA;&#x9;idLoopCond_948 = it_ft208.isOff();&#xA;&#x9;if ( idLoopCond_948 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp208 = it_ft208.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.kunit.TestCase>asTypeOrVoid(testCaseClass._new());&#xA;&#xA;&#x9;testCase.setTestMethodName(o_lbdExp208.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).add(testCase);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/2/language/structure/Class"/>
          <eParameters name="anAspect" eType="#/2/language/structure/ClassDefinition"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="tests" upperBound="-1"
            eType="#/2/kunit/Test">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * The collection of tests which will be ran as the suite&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestCase" abstract="true" eSuperTypes="#/2/kunit/Test #/2/kunit/Fallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * A test case comprises one or more test methods plus&#xA; * setUp and tearDown that build and destroy their test harness.&#xA; * An instance of a subclass of TestCase should have its&#xA; * testMethodName set to the name of one of its operations&#xA; * which should be called whe the test is run. You can do this&#xA; * yourself:&#xA; *&#xA; * var testCase : TestCase init MyTestCaseClass.new.setTestMethodName(&quot;testSomething&quot;)&#xA; *&#xA; * Alternatively if your TestCase Class has many methods whose&#xA; * name begins with 'test' you can create a set of instaces already&#xA; * set up with their testMethodName using the addAllTestCasesFrom&#xA; * operation on TestSuite&#xA; */"/>
        </eAnnotations>
        <eOperations name="setUp">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the things to be done before execution of the test method&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="raiseIfHasFailures">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * operation used when the TestCase is run from a java test runner, encapsulates the failures results&#xA;&#x9; * into an AssertionFailedError so the TestRunner can detect it&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.String msg = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_952 = false;&#xA;&#x9;idIfCond_952 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).empty());&#xA;&#xA;&#x9;if( idIfCond_952 ) {&#xA;&#xA;&#x9;msg = &quot;Failures: &quot;;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Failure> it_ft210 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_953 = false;&#xA;&#x9;while( !idLoopCond_953 ) {&#xA;&#x9;idLoopCond_953 = it_ft210.isOff();&#xA;&#x9;if ( idLoopCond_953 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Failure f_lbdExp210 = it_ft210.next();&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f_lbdExp210.toString());&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_954 = false;&#xA;&#x9;idIfCond_954 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_954 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft211 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_955 = false;&#xA;&#x9;while( !idLoopCond_955 ) {&#xA;&#x9;idLoopCond_955 = it_ft211.isOff();&#xA;&#x9;if ( idLoopCond_955 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Error f_lbdExp211 = it_ft211.next();&#xA;&#xA;&#x9;msg = &quot;Errors: &quot;;&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f_lbdExp211.toString());&#xA;&#xA;&#x9;kermeta.exceptions.Exception exception = ((kermeta.exceptions.Exception) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getException()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getLogEMF_renameAs" eType="#/2/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * accessor on the log&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getLogEMF_renameAs"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Fallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setTestMethodName" eType="#/2/kunit/TestCase">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Sets the name of the method from the concrete subclass of&#xA;&#x9; *  TestCase that should be executed when this TestCase instance&#xA;&#x9; * is run as a test.&#xA;&#x9; * Throws invalidTestCaseNameException if the given string is not&#xA;&#x9; * the name of a method in the test case&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestCase result = null;&#xA;&#xA;&#x9;this.set__testMethodName(name);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="name" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="getTestMethodName" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * accessor on the method name&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.get__testMethodName();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * overwrites the default method for more informative output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getterName(), &quot;.&quot;), this.getTestMethodName()), &quot;()&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Execute the whole test case : SetUp, test method, TearDown&#xA;&#x9; * The assertions of the test method are computed&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.getLogEMF_renameAs().newAttempt();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;this.setUp();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;kermeta.interpreter.DynamicExpression de = ((kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.interpreter.InterpreterPackage.eINSTANCE.getDynamicExpression()));&#xA;&#xA;&#x9;de.initializeDefaults();&#xA;&#xA;&#x9;de.setSelfClass((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(this).getTypeDefinition()));&#xA;&#xA;&#x9;de.parse(kermeta.standard.helper.StringWrapper.plus(&quot;self.&quot;, this.getTestMethodName()));&#xA;&#xA;&#x9;de.execute(this, ((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable())));&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;this.tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_1 ) {&#xA;boolean caught_1 = false;&#xA;if( ex_switcher_1.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_1 = true;&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_1.getRealException();&#xA;this.getLogEMF_renameAs().addTearDownError(this, e);&#xA;}&#xA;if( !caught_1 ) { throw ex_switcher_1; }&#xA;&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_2 ) {&#xA;boolean caught_2 = false;&#xA;if( ex_switcher_2.getRealException() instanceof kermeta.kunit.AssertionFailedError ) {&#xA;caught_2 = true;&#xA;kermeta.kunit.AssertionFailedError afe = (kermeta.kunit.AssertionFailedError) ex_switcher_2.getRealException();&#xA;this.getLogEMF_renameAs().addFailure(this, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(afe.getMessage(), &quot;\nstack trace:\n&quot;), afe.getStackTrace()));&#xA;}if( ex_switcher_2.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_2 = true;&#xA;kermeta.exceptions.Exception e1 = (kermeta.exceptions.Exception) ex_switcher_2.getRealException();&#xA;this.getLogEMF_renameAs().addTestError(this, e1);{&#xA;try {&#xA;&#x9;this.tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_3 ) {&#xA;boolean caught_3 = false;&#xA;if( ex_switcher_3.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_3 = true;&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_3.getRealException();&#xA;this.getLogEMF_renameAs().addTearDownError(this, e);&#xA;}&#xA;if( !caught_3 ) { throw ex_switcher_3; }&#xA;&#xA;}&#xA;}&#xA;}&#xA;if( !caught_2 ) { throw ex_switcher_2; }&#xA;&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_4 ) {&#xA;boolean caught_4 = false;&#xA;if( ex_switcher_4.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;caught_4 = true;&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_4.getRealException();&#xA;this.getLogEMF_renameAs().addSetUpError(this, e);&#xA;}&#xA;if( !caught_4 ) { throw ex_switcher_4; }&#xA;&#xA;}&#xA;}&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="tearDown">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the things to be done after execution of the test method&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="__testMethodName" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the name of the method which corresponds to the test case in the test class&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestRunner" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Create and use a test runner to run one or more tests and print the failure log. E.g.:&#xA; * do&#xA; *&#x9;     var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xA; *&#x9;     var runner : TestRunner init TestRunner.new&#xA; *&#x9;     runner.run(suite)&#xA; *&#x9;     runner.printLogs&#xA; * end&#xA; *&#xA; * Where InterestingTestCaseSet is a subclass of TestCase and contains several test... methods&#xA; */"/>
        </eAnnotations>
        <eOperations name="runTest">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Use this to run a test case or a test suite.&#xA;&#x9; * If you want to run all the test.... methods in a TestCase class,&#xA;&#x9; *  you can populate a suite with TestSuite.addAllTestCasesFrom&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__7245204__testNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test, null);&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;this.setLog(((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getLog())));&#xA;&#xA;&#x9;test.setLogKermeta(this.getLog());&#xA;&#xA;&#x9;test.run();&#xA;&#xA;//PostConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;post__7245210__logNotVoid&quot; ) ) {&#xA;java.lang.Boolean result_post = false;&#xA;&#xA;&#x9;result_post = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(this.getLog(), null);&#xA;if( !result_post ) {&#xA;kermeta.exceptions.ConstraintViolatedPost exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPost();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}"/>
          </eAnnotations>
          <eParameters name="test" eType="#/2/kunit/Test"/>
        </eOperations>
        <eOperations name="printTestResult" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Prints the log or errors and failures from a test run.&#xA;&#x9; * Run some tests first.&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\n---------------------------------------------  TEST RESULTS-----------------------------------------------\n&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_956 = false;&#xA;&#x9;idIfCond_956 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).empty());&#xA;&#xA;&#x9;if( idIfCond_956 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nFailures: &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Failure> it_ft212 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_957 = false;&#xA;&#x9;while( !idLoopCond_957 ) {&#xA;&#x9;idLoopCond_957 = it_ft212.isOff();&#xA;&#x9;if ( idLoopCond_957 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Failure f_lbdExp212 = it_ft212.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, f_lbdExp212.toString()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_958 = false;&#xA;&#x9;idIfCond_958 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_958 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nErrors: &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft213 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_959 = false;&#xA;&#x9;while( !idLoopCond_959 ) {&#xA;&#x9;idLoopCond_959 = it_ft213.isOff();&#xA;&#x9;if ( idLoopCond_959 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Error e_lbdExp213 = it_ft213.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e_lbdExp213.toString()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_960 = false;&#xA;&#x9;idIfCond_960 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_960 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nErrors from setUp or tearDown : &quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft214 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_961 = false;&#xA;&#x9;while( !idLoopCond_961 ) {&#xA;&#x9;idLoopCond_961 = it_ft214.isOff();&#xA;&#x9;if ( idLoopCond_961 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.kunit.Error e_lbdExp214 = it_ft214.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e_lbdExp214.toString()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\n Summary: &quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of launched tests : &quot;, kermeta.standard.helper.IntegerWrapper.toString(this.getLog().getRuntests())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of failures : &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors : &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors in setUp or tearDown: &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\n-------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * For backwards compatibility with old kunit, this takes a test case class&#xA;&#x9;  * and creates the necessary suite, and runs it. DEPRECATED&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="cIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;//PreConditions Checking&#xA;{&#xA;if( org.kermeta.compil.runtime.ExecutionContext.getInstance().mustBeChecked( &quot;pre__7245415__cIsATestCase&quot; ) ) {&#xA;java.lang.Boolean result_pre = false;&#xA;&#xA;&#x9;result_pre = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsOrderedSet(testCaseClass.getterSuperClass()).contains(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;if( !result_pre ) {&#xA;kermeta.exceptions.ConstraintViolatedPre exp = kermeta.exceptions.ExceptionsFactory.eINSTANCE.createConstraintViolatedPre();&#xA;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError(exp);&#xA;}&#xA;}&#xA;}&#xA;&#x9;this.runTest(((kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getTestSuite())).addAllTestCasesFrom(testCaseClass));&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/2/language/structure/Class"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#/2/kunit/Log"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Where to register the failures and errors&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractFallible" abstract="true"
          eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * to be written ############################&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="distil" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; ** reduces all runs of white-space to a single space character&#xA;&#x9; **/"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean white = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_962 = false;&#xA;&#x9;while( !idLoopCond_962 ) {&#xA;&#x9;idLoopCond_962 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.StringWrapper.size(s));&#xA;&#x9;if ( idLoopCond_962 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.String c = kermeta.standard.helper.CharacterWrapper.toString(kermeta.standard.helper.StringWrapper.elementAt(s, i));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_963 = false;&#xA;&#x9;idIfCond_963 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.indexOf(&quot; \n\t&quot;, c), 0);&#xA;&#xA;&#x9;if( idIfCond_963 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_964 = false;&#xA;&#x9;idIfCond_964 = kermeta.standard.helper.BooleanWrapper.not(white);&#xA;&#xA;&#x9;if( idIfCond_964 ) {&#xA;&#xA;&#x9;white = true;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; &quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, c);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_965 = false;&#xA;&#x9;idIfCond_965 = white;&#xA;&#xA;&#x9;if( idIfCond_965 ) {&#xA;&#xA;&#x9;white = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="s" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * process the given condition and react with the given message&#xA;     * if it is satisfied&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** to be used if a failure reaction is needed */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the two given string and react if they are not equal */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="expected" eType="#/2/standard/JavaString"/>
          <eParameters name="actual" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * process the given condition and react with the given message&#xA;     * if it is not satisfied&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertSimilar">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;   * Log a failure if the two strings are not identical modulo-white-space&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;expected = this.distil(expected);&#xA;&#xA;&#x9;actual = this.distil(actual);&#xA;&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual  \t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/2/standard/JavaString"/>
          <eParameters name="actual" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * process the given condition and react with the given message&#xA;     * if it is not satisfied&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AssertionFailedError" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** AssertionViolatedException are raised when assertions are violated */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Assert" eSuperTypes="#/2/kunit/AbstractFallible">
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_966 = false;&#xA;&#x9;idIfCond_966 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_966 ) {&#xA;&#xA;&#x9;this.fail(&quot;assertTrue failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_967 = false;&#xA;&#x9;idIfCond_967 = condition;&#xA;&#xA;&#x9;if( idIfCond_967 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** raise a AssertionViolatedException with the provided message */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.kunit.KunitPackage.eINSTANCE.getAssertionFailedError()));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Will fail if the two strings are not identical */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_968 = false;&#xA;&#x9;idIfCond_968 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.equals(expected, actual));&#xA;&#xA;&#x9;if( idIfCond_968 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertEqual failed\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/2/standard/JavaString"/>
          <eParameters name="actual" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_969 = false;&#xA;&#x9;idIfCond_969 = condition;&#xA;&#xA;&#x9;if( idIfCond_969 ) {&#xA;&#xA;&#x9;this.fail(&quot;assertTrue number failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_970 = false;&#xA;&#x9;idIfCond_970 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_970 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Fails if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_971 = false;&#xA;&#x9;idIfCond_971 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_971 ) {&#xA;&#xA;&#x9;this.fail(&quot;assert failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_972 = false;&#xA;&#x9;idIfCond_972 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_972 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/2/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/2/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="persistence" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/persistence/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/persistence"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains the classes that handle the serialization of models, in particular&#xA; * EMF models.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/persistence_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * The main class that handle a loaded/saved model.&#xA; * There are a few important things to note for the developer :&#xA; * &#xA; * - load a Resource : this loads a Collection of instances corresponding to the&#xA; *   objects in the loaded model. If the Collection of instances is empty, than &#xA; *&#x9; a ResourceLoadException is raised&#xA; *&#xA; * - save a Resource : this saves the collection of instances in a new file. This can&#xA; *   be correctly done if and only if the instances saved are conform to the metamodel&#xA; *   linked to this resource (this link does not need to be explicit. It is normally retrieved&#xA; *   through the EMF model -- see Java wrapping &quot;Resource.java&quot;).&#xA; * &#xA; * - add/remove an instance to the Resource : this adds an element in the resource. It cannot&#xA; *   be &quot;simply&quot; added because of the following potential errors :&#xA; *&#xA; *   - The object added is not conform to the metamodel -> Error&#xA; *   - The object was already added in the resource -> Not a real error : we do nothing&#xA; *   - The object to remove does not exist -> redirect to a collection-specific error&#xA; *   - The object to remove is attached to an object in the collection -> &quot;dependency-violation&quot; exception?&#xA;&#xA; */"/>
        </eAnnotations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Save a Resource in the file specified by the current value of uri &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Save a Resource in a file referenced by the new uri.&#xA;&#x9; * note: this doesn't change the URI of the resource, it is only saved in another place &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Search for elements referenced by one element contained by this resource that are not contained by this repository&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xA;&#x9; * checks only objects directly referenced by the element in this resource, ignores indirectly referenced objects&#xA;&#x9; * example of use :&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xA;&#x9; *&#x9;report := resource.findDanglingModelElements()&#xA;&#x9; *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft216 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(this.getterContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_974 = false;&#xA;&#x9;while( !idLoopCond_974 ) {&#xA;&#x9;idLoopCond_974 = it_ft216.isOff();&#xA;&#x9;if ( idLoopCond_974 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object containedObj_lbdExp216 = it_ft216.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(containedObj_lbdExp216).getTypeDefinition());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_975 = false;&#xA;&#x9;idIfCond_975 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(classDef));&#xA;&#xA;&#x9;if( idIfCond_975 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft217 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDef.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_976 = false;&#xA;&#x9;while( !idLoopCond_976 ) {&#xA;&#x9;idLoopCond_976 = it_ft217.isOff();&#xA;&#x9;if ( idLoopCond_976 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp217 = it_ft217.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_977 = false;&#xA;&#x9;idIfCond_977 = kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp217.getIsDerived());&#xA;&#xA;&#x9;if( idIfCond_977 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_978 = false;&#xA;&#x9;idIfCond_978 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop_lbdExp217.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop_lbdExp217.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( idIfCond_978 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;kermeta.language.structure.Object>>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp216, prop_lbdExp217));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_979 = false;&#xA;&#x9;idIfCond_979 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObjs));&#xA;&#xA;&#x9;if( idIfCond_979 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft218 = referencedObjs.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_980 = false;&#xA;&#x9;while( !idLoopCond_980 ) {&#xA;&#x9;idLoopCond_980 = it_ft218.isOff();&#xA;&#x9;if ( idLoopCond_980 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object referencedObj_lbdExp218 = it_ft218.next();&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft219 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft219 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft219 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_982 = false;&#xA;&#x9;while( !idLoopCond_982 ) {&#xA;&#x9;idLoopCond_982 = kermeta.standard.helper.BooleanWrapper.or(it_ft219.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft219, false));&#xA;&#x9;if ( idLoopCond_982 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft219 = null;&#xA;//BIle:func&#xA;kermeta.persistence.Resource res2_lbdExp219 = it_ft219.next();&#xA;&#xA;&#x9;result_lambda_ft219 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2_lbdExp219.getterContents()).contains(referencedObj_lbdExp218);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft219 = kermeta.standard.helper.BooleanWrapper.or(test_ft219, result_lambda_ft219);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft219 = test_ft219;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_981 = false;&#xA;&#x9;idIfCond_981 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft219), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp218, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp218, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp218, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_981 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj_lbdExp218);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp216);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp217);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp216, prop_lbdExp217);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_983 = false;&#xA;&#x9;idIfCond_983 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObj));&#xA;&#xA;&#x9;if( idIfCond_983 ) {&#xA;&#xA;&#x9;//BIft:exists&#xA;&#xA;java.lang.Boolean result_ft220 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft220 = false;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft220 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_985 = false;&#xA;&#x9;while( !idLoopCond_985 ) {&#xA;&#x9;idLoopCond_985 = kermeta.standard.helper.BooleanWrapper.or(it_ft220.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(test_ft220, false));&#xA;&#x9;if ( idLoopCond_985 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda_ft220 = null;&#xA;//BIle:func&#xA;kermeta.persistence.Resource res2_lbdExp220 = it_ft220.next();&#xA;&#xA;&#x9;result_lambda_ft220 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2_lbdExp220.getterContents()).contains(referencedObj);&#xA;//EIle:func&#xA;&#xA;&#x9;test_ft220 = kermeta.standard.helper.BooleanWrapper.or(test_ft220, result_lambda_ft220);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;result_ft220 = test_ft220;&#xA;//EIft:exists&#xA;java.lang.Boolean idIfCond_984 = false;&#xA;&#x9;idIfCond_984 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft220), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_984 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp216);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp217);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eClassifier="#/2/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Loads the Resource, thus making content of the Resource browsable.&#xA;&#x9; * Raises a ResourceLoadException in case loaded Resource is empty&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="instances" eType="#/2/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * The entities contained in the model-instance, that are provided when user loads a resource &#xA;&#x9; * instances == rootContents&#xA;&#x9; * this is a loop on Resource itself in order to get backward compatibility&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="deprecated" value="user should use the resource directly since this is a collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="normalizedUri" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return a normalized version of the Uri of this resource&#xA;&#x9; * in order to prevent several loading of the same file because they have diffent path that leads to them, kermeta uses normalizedURI&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xA;&#x9; * to check how a given uri is normalized by kermeta&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.String>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.normalizeUri(uri));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterDependentResources" ordered="false" upperBound="-1"
            eType="#/2/persistence/Resource">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.Resource> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Set&lt;kermeta.persistence.Resource>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Set&lt;kermeta.persistence.Resource>>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.ResourceUtil.getDependentResources(this, uri, metaModelURI, &quot;EMF&quot;));&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getterContents" ordered="false" upperBound="-1" eType="#/2/language/structure/Object">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;res.addAll(this);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> coll = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft215 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_973 = false;&#xA;&#x9;while( !idLoopCond_973 ) {&#xA;&#x9;idLoopCond_973 = it_ft215.isOff();&#xA;&#x9;if ( idLoopCond_973 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object e_lbdExp215 = it_ft215.next();&#xA;&#xA;&#x9;coll = (kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Set&lt;kermeta.language.structure.Object>>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getAllContainedObjects(e_lbdExp215));&#xA;&#xA;&#x9;res.addAll(coll);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="repository" eType="#/2/persistence/Repository"
            eOpposite="#/2/persistence/Repository/resources">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Repository used to create the Resource&#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xA;&#x9; * one Resource of a given Repository&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="metaModelURI" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Uri of the meta-model of the Resource to load&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/2/standard/JavaBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Indicates weither this resource will be updated when saving the repository&#xA;&#x9; * This is useful if the repository contains some metamodels that should not be saved.&#xA;&#x9; *&#xA;&#x9; * Note that in the current version, it doesn't ensure that you have not modified its content (using the freeze)&#xA;&#x9; * If you modify the elements of such resource, other resource that depend on it will be incorrectly saved &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Uri of the Resource to load&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eGenericSuperTypes eClassifier="#/2/standard/Set">
          <eTypeArguments eClassifier="#/2/language/structure/Object"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFResource" eSuperTypes="#/2/persistence/Resource">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Extension of the Resource class definition that is specific to EMF Repository.&#xA; * User is not supposed to directly create it. Otherwise it will not be correctly initialized&#xA; * You must To create one &#xA; */"/>
        </eAnnotations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Set&lt;Object>.remove(Object)&#xA;&#x9; * Remove the instance from the Resource&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_986 = false;&#xA;&#x9;idIfCond_986 = this.contains(instance);&#xA;&#xA;&#x9;if( idIfCond_986 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unSetContainingResource(instance);&#xA;&#xA;&#x9;kermeta.standard.helper.SetSuper.super_remove(this, instance);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/2/language/structure/Object"/>
        </eOperations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Resource.save()&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_987 = false;&#xA;&#x9;idIfCond_987 = this.getIsReadOnly();&#xA;&#xA;&#x9;if( idIfCond_987 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceSaveException e = ((kermeta.exceptions.ResourceSaveException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getResourceSaveException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot save a readonly resource. Probably this resource was indirectly loaded when loading another resource. \n&quot;, &quot;If you really intend to save this resource, you can set isReadOnly to false, but you must ensure to do so before any resource save.\n&quot;), &quot;Note : setting isReadOnly to false on the metamodel may lead to unpredictable results&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(this, getUri(), getMetaModelURI());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Resource.saveWithNewURI(String)&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(this, new_uri, getMetaModelURI());&#xA;"/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="saveAndValidateWithEMF" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Checks the Resource using the EMF validation function, and saves it if&#xA;&#x9; * validation succeeds&#xA;&#x9; * Applies validation to all root objects of the Resource&#xA;&#x9; * Returns true if the validation reports no error, raises exceptions otherwise&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.ResourceUtil.save(this, this.uri, metaModelURI, &quot;EMF&quot;, this, true));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Resource.load()&#xA;&#x9; * In case the metamodelURI was not previously set, metamodelURI is filled with&#xA;&#x9; * the nsuri of the root package of the metamodel used to load the Resource after&#xA;&#x9; * a successful load&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.clear();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Loader.load(this, getUri(), getMetaModelURI());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_988 = false;&#xA;&#x9;idIfCond_988 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_988 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;Resource load failed!&quot;);&#xA;&#xA;&#x9;kermeta.exceptions.ResourceLoadException e = ((kermeta.exceptions.ResourceLoadException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getResourceLoadException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Resource load failed, no object was created in this resource from &quot;, this.getUri()));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Set&lt;Object>.add(Object)&#xA;&#x9; * Add an instance to the Resource &#xA;&#x9; * Ensures that the instance is referenced by a one and only one Resource of the same Repository&#xA;&#x9; * Ensures that the instance does not appear more than once in the Resource&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//BIft:select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.persistence.Resource> result_ft222 = null;&#xA;&#xA;&#x9;kermeta.persistence.Resource elem_ft222 = null;&#xA;&#xA;&#x9;result_ft222 = ((kermeta.standard.Sequence&lt;kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft222 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_990 = false;&#xA;&#x9;while( !idLoopCond_990 ) {&#xA;&#x9;idLoopCond_990 = it_ft222.isOff();&#xA;&#x9;if ( idLoopCond_990 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft222 = it_ft222.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_991 = false;&#xA;//BIle:selector&#xA;kermeta.persistence.Resource r_lbdExp222 = elem_ft222;&#xA;&#xA;&#x9;idIfCond_991 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(r_lbdExp222, this), r_lbdExp222.contains(instance));&#xA;//EIle:selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_991 ) {&#xA;&#xA;&#x9;result_ft222.add(elem_ft222);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:select&#xA;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft221 = result_ft222.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_989 = false;&#xA;&#x9;while( !idLoopCond_989 ) {&#xA;&#x9;idLoopCond_989 = it_ft221.isOff();&#xA;&#x9;if ( idLoopCond_989 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.persistence.Resource r_lbdExp221 = it_ft221.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;DVK ! another resource of the same repository was containing this element&quot;);&#xA;&#xA;&#x9;r_lbdExp221.remove(instance);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.setContainingResource(instance, this);&#xA;&#xA;&#x9;kermeta.standard.helper.SetSuper.super_add(this, instance);&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/2/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Repository" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Abstract resource container, that contains a list of available loaded resources, &#xA; * and methods to create or get a resource given an URI.&#xA; * A repository cannot contain 2 resources which points to the same file (ie. that have the same normalizedURI)&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/2/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Creates a new Resource with given uri, and an optional mm_uri&#xA;&#x9; * mm_uri is required when creating a new model from scratch.&#xA;&#x9; * Raises a ResourceCreate exception in case the Repository already&#xA;&#x9; * contains a Resource with the given uri&#xA;&#x9; * If uri does not points to an existing model file (in the case of&#xA;&#x9; * a model creation), calls to load() operation will fail as long as&#xA;&#x9; * the model has not been saved once&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.persistence.Resource result = null;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/2/standard/JavaString"/>
          <eParameters name="mm_uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="normalizeUri" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return a normalized version of the Uri &#xA;&#x9; * in order to prevent several loading of the same file because they have different path that leads to them, kermeta uses normalizedURI&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xA;&#x9; * to check how a given uri is normalized by kermeta &#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.String>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.normalizeUri(uri));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Search for elements referenced by one element contained by this repository  that are not contained by this repository&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xA;&#x9; * example of use :&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xA;     *&#x9;report := repository.findDanglingModelElements()&#xA;     *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSet()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> fullResContents = null;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft223 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_992 = false;&#xA;&#x9;while( !idLoopCond_992 ) {&#xA;&#x9;idLoopCond_992 = it_ft223.isOff();&#xA;&#x9;if ( idLoopCond_992 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.persistence.Resource res_lbdExp223 = it_ft223.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_993 = false;&#xA;&#x9;idIfCond_993 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(fullResContents);&#xA;&#xA;&#x9;if( idIfCond_993 ) {&#xA;&#xA;&#x9;fullResContents = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res_lbdExp223.getterContents());&#xA;}&#xA; else {&#xA;&#xA;&#x9;fullResContents.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res_lbdExp223.getterContents()));&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft224 = fullResContents.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_994 = false;&#xA;&#x9;while( !idLoopCond_994 ) {&#xA;&#x9;idLoopCond_994 = it_ft224.isOff();&#xA;&#x9;if ( idLoopCond_994 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object containedObj_lbdExp224 = it_ft224.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClassSwitcher(containedObj_lbdExp224).getTypeDefinition());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_995 = false;&#xA;&#x9;idIfCond_995 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(classDef));&#xA;&#xA;&#x9;if( idIfCond_995 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft225 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDef.getterAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_996 = false;&#xA;&#x9;while( !idLoopCond_996 ) {&#xA;&#x9;idLoopCond_996 = it_ft225.isOff();&#xA;&#x9;if ( idLoopCond_996 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property prop_lbdExp225 = it_ft225.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_997 = false;&#xA;&#x9;idIfCond_997 = kermeta.standard.helper.BooleanWrapper.not(prop_lbdExp225.getIsDerived());&#xA;&#xA;&#x9;if( idIfCond_997 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_998 = false;&#xA;&#x9;idIfCond_998 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop_lbdExp225.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop_lbdExp225.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( idIfCond_998 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.standard.Collection&lt;kermeta.language.structure.Object>>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp224, prop_lbdExp225));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_999 = false;&#xA;&#x9;idIfCond_999 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObjs));&#xA;&#xA;&#x9;if( idIfCond_999 ) {&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft226 = referencedObjs.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1000 = false;&#xA;&#x9;while( !idLoopCond_1000 ) {&#xA;&#x9;idLoopCond_1000 = it_ft226.isOff();&#xA;&#x9;if ( idLoopCond_1000 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Object referencedObj_lbdExp226 = it_ft226.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1001 = false;&#xA;&#x9;idIfCond_1001 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(fullResContents.contains(referencedObj_lbdExp226)), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp226, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp226, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj_lbdExp226, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_1001 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj_lbdExp226);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp224);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp225);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = org.kermeta.compil.runtime.helper.language.ObjectUtil.getSwitcher(containedObj_lbdExp224, prop_lbdExp225);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1002 = false;&#xA;&#x9;idIfCond_1002 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(referencedObj));&#xA;&#xA;&#x9;if( idIfCond_1002 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1003 = false;&#xA;&#x9;idIfCond_1003 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(fullResContents.contains(referencedObj)), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOfSwitcher(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_1003 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.persistence.PersistencePackage.eINSTANCE.getDanglingDiagnostic()));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj_lbdExp224);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop_lbdExp225);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/standard/Set">
            <eTypeArguments eClassifier="#/2/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="getResource" eType="#/2/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Returns the Resource associated with the given uri if this uri is associated with&#xA;&#x9; * an already created Resource of the Repository.&#xA;&#x9; * If the Repository contains no Resource associated with the given uri, creates&#xA;&#x9; * a new Resource and loads it.&#xA;&#x9; * In order to prevent multiple load of the same file by using variant path to the same file, all URI used by this function are normalized&#xA;&#x9; * Raises a ResourceCreate exception if the given uri does not point to an existing&#xA;&#x9; * model file &#xA;&#x9; * May also raises loading exceptions if this is the first retrieval of the resource&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.initRepository(this);&#xA;&#xA;&#x9;java.lang.String normalisedUri = this.normalizeUri(uri);&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1004 = false;&#xA;&#x9;while( !idLoopCond_1004 ) {&#xA;&#x9;idLoopCond_1004 = it.isOff();&#xA;&#x9;if ( idLoopCond_1004 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;kermeta.persistence.Resource next = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1005 = false;&#xA;&#x9;idIfCond_1005 = kermeta.standard.helper.StringWrapper.equals(normalisedUri, next.normalizedUri());&#xA;&#xA;&#x9;if( idIfCond_1005 ) {&#xA;&#xA;&#x9;result = next;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1006 = false;&#xA;&#x9;idIfCond_1006 = result == null;&#xA;&#xA;&#x9;if( idIfCond_1006 ) {&#xA;&#xA;&#x9;result = this.createResource(uri, &quot;&quot;);&#xA;&#xA;&#x9;result.load();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="resources" ordered="false"
            upperBound="-1" eType="#/2/persistence/Resource" containment="true" eOpposite="#/2/persistence/Resource/repository">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Resources created by this Repository &#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xA;&#x9; * one Resource of a given Repository&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DanglingDiagnostic" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * class used to gather the information required to make a user friendly report about a dangling element&#xA; * (see. findDanglingModelElements())&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * user friendly message build with those informations&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getDanglingElement()), &quot; referenced by &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toStringSwitcher(this.getReferencingElement())), &quot;.&quot;), this.getReferencingProperty().getName()), &quot; is dangling&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingElement"
            eType="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Element that has a reference to the dangling element  &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="danglingElement" eType="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Element that is not contained by a resource in the repository  &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingProperty"
            eType="#/2/language/structure/Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Property used to reference the dangling element  &#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFRepository" eSuperTypes="#/2/persistence/Repository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Repository that stores and manages resources that come from EMF&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/2/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Overrides Repository.createResource(String, String)&#xA;&#x9; * Create a new resource for a model given by its uri, &#xA;&#x9; * which meta-model is stored in file given by mm_uri&#xA;&#x9; * If file already exists, you'll be able to call the load method to concretly load the model&#xA;&#x9; * otherwise, you can only call the save method&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Repository"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;//BIft:collect&#xA;&#xA;kermeta.standard.Sequence&lt;java.lang.String> result_ft227 = null;&#xA;&#xA;&#x9;result_ft227 = ((kermeta.standard.Sequence&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft227 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1008 = false;&#xA;&#x9;while( !idLoopCond_1008 ) {&#xA;&#x9;idLoopCond_1008 = it_ft227.isOff();&#xA;&#x9;if ( idLoopCond_1008 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.String result_lambda_ft227 = null;&#xA;//BIle:collector&#xA;kermeta.persistence.Resource r_lbdExp227 = it_ft227.next();&#xA;&#xA;&#x9;result_lambda_ft227 = r_lbdExp227.getUri();&#xA;//EIle:collector&#xA;&#xA;&#x9;result_ft227.add(result_lambda_ft227);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:collect&#xA;java.lang.Boolean idIfCond_1007 = false;&#xA;&#x9;idIfCond_1007 = kermeta.standard.helper.BooleanWrapper.not(result_ft227.contains(uri));&#xA;&#xA;&#x9;if( idIfCond_1007 ) {&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.persistence.Resource>asTypeOrVoid(org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.createResource(this, uri, mm_uri));&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceCreateException e = ((kermeta.exceptions.ResourceCreateException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getResourceCreateException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Trying to create a resource already existing at &quot;, uri), &quot;.\n&quot;), &quot;Remove existing resource from repository first, or use \&quot;getResource\&quot; operation.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/2/standard/JavaString"/>
          <eParameters name="mm_uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="registerEcoreFile">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9;  * Register the content of the given ecore file into EMF registry&#xA;&#x9;  * Once registered, EMF will be able to load and save models conformant to this ecore file&#xA;&#x9;  * Warning: if the NSURI you wish to register is already, registered (either statically or due to a previous call)&#xA;&#x9;  *  it will do nothing. Ie. modification in the ecore file will not be taken into account unless you manually unregister it.&#x9;    &#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.registerEcoreFile(mm_uri);&#xA;"/>
          </eAnnotations>
          <eParameters name="mm_uri" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrorUnknownMetaclass"
            eType="#/2/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * When loading the Resources, &#xA;&#x9; * if there are some errors due to an unknown metaclass while loading some objects, the loader try to ignore them&#xA;&#x9; * by default, not setting this attribute is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="useInterpreterInternalResources"
            eType="#/2/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xA;&#x9; * If true, tells to the save of the resources that they should also integrate the resources from Kermeta interpreter itself&#xA;&#x9; * this is useful for example to make a dependency to framework.km&#xA;&#x9; * by default, not setting this is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreAllLoadErrors"
            eType="#/2/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * When loading the Resources, &#xA;&#x9; * if there are some errors while loading some objects, the loader can try to ignore them&#xA;&#x9; * setting this attribute to true is equivalent to setting ignoreLoadErrorUnknownMetaclass and ignoreLoadErrorUnknownProperty to true&#xA;&#x9; * by default, not setting this attribute is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrorUnknownProperty"
            eType="#/2/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * When loading the Resources, &#xA;&#x9; * if there are some errors due to an unknown property while loading some objects (ie. the metaclass is known but it cannot retreive&#xA;&#x9; * the given reference or attribute in the ClassDefinition, the loader try to ignore them&#xA;&#x9; * by default, not setting this attribute is considered as false.&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="interpreter" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/interpreter/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/interpreter"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains a set of classes whose function is to evaluate a kermeta &#xA; * expression written as a string.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/interpreter_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpression" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * DynamicExpression is a class used to make dynamic calls, i.e dynamic evaluation&#xA; * of Kermeta statements represented in a string.&#xA; * &#xA; * An example :&#xA; *   var de : DynamicExpression init DynamicExpression.new&#xA; *   de.initializeDefaults&#xA; *   de.formalParameters.put(&quot;a&quot;, String)&#xA; *   de.parse(&quot;stdio.writeln(a)&quot;) // note: to execute a list of statements, you have to surround them with do..end&#xA; *   var params : Hashtable&lt;String, Object> init Hashtable&lt;String, Object>.new&#xA; *   params.put(&quot;a&quot;, &quot;hello world!&quot;)&#xA; *   de.execute(void, params)&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/dynamic_expression_view.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="execute" eType="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * Execute the expression in the given context&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1009 = false;&#xA;&#x9;idIfCond_1009 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getExpression(), null);&#xA;&#xA;&#x9;if( idIfCond_1009 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression is void&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1010 = false;&#xA;&#x9;idIfCond_1010 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_1010 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.DynamicExpressionUtil.execute(this, selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="selfObj" eType="#/2/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/2/utils/Hashtable">
              <eTypeArguments eClassifier="#/2/standard/JavaString"/>
              <eTypeArguments eClassifier="#/2/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="initializeDefaults" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Initializes the formalParameters with an empty set of parameters&#xA;&#x9; * and the self type with void&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setFormalParameters(((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.utils.UtilsPackage.eINSTANCE.getHashtable())));&#xA;&#xA;&#x9;this.setSelfClass((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;kermeta.language.structure.ClassDefinition>asTypeOrVoid(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Object&quot;).getTypeDefinition()));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="parse" eType="#/2/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Parse the expression as a string&#xA;&#x9; * and updates the expression field and errors&#xA;&#x9; * Returns true if the expression was parsed sucessfuly&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).clear();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1011 = false;&#xA;&#x9;idIfCond_1011 = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getFormalParameters(), null), org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getSelfClass(), null));&#xA;&#xA;&#x9;if( idIfCond_1011 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;parse precondition - formalParameters or selfType is void&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.language.DynamicExpressionUtil.parse(this, expression));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1012 = false;&#xA;&#x9;idIfCond_1012 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_1012 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;parse result - expression contains errors&quot;);&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.interpreter.KermetaError> it_ft228 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1013 = false;&#xA;&#x9;while( !idLoopCond_1013 ) {&#xA;&#x9;idLoopCond_1013 = it_ft228.isOff();&#xA;&#x9;if ( idLoopCond_1013 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.interpreter.KermetaError error_lbdExp228 = it_ft228.next();&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.append(e.getMessage(), kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, error_lbdExp228.getMessage()));&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="expression" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="evalString" eType="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * Execute the expression given as a string.&#xA;     * the self type and formal parameters are supposed to be set&#xA;     * before calling this operation&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1014 = false;&#xA;&#x9;idIfCond_1014 = kermeta.standard.helper.BooleanWrapper.not(this.parse(body));&#xA;&#xA;&#x9;if( idIfCond_1014 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getDynamicExpressionException()));&#xA;&#xA;&#x9;e.setMessage(&quot;evalString - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.execute(selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="body" eType="#/2/standard/JavaString"/>
          <eParameters name="selfObj" eType="#/2/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/2/utils/Hashtable">
              <eTypeArguments eClassifier="#/2/standard/JavaString"/>
              <eTypeArguments eClassifier="#/2/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/2/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * the expression&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/2/interpreter/KermetaError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Parse errors and type errors&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Formal parameters of the expression (bindings between parameters' names and types)&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/2/utils/Hashtable">
            <eTypeArguments eClassifier="#/2/standard/JavaString"/>
            <eTypeArguments eClassifier="#/2/language/structure/Type"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selfClass" eType="#/2/language/structure/ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * The type of the self object&#xA;&#x9; * or void if the expression is not to be executed&#xA;&#x9; * in the context of an object&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KermetaError" abstract="true" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Kermeta language error in a code written in Kermeta&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Error message&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ParseError" eSuperTypes="#/2/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Kermeta error for parsing problems&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeError" eSuperTypes="#/2/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Type errors in a code written in Kermeta&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="io" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/io/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/io"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains standard input/output related classes. &#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; * Contains file input/output related classes. &#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StdIO" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * An implementation of StdIO : standard input/output&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writeln the object to standard output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_1015 = false;&#xA;&#x9;idIfCond_1015 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_1015 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="errorln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writeln the object to error output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_1016 = false;&#xA;&#x9;idIfCond_1016 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_1016 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.errorln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes the object to error output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_1017 = false;&#xA;&#x9;idIfCond_1017 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_1017 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.error(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="write">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes the object to standard output&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_1018 = false;&#xA;&#x9;idIfCond_1018 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_1018 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.write(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="read" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Reads a String from standard input&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1019 = false;&#xA;&#x9;idIfCond_1019 = kermeta.standard.helper.StringWrapper.equals(prompt, null);&#xA;&#xA;&#x9;if( idIfCond_1019 ) {&#xA;&#xA;&#x9;prompt = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.String>asTypeOrVoid(org.kermeta.compil.runtime.helper.io.StdIOUtil.read(prompt));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="prompt" eType="#/2/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileIO" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Implementation of simple helpers to read ans write text files&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeTextFile">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Writes a String in a text file&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_1020 = false;&#xA;&#x9;idIfCond_1020 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_1020 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.writeTextFile(filename, text);&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="#/2/standard/JavaString"/>
          <eParameters name="text" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="readTextFile" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Reads a text file&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1021 = false;&#xA;&#x9;idIfCond_1021 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_1021 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException())) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean exists = null;&#xA;&#xA;&#x9;java.lang.Boolean isdirectory = null;&#xA;&#xA;&#x9;exists = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.fileExists(filename));&#xA;&#xA;&#x9;isdirectory = (java.lang.Boolean) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.Boolean>asTypeOrVoid(org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.fileIsDirectory(filename));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1022 = false;&#xA;&#x9;idIfCond_1022 = kermeta.standard.helper.BooleanWrapper.not(exists);&#xA;&#xA;&#x9;if( idIfCond_1022 ) {&#xA;&#xA;&#x9;kermeta.exceptions.FileNotFoundException e = ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException()));&#xA;&#xA;&#x9;e.setMessage(filename);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1023 = false;&#xA;&#x9;idIfCond_1023 = isdirectory;&#xA;&#xA;&#x9;if( idIfCond_1023 ) {&#xA;&#xA;&#x9;kermeta.exceptions.FileNotFoundException e = ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.exceptions.ExceptionsPackage.eINSTANCE.getFileNotFoundException()));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(filename, &quot; is not a file&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.ExecutionContext.getInstance().&lt;java.lang.String>asTypeOrVoid(org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.readTextFile(filename));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="#/2/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="exceptions" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/exceptions/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/exceptions"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains the definition of a Kermeta exception and a few basic exceptions.&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/exceptions_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Exception" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Generic exceptions&#xA; * The main class from which all the exception inherit&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The message attached to the exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedException" eType="#/2/exceptions/Exception"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Any nested exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stackTrace" eType="#/2/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;     * The stack trace as a String&#xA;     * Filled by the interpreted when the exception is raised&#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RuntimeError" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Exception for interpreter exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/2/language/behavior/Expression"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The code that raised the exception */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CallOnVoidTarget" eSuperTypes="#/2/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when a feature is called on void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeCastError" eSuperTypes="#/2/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Occurs when a cast (Object::asType operation) fails&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotImplementedException" eSuperTypes="#/2/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Use this exception when you want to forbid the access to an unimplemented operation &#xA; * and invite to implement it&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UpperBoundReachedError" eSuperTypes="#/2/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xA; * Use this exception when user tries to add an element to a property which type is collection&#xA; * which has an upper bound != -1 ( ie *)&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractClassInstantiationError"
          eSuperTypes="#/2/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Creation on an abstract class. Usually this is detected by the type-checker. The only&#xA; * case where this happens is when instantiating a type variable, whose bound type turns&#xA; * out to be abstract.&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IncompatibleTypeError" eSuperTypes="#/2/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Raised by the Object::set operation if the type of the &#xA; * Object to set has an incompatible type.&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DivisionByZero" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** well-known attempt to divide with a zero valued divider */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OverflowError" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the figure oversteps the capacity of the numeric variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="VoidOperandError" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** one of the required operands is void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringIndexOutOfBound" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the data overstep the size of the string variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringFormatException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * to be written #########################################&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IndexOutOfBound" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access out of bounds elements */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EmptyCollection" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access element on an empty collection */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IteratorIsOff" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Occurs when calling next() operation while iterator is already&#xA; * positioned on the last element of a collection&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IOException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** an interaction with the underlying system failed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileNotFoundException" eSuperTypes="#/2/exceptions/IOException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the file has not be found on the underlying system */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Common super class for all ConstraintVioloated exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constraintAppliedTo"
            eType="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Object on which the constraint was applied to&#xA;&#x9; * On Invariant, we can generally consider this object as the faulty Object&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failedConstraint" eType="#/2/language/structure/Constraint">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** constraint that has failed&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPre" eSuperTypes="#/2/exceptions/ConstraintViolatedException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The pre-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPost" eSuperTypes="#/2/exceptions/ConstraintViolatedException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The post-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedInv" eSuperTypes="#/2/exceptions/ConstraintViolatedException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** An invariant isn't satisfied on a given Object */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceLoadException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource loading fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceSaveException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails for some reasons */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failedWhileSaving"
            eType="#/2/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Object on which the the saved failed&#xA;&#x9; * One can rescue the exception and analyse the structure next to this object, &#xA;&#x9; * this can give some clue about the faulty structure&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceMixedLevelsException" eSuperTypes="#/2/exceptions/ResourceSaveException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails because an object refers to an element which &#xA; * belongs to the Definition of the currently running program */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceCreateException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to crate a Resource already existing in the Repository */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceUnconformityException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when user tries to add an object that is not conform to the metamodel */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnregisteredMetamodelException"
          eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when a resource cannot be loaded or saved because the URI used for &#xA; * the  metamodel is not registered&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpressionException" eSuperTypes="#/2/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * to be written #########################################&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KRuntimeError" instanceClassName="org.kermeta.compil.runtime.helper.error.KRuntimeError"
          serializable="false"/>
    </eSubpackages>
    <eSubpackages name="ecore" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/ecore/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/ecore"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xA; * Contains the definition of a Kermeta classes used for compatibility with Ecore &#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="EFeatureMapEntry" eSuperTypes="#/2/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Kermeta representation of EMF EFeatureMapEntry&#xA; * it contains the name of the required feature and the actual value&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/2/language/structure/Object"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="eStructuralFeatureName"
            eType="#/2/standard/JavaString"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="compiler" nsURI="http://www.kermeta.org/kermeta/compiler/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/compiler"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="usage" value="launcher"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Main" eSuperTypes="#/2/language/structure/Object">
        <eOperations name="main_km2ecore_onlyEcore">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.main_mode(modelInput, &quot;&quot;, kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, &quot;ecore&quot;), km2ecore.CompilingMode.getByName(&quot;onlyEcore&quot;), false);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="saveSingleEcore" ordered="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output, &quot;http://www.eclipse.org/emf/2002/Ecore&quot;);&#xA;&#xA;&#x9;ecore_resource.instances().add(this.getContext().getMu().getEcoreModelElement());&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft229 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1024 = false;&#xA;&#x9;while( !idLoopCond_1024 ) {&#xA;&#x9;idLoopCond_1024 = it_ft229.isOff();&#xA;&#x9;if ( idLoopCond_1024 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;ecore.EPackage p_lbdExp229 = it_ft229.next();&#xA;&#xA;&#x9;ecore_resource.instances().add(p_lbdExp229);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;ecore_resource.save();&#xA;"/>
          </eAnnotations>
          <eParameters name="output" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="main_km2ecore_behaviorJava">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.main_mode(modelInput, &quot;&quot;, kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, &quot;ecore&quot;), km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;), false);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="saveSplitEcore" ordered="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.standard.Bag&lt;kermeta.persistence.Resource> resourceBag = ((kermeta.standard.Bag&lt;kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getBag()));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft230 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1025 = false;&#xA;&#x9;while( !idLoopCond_1025 ) {&#xA;&#x9;idLoopCond_1025 = it_ft230.isOff();&#xA;&#x9;if ( idLoopCond_1025 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;ecore.EPackage p_lbdExp230 = it_ft230.next();&#xA;&#xA;&#x9;java.lang.String output_final = output;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1026 = false;&#xA;&#x9;idIfCond_1026 = kermeta.standard.helper.IntegerWrapper.isGreater(resourceBag.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_1026 ) {&#xA;&#xA;&#x9;output_final = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(output, &quot;__&quot;), p_lbdExp230.getName()), &quot;.ecore&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output_final, &quot;http://www.eclipse.org/emf/2002/Ecore&quot;);&#xA;&#xA;&#x9;ecore_resource.instances().add(p_lbdExp230);&#xA;&#xA;&#x9;resourceBag.add(ecore_resource);&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft231 = resourceBag.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1027 = false;&#xA;&#x9;while( !idLoopCond_1027 ) {&#xA;&#x9;idLoopCond_1027 = it_ft231.isOff();&#xA;&#x9;if ( idLoopCond_1027 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.persistence.Resource res__lbdExp231 = it_ft231.next();&#xA;&#xA;&#x9;res__lbdExp231.save();&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="output" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="main_mode3">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> operations = ((kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getOrderedSet()));&#xA;&#xA;&#x9;operations.add(&quot;checkInvariants&quot;);&#xA;&#xA;&#x9;operations.add(&quot;testBoolean&quot;);&#xA;&#xA;&#x9;this.main_compilingOnlyOperations(modelInput, traceInput, output, mode, operations);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/2/standard/JavaString"/>
          <eParameters name="output" eType="#/2/standard/JavaString"/>
          <eParameters name="mode" eType="#/1/CompilingMode"/>
        </eOperations>
        <eOperations name="main_mode2">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/*****************************************/"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/********** METHODS FOR TESTING **********/"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/*****************************************/"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));&#xA;&#xA;&#x9;this.getContext().initialize(modelInput, traceInput);&#xA;&#xA;&#x9;this.getContext().setMode(mode);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Integer&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Boolean&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Real&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Character&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::String&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Numeric&quot;)));&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/2/standard/JavaString"/>
          <eParameters name="output" eType="#/2/standard/JavaString"/>
          <eParameters name="mode" eType="#/1/CompilingMode"/>
        </eOperations>
        <eOperations name="main_inner">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.String modelInput = null;&#xA;&#xA;&#x9;java.lang.String output = null;&#xA;&#xA;&#x9;java.lang.String traceInput = &quot;&quot;;&#xA;&#xA;&#x9;modelInput = &quot;platform:/resource/org.kermeta.compiler.kmt/models/StructureCompiler.km&quot;;&#xA;&#xA;&#x9;output = kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, &quot;ecore&quot;);&#xA;&#xA;&#x9;this.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;), false);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="main_compilingOnlyOperations">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));&#xA;&#xA;&#x9;this.getContext().initialize(modelInput, traceInput);&#xA;&#xA;&#x9;this.getContext().setMode(mode);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Input model: &quot;, modelInput), &quot;\n&quot;));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft232 = this.getContext().getMu().getAllPackages().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1028 = false;&#xA;&#x9;while( !idLoopCond_1028 ) {&#xA;&#x9;idLoopCond_1028 = it_ft232.isOff();&#xA;&#x9;if ( idLoopCond_1028 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp232 = it_ft232.next();&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.Package pack_ft233 = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(p_lbdExp232, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft234 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(pack_ft233.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1029 = false;&#xA;&#x9;while( !idLoopCond_1029 ) {&#xA;&#x9;idLoopCond_1029 = it_ft234.isOff();&#xA;&#x9;if ( idLoopCond_1029 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp234 = it_ft234.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag cd_lbdExp233 = o_lbdExp234;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1030 = false;&#xA;&#x9;idIfCond_1030 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp233, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_1030 ) {&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_ft235 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp233, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft236 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft235.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1031 = false;&#xA;&#x9;while( !idLoopCond_1031 ) {&#xA;&#x9;idLoopCond_1031 = it_ft236.isOff();&#xA;&#x9;if ( idLoopCond_1031 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp236 = it_ft236.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag op_lbdExp235 = o_lbdExp236;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1032 = false;&#xA;&#x9;idIfCond_1032 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1032 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1033 = false;&#xA;&#x9;idIfCond_1033 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1033 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp235.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1034 = false;&#xA;&#x9;idIfCond_1034 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1034 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1035 = false;&#xA;&#x9;idIfCond_1035 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1035 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft237 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cd_ft235.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1036 = false;&#xA;&#x9;while( !idLoopCond_1036 ) {&#xA;&#x9;idLoopCond_1036 = it_ft237.isOff();&#xA;&#x9;if ( idLoopCond_1036 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property o_lbdExp237 = it_ft237.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property op_lbdExp235 = o_lbdExp237;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1037 = false;&#xA;&#x9;idIfCond_1037 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1037 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1038 = false;&#xA;&#x9;idIfCond_1038 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1038 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp235.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1039 = false;&#xA;&#x9;idIfCond_1039 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1039 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1040 = false;&#xA;&#x9;idIfCond_1040 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1040 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft238 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft235.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1041 = false;&#xA;&#x9;while( !idLoopCond_1041 ) {&#xA;&#x9;idLoopCond_1041 = it_ft238.isOff();&#xA;&#x9;if ( idLoopCond_1041 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp238 = it_ft238.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation op_lbdExp235 = o_lbdExp238;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1042 = false;&#xA;&#x9;idIfCond_1042 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1042 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1043 = false;&#xA;&#x9;idIfCond_1043 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1043 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp235.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1044 = false;&#xA;&#x9;idIfCond_1044 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1044 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1045 = false;&#xA;&#x9;idIfCond_1045 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1045 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft239 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft235.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1046 = false;&#xA;&#x9;while( !idLoopCond_1046 ) {&#xA;&#x9;idLoopCond_1046 = it_ft239.isOff();&#xA;&#x9;if ( idLoopCond_1046 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint i_lbdExp239 = it_ft239.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint op_lbdExp235 = i_lbdExp239;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1047 = false;&#xA;&#x9;idIfCond_1047 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1047 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1048 = false;&#xA;&#x9;idIfCond_1048 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1048 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp235.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1049 = false;&#xA;&#x9;idIfCond_1049 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1049 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1050 = false;&#xA;&#x9;idIfCond_1050 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1050 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft240 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft235.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1051 = false;&#xA;&#x9;while( !idLoopCond_1051 ) {&#xA;&#x9;idLoopCond_1051 = it_ft240.isOff();&#xA;&#x9;if ( idLoopCond_1051 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp240 = it_ft240.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable op_lbdExp235 = t_lbdExp240;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1052 = false;&#xA;&#x9;idIfCond_1052 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1052 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1053 = false;&#xA;&#x9;idIfCond_1053 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1053 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp235.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1054 = false;&#xA;&#x9;idIfCond_1054 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1054 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1055 = false;&#xA;&#x9;idIfCond_1055 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1055 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp235, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft241 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack_ft233.getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1056 = false;&#xA;&#x9;while( !idLoopCond_1056 ) {&#xA;&#x9;idLoopCond_1056 = it_ft241.isOff();&#xA;&#x9;if ( idLoopCond_1056 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeDefinition o_lbdExp241 = it_ft241.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeDefinition cd_lbdExp233 = o_lbdExp241;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1057 = false;&#xA;&#x9;idIfCond_1057 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp233, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_1057 ) {&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_ft242 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp233, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft243 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft242.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1058 = false;&#xA;&#x9;while( !idLoopCond_1058 ) {&#xA;&#x9;idLoopCond_1058 = it_ft243.isOff();&#xA;&#x9;if ( idLoopCond_1058 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp243 = it_ft243.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag op_lbdExp242 = o_lbdExp243;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1059 = false;&#xA;&#x9;idIfCond_1059 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1059 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1060 = false;&#xA;&#x9;idIfCond_1060 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1060 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1061 = false;&#xA;&#x9;idIfCond_1061 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1061 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1062 = false;&#xA;&#x9;idIfCond_1062 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1062 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft244 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cd_ft242.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1063 = false;&#xA;&#x9;while( !idLoopCond_1063 ) {&#xA;&#x9;idLoopCond_1063 = it_ft244.isOff();&#xA;&#x9;if ( idLoopCond_1063 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property o_lbdExp244 = it_ft244.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property op_lbdExp242 = o_lbdExp244;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1064 = false;&#xA;&#x9;idIfCond_1064 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1064 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1065 = false;&#xA;&#x9;idIfCond_1065 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1065 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1066 = false;&#xA;&#x9;idIfCond_1066 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1066 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1067 = false;&#xA;&#x9;idIfCond_1067 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1067 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft245 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft242.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1068 = false;&#xA;&#x9;while( !idLoopCond_1068 ) {&#xA;&#x9;idLoopCond_1068 = it_ft245.isOff();&#xA;&#x9;if ( idLoopCond_1068 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp245 = it_ft245.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation op_lbdExp242 = o_lbdExp245;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1069 = false;&#xA;&#x9;idIfCond_1069 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1069 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1070 = false;&#xA;&#x9;idIfCond_1070 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1070 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1071 = false;&#xA;&#x9;idIfCond_1071 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1071 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1072 = false;&#xA;&#x9;idIfCond_1072 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1072 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft246 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft242.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1073 = false;&#xA;&#x9;while( !idLoopCond_1073 ) {&#xA;&#x9;idLoopCond_1073 = it_ft246.isOff();&#xA;&#x9;if ( idLoopCond_1073 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint i_lbdExp246 = it_ft246.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint op_lbdExp242 = i_lbdExp246;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1074 = false;&#xA;&#x9;idIfCond_1074 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1074 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1075 = false;&#xA;&#x9;idIfCond_1075 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1075 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1076 = false;&#xA;&#x9;idIfCond_1076 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1076 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1077 = false;&#xA;&#x9;idIfCond_1077 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1077 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft247 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft242.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1078 = false;&#xA;&#x9;while( !idLoopCond_1078 ) {&#xA;&#x9;idLoopCond_1078 = it_ft247.isOff();&#xA;&#x9;if ( idLoopCond_1078 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp247 = it_ft247.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable op_lbdExp242 = t_lbdExp247;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1079 = false;&#xA;&#x9;idIfCond_1079 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1079 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1080 = false;&#xA;&#x9;idIfCond_1080 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1080 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp242.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1081 = false;&#xA;&#x9;idIfCond_1081 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1081 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1082 = false;&#xA;&#x9;idIfCond_1082 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1082 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp242, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft248 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack_ft233.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1083 = false;&#xA;&#x9;while( !idLoopCond_1083 ) {&#xA;&#x9;idLoopCond_1083 = it_ft248.isOff();&#xA;&#x9;if ( idLoopCond_1083 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package p_lbdExp248 = it_ft248.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Package cd_lbdExp233 = p_lbdExp248;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1084 = false;&#xA;&#x9;idIfCond_1084 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(cd_lbdExp233, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_1084 ) {&#xA;&#xA;&#x9;//BIft:eachOwnedElement&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_ft249 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(cd_lbdExp233, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft250 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(cd_ft249.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1085 = false;&#xA;&#x9;while( !idLoopCond_1085 ) {&#xA;&#x9;idLoopCond_1085 = it_ft250.isOff();&#xA;&#x9;if ( idLoopCond_1085 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag o_lbdExp250 = it_ft250.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Tag op_lbdExp249 = o_lbdExp250;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1086 = false;&#xA;&#x9;idIfCond_1086 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1086 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1087 = false;&#xA;&#x9;idIfCond_1087 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1087 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1088 = false;&#xA;&#x9;idIfCond_1088 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1088 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1089 = false;&#xA;&#x9;idIfCond_1089 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1089 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft251 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cd_ft249.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1090 = false;&#xA;&#x9;while( !idLoopCond_1090 ) {&#xA;&#x9;idLoopCond_1090 = it_ft251.isOff();&#xA;&#x9;if ( idLoopCond_1090 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property o_lbdExp251 = it_ft251.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Property op_lbdExp249 = o_lbdExp251;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1091 = false;&#xA;&#x9;idIfCond_1091 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1091 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1092 = false;&#xA;&#x9;idIfCond_1092 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1092 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1093 = false;&#xA;&#x9;idIfCond_1093 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1093 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1094 = false;&#xA;&#x9;idIfCond_1094 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1094 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft252 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(cd_ft249.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1095 = false;&#xA;&#x9;while( !idLoopCond_1095 ) {&#xA;&#x9;idLoopCond_1095 = it_ft252.isOff();&#xA;&#x9;if ( idLoopCond_1095 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation o_lbdExp252 = it_ft252.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Operation op_lbdExp249 = o_lbdExp252;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1096 = false;&#xA;&#x9;idIfCond_1096 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1096 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1097 = false;&#xA;&#x9;idIfCond_1097 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1097 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1098 = false;&#xA;&#x9;idIfCond_1098 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1098 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1099 = false;&#xA;&#x9;idIfCond_1099 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1099 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft253 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(cd_ft249.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1100 = false;&#xA;&#x9;while( !idLoopCond_1100 ) {&#xA;&#x9;idLoopCond_1100 = it_ft253.isOff();&#xA;&#x9;if ( idLoopCond_1100 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint i_lbdExp253 = it_ft253.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.Constraint op_lbdExp249 = i_lbdExp253;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1101 = false;&#xA;&#x9;idIfCond_1101 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1101 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1102 = false;&#xA;&#x9;idIfCond_1102 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1102 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1103 = false;&#xA;&#x9;idIfCond_1103 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1103 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1104 = false;&#xA;&#x9;idIfCond_1104 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1104 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;//BIft:each&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft254 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(cd_ft249.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1105 = false;&#xA;&#x9;while( !idLoopCond_1105 ) {&#xA;&#x9;idLoopCond_1105 = it_ft254.isOff();&#xA;&#x9;if ( idLoopCond_1105 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable t_lbdExp254 = it_ft254.next();&#xA;&#xA;&#x9;//BIle:func&#xA;kermeta.language.structure.TypeVariable op_lbdExp249 = t_lbdExp254;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1106 = false;&#xA;&#x9;idIfCond_1106 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_1106 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1107 = false;&#xA;&#x9;idIfCond_1107 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).isFunctionType()), operations.contains(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1107 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op_lbdExp249.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1108 = false;&#xA;&#x9;idIfCond_1108 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;));&#xA;&#xA;&#x9;if( idIfCond_1108 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1109 = false;&#xA;&#x9;idIfCond_1109 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getIsDerived(), operations.contains(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName()));&#xA;&#xA;&#x9;if( idIfCond_1109 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(op_lbdExp249, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getGetterBody().createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;}&#xA;&#xA;//EIle:func&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;//EIft:eachOwnedElement&#xA;&#xA;//EIle:func&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:each&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;\nFinish&quot;);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/2/standard/JavaString"/>
          <eParameters name="output" eType="#/2/standard/JavaString"/>
          <eParameters name="mode" eType="#/1/CompilingMode"/>
          <eParameters name="operations">
            <eGenericType eClassifier="#/2/standard/OrderedSet">
              <eTypeArguments eClassifier="#/2/standard/JavaString"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="typeDefinitionToString" eType="#/2/standard/JavaString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1110 = false;&#xA;&#x9;idIfCond_1110 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(td)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;if( idIfCond_1110 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(cd.getName(), &quot; &quot;), kermeta.standard.helper.BooleanWrapper.toString(cd.isValueType()));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="td" eType="#/2/language/structure/TypeDefinition"/>
        </eOperations>
        <eOperations name="getTypeDefinitionByQualifiedName" eType="#/2/language/structure/TypeDefinition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.TypeDefinition result = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition td = ((kermeta.language.structure.TypeDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.language.structure.StructurePackage.eINSTANCE.getTypeDefinition()));&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition td_tmp = this.getContext().getMu().getTypeDefinitionByQualifiedName(qn);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1111 = false;&#xA;&#x9;idIfCond_1111 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(td_tmp));&#xA;&#xA;&#x9;if( idIfCond_1111 ) {&#xA;&#xA;&#x9;td = td_tmp;&#xA;}&#xA;&#xA;&#xA;&#x9;result = td;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="qn" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eOperations name="main_mode">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;KermetaCompiler - Starting up of the Ecore generation for the model: &quot;, modelInput));&#xA;&#xA;&#x9;this.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(km2ecore.Km2ecorePackage.eINSTANCE.getKM2EcoreContext())));&#xA;&#xA;&#x9;this.getContext().initialize(modelInput, traceInput);&#xA;&#xA;&#x9;this.getContext().setMode(mode);&#xA;&#xA;&#x9;this.getContext().getMu().applyPass1(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;KermetaCompiler - Pass 1 is finished&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1112 = false;&#xA;&#x9;idIfCond_1112 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(&quot;onlyEcore&quot;));&#xA;&#xA;&#x9;if( idIfCond_1112 ) {&#xA;&#xA;&#x9;this.getContext().getMu().applyPass2(this.getContext());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1113 = false;&#xA;&#x9;idIfCond_1113 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(&quot;behaviorKmt&quot;));&#xA;&#xA;&#x9;if( idIfCond_1113 ) {&#xA;&#xA;&#x9;this.getContext().getMu().applyPass2BehaviorKmt(this.getContext());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1114 = false;&#xA;&#x9;idIfCond_1114 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(this.getContext().getMode(), km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;));&#xA;&#xA;&#x9;if( idIfCond_1114 ) {&#xA;&#xA;&#x9;this.getContext().getMu().preprocess(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(&quot;KermetaCompiler - Pass 2 with the mode: &quot;, this.getContext().getMode().getName()));&#xA;&#xA;&#x9;this.getContext().getMu().applyPass2BehaviorJava(this.getContext());&#xA;&#xA;&#x9;this.getContext().getMu().postprocess(this.getContext());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;KermetaCompiler - Pass 2 is finished&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;Save the Ecore Model&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1115 = false;&#xA;&#x9;idIfCond_1115 = splitEcore;&#xA;&#xA;&#x9;if( idIfCond_1115 ) {&#xA;&#xA;&#x9;this.saveSplitEcore(output);&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.saveSingleEcore(output);&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;The Ecore Model has been saved&quot;);&#xA;&#xA;&#x9;this.getContext().save();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Stats:\n\tconditional + loop: &quot;, kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_condStack())), &quot;\n\tfunction type: &quot;), kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_ftSuffix())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.getInstance().writeln(&quot;Finish&quot;);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/2/standard/JavaString"/>
          <eParameters name="output" eType="#/2/standard/JavaString"/>
          <eParameters name="mode" eType="#/1/CompilingMode"/>
          <eParameters name="splitEcore" eType="#/2/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="main">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.main_mode(modelInput, &quot;&quot;, kermeta.standard.helper.StringWrapper.replaceExtension(modelInput, &quot;ecore&quot;), km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;), false);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/2/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="context" lowerBound="1"
            eType="#/1/KM2EcoreContext"/>
      </eClassifiers>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="simk" nsURI="http://www.kermeta.org/simk/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/simk"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="SIMKModel" eSuperTypes="#/3/SMNamedElement">
      <eOperations name="retrieveOrCreateContextForSuper" eType="#/3/SMContext">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = this.retrieveOrCreateContextWithClass(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(op), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName(), &quot;Super&quot;), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(op), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).qualifiedName(), context.getKERMETA_SEPARATOR(), context.getJAVA_SEPARATOR()), context.getJAVA_SEPARATOR()), &quot;helper&quot;), simk.SMUsage.getByName(&quot;Super&quot;), context);&#xA;&#xA;&#x9;simk.SMMethod sm = null;&#xA;//BIft:detect&#xA;&#xA;simk.SMMethod result_ft255 = null;&#xA;&#xA;&#x9;simk.SMMethod elem_ft255 = null;&#xA;&#xA;&#x9;result_ft255 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.SMMethod> it_ft255 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(sMContext.getSMMethods()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1116 = false;&#xA;&#x9;while( !idLoopCond_1116 ) {&#xA;&#x9;idLoopCond_1116 = kermeta.standard.helper.BooleanWrapper.or(it_ft255.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft255, null));&#xA;&#x9;if ( idLoopCond_1116 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft255 = it_ft255.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1117 = false;&#xA;//BIle:detector&#xA;simk.SMMethod o_lbdExp255 = elem_ft255;&#xA;&#xA;&#x9;idIfCond_1117 = kermeta.standard.helper.StringWrapper.equals(o_lbdExp255.getName(), kermeta.standard.helper.StringWrapper.plus(&quot;super_&quot;, op.getFinalName(context)));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1117 ) {&#xA;&#xA;&#x9;result_ft255 = elem_ft255;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;sm = result_ft255;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1118 = false;&#xA;&#x9;idIfCond_1118 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sm);&#xA;&#xA;&#x9;if( idIfCond_1118 ) {&#xA;&#xA;&#x9;result = sMContext;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="op" eType="#/2/language/structure/Operation"/>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
      <eOperations name="retrieveOrCreateContextForWrapper" eType="#/3/SMContext">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = this.retrieveOrCreateContextWithClass(kermeta.standard.helper.StringWrapper.plus(context.getCurrent_valueType().getName(), &quot;Wrapper&quot;), &quot;kermeta.standard.helper&quot;, simk.SMUsage.getByName(&quot;Wrapper&quot;), context);&#xA;&#xA;&#x9;simk.SMMethod sm = null;&#xA;//BIft:detect&#xA;&#xA;simk.SMMethod result_ft256 = null;&#xA;&#xA;&#x9;simk.SMMethod elem_ft256 = null;&#xA;&#xA;&#x9;result_ft256 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.SMMethod> it_ft256 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(sMContext.getSMMethods()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1119 = false;&#xA;&#x9;while( !idLoopCond_1119 ) {&#xA;&#x9;idLoopCond_1119 = kermeta.standard.helper.BooleanWrapper.or(it_ft256.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft256, null));&#xA;&#x9;if ( idLoopCond_1119 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft256 = it_ft256.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1120 = false;&#xA;//BIle:detector&#xA;simk.SMMethod o_lbdExp256 = elem_ft256;&#xA;&#xA;&#x9;idIfCond_1120 = kermeta.standard.helper.StringWrapper.equals(o_lbdExp256.getName(), op.getFinalName(context));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1120 ) {&#xA;&#xA;&#x9;result_ft256 = elem_ft256;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;sm = result_ft256;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1121 = false;&#xA;&#x9;idIfCond_1121 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sm);&#xA;&#xA;&#x9;if( idIfCond_1121 ) {&#xA;&#xA;&#x9;result = sMContext;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="op" eType="#/2/language/structure/Operation"/>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
      <eOperations name="retrieveOrCreateContextForInvariant" eType="#/3/SMContext">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = this.retrieveOrCreateContextWithClass(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(constraint), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName(), &quot;Invariant&quot;), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(constraint), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).qualifiedName(), context.getKERMETA_SEPARATOR(), context.getJAVA_SEPARATOR()), context.getJAVA_SEPARATOR()), &quot;helper&quot;), simk.SMUsage.getByName(&quot;Invariant&quot;), context);&#xA;&#xA;&#x9;simk.SMMethod sm = null;&#xA;//BIft:detect&#xA;&#xA;simk.SMMethod result_ft257 = null;&#xA;&#xA;&#x9;simk.SMMethod elem_ft257 = null;&#xA;&#xA;&#x9;result_ft257 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.SMMethod> it_ft257 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(sMContext.getSMMethods()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1122 = false;&#xA;&#x9;while( !idLoopCond_1122 ) {&#xA;&#x9;idLoopCond_1122 = kermeta.standard.helper.BooleanWrapper.or(it_ft257.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft257, null));&#xA;&#x9;if ( idLoopCond_1122 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft257 = it_ft257.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1123 = false;&#xA;//BIle:detector&#xA;simk.SMMethod o_lbdExp257 = elem_ft257;&#xA;&#xA;&#x9;idIfCond_1123 = kermeta.standard.helper.StringWrapper.equals(o_lbdExp257.getName(), kermeta.standard.helper.StringWrapper.plus(&quot;checkInvariant_&quot;, constraint.getId()));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1123 ) {&#xA;&#xA;&#x9;result_ft257 = elem_ft257;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;sm = result_ft257;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1124 = false;&#xA;&#x9;idIfCond_1124 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sm);&#xA;&#xA;&#x9;if( idIfCond_1124 ) {&#xA;&#xA;&#x9;result = sMContext;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="constraint" eType="#/2/language/structure/Constraint"/>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
      <eOperations name="retrieveOrCreateContextForRunner" eType="#/3/SMContext">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = this.retrieveOrCreateContextWithClass(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(op), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName(), &quot;__&quot;), op.getFinalName(context)), &quot;__&quot;), &quot;Runner&quot;), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(org.kermeta.compil.runtime.helper.language.ObjectUtil.containerSwitcher(op), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).qualifiedName(), context.getKERMETA_SEPARATOR(), context.getJAVA_SEPARATOR()), context.getJAVA_SEPARATOR()), &quot;runner&quot;), simk.SMUsage.getByName(&quot;Runner&quot;), context);&#xA;&#xA;&#x9;simk.SMMethod sm = null;&#xA;//BIft:detect&#xA;&#xA;simk.SMMethod result_ft258 = null;&#xA;&#xA;&#x9;simk.SMMethod elem_ft258 = null;&#xA;&#xA;&#x9;result_ft258 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.SMMethod> it_ft258 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMMethod>convertAsOrderedSet(sMContext.getSMMethods()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1125 = false;&#xA;&#x9;while( !idLoopCond_1125 ) {&#xA;&#x9;idLoopCond_1125 = kermeta.standard.helper.BooleanWrapper.or(it_ft258.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft258, null));&#xA;&#x9;if ( idLoopCond_1125 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft258 = it_ft258.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1126 = false;&#xA;//BIle:detector&#xA;simk.SMMethod o_lbdExp258 = elem_ft258;&#xA;&#xA;&#x9;idIfCond_1126 = kermeta.standard.helper.StringWrapper.equals(o_lbdExp258.getName(), &quot;main&quot;);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1126 ) {&#xA;&#xA;&#x9;result_ft258 = elem_ft258;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;sm = result_ft258;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1127 = false;&#xA;&#x9;idIfCond_1127 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sm);&#xA;&#xA;&#x9;if( idIfCond_1127 ) {&#xA;&#xA;&#x9;result = sMContext;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="op" eType="#/2/language/structure/Operation"/>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
      <eOperations name="retrieveOrCreateContextWithClass" eType="#/3/SMContext">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = this.retrieveOrCreateContext(class_qname, finalPackage_qname, usage, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1128 = false;&#xA;&#x9;idIfCond_1128 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sMContext.getSMClass());&#xA;&#xA;&#x9;if( idIfCond_1128 ) {&#xA;&#xA;&#x9;simk.SMClass sMClass = ((simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMClass()));&#xA;&#xA;&#x9;sMContext.setSMClass(sMClass);&#xA;&#xA;&#x9;sMClass.setName(class_qname);&#xA;&#xA;&#x9;sMClass.setUsages(usage);&#xA;}&#xA;&#xA;&#xA;&#x9;result = sMContext;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="class_qname" eType="#/2/standard/JavaString"/>
        <eParameters name="finalPackage_qname" eType="#/2/standard/JavaString"/>
        <eParameters name="usage" eType="#/3/SMUsage"/>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
      <eOperations name="retrieveOrCreateContext" eType="#/3/SMContext">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = null;&#xA;//BIft:detect&#xA;&#xA;simk.SMContext result_ft259 = null;&#xA;&#xA;&#x9;simk.SMContext elem_ft259 = null;&#xA;&#xA;&#x9;result_ft259 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.SMContext> it_ft259 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMContext>convertAsOrderedSet(this.getSMContexts()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1129 = false;&#xA;&#x9;while( !idLoopCond_1129 ) {&#xA;&#x9;idLoopCond_1129 = kermeta.standard.helper.BooleanWrapper.or(it_ft259.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft259, null));&#xA;&#x9;if ( idLoopCond_1129 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft259 = it_ft259.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1130 = false;&#xA;//BIle:detector&#xA;simk.SMContext c_lbdExp259 = elem_ft259;&#xA;&#xA;&#x9;idIfCond_1130 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(c_lbdExp259.getFinalPackageQName(), finalPackage_qname), kermeta.standard.helper.StringWrapper.equals(c_lbdExp259.getSMClass().getName(), class_qname)), org.kermeta.compil.runtime.helper.language.ObjectUtil.equalsSwitcher(c_lbdExp259.getSMClass().getUsages(), usage));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1130 ) {&#xA;&#xA;&#x9;result_ft259 = elem_ft259;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;sMContext = result_ft259;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1131 = false;&#xA;&#x9;idIfCond_1131 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(sMContext);&#xA;&#xA;&#x9;if( idIfCond_1131 ) {&#xA;&#xA;&#x9;sMContext = ((simk.SMContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(simk.SimkPackage.eINSTANCE.getSMContext()));&#xA;&#xA;&#x9;sMContext.setFinalPackageQName(finalPackage_qname);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMContext>convertAsOrderedSet(this.getSMContexts()).add(sMContext);&#xA;}&#xA;&#xA;&#xA;&#x9;result = sMContext;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="class_qname" eType="#/2/standard/JavaString"/>
        <eParameters name="finalPackage_qname" eType="#/2/standard/JavaString"/>
        <eParameters name="usage" eType="#/3/SMUsage"/>
        <eParameters name="context" eType="#/1/KM2EcoreContext"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMContexts" upperBound="-1"
          eType="#/3/SMContext" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMMethods" upperBound="-1"
          eType="#/3/SMMethod" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMMethod" eSuperTypes="#/3/SMNamedElement">
      <eOperations name="setWrapperUsage">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setUsages(simk.SMUsage.getByName(&quot;Wrapper&quot;));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getParentEOperationFromModel" eType="#/5/EOperation">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EOperation result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_abstract" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentEReference" eType="#/5/EReference"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_static" eType="#/5/EBoolean"
          defaultValueLiteral="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentEOperation" eType="#/5/EOperation"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="typeParameters" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentEAttribute" eType="#/5/EAttribute"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMParameters" upperBound="-1"
          eType="#/3/SMParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMReturn" eType="#/3/SMReturn"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMContext" eType="#/3/SMContext"
          eOpposite="#/3/SMContext/sMMethods"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="usages" eType="#/3/SMUsage"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="access" eType="#/3/SMAccess"
          transient="true" defaultValueLiteral="public"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="SMUsage">
      <eLiterals name="Default" literal="Default"/>
      <eLiterals name="Super" value="1" literal="Super"/>
      <eLiterals name="DerivedProperty" value="2" literal="DerivedProperty"/>
      <eLiterals name="PreCondition" value="3" literal="PreCondition"/>
      <eLiterals name="PostCondition" value="4" literal="PostCondition"/>
      <eLiterals name="Wrapper" value="5" literal="Wrapper"/>
      <eLiterals name="Runner" value="6" literal="Runner"/>
      <eLiterals name="Invariant" value="7" literal="Invariant"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="SMAccess">
      <eLiterals name="private" literal="private"/>
      <eLiterals name="protected" value="1" literal="protected"/>
      <eLiterals name="public" value="2" literal="public"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMContext" eSuperTypes="#/2/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMClass" eType="#/3/SMClass"
          containment="true" eOpposite="#/3/SMClass/context"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMMethods" upperBound="-1"
          eType="#/3/SMMethod" eOpposite="#/3/SMMethod/sMContext"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="finalPackageQName" eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMClass" eSuperTypes="#/3/SMNamedElement">
      <eOperations name="setWrapperUsage">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** TODO TO COMMENT*/"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setUsages(simk.SMUsage.getByName(&quot;Wrapper&quot;));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getQualifiedName" eType="#/5/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.String result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="context" lowerBound="1"
          eType="#/3/SMContext" eOpposite="#/3/SMContext/sMClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="usages" eType="#/3/SMUsage"
          transient="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMNamedElement" abstract="true" eSuperTypes="#/2/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMParameter" eSuperTypes="#/3/SMNamedElement #/3/SMTypedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="SMTypedElement" abstract="true" eSuperTypes="#/2/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1"
          eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMReturn" eSuperTypes="#/3/SMTypedElement"/>
  </ecore:EPackage>
  <ecore:EPackage name="traceability" nsURI="http://www.kermeta.org/Traceability/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/Traceability"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="TraceModel" eSuperTypes="#/2/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace model.&#xD;&#xA; * This is a set of traces, references and messages.&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="files" upperBound="-1"
          eType="#/4/File" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="references" ordered="false"
          upperBound="-1" eType="#/4/Reference" containment="true" eOpposite="#/4/Reference/traceMdl">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Set of references to the traced objects of the trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traces" ordered="false"
          upperBound="-1" eType="#/4/Trace" containment="true" eOpposite="#/4/Trace/traceMdl">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Set of traces contained by the trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="messages" ordered="false"
          upperBound="-1" eType="#/4/Message" containment="true" eOpposite="#/4/Message/traceMdl">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Set of messages contained by the trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Message" eSuperTypes="#/2/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace message, used to add some information to traces.&#xD;&#xA; * Typically, in order to known what had generated a given trace or provide a user&#xD;&#xA; * friendly message to the user.&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1"
          eType="#/4/TraceModel" eOpposite="#/4/TraceModel/messages">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the containing trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traces" upperBound="-1"
          eType="#/4/Trace" eOpposite="#/4/Trace/description">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the traces the message is associated with */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
          eType="#/4/String"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="#/4/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Language of the message (english, french, etc.) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#/4/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Message kind */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Trace" eSuperTypes="#/2/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace element&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1"
          eType="#/4/TraceModel" eOpposite="#/4/TraceModel/traces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the containing trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sourceReferences" upperBound="-1"
          eType="#/4/Reference" eOpposite="#/4/Reference/targetTraces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the references to the trace incoming elements */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="description" upperBound="-1"
          eType="#/4/Message" eOpposite="#/4/Message/traces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the messages describing the trace */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetReferences" upperBound="-1"
          eType="#/4/Reference" eOpposite="#/4/Reference/sourceTraces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the references to the trace outgoing elements */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Reference" abstract="true" eSuperTypes="#/2/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This abstract class represents a reference to a concrete object&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetTraces" upperBound="-1"
          eType="#/4/Trace" eOpposite="#/4/Trace/sourceReferences">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the reference target traces */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1"
          eType="#/4/TraceModel" eOpposite="#/4/TraceModel/references">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the containing trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sourceTraces" upperBound="-1"
          eType="#/4/Trace" eOpposite="#/4/Trace/targetReferences">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the reference source traces */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FileReference" abstract="true" eSuperTypes="#/4/Reference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a concrete object contained by a file&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="fileURI" lowerBound="1"
          eType="#/4/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** URI of the file containing the referred concrete object */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TextReference" eSuperTypes="#/4/FileReference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a textual file concrete object&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta.inv">
        <details key="validTextRef" value=""/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="charEndAt" lowerBound="1"
          eType="#/4/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Ending character number */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="charBeginAt" lowerBound="1"
          eType="#/4/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Starting character number */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineEndAt" lowerBound="1"
          eType="#/4/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Ending line number */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineBeginAt" lowerBound="1"
          eType="#/4/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Starting line number */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="XMLReference" eSuperTypes="#/4/FileReference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a XML concrete object&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="xPointer" lowerBound="1"
          eType="#/4/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** XML link to the referred XML concrete object */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModelReference" eSuperTypes="#/4/Reference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a model element&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="refObject" lowerBound="1"
          eType="#/5/EObject"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceClassName="java.lang.Object">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TraceabilityHelper" eSuperTypes="#/2/language/structure/Object">
      <eOperations name="getFirstTextReference" eType="#/4/TextReference">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;traceability.TextReference result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;traceability.Reference> c = null;&#xA;//BIft:collect&#xA;&#xA;kermeta.standard.Sequence&lt;traceability.Reference> result_ft260 = null;&#xA;&#xA;&#x9;result_ft260 = ((kermeta.standard.Sequence&lt;traceability.Reference>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(kermeta.standard.StandardPackage.eINSTANCE.getSequence()));&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.Trace> it_ft260 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.Trace>convertAsOrderedSet(mr.getSourceTraces()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1132 = false;&#xA;&#x9;while( !idLoopCond_1132 ) {&#xA;&#x9;idLoopCond_1132 = it_ft260.isOff();&#xA;&#x9;if ( idLoopCond_1132 ) {&#xA;&#x9;} else {&#xA;&#xA;traceability.Reference result_lambda_ft260 = null;&#xA;//BIle:collector&#xA;traceability.Trace t_lbdExp260 = it_ft260.next();&#xA;&#xA;&#x9;//BIft:detect&#xA;&#xA;traceability.Reference result_ft261 = null;&#xA;&#xA;&#x9;traceability.Reference elem_ft261 = null;&#xA;&#xA;&#x9;result_ft261 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.Reference> it_ft261 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.Reference>convertAsOrderedSet(t_lbdExp260.getSourceReferences()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1133 = false;&#xA;&#x9;while( !idLoopCond_1133 ) {&#xA;&#x9;idLoopCond_1133 = kermeta.standard.helper.BooleanWrapper.or(it_ft261.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft261, null));&#xA;&#x9;if ( idLoopCond_1133 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft261 = it_ft261.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1134 = false;&#xA;//BIle:detector&#xA;traceability.Reference sr_lbdExp261 = elem_ft261;&#xA;&#xA;&#x9;idIfCond_1134 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOfSwitcher(sr_lbdExp261, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.TextReference&quot;));&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1134 ) {&#xA;&#xA;&#x9;result_ft261 = elem_ft261;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;//EIft:detect&#xA;result_lambda_ft260 = result_ft261;&#xA;&#xA;//EIle:collector&#xA;&#xA;&#x9;result_ft260.add(result_lambda_ft260);&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;c = result_ft260;&#xA;//EIft:collect&#xA;&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;traceability.TextReference tr = ((traceability.TextReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asTypeSwitcher(c.first(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.TextReference&quot;)));&#xA;&#xA;&#x9;result = tr;&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_5 ) {&#xA;boolean caught_5 = false;&#xA;if( ex_switcher_5.getRealException() instanceof kermeta.exceptions.EmptyCollection ) {&#xA;caught_5 = true;&#xA;kermeta.exceptions.EmptyCollection e = (kermeta.exceptions.EmptyCollection) ex_switcher_5.getRealException();&#xA;result = null;&#xA;}&#xA;if( !caught_5 ) { throw ex_switcher_5; }&#xA;&#xA;}&#xA;}&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="mr" eType="#/4/ModelReference"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="File" eSuperTypes="#/2/language/structure/Object">
      <eOperations name="getFileEMF_renameAs" eType="#/4/File">
        <eAnnotations source="kermeta">
          <details key="EMF_renameAs" value="getFileEMF_renameAs"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;traceability.File result = null;&#xA;&#xA;&#x9;traceability.File file = null;&#xA;//BIft:detect&#xA;&#xA;traceability.File result_ft262 = null;&#xA;&#xA;&#x9;traceability.File elem_ft262 = null;&#xA;&#xA;&#x9;result_ft262 = null;&#xA;&#xA;&#x9;&#xA;{&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.File> it_ft262 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.File>convertAsOrderedSet(traceModel.getFiles()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_1135 = false;&#xA;&#x9;while( !idLoopCond_1135 ) {&#xA;&#x9;idLoopCond_1135 = kermeta.standard.helper.BooleanWrapper.or(it_ft262.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqualSwitcher(result_ft262, null));&#xA;&#x9;if ( idLoopCond_1135 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft262 = it_ft262.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1136 = false;&#xA;//BIle:detector&#xA;traceability.File f_lbdExp262 = elem_ft262;&#xA;&#xA;&#x9;idIfCond_1136 = kermeta.standard.helper.StringWrapper.equals(f_lbdExp262.getUri(), uri_toFind);&#xA;//EIle:detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_1136 ) {&#xA;&#xA;&#x9;result_ft262 = elem_ft262;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;//CE&#xA;file = result_ft262;&#xA;//EIft:detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1137 = false;&#xA;&#x9;idIfCond_1137 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoidSwitcher(file);&#xA;&#xA;&#x9;if( idIfCond_1137 ) {&#xA;&#xA;&#x9;file = ((traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(traceability.TraceabilityPackage.eINSTANCE.getFile()));&#xA;&#xA;&#x9;file.setUri(uri_toFind);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.File>convertAsOrderedSet(traceModel.getFiles()).add(file);&#xA;&#xA;&#x9;file.setId(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.File>convertAsOrderedSet(traceModel.getFiles()).size());&#xA;}&#xA;&#xA;&#xA;&#x9;result = file;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="traceModel" eType="#/4/TraceModel"/>
        <eParameters name="uri_toFind" eType="#/4/String"/>
      </eOperations>
      <eOperations name="toString" eType="#/4/String">
        <eAnnotations source="kermeta">
          <details key="superOperation" value="kermeta::language::structure::Object"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;self.uri: &quot;, this.getUri()), &quot; - self.id: &quot;), kermeta.standard.helper.IntegerWrapper.toString(this.getId()));&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="#/4/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" lowerBound="1" eType="#/4/String"/>
    </eClassifiers>
  </ecore:EPackage>
  <ecore:EPackage name="ecore" nsURI="http://www.eclipse.org/emf/2002/Ecore/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.eclipse.org/emf/2002/Ecore"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="EAttribute" eSuperTypes="#/5/EStructuralFeature">
      <eOperations name="getterEAttributeType" eType="#/5/EDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EDataType result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="iD" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBoolean" instanceClassName="boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EAnnotation" eSuperTypes="#/5/EModelElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="references" upperBound="-1"
          eType="#/5/EObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="details" upperBound="-1"
          eType="#/5/EStringToStringMapEntry" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="source" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
          eType="#/5/EObject" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eModelElement" eType="#/5/EModelElement"
          transient="true" eOpposite="#/5/EModelElement/eAnnotations">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EString" instanceClassName="java.lang.String">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EClass" eSuperTypes="#/5/EClassifier">
      <eOperations name="getEStructuralFeature" eType="#/5/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EStructuralFeature result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="featureName" eType="#/5/EString"/>
      </eOperations>
      <eOperations name="getFeatureID" eType="#/5/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Integer result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/5/EStructuralFeature"/>
      </eOperations>
      <eOperations name="isSuperTypeOf" eType="#/5/EBoolean">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Boolean result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="someClass" eType="#/5/EClass"/>
      </eOperations>
      <eOperations name="getFeatureCount" eType="#/5/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Integer result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="op_getEStructuralFeature" eType="#/5/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EStructuralFeature result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="featureID" eType="#/5/EInt"/>
      </eOperations>
      <eOperations name="getterEAllAttributes" upperBound="-1" eType="#/5/EAttribute">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EAttribute> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEReferences" upperBound="-1" eType="#/5/EReference">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EReference> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAllReferences" upperBound="-1" eType="#/5/EReference">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EReference> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAllContainments" upperBound="-1" eType="#/5/EReference">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EReference> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAllGenericSuperTypes" upperBound="-1" eType="#/5/EGenericType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EGenericType> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAttributes" upperBound="-1" eType="#/5/EAttribute">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EAttribute> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEIDAttribute" eType="#/5/EAttribute">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EAttribute result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAllStructuralFeatures" upperBound="-1" eType="#/5/EStructuralFeature">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EStructuralFeature> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAllOperations" upperBound="-1" eType="#/5/EOperation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EOperation> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterEAllSuperTypes" upperBound="-1" eType="#/5/EClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;ecore.EClass> result = null;&#xA;&#xA;return org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.convertAsEList(result);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eStructuralFeatures"
          upperBound="-1" eType="#/5/EStructuralFeature" containment="true" eOpposite="#/5/EStructuralFeature/eContainingClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_abstract" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOperations" upperBound="-1"
          eType="#/5/EOperation" containment="true" eOpposite="#/5/EOperation/eContainingClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_interface" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSuperTypes" upperBound="-1"
          eType="#/5/EClass"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericSuperTypes" upperBound="-1"
          eType="#/5/EGenericType" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EClassifier" abstract="true" eSuperTypes="#/5/ENamedElement">
      <eOperations name="isInstance" eType="#/5/EBoolean">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Boolean result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="object" eType="#/5/EJavaObject"/>
      </eOperations>
      <eOperations name="getClassifierID" eType="#/5/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Integer result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterInstanceClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Class result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#/5/EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="getterDefaultValue" eType="#/5/EJavaObject">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Object result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceClassName" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" eType="#/5/EPackage"
          changeable="false" transient="true" eOpposite="#/5/EPackage/eClassifiers">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameters" upperBound="-1"
          eType="#/5/ETypeParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceTypeName" eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EJavaClass" instanceClassName="java.lang.Class">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Class"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="T"/>
      </eAnnotations>
      <eTypeParameters name="T"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EJavaObject" instanceClassName="java.lang.Object">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EDataType" eSuperTypes="#/5/EClassifier">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="serializable" eType="#/5/EBoolean"
          defaultValueLiteral="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EEnum" eSuperTypes="#/5/EDataType">
      <eOperations name="op_getEEnumLiteral" eType="#/5/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EEnumLiteral result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="name" eType="#/5/EString"/>
      </eOperations>
      <eOperations name="getEEnumLiteral" eType="#/5/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EEnumLiteral result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="value" eType="#/5/EInt"/>
      </eOperations>
      <eOperations name="getEEnumLiteralByLiteral" eType="#/5/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EEnumLiteral result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="literal" eType="#/5/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eLiterals" upperBound="-1"
          eType="#/5/EEnumLiteral" containment="true" eOpposite="#/5/EEnumLiteral/eEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EEnumLiteral" eSuperTypes="#/5/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eEnum" eType="#/5/EEnum"
          changeable="false" transient="true" eOpposite="#/5/EEnum/eLiterals">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/5/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instance" eType="#/5/EEnumerator"
          transient="true">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="literal" eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EInt" instanceClassName="int">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="int"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EEnumerator" instanceClassName="org.eclipse.emf.common.util.Enumerator"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.Enumerator"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EFactory" eSuperTypes="#/5/EModelElement">
      <eOperations name="createFromString" eType="#/5/EJavaObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Object result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="eDataType" eType="#/5/EDataType"/>
        <eParameters name="literalValue" eType="#/5/EString"/>
      </eOperations>
      <eOperations name="convertToString" eType="#/5/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.String result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="eDataType" eType="#/5/EDataType"/>
        <eParameters name="instanceValue" eType="#/5/EJavaObject"/>
      </eOperations>
      <eOperations name="create" eType="#/5/EObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EObject result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="eClass" eType="#/5/EClass"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" lowerBound="1"
          eType="#/5/EPackage" transient="true" eOpposite="#/5/EPackage/eFactoryInstance">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EModelElement" abstract="true" eSuperTypes="#/5/EObject">
      <eOperations name="getEAnnotation" eType="#/5/EAnnotation">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EAnnotation result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="source" eType="#/5/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAnnotations" upperBound="-1"
          eType="#/5/EAnnotation" containment="true" eOpposite="#/5/EAnnotation/eModelElement"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ENamedElement" abstract="true" eSuperTypes="#/5/EModelElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EObject" eSuperTypes="#/2/language/structure/Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="EOperation" eSuperTypes="#/5/ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eContainingClass" eType="#/5/EClass"
          changeable="false" transient="true" eOpposite="#/5/EClass/eOperations">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericExceptions" upperBound="-1"
          eType="#/5/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eParameters" upperBound="-1"
          eType="#/5/EParameter" containment="true" eOpposite="#/5/EParameter/eOperation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameters" upperBound="-1"
          eType="#/5/ETypeParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eExceptions" upperBound="-1"
          eType="#/5/EClassifier"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EPackage" eSuperTypes="#/5/ENamedElement">
      <eOperations name="getEClassifier" eType="#/5/EClassifier">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EClassifier result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="name" eType="#/5/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nsURI" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSubpackages" upperBound="-1"
          eType="#/5/EPackage" containment="true" eOpposite="#/5/EPackage/eSuperPackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSuperPackage" eType="#/5/EPackage"
          changeable="false" transient="true" eOpposite="#/5/EPackage/eSubpackages">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nsPrefix" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eFactoryInstance" lowerBound="1"
          eType="#/5/EFactory" transient="true" eOpposite="#/5/EFactory/ePackage">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifiers" upperBound="-1"
          eType="#/5/EClassifier" containment="true" eOpposite="#/5/EClassifier/ePackage"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EParameter" eSuperTypes="#/5/ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOperation" eType="#/5/EOperation"
          changeable="false" transient="true" eOpposite="#/5/EOperation/eParameters">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EReference" eSuperTypes="#/5/EStructuralFeature">
      <eOperations name="getterEReferenceType" eType="#/5/EClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterContainer" eType="#/5/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOpposite" eType="#/5/EReference"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="resolveProxies" eType="#/5/EBoolean"
          defaultValueLiteral="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eKeys" upperBound="-1"
          eType="#/5/EAttribute"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="containment" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EStructuralFeature" abstract="true"
        eSuperTypes="#/5/ETypedElement">
      <eOperations name="getFeatureID" eType="#/5/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Integer result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getContainerClass">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Class result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#/5/EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="getterDefaultValue" eType="#/5/EJavaObject">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Object result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_volatile" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValueLiteral"
          eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eContainingClass" eType="#/5/EClass"
          changeable="false" transient="true" eOpposite="#/5/EClass/eStructuralFeatures">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_transient" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unsettable" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="derived" eType="#/5/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="changeable" eType="#/5/EBoolean"
          defaultValueLiteral="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ETypedElement" abstract="true" eSuperTypes="#/5/ENamedElement">
      <eOperations name="getterMany" eType="#/5/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getterRequired" eType="#/5/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBound" eType="#/5/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unique" eType="#/5/EBoolean"
          defaultValueLiteral="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eType" eType="#/5/EClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ordered" eType="#/5/EBoolean"
          defaultValueLiteral="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBound" eType="#/5/EInt"
          defaultValueLiteral="1"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericType" eType="#/5/EGenericType"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EStringToStringMapEntry" eSuperTypes="#/2/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/5/EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="#/5/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EGenericType" eSuperTypes="#/5/EObject">
      <eOperations name="getterERawType" eType="#/5/EClassifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EClassifier result = null;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeArguments" upperBound="-1"
          eType="#/5/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eUpperBound" eType="#/5/EGenericType"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifier" eType="#/5/EClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameter" eType="#/5/ETypeParameter"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eLowerBound" eType="#/5/EGenericType"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ETypeParameter" eSuperTypes="#/5/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eBounds" upperBound="-1"
          eType="#/5/EGenericType" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBigDecimal" instanceClassName="java.math.BigDecimal">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.math.BigDecimal"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBigInteger" instanceClassName="java.math.BigInteger">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.math.BigInteger"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBooleanObject" instanceClassName="java.lang.Boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByte" instanceClassName="byte">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="byte"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByteArray" instanceClassName="byte[]">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="byte[]"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByteObject" instanceClassName="java.lang.Byte">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Byte"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EChar" instanceClassName="char">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="char"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ECharacterObject" instanceClassName="java.lang.Character">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Character"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDate" instanceClassName="java.util.Date">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.util.Date"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDiagnosticChain" instanceClassName="org.eclipse.emf.common.util.DiagnosticChain"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.DiagnosticChain"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDouble" instanceClassName="double">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="double"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDoubleObject" instanceClassName="java.lang.Double">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Double"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EEList" instanceClassName="org.eclipse.emf.common.util.EList"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.EList"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="E"/>
      </eAnnotations>
      <eTypeParameters name="E"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFeatureMap" instanceClassName="org.eclipse.emf.ecore.util.FeatureMap"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.util.FeatureMap"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFeatureMapEntry" instanceClassName="org.eclipse.emf.ecore.util.FeatureMap$Entry"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::ecore::EFeatureMapEntry"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.util.FeatureMap$Entry"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFloat" instanceClassName="float">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="float"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFloatObject" instanceClassName="java.lang.Float">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Float"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EIntegerObject" instanceClassName="java.lang.Integer">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ELong" instanceClassName="long">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="long"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ELongObject" instanceClassName="java.lang.Long">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Long"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EMap" instanceClassName="java.util.Map"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.util.Map"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="K , V"/>
      </eAnnotations>
      <eTypeParameters name="K"/>
      <eTypeParameters name="V"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EResource" instanceClassName="org.eclipse.emf.ecore.resource.Resource"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.resource.Resource"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EResourceSet" instanceClassName="org.eclipse.emf.ecore.resource.ResourceSet"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.resource.ResourceSet"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EShort" instanceClassName="short">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="short"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EShortObject" instanceClassName="java.lang.Short">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Short"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ETreeIterator" instanceClassName="org.eclipse.emf.common.util.TreeIterator"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.TreeIterator"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="E"/>
      </eAnnotations>
      <eTypeParameters name="E"/>
    </eClassifiers>
  </ecore:EPackage>
</xmi:XMI>
