<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModelingUnit">
    <details key="require" value=""/>
    <details key="using" value="kermeta::language::structure|kermeta::standard|km2ecore|km2ecore::helper::java|kermeta::language|kermeta::language::behavior|km2ecore::helper|traceability|kermeta::compiler|ecore|kermeta::persistence|kermeta::utils|kermeta::exceptions|km2ecore::helper::kermeta|km2ecore::helper::ecore|simk|km2ecore::common::exception|km2ecore::common|km2ecore::helper::simk|kermeta::io|kermeta::kunit|kermeta::ecore|kermeta|kermeta::interpreter|"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="executable" value="true"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="mainClass" value="kermeta::compiler::Main"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="mainOperation" value="main_inner"/>
  </ecore:EAnnotation>
  <ecore:EAnnotation source="kermeta">
    <details key="executable" value="true"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta"/>
    </eAnnotations>
    <eAnnotations source="kermeta">
      <details key="documentation" value="/**&#xD;&#xA; * The root package. See the other packages if you want to browse the classes of Kermeta api.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kermeta_packages.png&quot;/>&#xD;&#xA; */"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/5/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
      </eAnnotations>
    </eClassifiers>
    <eSubpackages name="language" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xA; *&#xA; * func : &lt;Object -> Object> because we need to visit the tags.&#xA; *&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="usage" value="containment_traversable"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the implementation of Kermeta reflective collections.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DummyClass" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="This class is used to workaround an EMF bug, it doesn't really belong to Kermeta metamodel"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveCollection">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * ReflectiveCollection is a special collection that is used to define the type &#xD;&#xA; * of attributes that have an upper multiplicity > 1 in a class. It indeed handles&#xD;&#xA; * the update of opposite property if such an attribute has got one.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Collection&lt;G>.clear(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.remove(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::Set&lt;G>.add(G)&#xD;&#xA;&#x9; * Add an element to this collection and update its opposite property if it exists.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/language/ReflectiveCollection/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Set">
          <eTypeArguments eTypeParameter="#/5/language/ReflectiveCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ReflectiveSequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * ReflectiveSequence is an ordered ReflectiveCollection.&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.clear()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.ReflectiveCollectionSuper.super_clear(this, );&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.addAt(Integer)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.removeAt(Integer)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveSequenceUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.remove(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.ReflectiveCollectionSuper.super_remove(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::standard::OrderedSet.equals(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedSet"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = super.equals(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides kermeta::language::ReflectiveCollection&lt;G>.add(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::ReflectiveCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.language.ReflectiveCollectionSuper.super_add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/language/ReflectiveSequence/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/OrderedSet">
          <eTypeArguments eTypeParameter="#/5/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/5/language/ReflectiveCollection">
          <eTypeArguments eTypeParameter="#/5/language/ReflectiveSequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eSubpackages name="structure" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/structure"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Contains the concrete implementation (including the operation bodies) &#xD;&#xA; * of the classes of the &lt;code>kermeta::reflection&lt;/code> package.&#xD;&#xA; * If you need more documentation, please take a look at the&#xD;&#xA; * &lt;code>kermeta::reflection&lt;/code> package which is more complete.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_package.png&quot;/>&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/language_structure_visitor_view.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This Modeling Unit is used to define and store the traceability during the Km to Ecore process&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="usage" value="traceability"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for operation parameter"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="isBooleanFunctionType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_1 = false;&#xA;&#x9;idIfCond_1 = this.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_1 ) {&#xA;&#xA;&#x9;kermeta.language.structure.FunctionType ft = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_2 = false;&#xA;&#x9;idIfCond_2 = ft.getRight().isBooleanTypeDef(context);&#xA;&#xA;&#x9;if( idIfCond_2 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EParameter ecoreParameter = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_3 = false;&#xA;&#x9;idIfCond_3 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_3 ) {&#xA;&#xA;&#x9;ecoreParameter = ((ecore.EParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EParameter&quot;));&#xA;&#xA;&#x9;ecoreParameter.setName(this.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;Pass1 - inline&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecoreParameter = this.createEcoreModelElement(context);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.Operation o = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EParameter>convertAsOrderedSet(o.getEcoreModelElement().getEParameters()).add(ecoreParameter);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreParameter);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EParameter result = null;&#xA;&#xA;&#x9;ecore.EParameter ecoreParameter = ((ecore.EParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EParameter&quot;));&#xA;&#xA;&#x9;ecoreParameter.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;result = ecoreParameter;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_4 = false;&#xA;&#x9;idIfCond_4 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_4 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;setLinks FunctionType: &quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getType())), &quot; self.ecoreModelElement: &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getEcoreModelElement())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this)), &quot; &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this)))), &quot; &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this))))), &quot; &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))))), &quot; end&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(((km2ecore.helper.kermeta.GenericTypeDefinitionHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.GenericTypeDefinitionHelper&quot;)).getKermetaSpecialType(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))))));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;))).getName(), &quot; &quot;), ((kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;))).getName()), &quot; &quot;), this.getName()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getEcoreModelElement()));&#xA;&#xA;&#x9;kermeta.language.structure.FunctionType ft = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;this.getEcoreModelElement().setEType(((km2ecore.helper.kermeta.GenericTypeDefinitionHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.GenericTypeDefinitionHelper&quot;)).getKermetaSpecialType(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)))));&#xA;&#xA;&#x9;ecore.EAnnotation ft_annotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createEmpty(&quot;kermeta.functionType&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_5 = false;&#xA;&#x9;idIfCond_5 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ft.getLeft()));&#xA;&#xA;&#x9;if( idIfCond_5 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).addEntry(ft_annotation, &quot;0&quot;, ft.getLeft().getTypeQName());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_6 = false;&#xA;&#x9;idIfCond_6 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ft.getLeft()));&#xA;&#xA;&#x9;if( idIfCond_6 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).addEntry(ft_annotation, &quot;1&quot;, ft.getRight().getTypeQName());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(this.getEcoreModelElement().getEAnnotations()).add(ft_annotation);&#xA;&#xA;&#x9;ft.setEcoreModelElement(ft_annotation);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;SetLinks - inline - TODO inline of the FunctionType&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.LinkSetterForTypedElement s = ((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.LinkSetterForTypedElement&quot;));&#xA;&#xA;&#x9;s.setLinks(this, this.getEcoreModelElement(), context);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isFunctionType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Return true if the given operation is a FunctionType&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2BehaviorJava(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="operation" eType="#/5/language/structure/Operation"
              transient="true" eOpposite="#/5/language/structure/Operation/ownedParameter">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/MultiplicityElement"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EParameter"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; * TraceSource aspect keeps track of source information like the file name &#xA; * and the line number where objects are declared. This is used for Java generation.&#xA; * At runtime this information can be used for debug purpose or stack printing. &#xA; *&#xA; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Object definition: all entities of Kermeta metamodel explicitly inherit from Object"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_needProperty" value="name=oid javaClass=java.lang.Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_needProperty" value="name=container classDefinitionQN=kermeta::language::structure::Object"/>
          </eAnnotations>
          <eOperations name="interpretBooleanTag" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_7 = false;&#xA;&#x9;idIfCond_7 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getUniqueTagValue(str_tag), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_7 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_8 = false;&#xA;&#x9;idIfCond_8 = kermeta.standard.helper.StringWrapper.equals(this.getUniqueTagValue(str_tag), &quot;true&quot;);&#xA;&#xA;&#x9;if( idIfCond_8 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="str_tag" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isKindOf" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the current Object is an instance of the given Class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;cl&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cl" eType="#/5/language/structure/Class"/>
          </eOperations>
          <eOperations name="getMetaClass" eType="#/5/language/structure/Class">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Class object that is the metaclass of current Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass( this );&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets the &lt;code>element&lt;/code> to the &lt;code>~property&lt;/code> of the object &#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_9 = false;&#xA;&#x9;idIfCond_9 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;property.getType()&quot;));&#xA;&#xA;&#x9;if( idIfCond_9 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(this, property, element);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.IncompatibleTypeError e = ((kermeta.exceptions.IncompatibleTypeError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IncompatibleTypeError&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;IncompatibleTypeError : Cannot set property &quot;, property.getName()), &quot; of object &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this)), &quot; to &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element)), &quot;.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/5/language/structure/Property"/>
            <eParameters name="element" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft2 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_10 = false;&#xA;&#x9;while( !idLoopCond_10 ) {&#xA;&#x9;idLoopCond_10 = it_ft2.isOff();&#xA;&#x9;if ( idLoopCond_10 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag o = it_ft2.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag p = o_ft2;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_11 = false;&#xA;&#x9;idIfCond_11 = kermeta.standard.helper.StringWrapper.equals(p.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_11 ) {&#xA;&#xA;&#x9;p.applyPass2(context);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEMFEDataTypeInstanceClassName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the EDataType_instanceClassName&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;ecore.EDataType_instanceClassName&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getPropertyValue" eType="#/5/language/structure/Property">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Property result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDefinition = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Property result_ft3 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft3 = null;&#xA;&#xA;&#x9;result_ft3 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft3 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDefinition.getAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_12 = false;&#xA;&#x9;while( !idLoopCond_12 ) {&#xA;&#x9;idLoopCond_12 = kermeta.standard.helper.BooleanWrapper.or(it_ft3.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft3, null));&#xA;&#x9;if ( idLoopCond_12 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft3 = it_ft3.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_13 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Property p = elem_ft3;&#xA;&#xA;&#x9;idIfCond_13 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(p, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;))).getName(), propertyName);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_13 ) {&#xA;&#xA;&#x9;result_ft3 = elem_ft3;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;result = ((kermeta.language.structure.Property) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(result_ft3, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Property&quot;)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="propertyName" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getClassDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_14 = false;&#xA;&#x9;idIfCond_14 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd));&#xA;&#xA;&#x9;if( idIfCond_14 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft4 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_15 = false;&#xA;&#x9;while( !idLoopCond_15 ) {&#xA;&#x9;idLoopCond_15 = it_ft4.isOff();&#xA;&#x9;if ( idLoopCond_15 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property p = it_ft4.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object v = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, p);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_16 = false;&#xA;&#x9;idIfCond_16 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;if( idIfCond_16 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> c = ((kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(v, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_17 = false;&#xA;&#x9;idIfCond_17 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(c.size(), p.getLower()), kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)), kermeta.standard.helper.IntegerWrapper.isGreater(c.size(), p.getUpper())));&#xA;&#xA;&#x9;if( idIfCond_17 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_18 = false;&#xA;&#x9;idIfCond_18 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.equals(p.getLower(), 1), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(v));&#xA;&#xA;&#x9;if( idIfCond_18 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.ConstraintViolatedInv) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ConstraintViolatedInv&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(this);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getEMFInstanceClassName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the instanceClassName&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;EMF_instanceClassName&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isVoid" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Object is Void&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getAllContainedElementAsType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Never used for the moment */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft5 = org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).allAttributes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_19 = false;&#xA;&#x9;while( !idLoopCond_19 ) {&#xA;&#x9;idLoopCond_19 = it_ft5.isOff();&#xA;&#x9;if ( idLoopCond_19 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property attr = it_ft5.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(attr.getName());&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eClassifier="#/5/language/structure/Object"/>
            </eGenericType>
          </eOperations>
          <eOperations name="oid" eType="#/5/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the unique Oid of the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.getOID(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isInstanceOf" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the current Object conforms to given Type&#xD;&#xA;&#x9; * This means: is this object an instance of this type, or is it an instance of its subtype &#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, type.getClass().getName());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/5/language/structure/Type"/>
          </eOperations>
          <eOperations name="getTagValues">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the values for the tags having as key: &lt;key : String>&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> value_list = ((kermeta.standard.OrderedSet&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;java.lang.String>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft6 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_20 = false;&#xA;&#x9;while( !idLoopCond_20 ) {&#xA;&#x9;idLoopCond_20 = it_ft6.isOff();&#xA;&#x9;if ( idLoopCond_20 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag t = it_ft6.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_21 = false;&#xA;&#x9;idIfCond_21 = kermeta.standard.helper.StringWrapper.equals(t.getName(), key);&#xA;&#xA;&#x9;if( idIfCond_21 ) {&#xA;&#xA;&#x9;value_list.add(t.getValue());&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;result = value_list;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eClassifier="#/5/standard/JavaString"/>
            </eGenericType>
            <eParameters name="key" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursively runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;&#x9; * and its supertypes&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_22 = false;&#xA;&#x9;idIfCond_22 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this, null);&#xA;&#xA;&#x9;if( idIfCond_22 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkInvariants(this);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = null;&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft7 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(cd.getAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_23 = false;&#xA;&#x9;while( !idLoopCond_23 ) {&#xA;&#x9;idLoopCond_23 = it_ft7.isOff();&#xA;&#x9;if ( idLoopCond_23 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property subObj = it_ft7.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_24 = false;&#xA;&#x9;idIfCond_24 = subObj.getIsComposite();&#xA;&#xA;&#x9;if( idIfCond_24 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_25 = false;&#xA;&#x9;idIfCond_25 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, subObj)).getTypeDefinition().getName(), &quot;ReflectiveSequence&quot;), kermeta.standard.helper.StringWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, subObj)).getTypeDefinition().getName(), &quot;ReflectiveCollection&quot;));&#xA;&#xA;&#x9;if( idIfCond_25 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> subObjInstances = null;&#xA;&#xA;&#x9;subObjInstances = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, subObj);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft8 = subObjInstances.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_26 = false;&#xA;&#x9;while( !idLoopCond_26 ) {&#xA;&#x9;idLoopCond_26 = it_ft8.isOff();&#xA;&#x9;if ( idLoopCond_26 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Object aSubObjInstances = it_ft8.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(aSubObjInstances);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.checkAllInvariants(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, subObj));&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getCompiledJavaExtern" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the compiledJavaExtern call for replacing the current one&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;compiledJavaExtern&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getWrapperValueTypeSelfExpression" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the Wrapprings of ValueType's SelfExpression for tackle the  eplacing the current one&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;WrapperValueTypeSelfExpression&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft10 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_27 = false;&#xA;&#x9;while( !idLoopCond_27 ) {&#xA;&#x9;idLoopCond_27 = it_ft10.isOff();&#xA;&#x9;if ( idLoopCond_27 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag o = it_ft10.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag p = o_ft10;&#xA;&#xA;&#x9;p.applyPass2BehaviorJava(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getEMFNeedProperty">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the EMF_needProperty&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;java.lang.String> result = null;&#xA;&#xA;&#x9;result = this.getTagValues(&quot;EMF_needProperty&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eClassifier="#/5/standard/JavaString"/>
            </eGenericType>
          </eOperations>
          <eOperations name="getDeprecated" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the deprecated tag&#xA;&#x9; * Specific method for detecting the deprecated model elements&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;deprecated&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="mustBeAssigned" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSet" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * True if the &lt;code>~property&lt;/code> of the object has been set&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isSet(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/5/language/structure/Property"/>
          </eOperations>
          <eOperations name="getWrapperValueTypeReturnType" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the Wrapprings of ValueType's ReturnType for tackle the  eplacing the current one&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;WrapperValueTypeReturnType&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="get" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the instances of the given property for this Object.&#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * Example : &#xD;&#xA;&#x9; * &lt;pre>&#xD;&#xA;&#x9; * class A { reference attr : String }&#xD;&#xA;&#x9; * &lt;/pre>&#xD;&#xA;&#x9; * Using A :&#xD;&#xA;&#x9; * &lt;pre>&#xD;&#xA;&#x9; * operation getAProp() is do&#xD;&#xA;&#x9; *    var a : A&#xD;&#xA;&#x9; *    var s : String&#xD;&#xA;&#x9; *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xD;&#xA;&#x9; *    s ?= a.get(the_attr)&#xD;&#xA;&#x9; * end&#xD;&#xA;&#x9; * &lt;/pre>&#xD;&#xA;&#x9; * The user has to cast&#xD;&#xA;&#x9; * the result of this method according to the type and the upper multiplicity&#xD;&#xA;&#x9; * of this property. If upper multiplicity > 1, than the effective type of the &#xD;&#xA;&#x9; * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xD;&#xA;&#x9; * the name of the given Property (i.e the type of the property instance).&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, property);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/5/language/structure/Property"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorKmt" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value=""/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="equals" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * semantic equality,&#xD;&#xA;&#x9; * if you wish to test for object identity you need to use the method oid&#xD;&#xA;&#x9; * ex: x.oid == y.oid&#xD;&#xA;&#x9; * by default, (ie. if not overloaded), the equals method for class Object implements &#xD;&#xA;&#x9; * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xD;&#xA;&#x9; * reference values x and y, this method returns true if and only if x and y refer to the same &#xD;&#xA;&#x9; * object (x.oid == y.oid has the value true). &#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * note1: the operator == is mapped to this &#xD;&#xA;&#x9; * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this, element);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="getEMFIsTransient" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the isTransient&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.interpretBooleanTag(&quot;ecore.isTransient&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFrozen" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Object is currently in a&#xD;&#xA;&#x9; * frozen state&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ObjectUtil.isFrozen(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode" eType="#/5/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * code used in hashtable in order to identify an object in the hashtable keys&#xD;&#xA;&#x9; * This system is similar to the hashcode used in java. Please refer to java documentation&#xD;&#xA;&#x9; * for more information about hashcode&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.language.ObjectUtil.hashcode(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="callsFunctionType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_28 = false;&#xA;&#x9;idIfCond_28 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_28 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_29 = false;&#xA;&#x9;idIfCond_29 = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).isCallFeatureAsStaticOperation();&#xA;&#xA;&#x9;if( idIfCond_29 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_30 = false;&#xA;&#x9;idIfCond_30 = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticOperation().isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_30 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getUniqueTagValue" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the values for the tags having as key: &lt;key : String>&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> value_list = this.getTagValues(key);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_31 = false;&#xA;&#x9;idIfCond_31 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(value_list)), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(value_list.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_31 ) {&#xA;&#xA;&#x9;result = value_list.one();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="key" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="getContainerAsType" eType="#/5/language/structure/Object">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object obj = this;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_32 = false;&#xA;&#x9;while( !idLoopCond_32 ) {&#xA;&#x9;idLoopCond_32 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);&#xA;&#x9;if ( idLoopCond_32 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_33 = false;&#xA;&#x9;idIfCond_33 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;)));&#xA;&#xA;&#x9;if( idIfCond_33 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_34 = false;&#xA;&#x9;idIfCond_34 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj)));&#xA;&#xA;&#x9;if( idIfCond_34 ) {&#xA;&#xA;&#x9;obj = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj);&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/5/language/structure/Type"/>
          </eOperations>
          <eOperations name="getEMFEDataTypeIsSerializable" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the EDataType_isSerializable&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.interpretBooleanTag(&quot;ecore.EDataType_isSerializable&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNotEqual" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * See kermeta::language::structure::Object.equals(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this, element));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Remove the element set as the &lt;code>~property&lt;/code> of the object.&#xD;&#xA;&#x9; * The &lt;code>isSet(~property)&lt;/code> method will then return False&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unset(this, property);&#xA;"/>
            </eAnnotations>
            <eParameters name="property" eType="#/5/language/structure/Property"/>
          </eOperations>
          <eOperations name="container" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Object that contains current Object, void if the Object has&#xD;&#xA;&#x9; * no container&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Freeze the Object&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.freeze(this);&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="containingResource" eType="#/5/persistence/Resource">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Resource currently containing (directly or indirectly) the Object &#xD;&#xA;&#x9; * or void if the object belongs to no Resource&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.language.ObjectUtil.getContainingResource(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="asType" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implementation of OCL like cast. It returns self if the object object conforms to the type given as parameter.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeReturnType" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="WrapperValueTypeSelfExpression" value="java.lang.String=kermeta.language.structure.Object java.lang.Boolean=kermeta.language.structure.Object java.lang.Integer=kermeta.language.structure.Object java.lang.Double=kermeta.language.structure.Object java.lang.Character=kermeta.language.structure.Object java.lang.Number=kermeta.language.structure.Object"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_35 = false;&#xA;&#x9;idIfCond_35 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type&quot;));&#xA;&#xA;&#x9;if( idIfCond_35 ) {&#xA;&#xA;&#x9;result = this;&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.TypeCastError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.TypeCastError&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type" eType="#/5/language/structure/Class"/>
          </eOperations>
          <eOperations name="toString" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Object.toString()&#xD;&#xA; &#x9; * Returns a String of form [qn:oid] where 'qn' is the qualified name of&#xD;&#xA; &#x9; * the object type, and oid the unique ID of the object&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;[&quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getTypeDefinition().qualifiedName()), &quot;:&quot;), kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.language.ObjectUtil.oid(this))), &quot;]&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="file" eType="#/8/File">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** The calculated kmt file */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="tag" upperBound="-1"
              eType="#/5/language/structure/Tag" eOpposite="#/5/language/structure/Tag/object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An Object can be tagged by a Tag. &#xA;They are typically used to put comments/documentation on the object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="fileName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** The kmt file that declares the object. */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineNumber" eType="#/5/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** The line number where the object is declared in the source file. */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTags" upperBound="-1"
              eType="#/5/language/structure/Tag" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="An object can contains a Tag.  &#xA;Be careful, owning a tag doesn't means that the tag applies to the Object&#xA;To know which Tags apply to the object use the &quot;tag&quot; reference"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="oid" eType="#/5/language/structure/KermetaProperty_Object_oid"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="container" eType="#/5/language/structure/Object"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Alias to kermeta::standard::Integer"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Base class definition for the &lt;b>use&lt;/b> of a type."/>
          </eAnnotations>
          <eOperations name="isMappedToJavaRawType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_36 = false;&#xA;&#x9;idIfCond_36 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_36 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_37 = false;&#xA;&#x9;idIfCond_37 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_37 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isMappedToJavaRawType();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="clone" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a copy of passed Object built by recursively copying attribute&#xD;&#xA;&#x9; * properties, and referencing original reference properties values&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="kermeta.language.structure.Object result = null;&#xA;return result;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a copy of passed Object built by recursively copying values of&#xD;&#xA;&#x9; * all properties, no matter the property kind&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="kermeta.language.structure.Object result = null;&#xA;return result;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="isBooleanTypeDef" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Tests whether the Type t corresponds to the Kermeta Boolean type, which can be encoded&#xA;&#x9; * either as the Boolean PrimitiveType or the Boolean class.&#xA;&#x9; * @param t : Type&#xA;&#x9; * @return true or false&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_38 = false;&#xA;&#x9;idIfCond_38 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this));&#xA;&#xA;&#x9;if( idIfCond_38 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_39 = false;&#xA;&#x9;idIfCond_39 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_39 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeDefinition().getName(), &quot;Boolean&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_40 = false;&#xA;&#x9;idIfCond_40 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_40 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_41 = false;&#xA;&#x9;idIfCond_41 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;kermeta::standard::Boolean&quot;), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;kermeta::language::structure::Boolean&quot;)), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;java.lang.Boolean&quot;)), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context), &quot;Boolean&quot;));&#xA;&#xA;&#x9;if( idIfCond_41 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getClassFromPrimitiveType" eType="#/5/language/structure/Class">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Class result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_42 = false;&#xA;&#x9;idIfCond_42 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_42 ) {&#xA;&#xA;&#x9;kermeta.language.structure.PrimitiveType pt = ((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_43 = false;&#xA;&#x9;idIfCond_43 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(pt.getInstanceType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_43 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(pt.getInstanceType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = pt.getInstanceType().getClassFromPrimitiveType();&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = null;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isValueType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Type theType = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_44 = false;&#xA;&#x9;idIfCond_44 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_44 ) {&#xA;&#xA;&#x9;theType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getClassFromPrimitiveType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Type&quot;)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;theType = this;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_45 = false;&#xA;&#x9;idIfCond_45 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theType, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;));&#xA;&#xA;&#x9;if( idIfCond_45 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ParameterizedType pt = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theType, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_46 = false;&#xA;&#x9;idIfCond_46 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(pt.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_46 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(pt.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getTypeName" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_47 = false;&#xA;&#x9;idIfCond_47 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_47 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_48 = false;&#xA;&#x9;idIfCond_48 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_48 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;result = otv.getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_49 = false;&#xA;&#x9;idIfCond_49 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_49 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = this.getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_50 = false;&#xA;&#x9;idIfCond_50 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;void&quot;));&#xA;&#xA;&#x9;if( idIfCond_50 ) {&#xA;&#xA;&#x9;result = &quot;void&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_51 = false;&#xA;&#x9;idIfCond_51 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(result);&#xA;&#xA;&#x9;if( idIfCond_51 ) {&#xA;&#xA;&#x9;result = &quot;void&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNumericalTypeDef" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Tests whether the Type t corresponds to a Kermeta numerical type, which can be encoded&#xA;&#x9; * either as the Integer/Real PrimitiveType or the Integer/Real class.&#xA;&#x9; * @param t : Type&#xA;&#x9; * @return true or false&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_52 = false;&#xA;&#x9;idIfCond_52 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this));&#xA;&#xA;&#x9;if( idIfCond_52 ) {&#xA;&#xA;&#x9;java.lang.String tName = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_53 = false;&#xA;&#x9;idIfCond_53 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_53 ) {&#xA;&#xA;&#x9;tName = ((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_54 = false;&#xA;&#x9;idIfCond_54 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(tName, &quot;Integer&quot;), kermeta.standard.helper.StringWrapper.equals(tName, &quot;Real&quot;));&#xA;&#xA;&#x9;if( idIfCond_54 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_55 = false;&#xA;&#x9;idIfCond_55 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_55 ) {&#xA;&#xA;&#x9;tName = ((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_56 = false;&#xA;&#x9;idIfCond_56 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(tName, &quot;Integer&quot;), kermeta.standard.helper.StringWrapper.equals(tName, &quot;Real&quot;));&#xA;&#xA;&#x9;if( idIfCond_56 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getTypeQName" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_57 = false;&#xA;&#x9;idIfCond_57 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_57 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_58 = false;&#xA;&#x9;idIfCond_58 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_58 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;result = otv.qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_59 = false;&#xA;&#x9;idIfCond_59 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_59 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = this.getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;result = cd.qualifiedName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_60 = false;&#xA;&#x9;idIfCond_60 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;void&quot;));&#xA;&#xA;&#x9;if( idIfCond_60 ) {&#xA;&#xA;&#x9;result = &quot;void&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_61 = false;&#xA;&#x9;idIfCond_61 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(result);&#xA;&#xA;&#x9;if( idIfCond_61 ) {&#xA;&#xA;&#x9;result = &quot;void&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isPrimitiveType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Type.isSubTypeOf(Type)&#xD;&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xD;&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xD;&#xA; &#x9; * to extend it.&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.TypeUtil.isSuperTypeOf(object, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;this&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/5/language/structure/Type"/>
          </eOperations>
          <eOperations name="isEDataType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_62 = false;&#xA;&#x9;idIfCond_62 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getEMFEDataTypeInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_62 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isSuperTypeOf" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Implements Type.isSuperTypeOf(Type)&#xD;&#xA; &#x9; * For technical reason, the current implementation works only with Type that comes from a kermeta declaration (ie. in a require)&#xD;&#xA; &#x9; * it won't work with Type created programmaticaly by the user. If you need that, please ask to the kermeta developpers&#xD;&#xA; &#x9; * to extend it.&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.TypeUtil.hasSubType(this, object);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="object" eType="#/5/language/structure/Type"/>
          </eOperations>
          <eOperations name="isInstance" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implements Type.isInstance(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="RecopyInValueTypes" value="true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;this&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="isEnumeration" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeContainer" eType="#/5/language/structure/TypeContainer"
              eOpposite="#/5/language/structure/TypeContainer/containedType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning TypeContainer, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The definition of a class definition :)&#xA; &lt;pre>class A&#xA;{ &#xA;  attribute s : String&#xA;}&#xA;  &lt;/pre> is a class definition; in :&#xA;&lt;pre>&#xA;main() : A is do end&#xA;&lt;/pre>&#xA;A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="isMappedToJavaRawType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_63 = false;&#xA;&#x9;idIfCond_63 = kermeta.standard.helper.BooleanWrapper.or(this.isCollection(), this.isIterator());&#xA;&#xA;&#x9;if( idIfCond_63 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isIterator" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;result = this.isSubTypeOf(&quot;kermeta::standard::Iterator&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_64 = false;&#xA;&#x9;idIfCond_64 = kermeta.standard.helper.StringWrapper.equals(this.qualifiedName(), &quot;kermeta::standard::Iterator&quot;);&#xA;&#xA;&#x9;if( idIfCond_64 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isCollection" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;result = this.isSubTypeOf(&quot;kermeta::standard::Collection&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_65 = false;&#xA;&#x9;idIfCond_65 = kermeta.standard.helper.StringWrapper.equals(this.qualifiedName(), &quot;kermeta::standard::Collection&quot;);&#xA;&#xA;&#x9;if( idIfCond_65 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="try {&#xA;&#x9;kermeta.language.structure.Package p = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_66 = false;&#xA;&#x9;idIfCond_66 = this.isValueType();&#xA;&#xA;&#x9;if( idIfCond_66 ) {&#xA;&#xA;&#x9;java.lang.String instanceClassName = this.getEMFInstanceClassName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_67 = false;&#xA;&#x9;idIfCond_67 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(instanceClassName, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_67 ) {&#xA;&#xA;&#x9;ecore.EDataType eDataType = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EDataType&quot;));&#xA;&#xA;&#x9;eDataType.setName(kermeta.standard.helper.StringWrapper.plus(&quot;Java&quot;, this.getName()));&#xA;&#xA;&#x9;eDataType.setInstanceClassName(instanceClassName);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(eDataType);&#xA;&#xA;&#x9;this.setEcoreDataType(eDataType);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_68 = false;&#xA;&#x9;idIfCond_68 = kermeta.standard.helper.BooleanWrapper.not(this.getIsAbstract());&#xA;&#xA;&#x9;if( idIfCond_68 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException&quot;)) );&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecore.EClass ecoreClass = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(ecoreClass);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreClass);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft12 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(this.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_69 = false;&#xA;&#x9;while( !idLoopCond_69 ) {&#xA;&#x9;idLoopCond_69 = it_ft12.isOff();&#xA;&#x9;if ( idLoopCond_69 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property o = it_ft12.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property o = o_ft12;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_70 = false;&#xA;&#x9;idIfCond_70 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(o, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;if( idIfCond_70 ) {&#xA;&#xA;&#x9;o.applyPass1(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(o, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_71 = false;&#xA;&#x9;idIfCond_71 = kermeta.standard.helper.BooleanWrapper.not(op.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_71 ) {&#xA;&#xA;&#x9;op.applyPass1(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft13 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_72 = false;&#xA;&#x9;while( !idLoopCond_72 ) {&#xA;&#x9;idLoopCond_72 = it_ft13.isOff();&#xA;&#x9;if ( idLoopCond_72 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Operation o = it_ft13.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft14 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_73 = false;&#xA;&#x9;while( !idLoopCond_73 ) {&#xA;&#x9;idLoopCond_73 = it_ft14.isOff();&#xA;&#x9;if ( idLoopCond_73 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Constraint i = it_ft14.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft15 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_74 = false;&#xA;&#x9;while( !idLoopCond_74 ) {&#xA;&#x9;idLoopCond_74 = it_ft15.isOff();&#xA;&#x9;if ( idLoopCond_74 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeVariable t = it_ft15.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;}&#xA;&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_1 ) {&#xA;if( ex_switcher_1.getRealException() instanceof km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException ) {&#xA;km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException e = (km2ecore.common.exception.UndefinedValueTypeInstanceClassNameException) ex_switcher_1.getRealException();&#xA;{&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.errorln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;The class definition: &quot;, this.qualifiedName()), &quot; is a ValueType, but the tag: @EMF_instanceClassName has not been correctly setted, please check this one in the *.km file that you try to load.&quot;));&#xA;}&#xA;}&#xA;}&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EClass">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;ecore.EClass ecoreClass = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClass&quot;));&#xA;&#xA;&#x9;ecoreClass.setInterface(false);&#xA;&#xA;&#x9;ecoreClass.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;ecoreClass.setAbstract(this.getIsAbstract());&#xA;&#xA;&#x9;result = ecoreClass;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isValueType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.isSubTypeOf(&quot;kermeta::standard::ValueType&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft16 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_75 = false;&#xA;&#x9;while( !idLoopCond_75 ) {&#xA;&#x9;idLoopCond_75 = it_ft16.isOff();&#xA;&#x9;if ( idLoopCond_75 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Type t = it_ft16.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_76 = false;&#xA;&#x9;idIfCond_76 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(t, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_76 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDefinition = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(t, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_77 = false;&#xA;&#x9;idIfCond_77 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getEcoreModelElement()));&#xA;&#xA;&#x9;if( idIfCond_77 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_78 = false;&#xA;&#x9;idIfCond_78 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(classDefinition.getEcoreModelElement()));&#xA;&#xA;&#x9;if( idIfCond_78 ) {&#xA;&#xA;&#x9;ecore.EGenericType new_eGenericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;new_eGenericType.setEClassifier(classDefinition.getEcoreModelElement());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getEGenericSuperTypes()).add(new_eGenericType);&#xA;&#xA;&#x9;((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(t, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).setEcoreModelElement(new_eGenericType);&#xA;&#xA;&#x9;((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(t, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).setLinks(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_79 = false;&#xA;&#x9;idIfCond_79 = kermeta.standard.helper.BooleanWrapper.and(this.isValueType(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getName(), &quot;Numeric&quot;));&#xA;&#xA;&#x9;if( idIfCond_79 ) {&#xA;&#xA;&#x9;context.setCurrent_valueType(this);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft17 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_80 = false;&#xA;&#x9;while( !idLoopCond_80 ) {&#xA;&#x9;idLoopCond_80 = it_ft17.isOff();&#xA;&#x9;if ( idLoopCond_80 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Operation op = it_ft17.next();&#xA;&#xA;&#x9;op.applyPass2BehaviorJava(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft18 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_81 = false;&#xA;&#x9;while( !idLoopCond_81 ) {&#xA;&#x9;idLoopCond_81 = it_ft18.isOff();&#xA;&#x9;if ( idLoopCond_81 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Type t = it_ft18.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_82 = false;&#xA;&#x9;idIfCond_82 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;t&quot;));&#xA;&#xA;&#x9;if( idIfCond_82 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.Class) t;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cDef = null;&#xA;&#xA;&#x9;cDef = (kermeta.language.structure.ClassDefinition) c.getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft19 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsSet(cDef.getAllOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_83 = false;&#xA;&#x9;while( !idLoopCond_83 ) {&#xA;&#x9;idLoopCond_83 = it_ft19.isOff();&#xA;&#x9;if ( idLoopCond_83 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Operation p = it_ft19.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_84 = false;&#xA;&#x9;idIfCond_84 = kermeta.standard.helper.StringWrapper.equals(p.getRecopyInValueTypes(), &quot;true&quot;);&#xA;&#xA;&#x9;if( idIfCond_84 ) {&#xA;&#xA;&#x9;p.applyPass2BehaviorJava(context);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;context.setCurrent_valueType(null);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2BehaviorJava(this, context);&#xA;}&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft20 = this.getEMFNeedProperty().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_85 = false;&#xA;&#x9;while( !idLoopCond_85 ) {&#xA;&#x9;idLoopCond_85 = it_ft20.isOff();&#xA;&#x9;if ( idLoopCond_85 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;java.lang.String emfNeedProperty = it_ft20.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_86 = false;&#xA;&#x9;idIfCond_86 = kermeta.standard.helper.IntegerWrapper.isGreater(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_86 ) {&#xA;&#xA;&#x9;ecore.EStructuralFeature newProperty = ((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EAttribute&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_87 = false;&#xA;&#x9;idIfCond_87 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;javaClass&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;javaClass&quot;), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_87 ) {&#xA;&#xA;&#x9;newProperty = ((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EAttribute&quot;));&#xA;&#xA;&#x9;newProperty.setName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;name&quot;));&#xA;&#xA;&#x9;newProperty.setTransient(false);&#xA;&#xA;&#x9;ecore.EDataType newProperty_EDataType = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EDataType&quot;));&#xA;&#xA;&#x9;newProperty_EDataType.setName(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;KermetaProperty_&quot;, this.getName()), &quot;_&quot;), kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;name&quot;)));&#xA;&#xA;&#x9;newProperty_EDataType.setInstanceClassName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;javaClass&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).getEcoreModelElement().getEClassifiers()).add(newProperty_EDataType);&#xA;&#xA;&#x9;ecore.EGenericType newJavaCollection_EGenericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;newJavaCollection_EGenericType.setEClassifier(newProperty_EDataType);&#xA;&#xA;&#x9;newProperty.setEGenericType(newJavaCollection_EGenericType);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_88 = false;&#xA;&#x9;idIfCond_88 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_88 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.ETypeParameter> it_ft21 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_89 = false;&#xA;&#x9;while( !idLoopCond_89 ) {&#xA;&#x9;idLoopCond_89 = it_ft21.isOff();&#xA;&#x9;if ( idLoopCond_89 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;ecore.ETypeParameter etp = it_ft21.next();&#xA;&#xA;&#x9;ecore.ETypeParameter newEtp = ((ecore.ETypeParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.ETypeParameter&quot;));&#xA;&#xA;&#x9;newEtp.setName(etp.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(newProperty_EDataType.getETypeParameters()).add(newEtp);&#xA;&#xA;&#x9;ecore.EGenericType eta = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;eta.setETypeParameter(etp);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(newProperty.getEGenericType().getETypeArguments()).add(eta);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_90 = false;&#xA;&#x9;idIfCond_90 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;classDefinitionQN&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;classDefinitionQN&quot;), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_90 ) {&#xA;&#xA;&#x9;newProperty = ((ecore.EReference) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EReference&quot;));&#xA;&#xA;&#x9;newProperty.setName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;name&quot;));&#xA;&#xA;&#x9;newProperty.setTransient(false);&#xA;&#xA;&#x9;ecore.EClassifier retrieved_EClassifier = context.getMu().getEClassifierByQualifiedName(kermeta.standard.helper.StringWrapper.getPropertyInfos(emfNeedProperty).getValue(&quot;classDefinitionQN&quot;));&#xA;&#xA;&#x9;ecore.EGenericType newJavaCollection_EGenericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;newJavaCollection_EGenericType.setEClassifier(retrieved_EClassifier);&#xA;&#xA;&#x9;newProperty.setEGenericType(newJavaCollection_EGenericType);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_91 = false;&#xA;&#x9;idIfCond_91 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_91 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.ETypeParameter> it_ft22 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(this.getEcoreModelElement().getETypeParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_92 = false;&#xA;&#x9;while( !idLoopCond_92 ) {&#xA;&#x9;idLoopCond_92 = it_ft22.isOff();&#xA;&#x9;if ( idLoopCond_92 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;ecore.ETypeParameter etp = it_ft22.next();&#xA;&#xA;&#x9;ecore.EGenericType eta = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;eta.setETypeParameter(etp);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(newProperty.getEGenericType().getETypeArguments()).add(eta);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;newProperty.setTransient(true);&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition retrievedTypeDef = context.getMu().getTypeDefinitionByQualifiedName(&quot;ecore::EEList&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_93 = false;&#xA;&#x9;idIfCond_93 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_93 ) {&#xA;&#xA;&#x9;newProperty.setEType(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_94 = false;&#xA;&#x9;idIfCond_94 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_94 ) {&#xA;&#xA;&#x9;newProperty.setEType(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(retrievedTypeDef, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;))).getEStructuralFeatures()).add(newProperty);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isSubTypeOf" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Type res = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Type result_ft23 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Type elem_ft23 = null;&#xA;&#xA;&#x9;result_ft23 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft23 = this.allSuperTypes().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_95 = false;&#xA;&#x9;while( !idLoopCond_95 ) {&#xA;&#x9;idLoopCond_95 = kermeta.standard.helper.BooleanWrapper.or(it_ft23.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft23, null));&#xA;&#x9;if ( idLoopCond_95 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft23 = it_ft23.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_96 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Type st = elem_ft23;&#xA;&#xA;&#x9;idIfCond_96 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(st, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;)), kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(st, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition().qualifiedName(), superType_qualifiedName));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_96 ) {&#xA;&#xA;&#x9;result_ft23 = elem_ft23;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;res = result_ft23;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_97 = false;&#xA;&#x9;idIfCond_97 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(res));&#xA;&#xA;&#x9;if( idIfCond_97 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="superType_qualifiedName" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="allSuperTypes">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Type> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> allSuperClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Type>&quot;));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> superClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Type>&quot;));&#xA;&#xA;&#x9;superClasses.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getSuperType()));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.not(superClasses.isEmpty());&#xA;&#x9;java.lang.Boolean idLoopCond_98 = false;&#xA;&#x9;while( !idLoopCond_98 ) {&#xA;&#x9;idLoopCond_98 = superClasses.isEmpty();&#xA;&#x9;if ( idLoopCond_98 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;allSuperClasses.addAll(superClasses);&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Type> temp = ((kermeta.standard.Set&lt;kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Type>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft24 = superClasses.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_99 = false;&#xA;&#x9;while( !idLoopCond_99 ) {&#xA;&#x9;idLoopCond_99 = it_ft24.isOff();&#xA;&#x9;if ( idLoopCond_99 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Type s = it_ft24.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_100 = false;&#xA;&#x9;idIfCond_100 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(s, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(s, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;if( idIfCond_100 ) {&#xA;&#xA;&#x9;temp.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.ParameterizedType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(s, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ParameterizedType&quot;))).getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getSuperType()));&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;superClasses.clear();&#xA;&#xA;&#x9;superClasses.addAll(temp);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = allSuperClasses;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eClassifier="#/5/language/structure/Type"/>
            </eGenericType>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
              eType="#/5/language/structure/Operation" containment="true" eOpposite="#/5/language/structure/Operation/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Operations owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the ClassDefinition is abstract (which means that&#xA;no instance can be allocated)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superType" upperBound="-1"
              eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Classes from which this ClassDefinition inherits."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="inv" upperBound="-1"
              eType="#/5/language/structure/Constraint" containment="true" eOpposite="#/5/language/structure/Constraint/invOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Invariants defined for this ClassDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allOperation" ordered="false"
              upperBound="-1" eType="#/5/language/structure/Operation" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns all the Operations of this ClassDefinition&#xD;&#xA;&#x9; * including the inherited ones&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allAttribute" ordered="false"
              upperBound="-1" eType="#/5/language/structure/Property" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns all the Attributes, References, derived Properties of this &#xD;&#xA;&#x9; * ClassDefinition including the inherited ones&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
              eType="#/5/language/structure/Property" containment="true" eOpposite="#/5/language/structure/Property/owningClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Attributes, References, and derived Properties owned by this ClassDefinition."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ecoreDataType" eType="#/7/EDataType"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/GenericTypeDefinition"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/TypeContainer"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EClass"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Returns the Attributes, References, and derived Properties owned by&#xA;the ClassDefinition of this Class."/>
          </eAnnotations>
          <eOperations name="clone" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.cloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.deepCloneObject(this, objectToClone);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="_new" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Instantiates a new occurence for this Class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(this.getClass().getName());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="allAttributes">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Never used for the moment */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Property> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Property> properties = ((kermeta.standard.Set&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Property>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Property> result_ft25 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft25 = null;&#xA;&#xA;&#x9;result_ft25 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.language.structure.Property>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft25 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(this.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_101 = false;&#xA;&#x9;while( !idLoopCond_101 ) {&#xA;&#x9;idLoopCond_101 = it_ft25.isOff();&#xA;&#x9;if ( idLoopCond_101 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft25 = it_ft25.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_102 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.language.structure.Property p = elem_ft25;&#xA;&#xA;&#x9;idIfCond_102 = p.getIsComposite();&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_102 ) {&#xA;&#xA;&#x9;result_ft25.add(elem_ft25);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;properties.addAll(RETURN_EXPRESSION_TO_REPLACEresult_ft25.);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft26 = this.allSuperClasses().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_103 = false;&#xA;&#x9;while( !idLoopCond_103 ) {&#xA;&#x9;idLoopCond_103 = it_ft26.isOff();&#xA;&#x9;if ( idLoopCond_103 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Class s = it_ft26.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Property> result_ft27 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft27 = null;&#xA;&#xA;&#x9;result_ft27 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Property>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.language.structure.Property>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft27 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(s.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_104 = false;&#xA;&#x9;while( !idLoopCond_104 ) {&#xA;&#x9;idLoopCond_104 = it_ft27.isOff();&#xA;&#x9;if ( idLoopCond_104 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft27 = it_ft27.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_105 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.language.structure.Property p = elem_ft27;&#xA;&#xA;&#x9;idIfCond_105 = p.getIsComposite();&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_105 ) {&#xA;&#xA;&#x9;result_ft27.add(elem_ft27);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;properties.addAll(RETURN_EXPRESSION_TO_REPLACEresult_ft27.);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;result = properties;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eClassifier="#/5/language/structure/Property"/>
            </eGenericType>
          </eOperations>
          <eOperations name="allSuperClasses">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** Never used for the moment */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Class> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Class> allSuperClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Class>&quot;));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Class> superClasses = ((kermeta.standard.Set&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Class>&quot;));&#xA;&#xA;&#x9;superClasses.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsSet(this.getSuperClass()));&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Class> temp = ((kermeta.standard.Set&lt;kermeta.language.structure.Class>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Class>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.BooleanWrapper.not(superClasses.isEmpty());&#xA;&#x9;java.lang.Boolean idLoopCond_106 = false;&#xA;&#x9;while( !idLoopCond_106 ) {&#xA;&#x9;idLoopCond_106 = superClasses.isEmpty();&#xA;&#x9;if ( idLoopCond_106 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;allSuperClasses.addAll(superClasses);&#xA;&#xA;&#x9;temp.clear();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft28 = superClasses.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_107 = false;&#xA;&#x9;while( !idLoopCond_107 ) {&#xA;&#x9;idLoopCond_107 = it_ft28.isOff();&#xA;&#x9;if ( idLoopCond_107 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Class s = it_ft28.next();&#xA;&#xA;&#x9;temp.addAll(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsSet(s.getSuperClass()));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;superClasses.clear();&#xA;&#xA;&#x9;superClasses.addAll(temp);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = allSuperClasses;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eClassifier="#/5/language/structure/Class"/>
            </eGenericType>
          </eOperations>
          <eOperations name="equals" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ClassUtil.equals(this, other);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="other" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="getClassDefinitionAsTyped" eType="#/5/language/structure/ClassDefinition">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.ClassDefinition result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_108 = false;&#xA;&#x9;idIfCond_108 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_108 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getTypeDefinition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="toString" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the String representation of this class. &#xD;&#xA;&#x9; *  Note : throws an exception if this class has no classDefinition&#xD;&#xA;&#x9; *  or if the classDefinition is not well constructed.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getTypeDefinition().getName();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariableBinding> it_ft29 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(this.getTypeParamBinding()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_109 = false;&#xA;&#x9;while( !idLoopCond_109 ) {&#xA;&#x9;idLoopCond_109 = it_ft29.isOff();&#xA;&#x9;if ( idLoopCond_109 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeVariableBinding tpb = it_ft29.next();&#xA;&#xA;&#x9;ecore.EGenericType typeArgument = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_110 = false;&#xA;&#x9;idIfCond_110 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_110 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_111 = false;&#xA;&#x9;idIfCond_111 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_111 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreDataType());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_112 = false;&#xA;&#x9;idIfCond_112 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_112 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;typeArgument.setETypeParameter(otv.getEcoreModelElement());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_113 = false;&#xA;&#x9;idIfCond_113 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_113 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = tpb.getType().getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_114 = false;&#xA;&#x9;idIfCond_114 = tpb.getType().isEDataType();&#xA;&#xA;&#x9;if( idIfCond_114 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_115 = false;&#xA;&#x9;idIfCond_115 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_115 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreDataType());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(this.getEcoreModelElement().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_116 = false;&#xA;&#x9;idIfCond_116 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;void&quot;));&#xA;&#xA;&#x9;if( idIfCond_116 ) {&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2BehaviorJava(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" ordered="false"
              upperBound="-1" eType="#/5/language/structure/Operation" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" ordered="false"
              upperBound="-1" eType="#/5/language/structure/Class" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="false"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Returns a Boolean stating whether ClassDefinition of this Class is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/5/standard/JavaString"
              derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="false"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Returns the name of the ClassDefinition of this Class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              eType="#/5/language/structure/ClassDefinition" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the ClassDefinition for this class&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
              eType="#/5/language/structure/Property" derived="true">
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="false"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Returns the Attributes, References, and derived Properties owned by&#xA;the ClassDefinition of this Class."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/ParameterizedType"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EGenericType"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Operation">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** We have to visit operation in order to print the result initialization and the return statement */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Every one knows what an operation is."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.utils.StringBuffer javaCode = ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_117 = false;&#xA;&#x9;idIfCond_117 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getBody()));&#xA;&#xA;&#x9;if( idIfCond_117 ) {&#xA;&#xA;&#x9;java.lang.String type_label = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_118 = false;&#xA;&#x9;idIfCond_118 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_118 ) {&#xA;&#xA;&#x9;type_label = context.getFtReturnType();&#xA;&#xA;&#x9;context.setFtReturnType(&quot;&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;type_label = this.getType().createBehaviorJava(context);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_119 = false;&#xA;&#x9;idIfCond_119 = kermeta.standard.helper.BooleanWrapper.not(this.isVoidType(type_label));&#xA;&#xA;&#x9;if( idIfCond_119 ) {&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, type_label), &quot; result&quot;), context.printFtSuffix()), &quot; = null;\n&quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode.append(this.getBody().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_120 = false;&#xA;&#x9;idIfCond_120 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.isVoidType(type_label)), kermeta.standard.helper.BooleanWrapper.not(context.getFtSuffixActivation()));&#xA;&#xA;&#x9;if( idIfCond_120 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;\nreturn result;\n&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_121 = false;&#xA;&#x9;idIfCond_121 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(this.getType().getTypeQName()));&#xA;&#xA;&#x9;if( idIfCond_121 ) {&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(this.getType().createBehaviorJava(context), &quot; result = null;\nreturn result;&quot;));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_122 = false;&#xA;&#x9;idIfCond_122 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(context.getTasks_stack().peek(), &quot;FunctionType_Compilation&quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(context.getCurrent_valueType()));&#xA;&#xA;&#x9;if( idIfCond_122 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).addAnnotationGenModelImpl(this.getEcoreModelElement(), javaCode.toString());&#xA;}&#xA;&#xA;&#xA;&#x9;result = javaCode.toString();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getOptimizedStaticCall" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_123 = false;&#xA;&#x9;idIfCond_123 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;));&#xA;&#xA;&#x9;if( idIfCond_123 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_124 = false;&#xA;&#x9;idIfCond_124 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()).size(), 1);&#xA;&#xA;&#x9;if( idIfCond_124 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_125 = false;&#xA;&#x9;idIfCond_125 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;));&#xA;&#xA;&#x9;if( idIfCond_125 ) {&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> static_call_set_1 = kermeta.standard.helper.StringWrapper.split(((kermeta.language.behavior.JavaStaticCall) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;))).createBehaviorJava(context), &quot;(&quot;);&#xA;&#xA;&#x9;result = static_call_set_1.one();&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_126 = false;&#xA;&#x9;idIfCond_126 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;));&#xA;&#xA;&#x9;if( idIfCond_126 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_127 = false;&#xA;&#x9;idIfCond_127 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;));&#xA;&#xA;&#x9;if( idIfCond_127 ) {&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> static_call_set_2 = kermeta.standard.helper.StringWrapper.split(((kermeta.language.behavior.JavaStaticCall) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(((kermeta.language.behavior.Block) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getBody(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))).getStatement()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.JavaStaticCall&quot;))).createBehaviorJava(context), &quot;(&quot;);&#xA;&#xA;&#x9;result = static_call_set_2.one();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="mustBeCompiled" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Helper method to determine if an operation has to be compiled&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd_container = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_128 = false;&#xA;&#x9;idIfCond_128 = cd_container.isValueType();&#xA;&#xA;&#x9;if( idIfCond_128 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_129 = false;&#xA;&#x9;idIfCond_129 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(cd_container.getEMFInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_129 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EOperation ecoreOperation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(c.getEcoreModelElement().getEOperations()).add(ecoreOperation);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreOperation);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft31 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_130 = false;&#xA;&#x9;while( !idLoopCond_130 ) {&#xA;&#x9;idLoopCond_130 = it_ft31.isOff();&#xA;&#x9;if ( idLoopCond_130 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Parameter o = it_ft31.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Parameter o = o_ft31;&#xA;&#xA;&#x9;o.applyPass1(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft32 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPre()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_131 = false;&#xA;&#x9;while( !idLoopCond_131 ) {&#xA;&#x9;idLoopCond_131 = it_ft32.isOff();&#xA;&#x9;if ( idLoopCond_131 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Constraint o = it_ft32.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft33 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getPost()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_132 = false;&#xA;&#x9;while( !idLoopCond_132 ) {&#xA;&#x9;idLoopCond_132 = it_ft33.isOff();&#xA;&#x9;if ( idLoopCond_132 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Constraint o = it_ft33.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft34 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_133 = false;&#xA;&#x9;while( !idLoopCond_133 ) {&#xA;&#x9;idLoopCond_133 = it_ft34.isOff();&#xA;&#x9;if ( idLoopCond_133 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeVariable t = it_ft34.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_134 = false;&#xA;&#x9;idIfCond_134 = kermeta.standard.helper.BooleanWrapper.not(this.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_134 ) {&#xA;&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2(this, context);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;kermeta.language.structure.LinkSetterForTypedElement s = ((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.LinkSetterForTypedElement&quot;));&#xA;&#xA;&#x9;s.setLinks(this, this.getEcoreModelElement(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_135 = false;&#xA;&#x9;idIfCond_135 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getSuperOperation()));&#xA;&#xA;&#x9;if( idIfCond_135 ) {&#xA;&#xA;&#x9;java.lang.String qualifiedName = this.getSuperOperation().getOwningClass().qualifiedName();&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;superOperation&quot;).getName()), qualifiedName);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(this.getEcoreModelElement().getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isFunctionType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Return true if the given operation is a FunctionType&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_136 = false;&#xA;&#x9;idIfCond_136 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getFunctionTypeParameter())), kermeta.standard.helper.IntegerWrapper.isGreater(this.getFunctionTypeParameter().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_136 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="compilingInSimkMode">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9;&#x9; * Compiling in Simk mode all the methods (inherited methods included) from ValueType&#xA;&#x9;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;simk.SMContext sMContext = context.getSimkModel().retrieveOrCreateContextForWrapper(this, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_137 = false;&#xA;&#x9;idIfCond_137 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(sMContext));&#xA;&#xA;&#x9;if( idIfCond_137 ) {&#xA;&#xA;&#x9;simk.StaticMethod staticMethod = ((simk.StaticMethod) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.StaticMethod&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.StaticMethod>convertAsOrderedSet(context.getSimkModel().getStaticMethods()).add(staticMethod);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.StaticMethod>convertAsOrderedSet(sMContext.getStaticMethods()).add(staticMethod);&#xA;&#xA;&#x9;staticMethod.setName(this.getName());&#xA;&#xA;&#x9;staticMethod.setWrapperUsage();&#xA;&#xA;&#x9;simk.SMParameter self_param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMParameter&quot;));&#xA;&#xA;&#x9;self_param.setName(&quot;self&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_138 = false;&#xA;&#x9;idIfCond_138 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getWrapperValueTypeSelfExpression(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_138 ) {&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = kermeta.standard.helper.StringWrapper.getPropertyInfos(this.getWrapperValueTypeSelfExpression());&#xA;&#xA;&#x9;java.lang.String map_value = map_infos.getValue(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_139 = false;&#xA;&#x9;idIfCond_139 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(map_value));&#xA;&#xA;&#x9;if( idIfCond_139 ) {&#xA;&#xA;&#x9;self_param.setType(map_value);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_140 = false;&#xA;&#x9;idIfCond_140 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(self_param.getType());&#xA;&#xA;&#x9;if( idIfCond_140 ) {&#xA;&#xA;&#x9;self_param.setType(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(self_param);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft35 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_141 = false;&#xA;&#x9;while( !idLoopCond_141 ) {&#xA;&#x9;idLoopCond_141 = it_ft35.isOff();&#xA;&#x9;if ( idLoopCond_141 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Parameter p = it_ft35.next();&#xA;&#xA;&#x9;simk.SMParameter param = ((simk.SMParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMParameter&quot;));&#xA;&#xA;&#x9;param.setName(p.getName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_142 = false;&#xA;&#x9;idIfCond_142 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(p.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;if( idIfCond_142 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_143 = false;&#xA;&#x9;idIfCond_143 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(p.getType().getTypeQName(), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName()), kermeta.standard.helper.StringWrapper.equals(p.getType().getTypeQName(), &quot;kermeta::language::structure::Object&quot;));&#xA;&#xA;&#x9;if( idIfCond_143 ) {&#xA;&#xA;&#x9;param.setType(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;}&#xA; else {&#xA;&#xA;&#x9;param.setType(p.getType().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_144 = false;&#xA;&#x9;idIfCond_144 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(param.getType());&#xA;&#xA;&#x9;if( idIfCond_144 ) {&#xA;&#xA;&#x9;param.setType(&quot;void&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMParameter>convertAsOrderedSet(staticMethod.getSMParameters()).add(param);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;simk.SMReturn sMReturn = ((simk.SMReturn) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMReturn&quot;));&#xA;&#xA;&#x9;staticMethod.setSMReturn(sMReturn);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_145 = false;&#xA;&#x9;idIfCond_145 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getWrapperValueTypeReturnType(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_145 ) {&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String> map_infos = kermeta.standard.helper.StringWrapper.getPropertyInfos(this.getWrapperValueTypeReturnType());&#xA;&#xA;&#x9;java.lang.String map_value = map_infos.getValue(context.getCurrent_valueType().getEMFInstanceClassName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_146 = false;&#xA;&#x9;idIfCond_146 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(map_value));&#xA;&#xA;&#x9;if( idIfCond_146 ) {&#xA;&#xA;&#x9;sMReturn.setType(map_value);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_147 = false;&#xA;&#x9;idIfCond_147 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(sMReturn.getType());&#xA;&#xA;&#x9;if( idIfCond_147 ) {&#xA;&#xA;&#x9;sMReturn.setType(this.getType().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_148 = false;&#xA;&#x9;idIfCond_148 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(sMReturn.getType());&#xA;&#xA;&#x9;if( idIfCond_148 ) {&#xA;&#xA;&#x9;sMReturn.setType(&quot;void&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;staticMethod.setBody(this.createBehaviorJava(context));&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="mustBeDuplicated" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Unused for the moment&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_149 = false;&#xA;&#x9;idIfCond_149 = kermeta.standard.helper.BooleanWrapper.or(this.getType().isValueType(), this.hasAValueTypedParameter());&#xA;&#xA;&#x9;if( idIfCond_149 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getFunctionTypeParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter> result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter> ft_parameters = null;&#xA;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter> result_ft36 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft36 = null;&#xA;&#xA;&#x9;result_ft36 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.language.structure.Parameter>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft36 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_150 = false;&#xA;&#x9;while( !idLoopCond_150 ) {&#xA;&#x9;idLoopCond_150 = it_ft36.isOff();&#xA;&#x9;if ( idLoopCond_150 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft36 = it_ft36.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_151 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.language.structure.Parameter p = elem_ft36;&#xA;&#xA;&#x9;idIfCond_151 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(p.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_151 ) {&#xA;&#xA;&#x9;result_ft36.add(elem_ft36);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;ft_parameters = result_ft36;&#xA;//End of the Inlining of the function type: select&#xA;&#xA;&#xA;&#x9;result = ft_parameters;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Sequence">
              <eTypeArguments eClassifier="#/5/language/structure/Parameter"/>
            </eGenericType>
          </eOperations>
          <eOperations name="isVoidType" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_152 = false;&#xA;&#x9;idIfCond_152 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(type_label, &quot;null&quot;), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;VoidType&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta::standard::Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta::standard::VoidType&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta::language::structure::Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta::language::structure::VoidType&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta.standard.Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta.standard.VoidType&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta.language.structure.Void&quot;)), kermeta.standard.helper.StringWrapper.equals(type_label, &quot;kermeta.language.structure.VoidType&quot;));&#xA;&#xA;&#x9;if( idIfCond_152 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="type_label" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EOperation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EOperation result = null;&#xA;&#xA;&#x9;ecore.EOperation ecoreOperation = ((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EOperation&quot;));&#xA;&#xA;&#x9;ecoreOperation.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getFinalName(), context));&#xA;&#xA;&#x9;ecoreOperation.setOrdered(this.getIsOrdered());&#xA;&#xA;&#x9;ecoreOperation.setUnique(this.getIsUnique());&#xA;&#xA;&#x9;ecoreOperation.setLowerBound(this.getLower());&#xA;&#xA;&#x9;ecoreOperation.setUpperBound(this.getUpper());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_153 = false;&#xA;&#x9;idIfCond_153 = this.getIsAbstract();&#xA;&#xA;&#x9;if( idIfCond_153 ) {&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createAbstract();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreOperation.getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;&#xA;&#x9;result = ecoreOperation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="hasAValueTypedParameter" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * The given operation has at least a parameter having ValueType as type&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter p = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Parameter result_ft37 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft37 = null;&#xA;&#xA;&#x9;result_ft37 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft37 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_154 = false;&#xA;&#x9;while( !idLoopCond_154 ) {&#xA;&#x9;idLoopCond_154 = kermeta.standard.helper.BooleanWrapper.or(it_ft37.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft37, null));&#xA;&#x9;if ( idLoopCond_154 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft37 = it_ft37.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_155 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Parameter p = elem_ft37;&#xA;&#xA;&#x9;idIfCond_155 = p.getType().isValueType();&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_155 ) {&#xA;&#xA;&#x9;result_ft37 = elem_ft37;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;p = result_ft37;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_156 = false;&#xA;&#x9;idIfCond_156 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(p));&#xA;&#xA;&#x9;if( idIfCond_156 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_157 = false;&#xA;&#x9;idIfCond_157 = kermeta.standard.helper.BooleanWrapper.not(this.isFunctionType());&#xA;&#xA;&#x9;if( idIfCond_157 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_158 = false;&#xA;&#x9;idIfCond_158 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(context.getCurrent_valueType());&#xA;&#xA;&#x9;if( idIfCond_158 ) {&#xA;&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2BehaviorJava(this, context);&#xA;&#xA;&#x9;this.createBehaviorJava(context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.compilingInSimkMode(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/5/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeParameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the Operation, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Operation is abstract"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="post" upperBound="-1"
              eType="#/5/language/structure/Constraint" containment="true" eOpposite="#/5/language/structure/Constraint/postOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Post-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
              eType="#/5/language/structure/Parameter" containment="true" eOpposite="#/5/language/structure/Parameter/operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException"
              upperBound="-1" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Exceptions raised by the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="pre" upperBound="-1"
              eType="#/5/language/structure/Constraint" containment="true" eOpposite="#/5/language/structure/Constraint/preOwner">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Pre-conditions of the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superOperation" eType="#/5/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Super-operation of the Operation, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/5/language/structure/ClassDefinition"
              eOpposite="#/5/language/structure/ClassDefinition/ownedOperation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition owning the Operation"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/MultiplicityElement"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EOperation"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** We have to visit property in order to print the behavior of the getter and setter */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xA; - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xA; - Property with isComposite == false : EReference"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_159 = false;&#xA;&#x9;idIfCond_159 = this.getIsDerived();&#xA;&#xA;&#x9;if( idIfCond_159 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_160 = false;&#xA;&#x9;idIfCond_160 = kermeta.standard.helper.BooleanWrapper.not(this.getIsReadOnly());&#xA;&#xA;&#x9;if( idIfCond_160 ) {&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EStructuralFeature ecoreStructuralFeature = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition c = null;&#xA;&#xA;&#x9;c = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(c.getEcoreModelElement().getEStructuralFeatures()).add(ecoreStructuralFeature);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreStructuralFeature);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft39 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_161 = false;&#xA;&#x9;while( !idLoopCond_161 ) {&#xA;&#x9;idLoopCond_161 = it_ft39.isOff();&#xA;&#x9;if ( idLoopCond_161 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag o = it_ft39.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag o = o_ft39;&#xA;&#xA;&#x9;o.applyPass1(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2(this, context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EStructuralFeature">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EStructuralFeature result = null;&#xA;&#xA;&#x9;ecore.EStructuralFeature ecoreStructuralFeature = null;&#xA;&#xA;&#x9;kermeta.language.structure.Type current_type = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Type&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_162 = false;&#xA;&#x9;idIfCond_162 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(current_type.isValueType(), current_type.isEnumeration()), current_type.isEDataType());&#xA;&#xA;&#x9;if( idIfCond_162 ) {&#xA;&#xA;&#x9;ecoreStructuralFeature = ((ecore.EAttribute) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EAttribute&quot;));&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecoreStructuralFeature = ((ecore.EReference) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EReference&quot;));&#xA;&#xA;&#x9;((ecore.EReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(ecoreStructuralFeature, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EReference&quot;))).setContainment(this.getIsComposite());&#xA;}&#xA;&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EcoreModelElementHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EcoreModelElementHelper&quot;)).setEStructuralFeatureProperties(this, ecoreStructuralFeature, context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_163 = false;&#xA;&#x9;idIfCond_163 = this.getIsDerived();&#xA;&#xA;&#x9;if( idIfCond_163 ) {&#xA;&#xA;&#x9;ecore.EAnnotation annotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;isReadOnly&quot;).getName()), kermeta.standard.helper.BooleanWrapper.toString(this.getIsReadOnly()));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreStructuralFeature.getEAnnotations()).add(annotation);&#xA;}&#xA;&#xA;&#xA;&#x9;ecoreStructuralFeature.setTransient(this.getEMFIsTransient());&#xA;&#xA;&#x9;result = ecoreStructuralFeature;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;((kermeta.language.structure.LinkSetterForTypedElement) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.LinkSetterForTypedElement&quot;)).setLinks(this, this.getEcoreModelElement(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_164 = false;&#xA;&#x9;idIfCond_164 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getOpposite()));&#xA;&#xA;&#x9;if( idIfCond_164 ) {&#xA;&#xA;&#x9;((ecore.EReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EReference&quot;))).setEOpposite(((ecore.EReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getOpposite().getEcoreModelElement(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EReference&quot;))));&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_165 = false;&#xA;&#x9;idIfCond_165 = kermeta.standard.helper.StringWrapper.equals(this.getType().getTypeQName(), &quot;kermeta::standard::Boolean&quot;);&#xA;&#xA;&#x9;if( idIfCond_165 ) {&#xA;&#xA;&#x9;this.getEcoreModelElement().setDefaultValueLiteral(&quot;false&quot;);&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass2BehaviorJava" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.setLinks(context);&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_applyPass2BehaviorJava(this, context);&#xA;&#xA;&#x9;this.createBehaviorJava(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="_default" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="If True, the value of the property is not stored but computed from other properties"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" eType="#/5/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Opposite Property of the Property, void if the Property has no opposite"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="getterBody" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property is read-only"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="setterBody" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSetterAbstract"
              eType="#/5/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the setter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningClass" eType="#/5/language/structure/ClassDefinition"
              eOpposite="#/5/language/structure/ClassDefinition/ownedAttribute">
            <eAnnotations source="kermeta">
              <details key="documentation" value="ClassDefinition that owns the Property"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isID" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the property allows to identify its containing Object"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the Property has a containment role"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isGetterAbstract"
              eType="#/5/standard/JavaBoolean" defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating wether the getter is abstract."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/MultiplicityElement"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EStructuralFeature"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LinkSetterForTypedElement" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="setLinks" ordered="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_166 = false;&#xA;&#x9;idIfCond_166 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ecoreModelElement)), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(element.getType().getTypeQName())));&#xA;&#xA;&#x9;if( idIfCond_166 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_167 = false;&#xA;&#x9;idIfCond_167 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_167 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Class c = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;)));&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDefinition = c.getClassDefinitionAsTyped();&#xA;&#xA;&#x9;ecore.EGenericType genericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_168 = false;&#xA;&#x9;idIfCond_168 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(classDefinition.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_168 ) {&#xA;&#xA;&#x9;genericType.setEClassifier(classDefinition.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;genericType.setEClassifier(classDefinition.getEcoreDataType());&#xA;}&#xA;&#xA;&#xA;&#x9;ecoreModelElement.setEGenericType(genericType);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariableBinding> it_ft40 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(c.getTypeParamBinding()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_169 = false;&#xA;&#x9;while( !idLoopCond_169 ) {&#xA;&#x9;idLoopCond_169 = it_ft40.isOff();&#xA;&#x9;if ( idLoopCond_169 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeVariableBinding tpb = it_ft40.next();&#xA;&#xA;&#x9;ecore.EGenericType typeArgument = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_170 = false;&#xA;&#x9;idIfCond_170 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;));&#xA;&#xA;&#x9;if( idIfCond_170 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_171 = false;&#xA;&#x9;idIfCond_171 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_171 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreDataType());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(ecoreModelElement.getEGenericType().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_172 = false;&#xA;&#x9;idIfCond_172 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_172 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ObjectTypeVariable otv = ((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;)));&#xA;&#xA;&#x9;typeArgument.setETypeParameter(otv.getEcoreModelElement());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(ecoreModelElement.getEGenericType().getETypeArguments()).add(typeArgument);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_173 = false;&#xA;&#x9;idIfCond_173 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_173 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = tpb.getType().getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_174 = false;&#xA;&#x9;idIfCond_174 = tpb.getType().isEDataType();&#xA;&#xA;&#x9;if( idIfCond_174 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(tpb.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_175 = false;&#xA;&#x9;idIfCond_175 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_175 ) {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;typeArgument.setEClassifier(cd.getEcoreDataType());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(ecoreModelElement.getEGenericType().getETypeArguments()).add(typeArgument);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_176 = false;&#xA;&#x9;idIfCond_176 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;));&#xA;&#xA;&#x9;if( idIfCond_176 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = element.getType().getClassFromPrimitiveType().getClassDefinitionAsTyped();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_177 = false;&#xA;&#x9;idIfCond_177 = element.getType().isEDataType();&#xA;&#xA;&#x9;if( idIfCond_177 ) {&#xA;&#xA;&#x9;ecore.EGenericType newEGT = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;newEGT.setEClassifier(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement());&#xA;&#xA;&#x9;ecoreModelElement.setEGenericType(newEGT);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.ETypeParameter> it_ft41 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(((kermeta.language.structure.PrimitiveType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.PrimitiveType&quot;))).getEcoreModelElement().getETypeParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_178 = false;&#xA;&#x9;while( !idLoopCond_178 ) {&#xA;&#x9;idLoopCond_178 = it_ft41.isOff();&#xA;&#x9;if ( idLoopCond_178 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;ecore.ETypeParameter etp = it_ft41.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_179 = false;&#xA;&#x9;idIfCond_179 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ecoreModelElement.getEGenericType()));&#xA;&#xA;&#x9;if( idIfCond_179 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(newEGT.getETypeArguments()).add(((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;)));&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_180 = false;&#xA;&#x9;idIfCond_180 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(cd.getEcoreDataType());&#xA;&#xA;&#x9;if( idIfCond_180 ) {&#xA;&#xA;&#x9;ecoreModelElement.setEType(cd.getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;ecoreModelElement.setEType(cd.getEcoreDataType());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_181 = false;&#xA;&#x9;idIfCond_181 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_181 ) {&#xA;&#xA;&#x9;ecoreModelElement.setEType(((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;))).getEcoreModelElement());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_182 = false;&#xA;&#x9;idIfCond_182 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_182 ) {&#xA;&#xA;&#x9;ecore.EGenericType genericType = ((ecore.EGenericType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EGenericType&quot;));&#xA;&#xA;&#x9;genericType.setETypeParameter(((kermeta.language.structure.ObjectTypeVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(element.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;))).getEcoreModelElement());&#xA;&#xA;&#x9;ecoreModelElement.setEGenericType(genericType);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/5/language/structure/TypedElement"/>
            <eParameters name="ecoreModelElement" eType="#/7/ETypedElement"/>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidType" eSuperTypes="#/5/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Class definition for the &lt;pre>Void&lt;/pre> type"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;null&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA;type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA;&lt;pre>alias MyString : kermeta::standard::String&lt;/pre>. Another example could be: &lt;code>root::apackage::AClass&lt;/code>&#xD;&#xA;&lt;pre>alias MyClass : root::apackage::AClass&lt;/pre>, thus a primitive type may be not a subtype of ValueType (ValueType is a concept from the Kermeta framework)."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getInstanceType().createBehaviorJava(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EDataType eModelElement = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Package p = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(eModelElement);&#xA;&#xA;&#x9;this.setEcoreModelElement(eModelElement);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Tag> it_ft43 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Tag>convertAsOrderedSet(this.getOwnedTags()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_183 = false;&#xA;&#x9;while( !idLoopCond_183 ) {&#xA;&#x9;idLoopCond_183 = it_ft43.isOff();&#xA;&#x9;if ( idLoopCond_183 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag o = it_ft43.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Tag cd = o_ft43;&#xA;&#xA;&#x9;cd.applyPass1(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EDataType">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EDataType result = null;&#xA;&#xA;&#x9;ecore.EDataType eModelElement = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EDataType&quot;));&#xA;&#xA;&#x9;eModelElement.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(&quot;java.lang.Object&quot;);&#xA;&#xA;&#x9;java.lang.String instanceClassName = this.getEMFEDataTypeInstanceClassName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_184 = false;&#xA;&#x9;idIfCond_184 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(instanceClassName, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_184 ) {&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(instanceClassName);&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> etps = kermeta.standard.helper.StringWrapper.split(this.getUniqueTagValue(&quot;ecore.EDataType_eTypeParameters&quot;), &quot; , &quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_185 = false;&#xA;&#x9;idIfCond_185 = kermeta.standard.helper.IntegerWrapper.isGreater(etps.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_185 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;java.lang.String> it_ft44 = etps.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_186 = false;&#xA;&#x9;while( !idLoopCond_186 ) {&#xA;&#x9;idLoopCond_186 = it_ft44.isOff();&#xA;&#x9;if ( idLoopCond_186 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;java.lang.String etp = it_ft44.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_187 = false;&#xA;&#x9;idIfCond_187 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(etp, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_187 ) {&#xA;&#xA;&#x9;ecore.ETypeParameter ecoreTypeParameter = ((ecore.ETypeParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.ETypeParameter&quot;));&#xA;&#xA;&#x9;ecoreTypeParameter.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(etp, context));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(eModelElement.getETypeParameters()).add(ecoreTypeParameter);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;eModelElement.setSerializable(this.getEMFEDataTypeIsSerializable());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String qualifiedName = ((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getClassFromPrimitiveType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeDefinition().qualifiedName();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;alias&quot;).getName()), qualifiedName));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_188 = false;&#xA;&#x9;idIfCond_188 = kermeta.standard.helper.StringWrapper.equals(eModelElement.getInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_188 ) {&#xA;&#xA;&#x9;eModelElement.setInstanceClassName(kermeta.standard.helper.StringWrapper.replace(qualifiedName, &quot;::&quot;, &quot;.&quot;));&#xA;}&#xA;&#xA;&#xA;&#x9;result = eModelElement;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="instanceType" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type the primitive type is linked with"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/DataType"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/TypeContainer"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EDataType"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ParameterizedType" eSuperTypes="#/5/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for Parameterized types, namely, Class and ModelType"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_189 = false;&#xA;&#x9;idIfCond_189 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getTypeDefinition().getEMFInstanceClassName(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_189 ) {&#xA;&#xA;&#x9;result = this.getTypeDefinition().getEMFInstanceClassName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(this.getTypeQName(), &quot;::&quot;, &quot;.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String str_tpb = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariableBinding> it_ft45 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(this.getTypeParamBinding()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_190 = false;&#xA;&#x9;while( !idLoopCond_190 ) {&#xA;&#x9;idLoopCond_190 = it_ft45.isOff();&#xA;&#x9;if ( idLoopCond_190 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeVariableBinding tpb = it_ft45.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_191 = false;&#xA;&#x9;idIfCond_191 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, 1);&#xA;&#xA;&#x9;if( idIfCond_191 ) {&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, &quot;, &quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_192 = false;&#xA;&#x9;idIfCond_192 = kermeta.standard.helper.BooleanWrapper.not(context.getFtSuffixActivation());&#xA;&#xA;&#x9;if( idIfCond_192 ) {&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, tpb.getType().createBehaviorJava(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Type type_from_map = context.getFtMapTypeStack().peek().getValue(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;tpb.getType()&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_193 = false;&#xA;&#x9;idIfCond_193 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(type_from_map));&#xA;&#xA;&#x9;if( idIfCond_193 ) {&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, type_from_map.createBehaviorJava(context));&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;}&#xA; else {&#xA;&#xA;&#x9;str_tpb = kermeta.standard.helper.StringWrapper.plus(str_tpb, context.getFtProductTypeStack().peek().getTypeByIndex(i).createBehaviorJava(context));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_194 = false;&#xA;&#x9;idIfCond_194 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(str_tpb, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_194 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;&lt;&quot;), str_tpb), &quot;>&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/5/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Bindings between type variables and provided types "/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeDefinition" lowerBound="1"
              eType="#/5/language/structure/GenericTypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Definition of the Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualTypeBinding"
              upperBound="-1" eType="#/5/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_195 = false;&#xA;&#x9;idIfCond_195 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_195 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Type type_from_map = context.getFtMapTypeStack().peek().getValue(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_196 = false;&#xA;&#x9;idIfCond_196 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(type_from_map));&#xA;&#xA;&#x9;if( idIfCond_196 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;++++++++++======== &quot;, org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this)));&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;result = type_from_map.createBehaviorJava(context);&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;kermeta.language.structure.Object obj = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.TypeVariable result_ft46 = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeVariable elem_ft46 = null;&#xA;&#xA;&#x9;result_ft46 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft46 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_197 = false;&#xA;&#x9;while( !idLoopCond_197 ) {&#xA;&#x9;idLoopCond_197 = kermeta.standard.helper.BooleanWrapper.or(it_ft46.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft46, null));&#xA;&#x9;if ( idLoopCond_197 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft46 = it_ft46.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_198 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.TypeVariable otv = elem_ft46;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_199 = false;&#xA;&#x9;idIfCond_199 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(otv, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ObjectTypeVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_199 ) {&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;&#xA;&#x9;idIfCond_198 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this, otv);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_198 ) {&#xA;&#xA;&#x9;result_ft46 = elem_ft46;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;obj = result_ft46;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_200 = false;&#xA;&#x9;idIfCond_200 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(obj)), kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, 0));&#xA;&#xA;&#x9;if( idIfCond_200 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_201 = false;&#xA;&#x9;idIfCond_201 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(context.getFtProductTypeStack().peek().getTypeByIndex(i), this);&#xA;&#xA;&#x9;if( idIfCond_201 ) {&#xA;&#xA;&#x9;result = context.getFtProductTypeStack().peek().getTypeByIndex(i).createBehaviorJava(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.ETypeParameter ecoreTypeParameter = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Object container = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_202 = false;&#xA;&#x9;idIfCond_202 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_202 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement().getETypeParameters()).add(ecoreTypeParameter);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_203 = false;&#xA;&#x9;idIfCond_203 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_203 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.ETypeParameter>convertAsOrderedSet(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(container, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getEcoreModelElement().getETypeParameters()).add(ecoreTypeParameter);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreTypeParameter);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/ETypeParameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.ETypeParameter result = null;&#xA;&#xA;&#x9;ecore.ETypeParameter ecoreTypeParameter = ((ecore.ETypeParameter) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.ETypeParameter&quot;));&#xA;&#xA;&#x9;ecoreTypeParameter.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;result = ecoreTypeParameter;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eGenericSuperTypes eClassifier="#/5/language/structure/TypeVariable"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/ETypeParameter"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition for Enumeration"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="clone" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Implements kermeta::language::structure::Type.clone(Object)&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( &quot;NOT IMPLEMENTED&quot; );&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(this.qualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EEnum ecoreEnumeration = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Package p = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(ecoreEnumeration);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreEnumeration);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.EnumerationLiteral> it_ft48 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.EnumerationLiteral>convertAsOrderedSet(this.getOwnedLiteral()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_204 = false;&#xA;&#x9;while( !idLoopCond_204 ) {&#xA;&#x9;idLoopCond_204 = it_ft48.isOff();&#xA;&#x9;if ( idLoopCond_204 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.EnumerationLiteral l = it_ft48.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.EnumerationLiteral l = l_ft48;&#xA;&#xA;&#x9;l.applyPass1(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EEnum">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EEnum result = null;&#xA;&#xA;&#x9;ecore.EEnum ecoreEnumeration = ((ecore.EEnum) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EEnum&quot;));&#xA;&#xA;&#x9;ecoreEnumeration.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;result = ecoreEnumeration;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1"
              eType="#/5/language/structure/EnumerationLiteral" containment="true"
              eOpposite="#/5/language/structure/EnumerationLiteral/enumeration">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owned items in an Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/DataType"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EEnum"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type used to define the use of lambda expressions.&#xA; Uses :&#xA; &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xA;     var test : Boolean init true&#xA;     from var it : Iterator&lt;G> init iterator&#xA;     until it.isOff&#xA;     loop&#xA;        test := test and func(it.next)&#xA;     end&#xA;     result := test&#xA; end&#xA; &lt;/pre>&#xA; *&#xA; In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xA; Boolean, with a parameter of type G and a return type of type Boolean&#xA; The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter."/>
          </eAnnotations>
          <eAnnotations source="kermeta.inv">
            <details key="resultType" value=""/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Type"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeSuper.super_createBehaviorJava(this, context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the function (a ProductType for multiple parameters)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Result type of the function"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/TypeContainer"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Type"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EAnnotation"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ProductType" eSuperTypes="#/5/language/structure/TypeContainer #/5/language/structure/Type">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type corresponding to a set of Types&#xA;Only used in the context of FunctionType"/>
          </eAnnotations>
          <eOperations name="getTypeByIndex" eType="#/5/language/structure/Type">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Type result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_205 = false;&#xA;&#x9;idIfCond_205 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).elementAt(index), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_205 ) {&#xA;&#xA;&#x9;result = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).elementAt(index), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(this.getType()).elementAt(index);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="index" eType="#/5/standard/JavaInteger"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" unique="false"
              upperBound="-1" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Types "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Package">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Package in kermeta. Each kermeta model must have a root package. "/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EPackage ecorePackage = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Package p = this.getNestingPackage();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_206 = false;&#xA;&#x9;idIfCond_206 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p, null);&#xA;&#xA;&#x9;if( idIfCond_206 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(p.getEcoreModelElement().getESubpackages()).add(ecorePackage);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecorePackage);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft50 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(this.getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_207 = false;&#xA;&#x9;while( !idLoopCond_207 ) {&#xA;&#x9;idLoopCond_207 = it_ft50.isOff();&#xA;&#x9;if ( idLoopCond_207 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeDefinition o = it_ft50.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeDefinition cd = o_ft50;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_208 = false;&#xA;&#x9;idIfCond_208 = kermeta.standard.helper.StringWrapper.equals(cd.getDeprecated(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_208 ) {&#xA;&#xA;&#x9;cd.applyPass1(context);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft51 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_209 = false;&#xA;&#x9;while( !idLoopCond_209 ) {&#xA;&#x9;idLoopCond_209 = it_ft51.isOff();&#xA;&#x9;if ( idLoopCond_209 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft51.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EPackage">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EPackage result = null;&#xA;try {&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot; + Package &quot;, this.getName()), &quot; in progress&quot;));&#xA;&#xA;&#x9;ecore.EPackage ecorePackage = ((ecore.EPackage) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EPackage&quot;));&#xA;&#xA;&#x9;ecorePackage.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_210 = false;&#xA;&#x9;idIfCond_210 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getUri())), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getUri(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_210 ) {&#xA;&#xA;&#x9;ecorePackage.setNsURI(kermeta.standard.helper.StringWrapper.plus(this.getUri(), &quot;/kermeta_temp_uri&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecorePackage.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createKermetaEAnnotation(&quot;ecoreUri&quot;, this.getUri()));&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((km2ecore.common.exception.UndefinedUriEPackageException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.exception.UndefinedUriEPackageException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;ecorePackage.setNsPrefix(&quot;&quot;);&#xA;&#xA;&#x9;result = ecorePackage;&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_2 ) {&#xA;if( ex_switcher_2.getRealException() instanceof km2ecore.common.exception.UndefinedUriEPackageException ) {&#xA;km2ecore.common.exception.UndefinedUriEPackageException e = (km2ecore.common.exception.UndefinedUriEPackageException) ex_switcher_2.getRealException();&#xA;{&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.errorln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;The uri of the Package: &quot;, this.qualifiedName()), &quot; is not correctly setted, please check this one in the *.km file that you try to load.&quot;));&#xA;}&#xA;}&#xA;}&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getAllSubPackages">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package>&quot;));&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = null;&#xA;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft52 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_211 = false;&#xA;&#x9;while( !idLoopCond_211 ) {&#xA;&#x9;idLoopCond_211 = it_ft52.isOff();&#xA;&#x9;if ( idLoopCond_211 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft52.next();&#xA;&#xA;&#x9;result.add(p);&#xA;&#xA;&#x9;result.addAll(p.getAllSubPackages());&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;pack = result_ft52;&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eClassifier="#/5/language/structure/Package"/>
            </eGenericType>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" eType="#/5/language/structure/Package"
              transient="true" eOpposite="#/5/language/structure/Package/nestedPackage">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Package, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" upperBound="-1"
              eType="#/5/language/structure/Package" containment="true" eOpposite="#/5/language/structure/Package/nestingPackage">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Nested Packages contained by the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Uri of the Package"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/NamedElement"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/TypeDefinitionContainer"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EPackage"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelingUnit">
          <eAnnotations source="kermeta">
            <details key="documentation" value="The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xA;It also reference others modeling unit."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="retrievePackage" eType="#/5/language/structure/Package">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Package result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_qname = kermeta.standard.helper.StringWrapper.split(qname, &quot;::&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_212 = false;&#xA;&#x9;idIfCond_212 = kermeta.standard.helper.IntegerWrapper.equals(set_qname.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_212 ) {&#xA;&#xA;&#x9;set_qname.add(qname);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Package result_ft53 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft53 = null;&#xA;&#xA;&#x9;result_ft53 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft53 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_213 = false;&#xA;&#x9;while( !idLoopCond_213 ) {&#xA;&#x9;idLoopCond_213 = kermeta.standard.helper.BooleanWrapper.or(it_ft53.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft53, null));&#xA;&#x9;if ( idLoopCond_213 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft53 = it_ft53.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_214 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Package p = elem_ft53;&#xA;&#xA;&#x9;idIfCond_214 = kermeta.standard.helper.StringWrapper.equals(p.getName(), set_qname.at(0));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_214 ) {&#xA;&#xA;&#x9;result_ft53 = elem_ft53;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;pack = result_ft53;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 1;&#xA;&#x9;java.lang.Boolean idLoopCond_215 = false;&#xA;&#x9;while( !idLoopCond_215 ) {&#xA;&#x9;idLoopCond_215 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, set_qname.size());&#xA;&#x9;if ( idLoopCond_215 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;pack = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Package result_ft54 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft54 = null;&#xA;&#xA;&#x9;result_ft54 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft54 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_216 = false;&#xA;&#x9;while( !idLoopCond_216 ) {&#xA;&#x9;idLoopCond_216 = kermeta.standard.helper.BooleanWrapper.or(it_ft54.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft54, null));&#xA;&#x9;if ( idLoopCond_216 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft54 = it_ft54.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_217 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Package p = elem_ft54;&#xA;&#xA;&#x9;idIfCond_217 = kermeta.standard.helper.StringWrapper.equals(p.getName(), set_qname.at(i));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_217 ) {&#xA;&#xA;&#x9;result_ft54 = elem_ft54;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = pack;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="qname" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="preprocess">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * We cannot use an Alias to define this indiretion because the concept of KRuntimeError does not exist&#xA;&#x9; * in framework.ecore, thus we create in this operation a new EDataType that targets the KRuntimeError Java Impl&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EDataType exception_EDataType = ((ecore.EDataType) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EDataType&quot;));&#xA;&#xA;&#x9;exception_EDataType.setName(&quot;KRuntimeError&quot;);&#xA;&#xA;&#x9;exception_EDataType.setInstanceClassName(context.getJAVA_CLASS_EXCEPTION_SWITCHER());&#xA;&#xA;&#x9;exception_EDataType.setSerializable(false);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(this.retrievePackage(&quot;kermeta::exceptions&quot;).getEcoreModelElement().getEClassifiers()).add(exception_EDataType);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreAnnotation);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Require> it_ft56 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Require>convertAsOrderedSet(this.getRequires()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_218 = false;&#xA;&#x9;while( !idLoopCond_218 ) {&#xA;&#x9;idLoopCond_218 = it_ft56.isOff();&#xA;&#x9;if ( idLoopCond_218 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Require p = it_ft56.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Require p = p_ft56;&#xA;&#xA;&#x9;p.applyPass1(context);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Using> it_ft57 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Using>convertAsOrderedSet(this.getUsings()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_219 = false;&#xA;&#x9;while( !idLoopCond_219 ) {&#xA;&#x9;idLoopCond_219 = it_ft57.isOff();&#xA;&#x9;if ( idLoopCond_219 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Using p = it_ft57.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft58 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_220 = false;&#xA;&#x9;while( !idLoopCond_220 ) {&#xA;&#x9;idLoopCond_220 = it_ft58.isOff();&#xA;&#x9;if ( idLoopCond_220 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft58.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft59 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_221 = false;&#xA;&#x9;while( !idLoopCond_221 ) {&#xA;&#x9;idLoopCond_221 = it_ft59.isOff();&#xA;&#x9;if ( idLoopCond_221 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft59.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getEcorePackages()).add(p.getEcoreModelElement());&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((ecore.EAnnotation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EAnnotation&quot;));&#xA;&#xA;&#x9;ecoreAnnotation.setSource(&quot;ModelingUnit&quot;);&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry requireEntry = ((ecore.EStringToStringMapEntry) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStringToStringMapEntry&quot;));&#xA;&#xA;&#x9;requireEntry.setKey(&quot;require&quot;);&#xA;&#xA;&#x9;requireEntry.setValue(&quot;&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).add(requireEntry);&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry usingEntry = ((ecore.EStringToStringMapEntry) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStringToStringMapEntry&quot;));&#xA;&#xA;&#x9;usingEntry.setKey(&quot;using&quot;);&#xA;&#xA;&#x9;usingEntry.setValue(&quot;&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).add(usingEntry);&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getAllPackages">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;kermeta.language.structure.Package>&quot;));&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = null;&#xA;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft60 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_222 = false;&#xA;&#x9;while( !idLoopCond_222 ) {&#xA;&#x9;idLoopCond_222 = it_ft60.isOff();&#xA;&#x9;if ( idLoopCond_222 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft60.next();&#xA;&#xA;&#x9;result.add(p);&#xA;&#xA;&#x9;result.addAll(p.getAllSubPackages());&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;pack = result_ft60;&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eClassifier="#/5/language/structure/Package"/>
            </eGenericType>
          </eOperations>
          <eOperations name="getTypeDefinitionByQualifiedName" eType="#/5/language/structure/TypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get a TypeDefinition contained in the given Modeling Unit by qualifiedName&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.TypeDefinition result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_qname = kermeta.standard.helper.StringWrapper.split(qname, &quot;::&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_223 = false;&#xA;&#x9;idIfCond_223 = kermeta.standard.helper.IntegerWrapper.equals(set_qname.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_223 ) {&#xA;&#xA;&#x9;set_qname.add(qname);&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Package result_ft61 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft61 = null;&#xA;&#xA;&#x9;result_ft61 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft61 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getPackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_224 = false;&#xA;&#x9;while( !idLoopCond_224 ) {&#xA;&#x9;idLoopCond_224 = kermeta.standard.helper.BooleanWrapper.or(it_ft61.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft61, null));&#xA;&#x9;if ( idLoopCond_224 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft61 = it_ft61.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_225 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Package p = elem_ft61;&#xA;&#xA;&#x9;idIfCond_225 = kermeta.standard.helper.StringWrapper.equals(p.getName(), set_qname.at(0));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_225 ) {&#xA;&#xA;&#x9;result_ft61 = elem_ft61;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;pack = result_ft61;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 1;&#xA;&#x9;java.lang.Boolean idLoopCond_226 = false;&#xA;&#x9;while( !idLoopCond_226 ) {&#xA;&#x9;idLoopCond_226 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1));&#xA;&#x9;if ( idLoopCond_226 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;pack = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Package result_ft62 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package elem_ft62 = null;&#xA;&#xA;&#x9;result_ft62 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft62 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(pack.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_227 = false;&#xA;&#x9;while( !idLoopCond_227 ) {&#xA;&#x9;idLoopCond_227 = kermeta.standard.helper.BooleanWrapper.or(it_ft62.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft62, null));&#xA;&#x9;if ( idLoopCond_227 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft62 = it_ft62.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_228 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Package p = elem_ft62;&#xA;&#xA;&#x9;idIfCond_228 = kermeta.standard.helper.StringWrapper.equals(p.getName(), set_qname.at(i));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_228 ) {&#xA;&#xA;&#x9;result_ft62 = elem_ft62;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.TypeDefinition result_ft63 = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition elem_ft63 = null;&#xA;&#xA;&#x9;result_ft63 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft63 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(pack.getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_229 = false;&#xA;&#x9;while( !idLoopCond_229 ) {&#xA;&#x9;idLoopCond_229 = kermeta.standard.helper.BooleanWrapper.or(it_ft63.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft63, null));&#xA;&#x9;if ( idLoopCond_229 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft63 = it_ft63.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_230 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.TypeDefinition c = elem_ft63;&#xA;&#xA;&#x9;idIfCond_230 = kermeta.standard.helper.StringWrapper.equals(c.getName(), set_qname.at(kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1)));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_230 ) {&#xA;&#xA;&#x9;result_ft63 = elem_ft63;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="qname" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="getEClassifierByQualifiedName" eType="#/7/EClassifier">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get a EClassifer contained in the given Modeling Unit by qualifiedName&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClassifier result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> set_qname = kermeta.standard.helper.StringWrapper.split(qname, &quot;::&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_231 = false;&#xA;&#x9;idIfCond_231 = kermeta.standard.helper.IntegerWrapper.equals(set_qname.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_231 ) {&#xA;&#xA;&#x9;set_qname.add(qname);&#xA;}&#xA;&#xA;&#xA;&#x9;ecore.EPackage pack = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EPackage result_ft64 = null;&#xA;&#xA;&#x9;ecore.EPackage elem_ft64 = null;&#xA;&#xA;&#x9;result_ft64 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft64 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getEcorePackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_232 = false;&#xA;&#x9;while( !idLoopCond_232 ) {&#xA;&#x9;idLoopCond_232 = kermeta.standard.helper.BooleanWrapper.or(it_ft64.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft64, null));&#xA;&#x9;if ( idLoopCond_232 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft64 = it_ft64.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_233 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EPackage p = elem_ft64;&#xA;&#xA;&#x9;idIfCond_233 = kermeta.standard.helper.StringWrapper.equals(p.getName(), set_qname.at(0));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_233 ) {&#xA;&#xA;&#x9;result_ft64 = elem_ft64;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;pack = result_ft64;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 1;&#xA;&#x9;java.lang.Boolean idLoopCond_234 = false;&#xA;&#x9;while( !idLoopCond_234 ) {&#xA;&#x9;idLoopCond_234 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1));&#xA;&#x9;if ( idLoopCond_234 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;pack = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EPackage result_ft65 = null;&#xA;&#xA;&#x9;ecore.EPackage elem_ft65 = null;&#xA;&#xA;&#x9;result_ft65 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft65 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(pack.getESubpackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_235 = false;&#xA;&#x9;while( !idLoopCond_235 ) {&#xA;&#x9;idLoopCond_235 = kermeta.standard.helper.BooleanWrapper.or(it_ft65.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft65, null));&#xA;&#x9;if ( idLoopCond_235 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft65 = it_ft65.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_236 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EPackage p = elem_ft65;&#xA;&#xA;&#x9;idIfCond_236 = kermeta.standard.helper.StringWrapper.equals(p.getName(), set_qname.at(i));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_236 ) {&#xA;&#xA;&#x9;result_ft65 = elem_ft65;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EClassifier result_ft66 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft66 = null;&#xA;&#xA;&#x9;result_ft66 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft66 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(pack.getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_237 = false;&#xA;&#x9;while( !idLoopCond_237 ) {&#xA;&#x9;idLoopCond_237 = kermeta.standard.helper.BooleanWrapper.or(it_ft66.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft66, null));&#xA;&#x9;if ( idLoopCond_237 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft66 = it_ft66.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_238 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EClassifier c = elem_ft66;&#xA;&#xA;&#x9;idIfCond_238 = kermeta.standard.helper.StringWrapper.equals(c.getName(), set_qname.at(kermeta.standard.helper.IntegerWrapper.minus(set_qname.size(), 1)));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_238 ) {&#xA;&#xA;&#x9;result_ft66 = elem_ft66;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="qname" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ecorePackages" upperBound="-1"
              eType="#/7/EPackage"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="usings" upperBound="-1"
              eType="#/5/language/structure/Using" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;using&quot; statement associated with this ModelingUnit. Ie. list of &quot;syntatic shortcut&quot;&#xA;that can be used within this unit."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includeFilters" upperBound="-1"
              eType="#/5/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;only element whose qualified name begins with one of these filter will be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="packages" upperBound="-1"
              eType="#/5/language/structure/Package" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="root packages contained by this ModelingUnit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="excludeFilters" upperBound="-1"
              eType="#/5/language/structure/Filter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="list of filters that apply to this modeling unit.&#xA;This means that if the same unit was loaded without this filters, it would have loaded more content&#xA;element whose qualified name begins with one of these filter will NOT be loaded in the unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="referencedModelingUnits"
              upperBound="-1" eType="#/5/language/structure/ModelingUnit">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="requires" upperBound="-1"
              eType="#/5/language/structure/Require" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Set of &quot;require&quot; statements associated with this ModelingUnit. Ie. list of the other&#xA;files required to run this unit"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="entryPoints" upperBound="-1"
              eType="#/7/EAnnotation"/>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EAnnotation"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="#/5/language/structure/TypedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value=" Model elements with a multiplicity [lower..upper] inherit this class"/>
          </eAnnotations>
          <eOperations name="getRecopyInValueTypes" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the RecopyInValueTypes reference of an Operation&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;RecopyInValueTypes&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getFinalName" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_239 = false;&#xA;&#x9;idIfCond_239 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getEMFRenameAs(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_239 ) {&#xA;&#xA;&#x9;result = this.getEMFRenameAs();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getEMFRenameAs" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Get the EMFRenameAs reference of an Operation&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.getUniqueTagValue(&quot;EMF_renameAs&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether the element is ordered"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="#/5/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Max cardinality of the element, '-1' for '*'"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="#/5/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Min cardinality of the element"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether duplicated elements are allowed"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::String"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Boolean"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeContainer" abstract="true"
            eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Phantom class : EMF reflexive editors need that any element of a metamodel &#xA;has a direct or indirect containment relationship with the root model element of&#xA;the metamodel. This class resolves this technical requirement."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="containedType" upperBound="-1"
              eType="#/5/language/structure/Type" containment="true" eOpposite="#/5/language/structure/Type/typeContainer">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained types"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Item definition for enumeration"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EEnumLiteral ecoreEnumLiteral = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Enumeration e = ((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getEnumeration(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EEnumLiteral>convertAsOrderedSet(e.getEcoreModelElement().getELiterals()).add(ecoreEnumLiteral);&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreEnumLiteral);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EEnumLiteral">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EEnumLiteral result = null;&#xA;&#xA;&#x9;ecore.EEnumLiteral ecoreEnumerationLiteral = ((ecore.EEnumLiteral) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EEnumLiteral&quot;));&#xA;&#xA;&#x9;ecoreEnumerationLiteral.setName(this.getName());&#xA;&#xA;&#x9;ecoreEnumerationLiteral.setLiteral(this.getName());&#xA;&#xA;&#x9;ecoreEnumerationLiteral.setValue(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EEnumLiteral>convertAsOrderedSet(((kermeta.language.structure.Enumeration) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getEnumeration(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Enumeration&quot;))).getEcoreModelElement().getELiterals()).size());&#xA;&#xA;&#x9;result = ecoreEnumerationLiteral;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" eType="#/5/language/structure/Enumeration"
              transient="true" eOpposite="#/5/language/structure/Enumeration/ownedLiteral">
            <eAnnotations source="kermeta">
              <details key="ecore.isTransient" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Enumeration"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EEnumLiteral"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/5/language/structure/NamedElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariableBinding" eSuperTypes="#/5/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a binding between a TypeVariable and a Type"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Assigned Type"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
              eType="#/5/language/structure/TypeVariable">
            <eAnnotations source="kermeta">
              <details key="documentation" value="TypeVariable"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Object">
          <eAnnotations source="kermeta">
            <details key="alias" value="kermeta::standard::Integer"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true"
            eSuperTypes="#/5/language/structure/TypeContainer #/5/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of typed element : each element &#xA;that is typed inherits this class."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the model element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="#/5/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This boolean allows to tell if this Type definition is an aspect or not&#xA;If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xA;TypeDefinition that has exactly the same qualified name"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xA;this class)"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAspect" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true"
            eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any element that contain a  name (example : Operation, Property) inherit this&#xA;class."/>
          </eAnnotations>
          <eOperations name="qualifiedName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the qualified name of this named element. Qualified name is &#xD;&#xA;&#x9; * the list of the names of the packages hierarchically ordered, delimited by&#xD;&#xA;&#x9; * a &quot;::&quot;, followed by the name of this named element.&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.NamedElement elem = this;&#xA;&#xA;&#x9;result = this.getName();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_240 = false;&#xA;&#x9;idIfCond_240 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(elem), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;));&#xA;&#xA;&#x9;if( idIfCond_240 ) {&#xA;&#xA;&#x9;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(elem);&#xA;&#x9;java.lang.Boolean idLoopCond_241 = false;&#xA;&#x9;while( !idLoopCond_241 ) {&#xA;&#x9;idLoopCond_241 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(elem, null);&#xA;&#x9;if ( idLoopCond_241 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(elem.getName(), &quot;::&quot;), result);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_242 = false;&#xA;&#x9;idIfCond_242 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(elem), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.NamedElement&quot;));&#xA;&#xA;&#x9;if( idIfCond_242 ) {&#xA;&#xA;&#x9;elem = (kermeta.language.structure.NamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(elem);&#xA;}&#xA; else {&#xA;&#xA;&#x9;elem = null;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1"
              eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of this named element"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="#/5/language/structure/Type #/5/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Special type definition for Enumeration, PrimitiveType"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Tag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Tag is intended to be used to add documentation on a  model element,&#xA;or add some textual information that cannot be expressed with any&#xA;model element definition."/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Object c = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_243 = false;&#xA;&#x9;idIfCond_243 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;));&#xA;&#xA;&#x9;if( idIfCond_243 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))).getEntryPoints()).add(ecoreAnnotation);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Property p = c.getPropertyValue(&quot;ecoreModelElement&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_244 = false;&#xA;&#x9;idIfCond_244 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(p));&#xA;&#xA;&#x9;if( idIfCond_244 ) {&#xA;&#xA;&#x9;ecore.EModelElement ecoreModelElement_retrieved = ((ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(c, p), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EModelElement&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreModelElement_retrieved.getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreAnnotation);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).getKermetaEAnnotation(this);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_245 = false;&#xA;&#x9;idIfCond_245 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getName());&#xA;&#xA;&#x9;if( idIfCond_245 ) {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).addEntry(ecoreAnnotation, kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;documentation&quot;).getName()), this.getValue());&#xA;}&#xA; else {&#xA;&#xA;&#x9;((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).addEntry(ecoreAnnotation, this.getName(), this.getValue());&#xA;}&#xA;&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="String value of the Tag"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="object" lowerBound="1"
              upperBound="-1" eType="#/5/language/structure/Object" eOpposite="#/5/language/structure/Object/tag">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Objects to which the Tag is attached to"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EAnnotation"/>
          </eGenericSuperTypes>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Constraint">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Constraint is part of a contract implementation in a Class definition or an operation.&#xA;Three kinds of constraints are available : pre, post, and inv (invariant constraint)"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; *&#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = this.createEcoreModelElement(context);&#xA;&#xA;&#x9;kermeta.language.structure.Object c = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;&#x9;kermeta.language.structure.Property p = c.getPropertyValue(&quot;ecoreModelElement&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_246 = false;&#xA;&#x9;idIfCond_246 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(p, null);&#xA;&#xA;&#x9;if( idIfCond_246 ) {&#xA;&#xA;&#x9;ecore.EModelElement ecoreModelElement = ((ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(c, p), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EModelElement&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(ecoreModelElement.getEAnnotations()).add(ecoreAnnotation);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setEcoreModelElement(ecoreAnnotation);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;java.lang.String body = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_247 = false;&#xA;&#x9;idIfCond_247 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_247 ) {&#xA;&#xA;&#x9;result = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).create(&quot;kermeta.inv&quot;, this.getName(), body);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_248 = false;&#xA;&#x9;idIfCond_248 = ((km2ecore.helper.kermeta.ConstraintHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.ConstraintHelper&quot;)).isPre(this);&#xA;&#xA;&#x9;if( idIfCond_248 ) {&#xA;&#xA;&#x9;result = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).create(&quot;kermeta.pre&quot;, this.getName(), body);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = ((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).create(&quot;kermeta.post&quot;, this.getName(), body);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false"
              lowerBound="1" eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the constraint, expressed as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="preOwner" eType="#/5/language/structure/Operation"
              eOpposite="#/5/language/structure/Operation/pre">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to pre-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" eType="#/5/language/structure/ConstraintType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Constraint (precond/postcond/inv)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="postOwner" eType="#/5/language/structure/Operation"
              eOpposite="#/5/language/structure/Operation/post">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning Operation if Constraint corresponds to post-condition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="#/5/language/structure/ConstraintLanguage">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Language in which the constraint is expressed"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="invOwner" eType="#/5/language/structure/ClassDefinition"
              eOpposite="#/5/language/structure/ClassDefinition/inv">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Owning ClassDefinition if Constraint corresponds to invariant"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eGenericSuperTypes eClassifier="#/5/language/structure/Traceability">
            <eTypeArguments eClassifier="#/7/EAnnotation"/>
          </eGenericSuperTypes>
          <eGenericSuperTypes eClassifier="#/5/language/structure/NamedElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintType">
          <eLiterals name="inv" literal="inv"/>
          <eLiterals name="pre" value="1" literal="pre"/>
          <eLiterals name="post" value="2" literal="post"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="ConstraintLanguage">
          <eLiterals name="kermeta" literal="kermeta"/>
          <eLiterals name="ocl" value="1" literal="ocl"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinition" abstract="true"
            eSuperTypes="#/5/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstracts the definition of generic type definitions (i.e. type definitions that&#xA;can be parameterized), namely, for ClassDefinition and ModelTypeDefinition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameter" upperBound="-1"
              eType="#/5/language/structure/TypeVariable" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type variables defined for the GenericTypeDefinition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeVariable" abstract="true"
            eSuperTypes="#/5/language/structure/TypeContainer #/5/language/structure/Type #/5/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Definition of a type variable for generic types :  &#xA;in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="supertype" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Reference to the supertype, if any"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType" eSuperTypes="#/5/language/structure/Type #/5/language/structure/TypeDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Type of a model, consisting of a set of included type definitions"/>
          </eAnnotations>
          <eOperations name="_new" eType="#/5/language/structure/Model">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written ##########################################&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Model result = null;&#xA;&#xA;&#x9;result = (kermeta.language.structure.Model) org.kermeta.compil.runtime.helper.language.ModelTypeUtil.newObject(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isModelTypeOf" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA;&#x9; * To be written ##########################################&#xD;&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.ModelTypeUtil.isModelTypeOf(this, m);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="m" eType="#/5/language/structure/Model"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="includedTypeDefinition"
              upperBound="-1" eType="#/5/language/structure/TypeDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelTypeVariable" eSuperTypes="#/5/language/structure/TypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="virtualType" upperBound="-1"
              eType="#/5/language/structure/VirtualType" containment="true" eOpposite="#/5/language/structure/VirtualType/modelType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VirtualType" eSuperTypes="#/5/language/structure/ObjectTypeVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="modelType" lowerBound="1"
              eType="#/5/language/structure/ModelTypeVariable" eOpposite="#/5/language/structure/ModelTypeVariable/virtualType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeParamBinding"
              upperBound="-1" eType="#/5/language/structure/TypeVariableBinding" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition"
              lowerBound="1" eType="#/5/language/structure/ClassDefinition">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Is the holder of a set of model elements (Object) that are compatible with the ModelType that has &#xA;instantiated this Model."/>
          </eAnnotations>
          <eOperations name="addCompatible" eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA; &#x9; * Returns the object if it has been added (One can check that some element have been ignored or not)&#xD;&#xA; &#x9; * return Void if not added&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents());&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ModelUtil.addCompatible(this, objectToAdd);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="objectToAdd" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Remove an object from the model&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ReflectiveCollectionUtil.remove(contents, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA; &#x9; * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Collection&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft67 = objectsToAdd.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_249 = false;&#xA;&#x9;while( !idLoopCond_249 ) {&#xA;&#x9;idLoopCond_249 = it_ft67.isOff();&#xA;&#x9;if ( idLoopCond_249 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Object obj = it_ft67.next();&#xA;&#xA;&#x9;kermeta.language.structure.Object addedObject = this.addCompatible(obj);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_250 = false;&#xA;&#x9;idIfCond_250 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(addedObject));&#xA;&#xA;&#x9;if( idIfCond_250 ) {&#xA;&#xA;&#x9;result.add(obj);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eClassifier="#/5/language/structure/Object"/>
            </eGenericType>
            <eParameters name="objectsToAdd">
              <eGenericType eClassifier="#/5/standard/Collection">
                <eTypeArguments eClassifier="#/5/language/structure/Object"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ModelUtil.add(this, obj);&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="filter">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xD;&#xA; &#x9; * Returns a set of all the elements of the model that are instance of the given Type&#xD;&#xA; &#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Object> result_ft68 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object elem_ft68 = null;&#xA;&#xA;&#x9;result_ft68 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft68 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsOrderedSet(this.getContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_251 = false;&#xA;&#x9;while( !idLoopCond_251 ) {&#xA;&#x9;idLoopCond_251 = it_ft68.isOff();&#xA;&#x9;if ( idLoopCond_251 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft68 = it_ft68.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_252 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.language.structure.Object o = elem_ft68;&#xA;&#xA;&#x9;idIfCond_252 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(typeName, o);&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_252 ) {&#xA;&#xA;&#x9;result_ft68.add(elem_ft68);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;result = result_ft68.asSet();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eClassifier="#/5/language/structure/Object"/>
            </eGenericType>
            <eParameters name="typeName" eType="#/5/language/structure/Type"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
              eType="#/5/language/structure/Object">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contents of this model..."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Require" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * &#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.createEcoreModelElement(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry requireEntry = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EStringToStringMapEntry result_ft69 = null;&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry elem_ft69 = null;&#xA;&#xA;&#x9;result_ft69 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EStringToStringMapEntry> it_ft69 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_253 = false;&#xA;&#x9;while( !idLoopCond_253 ) {&#xA;&#x9;idLoopCond_253 = kermeta.standard.helper.BooleanWrapper.or(it_ft69.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft69, null));&#xA;&#x9;if ( idLoopCond_253 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft69 = it_ft69.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_254 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EStringToStringMapEntry d = elem_ft69;&#xA;&#xA;&#x9;idIfCond_254 = kermeta.standard.helper.StringWrapper.equals(d.getKey(), &quot;require&quot;);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_254 ) {&#xA;&#xA;&#x9;result_ft69 = elem_ft69;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;requireEntry = result_ft69;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;requireEntry.setValue(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(requireEntry.getValue(), this.getUri()), &quot;|&quot;));&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Using" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="To be written"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * &#xA; */"/>
          </eAnnotations>
          <eOperations name="applyPass1" ordered="false">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;this.createEcoreModelElement(context);&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createEcoreModelElement" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation ecoreAnnotation = ((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry usingEntry = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EStringToStringMapEntry result_ft70 = null;&#xA;&#xA;&#x9;ecore.EStringToStringMapEntry elem_ft70 = null;&#xA;&#xA;&#x9;result_ft70 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EStringToStringMapEntry> it_ft70 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_255 = false;&#xA;&#x9;while( !idLoopCond_255 ) {&#xA;&#x9;idLoopCond_255 = kermeta.standard.helper.BooleanWrapper.or(it_ft70.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft70, null));&#xA;&#x9;if ( idLoopCond_255 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft70 = it_ft70.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_256 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EStringToStringMapEntry d = elem_ft70;&#xA;&#xA;&#x9;idIfCond_256 = kermeta.standard.helper.StringWrapper.equals(d.getKey(), &quot;using&quot;);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_256 ) {&#xA;&#xA;&#x9;result_ft70 = elem_ft70;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;usingEntry = result_ft70;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;usingEntry.setValue(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(usingEntry.getValue(), this.getQualifiedName()), &quot;|&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(ecoreAnnotation.getDetails()).add(usingEntry);&#xA;&#xA;&#x9;result = ecoreAnnotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Filter" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Filter is the class that represent a filter on a ModelingUnit.&#xA;the qualifiedName represent the beginning of the matched names"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeDefinitionContainer" abstract="true"
            eSuperTypes="#/5/language/structure/NamedElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xA;element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xA;package definition."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeDefinition"
              upperBound="-1" eType="#/5/language/structure/TypeDefinition" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Contained TypeDefinitions"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Traceability" eSuperTypes="#/5/language/structure/Object">
          <eTypeParameters name="X"/>
          <eOperations name="getEcoreModelElementTrace">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;X result = null;&#xA;&#xA;&#x9;result = this.getEcoreModelElement();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eGenericType eTypeParameter="#/5/language/structure/Traceability/X"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ecoreModelElement">
            <eGenericType eTypeParameter="#/5/language/structure/Traceability/X"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Object_oid"
            instanceClassName="java.lang.Integer"/>
      </eSubpackages>
      <eSubpackages name="behavior" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/language/behavior"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#/5/language/structure/TypeContainer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="The base class for every entity used to define a behavior in operation body."/>
          </eAnnotations>
          <eOperations name="endOfExpressionFixer" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Check if the current element is at the end of an Expression, if so a &quot;;&quot; is added&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_257 = false;&#xA;&#x9;idIfCond_257 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_257 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_258 = false;&#xA;&#x9;idIfCond_258 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Loop&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Rescue&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;)));&#xA;&#xA;&#x9;if( idIfCond_258 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_259 = false;&#xA;&#x9;idIfCond_259 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;));&#xA;&#xA;&#x9;if( idIfCond_259 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_260 = false;&#xA;&#x9;idIfCond_260 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget(), this);&#xA;&#xA;&#x9;if( idIfCond_260 ) {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_261 = false;&#xA;&#x9;idIfCond_261 = ((kermeta.language.behavior.Assignment) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;))).getTarget().isCallFeatureAsStaticProperty();&#xA;&#xA;&#x9;if( idIfCond_261 ) {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;;&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;;&quot;;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_262 = false;&#xA;&#x9;idIfCond_262 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getCompiledJavaExtern(), &quot;&quot;), kermeta.standard.helper.StringWrapper.equals(context.getCompiledJavaExtern(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_262 ) {&#xA;&#xA;&#x9;context.setCompiledJavaExtern(this.getCompiledJavaExtern());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_263 = false;&#xA;&#x9;idIfCond_263 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(context.getCurrent_valueType()));&#xA;&#xA;&#x9;if( idIfCond_263 ) {&#xA;&#xA;&#x9;context.setCompiledJavaExtern(kermeta.standard.helper.StringWrapper.replace(context.getCompiledJavaExtern(), &quot;this&quot;, &quot;self&quot;));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="mustBeAssigned" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_264 = false;&#xA;&#x9;idIfCond_264 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Literal&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;void&quot;)));&#xA;&#xA;&#x9;if( idIfCond_264 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_265 = false;&#xA;&#x9;idIfCond_265 = this.isFunctionTypeVariable();&#xA;&#xA;&#x9;if( idIfCond_265 ) {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFunctionTypeVariable" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_266 = false;&#xA;&#x9;idIfCond_266 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_266 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_267 = false;&#xA;&#x9;idIfCond_267 = ((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))).isFunctionTypeVariable();&#xA;&#xA;&#x9;if( idIfCond_267 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeLambdaExpressionResult"
              eType="#/5/standard/JavaString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticType" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the Expression (set by type checking)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Block is the model-element representation for the &lt;code>do...end&lt;/code> block."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;kermeta.utils.StringBuffer javaCode = ((kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.StringBuffer&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_268 = false;&#xA;&#x9;idIfCond_268 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_268 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;{\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_269 = false;&#xA;&#x9;idIfCond_269 = this.containsRescue();&#xA;&#xA;&#x9;if( idIfCond_269 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;try {&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer nbrStm = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getStatement()).size();&#xA;&#xA;&#x9;java.lang.Integer i_stm = 0;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft72 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getStatement()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_270 = false;&#xA;&#x9;while( !idLoopCond_270 ) {&#xA;&#x9;idLoopCond_270 = it_ft72.isOff();&#xA;&#x9;if ( idLoopCond_270 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression s = it_ft72.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression stm = s_ft72;&#xA;&#xA;&#x9;java.lang.String str_statement = kermeta.standard.helper.StringWrapper.replace(kermeta.standard.helper.StringWrapper.replace(stm.createBehaviorJava(context), &quot; == null&quot;, &quot; == null&quot;), &quot;;&quot;, &quot;;&quot;);&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> str_statement_splitted = kermeta.standard.helper.StringWrapper.split(str_statement, context.getSEPARATOR_STATEMENT_FT());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_271 = false;&#xA;&#x9;idIfCond_271 = kermeta.standard.helper.IntegerWrapper.equals(str_statement_splitted.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_271 ) {&#xA;&#xA;&#x9;java.lang.String s1 = str_statement_splitted.one();&#xA;&#xA;&#x9;java.lang.String s2 = str_statement_splitted.last();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_272 = false;&#xA;&#x9;idIfCond_272 = kermeta.standard.helper.StringWrapper.contains(s2, context.get());&#xA;&#xA;&#x9;if( idIfCond_272 ) {&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(s2, context.get(), s1);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;str_statement = kermeta.standard.helper.StringWrapper.replace(str_statement, context.getSEPARATOR_STATEMENT_FT(), &quot;&quot;);&#xA;&#xA;&#x9;javaCode.append(context.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;javaCode.append(&quot;\n\t&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_273 = false;&#xA;&#x9;idIfCond_273 = kermeta.standard.helper.IntegerWrapper.equals(i_stm, kermeta.standard.helper.IntegerWrapper.minus(nbrStm, 1));&#xA;&#xA;&#x9;if( idIfCond_273 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_274 = false;&#xA;&#x9;idIfCond_274 = kermeta.standard.helper.IntegerWrapper.isGreater(context.getLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_274 ) {&#xA;&#xA;&#x9;javaCode.append(context.getLastStatementStack().pop());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_275 = false;&#xA;&#x9;idIfCond_275 = stm.mustBeAssigned();&#xA;&#xA;&#x9;if( idIfCond_275 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_276 = false;&#xA;&#x9;idIfCond_276 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_276 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_277 = false;&#xA;&#x9;idIfCond_277 = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getStaticType().getTypeName());&#xA;&#xA;&#x9;if( idIfCond_277 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_278 = false;&#xA;&#x9;idIfCond_278 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Block&quot;)), kermeta.standard.helper.IntegerWrapper.equals(context.getResultLastStatementStack().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_278 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_279 = false;&#xA;&#x9;idIfCond_279 = kermeta.standard.helper.StringWrapper.equals(context.getResultLastStatementType(), ((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getStaticType().createBehaviorJava(context));&#xA;&#xA;&#x9;if( idIfCond_279 ) {&#xA;&#xA;&#x9;javaCode.append(context.getResultLastStatementId());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_280 = false;&#xA;&#x9;idIfCond_280 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)), kermeta.standard.helper.IntegerWrapper.isGreater(context.getResultLastStatementStack().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_280 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_281 = false;&#xA;&#x9;idIfCond_281 = kermeta.standard.helper.StringWrapper.equals(context.getResultLastStatementType(), ((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(stm, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getStaticType().createBehaviorJava(context));&#xA;&#xA;&#x9;if( idIfCond_281 ) {&#xA;&#xA;&#x9;javaCode.append(context.getResultLastStatementId());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_282 = false;&#xA;&#x9;idIfCond_282 = stm.mustBeAssigned();&#xA;&#xA;&#x9;if( idIfCond_282 ) {&#xA;&#xA;&#x9;javaCode.append(context.getNOT_EVALUATED_MESSAGE());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;javaCode.append(str_statement);&#xA;&#xA;&#x9;javaCode.append(&quot;\n&quot;);&#xA;&#xA;&#x9;i_stm = kermeta.standard.helper.IntegerWrapper.plus(i_stm, 1);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_283 = false;&#xA;&#x9;idIfCond_283 = this.containsRescue();&#xA;&#xA;&#x9;if( idIfCond_283 ) {&#xA;&#xA;&#x9;context.pushKRErrorStack();&#xA;&#xA;&#x9;javaCode.append(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;} catch( &quot;, context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot; &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot; ) {\n&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Rescue> it_ft73 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Rescue>convertAsOrderedSet(this.getRescueBlock()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_284 = false;&#xA;&#x9;while( !idLoopCond_284 ) {&#xA;&#x9;idLoopCond_284 = it_ft73.isOff();&#xA;&#x9;if ( idLoopCond_284 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Rescue e = it_ft73.next();&#xA;&#xA;&#x9;javaCode.append(e.createBehaviorJava(context));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;javaCode.append(&quot;\n}\n&quot;);&#xA;&#xA;&#x9;context.getKRErrorStack().pop();&#xA;}&#xA; else {&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_285 = false;&#xA;&#x9;idIfCond_285 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))));&#xA;&#xA;&#x9;if( idIfCond_285 ) {&#xA;&#xA;&#x9;javaCode.append(&quot;}&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = javaCode.toString();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="containsRescue" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_286 = false;&#xA;&#x9;idIfCond_286 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Rescue>convertAsOrderedSet(this.getRescueBlock()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Rescue>convertAsOrderedSet(this.getRescueBlock()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_286 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="statement" upperBound="-1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of statements composing the block"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="rescueBlock" upperBound="-1"
              eType="#/5/language/behavior/Rescue" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="List of rescues defined for the block"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallExpression" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Any callable expression inherits this class, e.g : &#xA;  - variable call&#xA;  - feature call ( &lt;code>a.b&lt;/code> : b is a feature call)&#xA;&#xA;&lt;img alt=&quot;&quot;  height=&quot;90%&quot; width=&quot;90%&quot;  src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_call_expressions.png&quot; />"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="isCallFeatureAsStaticEnumLiteral" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_287 = false;&#xA;&#x9;idIfCond_287 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_287 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_288 = false;&#xA;&#x9;idIfCond_288 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticEnumLiteral()));&#xA;&#xA;&#x9;if( idIfCond_288 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isCallFeatureAsStaticOperation" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_289 = false;&#xA;&#x9;idIfCond_289 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_289 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_290 = false;&#xA;&#x9;idIfCond_290 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticOperation()));&#xA;&#xA;&#x9;if( idIfCond_290 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isCallFeatureAsStaticProperty" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_291 = false;&#xA;&#x9;idIfCond_291 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_291 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_292 = false;&#xA;&#x9;idIfCond_292 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticProperty()));&#xA;&#xA;&#x9;if( idIfCond_292 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticTypeVariableBindings"
              upperBound="-1" eType="#/5/language/structure/Type">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="A call must be named"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Kermeta calls can embedd expressions as parameters"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallFeature" eSuperTypes="#/5/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallFeature is the model element that refers to the use of a feature, i.e either &#xA;a property or an operation in a statement. In &lt;code>stdio.writeln(&quot;hello&quot;)&lt;/code>, &#xA;&lt;code>writeln&lt;/code> is a CallFeature."/>
          </eAnnotations>
          <eOperations name="fromUtil" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_293 = false;&#xA;&#x9;idIfCond_293 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType(), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;kermeta::language::structure::Object&quot;), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;))))))), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;kermeta::language::structure::Type&quot;), kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(context.getFrameworkOperations()).contains(fName), kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallResult&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)))), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.SelfExpression&quot;)))))));&#xA;&#xA;&#x9;if( idIfCond_293 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = false;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean ppCast = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_294 = false;&#xA;&#x9;idIfCond_294 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getTarget());&#xA;&#xA;&#x9;if( idIfCond_294 ) {&#xA;&#xA;&#x9;this.setTarget(((kermeta.language.behavior.SelfExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.behavior.SelfExpression&quot;)));&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression tgt = this.getTarget();&#xA;&#xA;&#x9;java.lang.String fName = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context);&#xA;&#xA;&#x9;java.lang.String static_call = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_295 = false;&#xA;&#x9;idIfCond_295 = this.isCallFeatureAsStaticOperation();&#xA;&#xA;&#x9;if( idIfCond_295 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_296 = false;&#xA;&#x9;idIfCond_296 = this.callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_296 ) {&#xA;&#xA;&#x9;java.lang.String ft_str = this.createStringFromFunctionType(context);&#xA;&#xA;&#x9;result = ft_str;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_297 = false;&#xA;&#x9;idIfCond_297 = this.fromUtil(context);&#xA;&#xA;&#x9;if( idIfCond_297 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_298 = false;&#xA;&#x9;idIfCond_298 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType();&#xA;&#xA;&#x9;if( idIfCond_298 ) {&#xA;&#xA;&#x9;static_call = this.getStaticOperation().getOptimizedStaticCall(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_299 = false;&#xA;&#x9;idIfCond_299 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_299 ) {&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)))), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).qualifiedName(), &quot;::&quot;, &quot;.&quot;), &quot;.helper.&quot;), ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Wrapper.&quot;), fName);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.language.&quot;, ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Util.&quot;), fName);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_300 = false;&#xA;&#x9;idIfCond_300 = kermeta.standard.helper.StringWrapper.equals(fName, &quot;asType&quot;);&#xA;&#xA;&#x9;if( idIfCond_300 ) {&#xA;&#xA;&#x9;ppCast = true;&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;(&quot;, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).one().createBehaviorJava(context)), &quot;) &quot;), static_call);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_301 = false;&#xA;&#x9;idIfCond_301 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));&#xA;&#xA;&#x9;if( idIfCond_301 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_302 = false;&#xA;&#x9;idIfCond_302 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt.getStaticType()));&#xA;&#xA;&#x9;if( idIfCond_302 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_303 = false;&#xA;&#x9;idIfCond_303 = tgt.getStaticType().isValueType();&#xA;&#xA;&#x9;if( idIfCond_303 ) {&#xA;&#xA;&#x9;static_call = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.&quot;, tgt.getStaticType().getTypeName()), &quot;Util.&quot;), fName);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_304 = false;&#xA;&#x9;idIfCond_304 = kermeta.standard.helper.BooleanWrapper.and(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this.getStaticOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isMappedToJavaRawType(), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStaticOperation().getBody())));&#xA;&#xA;&#x9;if( idIfCond_304 ) {&#xA;&#xA;&#x9;static_call = this.getStaticOperation().getOptimizedStaticCall(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_305 = false;&#xA;&#x9;idIfCond_305 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(fName, &quot;_new&quot;), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))));&#xA;&#xA;&#x9;if( idIfCond_305 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;((&quot;), tgt.createBehaviorJava(context)), &quot;) &quot;), &quot;org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(\&quot;&quot;), tgt.createBehaviorJava(context)), &quot;\&quot;))&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_306 = false;&#xA;&#x9;idIfCond_306 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tgt));&#xA;&#xA;&#x9;if( idIfCond_306 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_307 = false;&#xA;&#x9;idIfCond_307 = kermeta.standard.helper.BooleanWrapper.not(tgt.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_307 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_308 = false;&#xA;&#x9;idIfCond_308 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_308 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_309 = false;&#xA;&#x9;idIfCond_309 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(tgt, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.TypeLiteral&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(tgt.getStaticType()), &quot;Enumeration&quot;));&#xA;&#xA;&#x9;if( idIfCond_309 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\&quot;&quot;), tgt.createBehaviorJava(context)), &quot;\&quot;)&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, tgt.createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_310 = false;&#xA;&#x9;idIfCond_310 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_310 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;.&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_311 = false;&#xA;&#x9;idIfCond_311 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallExpression&quot;)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_311 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, context.getPREVIOUS_STATEMENT_FT()), context.getkermeta.standard.helper.StringWrapper.plus(()), context.getResultOfLastFt());&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(tgt.createBehaviorJava(context), kermeta.standard.helper.StringWrapper.replace(result, context.getSELF_EXPRESSION_TO_REPLACE(), context.getResultOfLastFt()));&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_312 = false;&#xA;&#x9;idIfCond_312 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_312 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_313 = false;&#xA;&#x9;idIfCond_313 = this.isCallFeatureAsStaticEnumLiteral();&#xA;&#xA;&#x9;if( idIfCond_313 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;getByName(\&quot;&quot;), fName), &quot;\&quot;)&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_314 = false;&#xA;&#x9;idIfCond_314 = this.isCallFeatureAsStaticProperty();&#xA;&#xA;&#x9;if( idIfCond_314 ) {&#xA;&#xA;&#x9;java.lang.String cf_prop_suffix = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_315 = false;&#xA;&#x9;idIfCond_315 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getStaticProperty().getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_315 ) {&#xA;&#xA;&#x9;java.lang.String type_binding = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariableBinding>convertAsOrderedSet(((kermeta.language.structure.Class) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Class&quot;))).getTypeParamBinding()).one().getType().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_316 = false;&#xA;&#x9;idIfCond_316 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_316 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;&quot;, type_binding), &quot;>convertAsBag(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_317 = false;&#xA;&#x9;idIfCond_317 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsOrdered()));&#xA;&#xA;&#x9;if( idIfCond_317 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;&quot;, type_binding), &quot;>convertAsSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_318 = false;&#xA;&#x9;idIfCond_318 = kermeta.standard.helper.BooleanWrapper.and(this.getStaticProperty().getIsUnique(), this.getStaticProperty().getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_318 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;&quot;, type_binding), &quot;>convertAsOrderedSet(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_319 = false;&#xA;&#x9;idIfCond_319 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(this.getStaticProperty().getIsUnique()), this.getStaticProperty().getIsOrdered());&#xA;&#xA;&#x9;if( idIfCond_319 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;&quot;, type_binding), &quot;>convertAsSequence(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;cf_prop_suffix = &quot;)&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;get&quot;), kermeta.standard.helper.StringWrapper.capName(this.getStaticProperty().getFinalName())), &quot;()&quot;), cf_prop_suffix);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_320 = false;&#xA;&#x9;idIfCond_320 = kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType());&#xA;&#xA;&#x9;if( idIfCond_320 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getStaticOperation().getFinalName(), context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_321 = false;&#xA;&#x9;idIfCond_321 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallExpression&quot;)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this).callsFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_321 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_322 = false;&#xA;&#x9;idIfCond_322 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;));&#xA;&#xA;&#x9;if( idIfCond_322 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.CallFeature cf_ = ((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_323 = false;&#xA;&#x9;idIfCond_323 = kermeta.standard.helper.BooleanWrapper.or(cf_.fromUtil(context), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(cf_.getStaticOperation().getCompiledJavaExtern(), &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_323 ) {&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;.&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_324 = false;&#xA;&#x9;idIfCond_324 = kermeta.standard.helper.StringWrapper.contains(result, context.getRETURN_EXPRESSION_TO_REPLACE());&#xA;&#xA;&#x9;if( idIfCond_324 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.replace(result, context.getresult = (), kermeta.standard.helper.StringWrapper.plus(static_call, &quot;(&quot;));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(static_call, &quot;(&quot;), result);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_325 = false;&#xA;&#x9;idIfCond_325 = ppCast;&#xA;&#xA;&#x9;if( idIfCond_325 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;(&quot;, result);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_326 = false;&#xA;&#x9;idIfCond_326 = kermeta.standard.helper.BooleanWrapper.and(this.isCallFeatureAsStaticOperation(), kermeta.standard.helper.BooleanWrapper.not(this.callsFunctionType()));&#xA;&#xA;&#x9;if( idIfCond_326 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_327 = false;&#xA;&#x9;idIfCond_327 = kermeta.standard.helper.StringWrapper.equals(static_call, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_327 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;(&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;static_call = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_328 = false;&#xA;&#x9;idIfCond_328 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()))), kermeta.standard.helper.IntegerWrapper.isGreater(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).size(), 0));&#xA;&#xA;&#x9;if( idIfCond_328 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.CompilerHelperJava&quot;)).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;);&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_329 = false;&#xA;&#x9;idIfCond_329 = ppCast;&#xA;&#xA;&#x9;if( idIfCond_329 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;)&quot;);&#xA;&#xA;&#x9;ppCast = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getParamBindings" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Unused for the moment&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft74 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_330 = false;&#xA;&#x9;while( !idLoopCond_330 ) {&#xA;&#x9;idLoopCond_330 = it_ft74.isOff();&#xA;&#x9;if ( idLoopCond_330 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression param = it_ft74.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_331 = false;&#xA;&#x9;idIfCond_331 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(param, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;&#xA;&#x9;if( idIfCond_331 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_332 = false;&#xA;&#x9;idIfCond_332 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;));&#xA;&#xA;&#x9;if( idIfCond_332 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft75 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsSequence(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(param, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;))).getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;))).getType()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_333 = false;&#xA;&#x9;while( !idLoopCond_333 ) {&#xA;&#x9;idLoopCond_333 = it_ft75.isOff();&#xA;&#x9;if ( idLoopCond_333 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Type t = it_ft75.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_334 = false;&#xA;&#x9;idIfCond_334 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);&#xA;&#xA;&#x9;if( idIfCond_334 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, t.getTypeQName());&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_335 = false;&#xA;&#x9;idIfCond_335 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_335 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;&lt;&quot;, result), &quot;>&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="createStringFromFunctionType" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.behavior.Expression tgt = this.getTarget();&#xA;&#xA;&#x9;context.getTasks_stack().push(&quot;FunctionType_Compilation&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft76 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(this.getStaticOperation().getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_336 = false;&#xA;&#x9;while( !idLoopCond_336 ) {&#xA;&#x9;idLoopCond_336 = it_ft76.isOff();&#xA;&#x9;if ( idLoopCond_336 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Parameter p = it_ft76.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_337 = false;&#xA;&#x9;idIfCond_337 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(p.getType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_337 ) {&#xA;&#xA;&#x9;context.setCurrent_param_ft(p.getName());&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type> map_type = ((kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type>&quot;));&#xA;&#xA;&#x9;java.lang.Integer inc_tp = 0;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Type> it_ft77 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Type>convertAsOrderedSet(this.getStaticTypeVariableBindings()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_338 = false;&#xA;&#x9;while( !idLoopCond_338 ) {&#xA;&#x9;idLoopCond_338 = it_ft77.isOff();&#xA;&#x9;if ( idLoopCond_338 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Type type_ = it_ft77.next();&#xA;&#xA;&#x9;map_type.put(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getStaticOperation().getTypeParameter()).elementAt(inc_tp), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;type_&quot;));&#xA;&#xA;&#x9;inc_tp = kermeta.standard.helper.IntegerWrapper.plus(inc_tp, 1);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;context.getFtMapTypeStack().push(map_type);&#xA;&#xA;&#x9;kermeta.language.structure.Type ftRightType = ((kermeta.language.structure.Type) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Type&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_339 = false;&#xA;&#x9;idIfCond_339 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;&#xA;&#x9;if( idIfCond_339 ) {&#xA;&#xA;&#x9;kermeta.language.behavior.LambdaExpression theLambdaExp = ((kermeta.language.behavior.LambdaExpression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;)));&#xA;&#xA;&#x9;context.getFtStack().push(theLambdaExp);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_340 = false;&#xA;&#x9;idIfCond_340 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_340 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_341 = false;&#xA;&#x9;idIfCond_341 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;));&#xA;&#xA;&#x9;if( idIfCond_341 ) {&#xA;&#xA;&#x9;context.getFtProductTypeStack().push(((kermeta.language.structure.ProductType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getLeft(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ProductType&quot;))));&#xA;}&#xA;&#xA;&#xA;&#x9;ftRightType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight();&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String ft_str = &quot;&quot;;&#xA;&#xA;&#x9;context.pushFtSuffix();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_342 = false;&#xA;&#x9;idIfCond_342 = tgt.callsFunctionType();&#xA;&#xA;&#x9;if( idIfCond_342 ) {&#xA;&#xA;&#x9;context.setFtContextualSelf(context.getSELF_EXPRESSION_TO_REPLACE());&#xA;}&#xA; else {&#xA;&#xA;&#x9;context.setFtContextualSelf(tgt.createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;java.lang.String callElement = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_343 = false;&#xA;&#x9;idIfCond_343 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;));&#xA;&#xA;&#x9;if( idIfCond_343 ) {&#xA;&#xA;&#x9;callElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(((kermeta.language.behavior.VariableDecl) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.VariableDecl&quot;))).getIdentifier(), context);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_344 = false;&#xA;&#x9;idIfCond_344 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_344 ) {&#xA;&#xA;&#x9;callElement = ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))).getName(), context);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_345 = false;&#xA;&#x9;idIfCond_345 = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, &quot;&quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Assignment&quot;)));&#xA;&#xA;&#x9;if( idIfCond_345 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;null;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, context.getSEPARATOR_STATEMENT_FT()), &quot;//Beginning of the Inlining of the function type: &quot;), this.getStaticOperation().getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;java.lang.String type_ftReturnType = this.getStaticType().createBehaviorJava(context);&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;context.setFtReturnType(type_ftReturnType);&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, this.getStaticOperation().createBehaviorJava(context));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_346 = false;&#xA;&#x9;idIfCond_346 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(callElement, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_346 ) {&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;\n//callElement\n&quot;);&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, callElement), &quot; = result&quot;), context.printFtSuffix()), &quot;;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_347 = false;&#xA;&#x9;idIfCond_347 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(callElement, &quot;&quot;), kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(this.getStaticType().getTypeName())));&#xA;&#xA;&#x9;if( idIfCond_347 ) {&#xA;&#xA;&#x9;context.setResultOfLastFt(kermeta.standard.helper.StringWrapper.plus(&quot;result&quot;, context.printFtSuffix()));&#xA;}&#xA;&#xA;&#xA;&#x9;ft_str = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(ft_str, &quot;//End of the Inlining of the function type: &quot;), this.getStaticOperation().getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;context.getFtMapTypeStack().pop();&#xA;&#xA;&#x9;context.getFtProductTypeStack().pop();&#xA;&#xA;&#x9;context.getFtSuffix().pop();&#xA;&#xA;&#x9;result = ft_str;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticOperation"
              eType="#/5/language/structure/Operation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The method which will be executed (operation case)&#xA;and the result value passed to the caller"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallFeature represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target Expression (the owner of the feature)"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticEnumLiteral"
              eType="#/5/language/structure/EnumerationLiteral">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticProperty" eType="#/5/language/structure/Property">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The object which will be returned (property case)"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallVariable" eSuperTypes="#/5/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="We call &quot;CallVariable&quot; the use of a variable in a statement.&#xA;in &lt;code>i := j + 1&lt;/code>, i and j are 2 CallVariables."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_348 = false;&#xA;&#x9;idIfCond_348 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.StringWrapper.equals(context.getTasks_stack().peek(), &quot;FunctionType_Compilation&quot;), kermeta.standard.helper.StringWrapper.equals(context.getCurrent_param_ft(), this.getName()));&#xA;&#xA;&#x9;if( idIfCond_348 ) {&#xA;&#xA;&#x9;context.getTasks_stack().pop();&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;kermeta.language.behavior.LambdaExpression theLambdaExp = context.getFtStack().pop();&#xA;&#xA;&#x9;java.lang.String str_toInclude = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_349 = false;&#xA;&#x9;idIfCond_349 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;));&#xA;&#xA;&#x9;if( idIfCond_349 ) {&#xA;&#xA;&#x9;java.lang.String lambdaExp_returnType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_350 = false;&#xA;&#x9;idIfCond_350 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(lambdaExp_returnType));&#xA;&#xA;&#x9;if( idIfCond_350 ) {&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer inc_param = 0;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.LambdaParameter> it_ft78 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.LambdaParameter>convertAsOrderedSet(theLambdaExp.getParameters()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_351 = false;&#xA;&#x9;while( !idLoopCond_351 ) {&#xA;&#x9;idLoopCond_351 = it_ft78.isOff();&#xA;&#x9;if ( idLoopCond_351 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.LambdaParameter p = it_ft78.next();&#xA;&#xA;&#x9;java.lang.String type_param_ = context.getFtProductTypeStack().peek().getTypeByIndex(inc_param).createBehaviorJava(context);&#xA;&#xA;&#x9;str_toInclude = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_toInclude, type_param_), &quot; &quot;), p.getName());&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;&#xA;&#x9;str_toInclude = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_toInclude, &quot; = &quot;), org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()).elementAt(inc_param).createBehaviorJava(context)), &quot;;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(false);&#xA;&#xA;&#x9;inc_param = kermeta.standard.helper.IntegerWrapper.plus(inc_param, 1);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;//Beginning of the Inlining of the lambda expression: &quot;), this.getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, str_toInclude), theLambdaExp.getBody().createBehaviorJava(context));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;//End of the Inlining of the lambda expression: &quot;), this.getName()), &quot;\n&quot;);&#xA;&#xA;&#x9;context.setFtSuffixActivation(true);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_352 = false;&#xA;&#x9;idIfCond_352 = kermeta.standard.helper.StringWrapper.equals(this.getName(), &quot;stdio&quot;);&#xA;&#xA;&#x9;if( idIfCond_352 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;org.kermeta.compil.runtime.helper.io.StdIOUtil&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getName(), context)), context.printFtSuffix());&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="getFunctionTypeParameter" eType="#/5/language/structure/Parameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Parameter result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter ftParam = this.retrieveCorrespondingParameter();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_353 = false;&#xA;&#x9;idIfCond_353 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ftParam));&#xA;&#xA;&#x9;if( idIfCond_353 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_354 = false;&#xA;&#x9;idIfCond_354 = ftParam.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_354 ) {&#xA;&#xA;&#x9;result = ftParam;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="retrieveCorrespondingParameter" eType="#/5/language/structure/Parameter">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;kermeta.language.structure.Parameter result = null;&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Parameter result_ft79 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter elem_ft79 = null;&#xA;&#xA;&#x9;result_ft79 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Parameter> it_ft79 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Parameter>convertAsOrderedSet(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getOwnedParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_355 = false;&#xA;&#x9;while( !idLoopCond_355 ) {&#xA;&#x9;idLoopCond_355 = kermeta.standard.helper.BooleanWrapper.or(it_ft79.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft79, null));&#xA;&#x9;if ( idLoopCond_355 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft79 = it_ft79.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_356 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Parameter p = elem_ft79;&#xA;&#xA;&#x9;idIfCond_356 = kermeta.standard.helper.StringWrapper.equals(p.getName(), this.getName());&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_356 ) {&#xA;&#xA;&#x9;result_ft79 = elem_ft79;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFunctionTypeVariable" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Parameter ftParam = this.retrieveCorrespondingParameter();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_357 = false;&#xA;&#x9;idIfCond_357 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ftParam));&#xA;&#xA;&#x9;if( idIfCond_357 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_358 = false;&#xA;&#x9;idIfCond_358 = ftParam.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_358 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Tells whether this CallVariable represents a call to @pre in a postcondition"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallResult" eSuperTypes="#/5/language/behavior/CallVariable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the special internal variable &quot;result&quot; that is used to store the return value of any operation "/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallVariable"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;result&quot;, context.printFtSuffix());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallValue" eSuperTypes="#/5/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="CallValue refers to the use of the &lt;code>value&lt;/code> reserved keyword. This keyword is&#xA;only used in the body of the &lt;code>setter&lt;/code> part of derived properties."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallSuperOperation" eSuperTypes="#/5/language/behavior/CallExpression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represents a call to the operataion in the parent class&#xA;&#x9;In the following example, the type of super(element) is CallSuperOperation:&#xA;&#xA;class ParentClass {&#xA;  operation op(element : Integer) : Integer is do&#xA;      result := element + 1&#xA;  end&#xA;}&#xA; *&#xA;class ChildClass {&#xA;  method op(element : Integer) : Integer is do&#xA;      result := super(element)&#xA;  end&#xA;}"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::CallExpression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;kermeta.language.structure.Operation owningOperation = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.String fromOperation = kermeta.standard.helper.StringWrapper.replace(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(owningOperation.getSuperOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).qualifiedName(), &quot;::&quot;, &quot;.&quot;);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;ecore.EClass extended_class = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;ecore.EClass super_class = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(owningOperation.getSuperOperation()), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getEcoreModelElement();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_359 = false;&#xA;&#x9;idIfCond_359 = owningOperation.isFunctionType();&#xA;&#xA;&#x9;if( idIfCond_359 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;A callSuperFunctionType has been detected: &quot;, owningOperation.qualifiedName()));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_360 = false;&#xA;&#x9;idIfCond_360 = ((km2ecore.helper.ecore.ModelAnalizer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.ModelAnalizer&quot;)).isExtendedBy(extended_class, super_class);&#xA;&#xA;&#x9;if( idIfCond_360 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;super.&quot;), owningOperation.getName()), &quot;(&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, fromOperation), &quot;Super.super_&quot;), owningOperation.getName()), &quot;(this, &quot;);&#xA;&#xA;&#x9;java.lang.String simk_signature = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;super_&quot;, owningOperation.getName()), &quot;(&quot;), fromOperation), &quot; self, )&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;simk_signature: &quot;, simk_signature));&#xA;}&#xA;&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.CompilerHelperJava&quot;)).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;);&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VariableDecl" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="refers to variable declaration &lt;code>var x : X init a&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_var_expressions.png&quot;/>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.String localType = this.getStaticType().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.String var_id = kermeta.standard.helper.StringWrapper.plus(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getIdentifier(), context), context.printFtSuffix());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, localType), &quot; &quot;), var_id);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_361 = false;&#xA;&#x9;idIfCond_361 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getInitialization()));&#xA;&#xA;&#x9;if( idIfCond_361 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_362 = false;&#xA;&#x9;idIfCond_362 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;));&#xA;&#xA;&#x9;if( idIfCond_362 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(var_id, &quot; = &quot;), &quot;%%type%%&quot;), localType));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; = null;\n&quot;), this.getInitialization().createBehaviorJava(context));&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; = &quot;), this.getInitialization().createBehaviorJava(context));&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; = null;&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/5/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the declared variable"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the variable&#xA;Default value is &lt;code>void&lt;/code> ????"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Assignment is the model-element representation of the assignment statement &lt;code>x := y&lt;/code>&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_assign_expressions.png&quot;/>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.String left = this.getTarget().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.String ppCast = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_363 = false;&#xA;&#x9;idIfCond_363 = this.getIsCast();&#xA;&#xA;&#x9;if( idIfCond_363 ) {&#xA;&#xA;&#x9;ppCast = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;(&quot;, this.getTarget().getStaticType().createBehaviorJava(context)), &quot;) &quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(left, &quot; = &quot;), ppCast), &quot;%%type%%&quot;), this.getStaticType().createBehaviorJava(context)));&#xA;&#xA;&#x9;java.lang.String right = this.getValue().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_364 = false;&#xA;&#x9;idIfCond_364 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.LambdaExpression&quot;));&#xA;&#xA;&#x9;if( idIfCond_364 ) {&#xA;&#xA;&#x9;right = kermeta.standard.helper.StringWrapper.plus(&quot;function &quot;, right);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_365 = false;&#xA;&#x9;idIfCond_365 = this.getTarget().isCallFeatureAsStaticProperty();&#xA;&#xA;&#x9;if( idIfCond_365 ) {&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> tabLeft = kermeta.standard.helper.StringWrapper.split(kermeta.standard.helper.StringWrapper.replace(left, &quot;.&quot;, &quot;%&quot;), &quot;%&quot;);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_366 = false;&#xA;&#x9;while( !idLoopCond_366 ) {&#xA;&#x9;idLoopCond_366 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(i, tabLeft.size());&#xA;&#x9;if ( idLoopCond_366 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_367 = false;&#xA;&#x9;idIfCond_367 = kermeta.standard.helper.IntegerWrapper.isLower(i, kermeta.standard.helper.IntegerWrapper.minus(tabLeft.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_367 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, tabLeft.elementAt(i)), &quot;.&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_368 = false;&#xA;&#x9;idIfCond_368 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.minus(tabLeft.size(), 1));&#xA;&#xA;&#x9;if( idIfCond_368 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;set&quot;), kermeta.standard.helper.StringWrapper.capName(((kermeta.language.behavior.CallFeature) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getTarget(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;))).getStaticProperty().getFinalName())), &quot;(&quot;), ppCast), right), &quot;);&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_369 = false;&#xA;&#x9;idIfCond_369 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getValue(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Conditional&quot;));&#xA;&#xA;&#x9;if( idIfCond_369 ) {&#xA;&#xA;&#x9;result = right;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_370 = false;&#xA;&#x9;idIfCond_370 = kermeta.standard.helper.StringWrapper.contains(right, context.getRETURN_EXPRESSION_TO_REPLACE());&#xA;&#xA;&#x9;if( idIfCond_370 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.replace(right, context.getresult = (), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(left, &quot; = &quot;), ppCast));&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(left, &quot; = &quot;), ppCast), right);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Value to be assigned, as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
              eType="#/5/language/behavior/CallExpression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Target of the assignment, as a CallExpression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCast" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Boolean stating whether current assignment corresponds to a cast operation "/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaExpression" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to lambda expression definition (&lt;code>function { e | stdio.writeln(e.toString) }&lt;/code>)&#xA;&lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_lambda_expressions.png&quot;/>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the lambda expression providede as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/5/language/behavior/LambdaParameter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the lambda expression"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaParameter" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to parameter definition in lambda expression"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the lambda parameter"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
              eType="#/5/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written ################################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeReference" eSuperTypes="#/5/language/structure/MultiplicityElement">
          <eAnnotations source="kermeta">
            <details key="documentation" value="TypeReference refers to the type used in a variable declaration"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ObjectSuper.super_createBehaviorJava(this, context);&#xA;&#xA;&#x9;result = this.getType().createBehaviorJava(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Raise" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to raise exception block"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nif (true)\n\tthrow new &quot;, context.getJAVA_CLASS_EXCEPTION_SWITCHER()), &quot;( &quot;), this.getExpression().createBehaviorJava(context)), &quot; );\n&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="To be written #######################"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Rescue" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to rescue exception block"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::structure::Object"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_371 = false;&#xA;&#x9;idIfCond_371 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getExceptionType()));&#xA;&#xA;&#x9;if( idIfCond_371 ) {&#xA;&#xA;&#x9;java.lang.String str_exceptionType = this.getExceptionType().createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;if( &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot;.getRealException() instanceof &quot;), str_exceptionType), &quot; ) {\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, str_exceptionType), &quot; &quot;), this.getExceptionName()), &quot; = (&quot;), str_exceptionType), &quot;) &quot;), context.getVARIABLE_EXCEPTION_SWITCHER()), &quot;_&quot;), context.getKRErrorStack().peek()), &quot;.getRealException();\n&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft81 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getBody()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_372 = false;&#xA;&#x9;while( !idLoopCond_372 ) {&#xA;&#x9;idLoopCond_372 = it_ft81.isOff();&#xA;&#x9;if ( idLoopCond_372 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression s = it_ft81.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression e = s_ft81;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, e.createBehaviorJava(context));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n}&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1"
              upperBound="-1" eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the rescue block, specified as a KerMeta expression"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="exceptionName" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the catched exception"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionType" lowerBound="1"
              eType="#/5/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Type of the cathed exception"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SelfExpression" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Refers to &lt;code>self&lt;/code> use"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;this&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_373 = false;&#xA;&#x9;idIfCond_373 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(context.getCurrent_valueType()));&#xA;&#xA;&#x9;if( idIfCond_373 ) {&#xA;&#xA;&#x9;result = &quot;self&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_374 = false;&#xA;&#x9;idIfCond_374 = context.getFtSuffixActivation();&#xA;&#xA;&#x9;if( idIfCond_374 ) {&#xA;&#xA;&#x9;result = context.getFtContextualSelf();&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Condition is the model-element representation for the &lt;code>&lt;/code> "/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;context.pushCondStack();&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;java.lang.Boolean &quot;, context.getIfConditionId()), &quot; = false;&quot;);&#xA;&#xA;&#x9;java.lang.String str_condition = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_375 = false;&#xA;&#x9;idIfCond_375 = kermeta.standard.helper.StringWrapper.equals(context.printFtSuffix(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_375 ) {&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n\t&quot;), context.getIfConditionId()), &quot; = &quot;), this.getCondition().createBehaviorJava(context));&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_376 = false;&#xA;&#x9;idIfCond_376 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_376 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Parameter ftParam = ((kermeta.language.behavior.CallVariable) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getCondition(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;))).getFunctionTypeParameter();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_377 = false;&#xA;&#x9;idIfCond_377 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ftParam));&#xA;&#xA;&#x9;if( idIfCond_377 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_378 = false;&#xA;&#x9;idIfCond_378 = ftParam.isBooleanFunctionType(context);&#xA;&#xA;&#x9;if( idIfCond_378 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(context.getIfConditionId(), &quot; = &quot;), &quot;%%type%%java.lang.Boolean&quot;));&#xA;&#xA;&#x9;str_condition = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(str_condition, &quot;\n&quot;), this.getCondition().createBehaviorJava(context));&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, str_condition);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\n\tif( &quot;), context.getIfConditionId()), &quot; ) &quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_379 = false;&#xA;&#x9;idIfCond_379 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getThenBody()));&#xA;&#xA;&#x9;if( idIfCond_379 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.getThenBody().createBehaviorJava(context)), &quot;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_380 = false;&#xA;&#x9;idIfCond_380 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getElseBody()));&#xA;&#xA;&#x9;if( idIfCond_380 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; else &quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, this.getElseBody().createBehaviorJava(context)), &quot;\n&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;context.getCondStack().pop();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="thenBody" lowerBound="1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Then part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Condition expression of conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Optional else part of the conditional statement"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Loop" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** TODO */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="Loop refers to &lt;code>from var x : X init a until booleanCondition loop ... end&lt;/code>"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;context.pushCondStack();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_381 = false;&#xA;&#x9;idIfCond_381 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(this.getInitialization(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallVariable&quot;));&#xA;&#xA;&#x9;if( idIfCond_381 ) {&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t&quot;), this.getInitialization().createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\tjava.lang.Boolean &quot;), context.getLoopConditionId()), &quot; = false;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\twhile( !&quot;), context.getLoopConditionId()), &quot; ) {&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t&quot;), context.getLoopConditionId()), &quot; = &quot;), this.getStopCondition().createBehaviorJava(context)), &quot;;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\tif ( &quot;), context.getLoopConditionId()), &quot; ) {&quot;);&#xA;&#xA;&#x9;context.getCondStack().pop();&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t} else &quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.getBody().createBehaviorJava(context));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n\t}&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Initialization expression for the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#/5/language/behavior/Expression"
              containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Body of the loop"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="stopCondition" lowerBound="1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Stop condition of the loop, is interpreted as a Bollean value"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="JavaStaticCall" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class represent a call to an extern Java operation. &#xA;This Java operation must be static and have at least one RuntimeO"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_382 = false;&#xA;&#x9;idIfCond_382 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(context.getCompiledJavaExtern(), &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_382 ) {&#xA;&#xA;&#x9;result = context.getCompiledJavaExtern();&#xA;&#xA;&#x9;context.setCompiledJavaExtern(&quot;&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_383 = false;&#xA;&#x9;idIfCond_383 = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).isValueType();&#xA;&#xA;&#x9;if( idIfCond_383 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.helper.basetypes.&quot;, ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(this.getContainerAsType(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getName()), &quot;Util.&quot;), this.getJmethod());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.replace(this.getJclass(), &quot;::&quot;, &quot;.&quot;), &quot;.&quot;), ((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(this.getJmethod(), context));&#xA;}&#xA;&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;(&quot;), ((km2ecore.helper.kermeta.CompilerHelperJava) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.kermeta.CompilerHelperJava&quot;)).ppComaSeparatedNodes(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.behavior.Expression>convertAsOrderedSet(this.getParameters()), context)), &quot;)&quot;);&#xA;&#xA;&#x9;context.setBeforeLambdaExpressionResult(this.getBeforeLambdaExpressionResult());&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jmethod" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Name of the Java method to be launched in the identified Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
              eType="#/5/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Parameters of the Java static call provided as KerMeta expressions"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jclass" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="Qualified name of the targeted Java class"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Literal" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="Literal refers to String values, Integer values, etc."/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Expression"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="#/5/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a String value, typically : &quot;my string&quot;"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\&quot;&quot;, kermeta.standard.helper.StringWrapper.replace(this.getValue(), &quot;\&quot;&quot;, &quot;\\&quot;&quot;)), &quot;\&quot;&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, &quot;\n&quot;, &quot;\n&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.replace(result, &quot;\t&quot;, &quot;\t&quot;);&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="#/5/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing an Integer value"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.toString(this.getValue());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/5/standard/JavaInteger">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="#/5/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Boolean value, typically : true or false keyword"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.toString(this.getValue());&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/5/standard/JavaBoolean"
              defaultValueLiteral="false">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The concrete value represented by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeLiteral" eSuperTypes="#/5/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="This expression is a literal representing a Type.&#xA;for example, in &#xA;   Integer.new&#xA;Integer is a type literal representing the type kermeta::standard::Integer"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = this.getTyperef().createBehaviorJava(context);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeref" lowerBound="1"
              eType="#/5/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="The type refered by this literal"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidLiteral" eSuperTypes="#/5/language/behavior/Literal">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Complete */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="This class is used to represent the special expression void"/>
          </eAnnotations>
          <eOperations name="createBehaviorJava" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="superOperation" value="kermeta::language::behavior::Literal"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;super.createBehaviorJava(context);&#xA;&#xA;&#x9;result = &quot;null&quot;;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, this.endOfExpressionFixer());&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EmptyExpression" eSuperTypes="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="As suggested by its name, this class represents an expression that do nothing. Like a &quot;nop&quot;"/>
          </eAnnotations>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="compiler" nsURI="http://www.kermeta.org/kermeta/compiler/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/compiler"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="usage" value="launcher"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Main" eSuperTypes="#/5/language/structure/Object">
        <eOperations name="main_km2ecore_onlyEcore">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(&quot;onlyEcore&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
          <eParameters name="output" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="main_km2ecore_behaviorJava">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
          <eParameters name="output" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="main_mode3">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;)));&#xA;&#xA;&#x9;this.getContext().initialize(modelInput, traceInput);&#xA;&#xA;&#x9;this.getContext().setMode(mode);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Input model: &quot;, modelInput), &quot;\n&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft82 = this.getContext().getMu().getAllPackages().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_384 = false;&#xA;&#x9;while( !idLoopCond_384 ) {&#xA;&#x9;idLoopCond_384 = it_ft82.isOff();&#xA;&#x9;if ( idLoopCond_384 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft82.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeDefinition> it_ft84 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeDefinition>convertAsOrderedSet(((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(p, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Package&quot;))).getOwnedTypeDefinition()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_385 = false;&#xA;&#x9;while( !idLoopCond_385 ) {&#xA;&#x9;idLoopCond_385 = it_ft84.isOff();&#xA;&#x9;if ( idLoopCond_385 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeDefinition o = it_ft84.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeDefinition cd = o_ft84;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_386 = false;&#xA;&#x9;idIfCond_386 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(cd, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;if( idIfCond_386 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: eachOwnedElement&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft86 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(cd, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;))).getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_387 = false;&#xA;&#x9;while( !idLoopCond_387 ) {&#xA;&#x9;idLoopCond_387 = it_ft86.isOff();&#xA;&#x9;if ( idLoopCond_387 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property o = it_ft86.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property op = o_ft86;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_388 = false;&#xA;&#x9;idIfCond_388 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(op, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;));&#xA;&#xA;&#x9;if( idIfCond_388 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_389 = false;&#xA;&#x9;idIfCond_389 = kermeta.standard.helper.StringWrapper.equals(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(op, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).getName(), &quot;addAt&quot;);&#xA;&#xA;&#x9;if( idIfCond_389 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;================= &quot;, ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(op, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;))).qualifiedName()), &quot; =================&quot;));&#xA;&#xA;&#x9;java.lang.String javaSourceCode = op.createBehaviorJava(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(javaSourceCode);&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft87 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(this.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_390 = false;&#xA;&#x9;while( !idLoopCond_390 ) {&#xA;&#x9;idLoopCond_390 = it_ft87.isOff();&#xA;&#x9;if ( idLoopCond_390 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Operation o = it_ft87.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Constraint> it_ft88 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(this.getInv()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_391 = false;&#xA;&#x9;while( !idLoopCond_391 ) {&#xA;&#x9;idLoopCond_391 = it_ft88.isOff();&#xA;&#x9;if ( idLoopCond_391 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Constraint i = it_ft88.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.TypeVariable> it_ft89 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.TypeVariable>convertAsOrderedSet(this.getTypeParameter()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_392 = false;&#xA;&#x9;while( !idLoopCond_392 ) {&#xA;&#x9;idLoopCond_392 = it_ft89.isOff();&#xA;&#x9;if ( idLoopCond_392 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.TypeVariable t = it_ft89.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Package> it_ft90 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Package>convertAsOrderedSet(this.getNestedPackage()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_393 = false;&#xA;&#x9;while( !idLoopCond_393 ) {&#xA;&#x9;idLoopCond_393 = it_ft90.isOff();&#xA;&#x9;if ( idLoopCond_393 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Package p = it_ft90.next();&#xA;&#xA;&#x9;func;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the function type: eachOwnedElement&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\nFinish, warning: this exec mode has not filtered the FunctionTypes.&quot;);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
          <eParameters name="output" eType="#/5/standard/JavaString"/>
          <eParameters name="mode" eType="#/6/CompilingMode"/>
        </eOperations>
        <eOperations name="main_mode2">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/*****************************************/"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/********** METHODS FOR TESTING **********/"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/*****************************************/"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;)));&#xA;&#xA;&#x9;this.getContext().initialize(modelInput, traceInput);&#xA;&#xA;&#x9;this.getContext().setMode(mode);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Integer&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Boolean&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Real&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Character&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::String&quot;)));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(this.typeDefinitionToString(this.getTypeDefinitionByQualifiedName(&quot;kermeta::standard::Numeric&quot;)));&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
          <eParameters name="output" eType="#/5/standard/JavaString"/>
          <eParameters name="mode" eType="#/6/CompilingMode"/>
        </eOperations>
        <eOperations name="main_inner">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.String modelInput = &quot;platform:/resource/org.kermeta.compiler.kmt/models/StructureCompiler.km&quot;;&#xA;&#xA;&#x9;java.lang.String output = &quot;platform:/resource/org.kermeta.compiler.kmt/models/StructureCompiler.ecore&quot;;&#xA;&#xA;&#x9;java.lang.String traceInput = &quot;&quot;;&#xA;&#xA;&#x9;this.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="typeDefinitionToString" eType="#/5/standard/JavaString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_394 = false;&#xA;&#x9;idIfCond_394 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(td)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;if( idIfCond_394 ) {&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(td, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ClassDefinition&quot;)));&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(cd.getName(), &quot; &quot;), kermeta.standard.helper.BooleanWrapper.toString(cd.isValueType()));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="td" eType="#/5/language/structure/TypeDefinition"/>
        </eOperations>
        <eOperations name="getTypeDefinitionByQualifiedName" eType="#/5/language/structure/TypeDefinition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.TypeDefinition result = null;&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition td = ((kermeta.language.structure.TypeDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.TypeDefinition&quot;));&#xA;&#xA;&#x9;kermeta.language.structure.TypeDefinition td_tmp = this.getContext().getMu().getTypeDefinitionByQualifiedName(qn);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_395 = false;&#xA;&#x9;idIfCond_395 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(td_tmp));&#xA;&#xA;&#x9;if( idIfCond_395 ) {&#xA;&#xA;&#x9;td = td_tmp;&#xA;}&#xA;&#xA;&#xA;&#x9;result = td;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="qn" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="main_mode">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setContext(((km2ecore.KM2EcoreContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.KM2EcoreContext&quot;)));&#xA;&#xA;&#x9;this.getContext().initialize(modelInput, traceInput);&#xA;&#xA;&#x9;this.getContext().setMode(mode);&#xA;&#xA;&#x9;this.getContext().getMu().applyPass1(this.getContext());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_396 = false;&#xA;&#x9;idIfCond_396 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getContext().getMode(), km2ecore.CompilingMode.getByName(&quot;onlyEcore&quot;));&#xA;&#xA;&#x9;if( idIfCond_396 ) {&#xA;&#xA;&#x9;this.getContext().getMu().applyPass2(this.getContext());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;KermetaCompiler - Pass 1 is finished&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_397 = false;&#xA;&#x9;idIfCond_397 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getContext().getMode(), km2ecore.CompilingMode.getByName(&quot;behaviorKmt&quot;));&#xA;&#xA;&#x9;if( idIfCond_397 ) {&#xA;&#xA;&#x9;this.getContext().getMu().applyPass2BehaviorKmt(this.getContext());&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_398 = false;&#xA;&#x9;idIfCond_398 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getContext().getMode(), km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;));&#xA;&#xA;&#x9;if( idIfCond_398 ) {&#xA;&#xA;&#x9;this.getContext().getMu().preprocess(this.getContext());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;KermetaCompiler - Pass 2 with the mode: &quot;, this.getContext().getMode().getName()));&#xA;&#xA;&#x9;this.getContext().getMu().applyPass2BehaviorJava(this.getContext());&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;KermetaCompiler - Pass 2 is finished&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getContext().getEcoreOutputs()).add(output);&#xA;&#xA;&#x9;kermeta.persistence.Resource ecore_resource = this.getContext().getOutputRepository().createResource(output, &quot;http://www.eclipse.org/emf/2002/Ecore&quot;);&#xA;&#xA;&#x9;ecore_resource.instances().add(this.getContext().getMu().getEcoreModelElement());&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EAnnotation> it_ft91 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(this.getContext().getMu().getEntryPoints()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_399 = false;&#xA;&#x9;while( !idLoopCond_399 ) {&#xA;&#x9;idLoopCond_399 = it_ft91.isOff();&#xA;&#x9;if ( idLoopCond_399 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;ecore.EAnnotation e = it_ft91.next();&#xA;&#xA;&#x9;ecore_resource.instances().add(e);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EPackage> it_ft92 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EPackage>convertAsOrderedSet(this.getContext().getMu().getEcorePackages()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_400 = false;&#xA;&#x9;while( !idLoopCond_400 ) {&#xA;&#x9;idLoopCond_400 = it_ft92.isOff();&#xA;&#x9;if ( idLoopCond_400 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;ecore.EPackage p = it_ft92.next();&#xA;&#xA;&#x9;ecore_resource.instances().add(p);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;Save the Ecore Model&quot;);&#xA;&#xA;&#x9;ecore_resource.save();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;The Ecore Model has been saved&quot;);&#xA;&#xA;&#x9;this.getContext().save();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Stats:\n\tconditional + loop: &quot;, kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_condStack())), &quot;\n\tfunction type: &quot;), kermeta.standard.helper.IntegerWrapper.toString(this.getContext().getInc_ftSuffix())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;Finish&quot;);&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
          <eParameters name="output" eType="#/5/standard/JavaString"/>
          <eParameters name="mode" eType="#/6/CompilingMode"/>
        </eOperations>
        <eOperations name="main">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.main_mode(modelInput, traceInput, output, km2ecore.CompilingMode.getByName(&quot;behaviorJava&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
          <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
          <eParameters name="output" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="context" lowerBound="1"
            eType="#/6/KM2EcoreContext"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="standard" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/standard/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/standard"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Defines value types &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/primitive_types_view.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Defines Collection types &#xD;&#xA; * &lt;img src=&quot;./figures/collections_view.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains types dedicated to dealing with java objects&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaString" instanceClassName="java.lang.String"/>
      <eClassifiers xsi:type="ecore:EClass" name="Void" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The class Void &#xD;&#xA; * By convention it is a sub-type of everything&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="isVoid" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return true&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isInstanceOf" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="type" eType="#/5/language/structure/Type"/>
        </eOperations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the String identifier '&lt;void>'&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&lt;void>&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValueType" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class ValueType does not contain any feature.&#xD;&#xA; * However, any instance of a sub-class of ValueType will be passed by value &#xD;&#xA; * instead of by reference for any other objects.&#xD;&#xA; * that means that each time you := such object it will call the clone function associated to it (Not implemented yet except for Integer, String and boolean!!!)&#xD;&#xA; * &#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comparable" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Comparable defines a set of operation&#xD;&#xA; * to compare instances of a class.&#xD;&#xA; * Sub-classes only has to implement abstract operation compareTo.&#xD;&#xA; * All other methods are defined w.r.t. the compareTo operation&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="isLower" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLower(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreaterOrEqual" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self >= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="compareTo" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * This method should be implemented by any class that inherits&#xD;&#xA;&#x9; * from Comparable.&#xD;&#xA;&#x9; * returns 0 if self = other&#xD;&#xA;&#x9; * returns > 0 if  self > other&#xD;&#xA;&#x9; * returns &lt; 0 if  self &lt; other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="java.lang.Integer result = null;&#xA;return result;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="isLowerOrEqual" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self &lt;= other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="isGreater" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * return true if self > other&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.isGreater(this.compareTo(other), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="other" eType="#/5/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Summable" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstract class Summable defines a set of operation&#xD;&#xA; * to sum instances of a class.&#xD;&#xA; * Sub-classes only has to implement abstract operation plus.&#xD;&#xA;  */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="plus">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Summarization method to be implemented by any summable class.&#xD;&#xA;&#x9; * The parameter must have the same type (or one of its subtypes)&#xD;&#xA;&#x9; *  than the current object .&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="RecopyInValueTypes" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="G result = null;&#xA;return result;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/Summable/G"/>
          <eParameters name="other">
            <eGenericType eTypeParameter="#/5/standard/Summable/G"/>
          </eParameters>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotComparableException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * raised when two objects are not comparable&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaBoolean" instanceClassName="java.lang.Boolean"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaNumeric" instanceClassName="java.lang.Number"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaInteger" instanceClassName="java.lang.Integer"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaReal" instanceClassName="java.lang.Double"/>
      <eClassifiers xsi:type="ecore:EDataType" name="JavaCharacter" instanceClassName="java.lang.Character"/>
      <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="java.lang.Object">
        <eAnnotations source="kermeta">
          <details key="alias" value="kermeta::standard::Integer"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Unlimited natural is used for reflection.&#xD;&#xA; * It is mapped to integer.equals().&#xD;&#xA; * Any negative number is interpreted as '*'&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Collection" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Collection is the root abstract class for all kermeta collections&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=values isUnique=false isOrdered=false javaClass=org.eclipse.emf.common.util.EList"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all instances of element from the Collection, based on&#xD;&#xA;&#x9; * G.equals(Object) definition&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_ft110 = null;&#xA;&#xA;&#x9;G elem_ft110 = null;&#xA;&#xA;&#x9;result_ft110 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft110 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_509 = false;&#xA;&#x9;while( !idLoopCond_509 ) {&#xA;&#x9;idLoopCond_509 = kermeta.standard.helper.BooleanWrapper.or(it_ft110.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft110, null));&#xA;&#x9;if ( idLoopCond_509 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft110 = it_ft110.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_510 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;G e = elem_ft110;&#xA;&#xA;&#x9;idIfCond_510 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e, element);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_510 ) {&#xA;&#xA;&#x9;result_ft110 = elem_ft110;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#x9;java.lang.Boolean idLoopCond_508 = false;&#xA;&#x9;while( !idLoopCond_508 ) {&#xA;&#x9;idLoopCond_508 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(elem, null);&#xA;&#x9;if ( idLoopCond_508 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;&#xA;&#x9;elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_ft111 = null;&#xA;&#xA;&#x9;G elem_ft111 = null;&#xA;&#xA;&#x9;result_ft111 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft111 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_511 = false;&#xA;&#x9;while( !idLoopCond_511 ) {&#xA;&#x9;idLoopCond_511 = kermeta.standard.helper.BooleanWrapper.or(it_ft111.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft111, null));&#xA;&#x9;if ( idLoopCond_511 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft111 = it_ft111.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_512 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;G e = elem_ft111;&#xA;&#xA;&#x9;idIfCond_512 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e, element);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_512 ) {&#xA;&#xA;&#x9;result_ft111 = elem_ft111;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;}&#xA;&#x9;}&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="count" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the number of instances of element in the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;G> result_ft112 = null;&#xA;&#xA;&#x9;G elem_ft112 = null;&#xA;&#xA;&#x9;result_ft112 = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft112 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_513 = false;&#xA;&#x9;while( !idLoopCond_513 ) {&#xA;&#x9;idLoopCond_513 = it_ft112.isOff();&#xA;&#x9;if ( idLoopCond_513 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft112 = it_ft112.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_514 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;G e = elem_ft112;&#xA;&#xA;&#x9;idIfCond_514 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e, element);&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_514 ) {&#xA;&#xA;&#x9;result_ft112.add(elem_ft112);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;result = result_ft112.size();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="excludes" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the Collection does not contain element&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="one">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element from the Collection or void if the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_515 = false;&#xA;&#x9;idIfCond_515 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_515 ) {&#xA;&#xA;&#x9;result = null;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
        </eOperations>
        <eOperations name="containsAll" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if current Collection contains all elements of Collection elements&#xD;&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_516 = false;&#xA;&#x9;while( !idLoopCond_516 ) {&#xA;&#x9;idLoopCond_516 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( idLoopCond_516 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = this.contains(it.next());&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="sum">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sum the element if they are summable (ie implement '+' operator by inheriting of the class Summable)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;G res = null;&#xA;&#xA;&#x9;kermeta.standard.Summable&lt;G> tmp = null;&#xA;&#xA;&#x9;G o = null;&#xA;&#xA;&#x9;o = this.one();&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) o;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_517 = false;&#xA;&#x9;idIfCond_517 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(tmp, null);&#xA;&#xA;&#x9;if( idIfCond_517 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft113 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_518 = false;&#xA;&#x9;while( !idLoopCond_518 ) {&#xA;&#x9;idLoopCond_518 = it_ft113.isOff();&#xA;&#x9;if ( idLoopCond_518 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;G elem = it_ft113.next();&#xA;&#xA;&#x9;o = elem;&#xA;&#xA;&#x9;tmp = (kermeta.standard.Summable&lt;G>) o;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_519 = false;&#xA;&#x9;idIfCond_519 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(tmp, null);&#xA;&#xA;&#x9;if( idIfCond_519 ) {&#xA;&#xA;&#x9;res = tmp.plus(res);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
        </eOperations>
        <eOperations name="contains" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least one&#xD;&#xA;&#x9; * instance of element, based on G.equals(elt : Object) definition&#xD;&#xA;&#x9; * Note: for checking whether a physical element is contained by the collection,&#xD;&#xA;&#x9; * make use of G.oid()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_520 = false;&#xA;&#x9;while( !idLoopCond_520 ) {&#xA;&#x9;idLoopCond_520 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), result);&#xA;&#x9;if ( idLoopCond_520 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(it.next(), element);&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Sequence built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Sequence&lt;G> result = null;&#xA;return result;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="excludesAll" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the Collection contains no element of Collection elements&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = true;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_521 = false;&#xA;&#x9;while( !idLoopCond_521 ) {&#xA;&#x9;idLoopCond_521 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(result));&#xA;&#x9;if ( idLoopCond_521 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.contains(it.next()));&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="includes" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL API alignment, doeas the same as contains&#xD;&#xA;&#x9; * See Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.contains(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds an element in the Collection (default implementation)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.add(this, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all elements from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isEmpty" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL alignment API, does the same as empty&#xD;&#xA;&#x9; * See Collection&lt;G>.empty()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.empty();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Bag&lt;G> result = null;&#xA;return result;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="any">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an element from the Collection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_522 = false;&#xA;&#x9;idIfCond_522 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_522 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.EmptyCollection&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/Collection/G"/>
        </eOperations>
        <eOperations name="empty" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isNotEmpty" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL alignment API&#xD;&#xA;&#x9; * Returns a Boolean stating whether the Collection contains at least&#xD;&#xA;&#x9; * one element &#xD;&#xA;&#x9; * See also Collection&lt;G>.contains(Object)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.empty());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="iterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an Iterator on the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Iterator&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Iterator&lt;G>&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.iterator(this, result);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Iterator">
            <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="addAll">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds all elements from the Collection elements in the current Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft114 = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_523 = false;&#xA;&#x9;while( !idLoopCond_523 ) {&#xA;&#x9;idLoopCond_523 = it_ft114.isOff();&#xA;&#x9;if ( idLoopCond_523 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;G element = it_ft114.next();&#xA;&#xA;&#x9;this.add(element);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="includesAll" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * OCL API alignment, does the same as containsAll&#xD;&#xA;&#x9; * See Collection&lt;G>.containsAll(Collection&lt;G>)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = this.containsAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="size" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the number of elements in the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.size(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new OrderedSet built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.OrderedSet&lt;G> result = null;&#xA;return result;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set built from the Collection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.standard.Set&lt;G> result = null;&#xA;return result;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
          </eGenericType>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="values">
          <eGenericType eClassifier="#/5/standard/KermetaProperty_Collection_values">
            <eTypeArguments eTypeParameter="#/5/standard/Collection/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Set">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A Set is a non-ordered collection that contains distinct elements&#xD;&#xA; * (with regards to the G.equals(Object) operation)&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=true isOrdered=false javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the intersection of the Set elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;G>&quot;));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_524 = false;&#xA;&#x9;while( !idLoopCond_524 ) {&#xA;&#x9;idLoopCond_524 = it.isOff();&#xA;&#x9;if ( idLoopCond_524 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_525 = false;&#xA;&#x9;idIfCond_525 = elements.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_525 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="minus">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the difference between the&#xD;&#xA;&#x9; * current Set and the Set elements, ie all elements contained by &#xD;&#xA;&#x9; * the current Set that do not appear in the elements Set &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;G>&quot;));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_526 = false;&#xA;&#x9;while( !idLoopCond_526 ) {&#xA;&#x9;idLoopCond_526 = it.isOff();&#xA;&#x9;if ( idLoopCond_526 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_527 = false;&#xA;&#x9;idIfCond_527 = kermeta.standard.helper.BooleanWrapper.not(elements.contains(elem));&#xA;&#xA;&#x9;if( idIfCond_527 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.remove(G)&#xD;&#xA;&#x9; * Removes the element from the Set if it is contained by the Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_ft115 = null;&#xA;&#xA;&#x9;G elem_ft115 = null;&#xA;&#xA;&#x9;result_ft115 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft115 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_528 = false;&#xA;&#x9;while( !idLoopCond_528 ) {&#xA;&#x9;idLoopCond_528 = kermeta.standard.helper.BooleanWrapper.or(it_ft115.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft115, null));&#xA;&#x9;if ( idLoopCond_528 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft115 = it_ft115.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_529 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;G e = elem_ft115;&#xA;&#xA;&#x9;idIfCond_529 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e, element);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_529 ) {&#xA;&#xA;&#x9;result_ft115 = elem_ft115;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;elem = result_ft115;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_530 = false;&#xA;&#x9;idIfCond_530 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(elem, null);&#xA;&#xA;&#x9;if( idIfCond_530 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_531 = false;&#xA;&#x9;idIfCond_531 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(element));&#xA;&#xA;&#x9;if( idIfCond_531 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_532 = false;&#xA;&#x9;idIfCond_532 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_532 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_533 = false;&#xA;&#x9;idIfCond_533 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_533 ) {&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;java.lang.Boolean ok = true;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_534 = false;&#xA;&#x9;while( !idLoopCond_534 ) {&#xA;&#x9;idLoopCond_534 = kermeta.standard.helper.BooleanWrapper.or(it.isOff(), kermeta.standard.helper.BooleanWrapper.not(ok));&#xA;&#x9;if ( idLoopCond_534 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_535 = false;&#xA;&#x9;idIfCond_535 = kermeta.standard.helper.BooleanWrapper.not(collection.contains(elem));&#xA;&#xA;&#x9;if( idIfCond_535 ) {&#xA;&#xA;&#x9;ok = false;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = ok;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xD;&#xA;&#x9; * Returns a new Sequence composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.add(G)&#xD;&#xA;&#x9; * Adds elt to the Set if it is not already contained by the&#xD;&#xA;&#x9; * Set, does nothing otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_536 = false;&#xA;&#x9;idIfCond_536 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( idIfCond_536 ) {&#xA;&#xA;&#x9;super.add(element);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Set/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a ordered set of the bag elements sorted using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursive sort of the given (ordered) set using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/5/standard/OrderedSet">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="symmetricDifference">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set which contents corresponds to the symmetric&#xD;&#xA;&#x9; * difference between current Set and Set s, ie all elements of&#xD;&#xA;&#x9; * each Set that do not appear in the other one&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> res = s.minus(this);&#xA;&#xA;&#x9;result = this.minus(s);&#xA;&#xA;&#x9;result.addAll(res);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
          <eParameters name="s">
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set which content includes all non-Collection elements&#xD;&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xD;&#xA;&#x9; * Set, as many elements as the Collection contains&#xD;&#xA;&#x9; * Duplicates are removed&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Set&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_537 = false;&#xA;&#x9;idIfCond_537 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;G&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;if( idIfCond_537 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft116 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_538 = false;&#xA;&#x9;while( !idLoopCond_538 ) {&#xA;&#x9;idLoopCond_538 = it_ft116.isOff();&#xA;&#x9;if ( idLoopCond_538 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;G e = it_ft116.next();&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) e;&#xA;&#xA;&#x9;res.addAll(col);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eClassifier="#/5/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xD;&#xA;&#x9; * Returns a new OrderedSet that contains all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xD;&#xA;&#x9; * Returns a new Bag composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the union of the Set elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xD;&#xA;&#x9; * Returns a new Set composed of all elements of current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="unionWithBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the union of the Bag elements&#xD;&#xA;&#x9; * with the current Set&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Bag">
              <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Collection">
          <eTypeArguments eTypeParameter="#/5/standard/Set/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Bag">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Bag is a concrete non-ordered Collection allowing duplicates&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=false javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="intersection">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the intersection of elements&#xD;&#xA;&#x9; * and the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_539 = false;&#xA;&#x9;while( !idLoopCond_539 ) {&#xA;&#x9;idLoopCond_539 = it.isOff();&#xA;&#x9;if ( idLoopCond_539 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_540 = false;&#xA;&#x9;idIfCond_540 = elements.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_540 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_541 = false;&#xA;&#x9;idIfCond_541 = kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(this.count(elem), elements.count(elem));&#xA;&#xA;&#x9;if( idIfCond_541 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;it = elements.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_542 = false;&#xA;&#x9;while( !idLoopCond_542 ) {&#xA;&#x9;idLoopCond_542 = it.isOff();&#xA;&#x9;if ( idLoopCond_542 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_543 = false;&#xA;&#x9;idIfCond_543 = this.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_543 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_544 = false;&#xA;&#x9;idIfCond_544 = kermeta.standard.helper.IntegerWrapper.isLower(elements.count(elem), this.count(elem));&#xA;&#xA;&#x9;if( idIfCond_544 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Bag">
              <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(elt : Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_545 = false;&#xA;&#x9;idIfCond_545 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(element));&#xA;&#xA;&#x9;if( idIfCond_545 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_546 = false;&#xA;&#x9;idIfCond_546 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_546 ) {&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Bag&lt;G>) element;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> selfAsSet = this.asSet();&#xA;&#xA;&#x9;isEqual = selfAsSet.equals(collection.asSet());&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="asSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSequence()&#xD;&#xA;&#x9; * Returns a new Sequence containing all elements of current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;G> s = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="concatenate">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a sequence of the bag elements sorted using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Recursive sort of the given sequence using the given comparator.&#xD;&#xA;&#x9; * The comparator must return :&lt;ul>&#xD;&#xA;&#x9; *   &lt;li>+1 if the second &lt;G> element is greater than the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>0 if the second &lt;G> element equals the first&lt;/li> &#xD;&#xA;&#x9; *   &lt;li>-1 if the second &lt;G> element is lower than the first&lt;/li> &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Internal concatenation tool for recursive 'quickSort()' method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(less);&#xA;&#xA;&#x9;result.addAll(pivot);&#xA;&#xA;&#x9;result.addAll(greater);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="less">
            <eGenericType eClassifier="#/5/standard/Sequence">
              <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="pivot">
            <eGenericType eClassifier="#/5/standard/Sequence">
              <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
          <eParameters name="greater">
            <eGenericType eClassifier="#/5/standard/Sequence">
              <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="excluding">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xD;&#xA;&#x9; * current Bag from which all instances of object have been&#xD;&#xA;&#x9; * removed&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.remove(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/5/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="flatten">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes all non-Collection elements&#xD;&#xA;&#x9; * of the current Set, and, for each Collection element of the current&#xD;&#xA;&#x9; * Bag, as many elements as the Collection contains&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;kermeta.language.structure.Object> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;kermeta.language.structure.Object> res = ((kermeta.standard.Bag&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_547 = false;&#xA;&#x9;idIfCond_547 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;G&quot;), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.Collection&lt;kermeta.language.structure.Object>&quot;));&#xA;&#xA;&#x9;if( idIfCond_547 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> col = null;&#xA;&#xA;&#x9;kermeta.language.structure.Object o = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft117 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_548 = false;&#xA;&#x9;while( !idLoopCond_548 ) {&#xA;&#x9;idLoopCond_548 = it_ft117.isOff();&#xA;&#x9;if ( idLoopCond_548 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;G e = it_ft117.next();&#xA;&#xA;&#x9;col = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) e;&#xA;&#xA;&#x9;res.addAll(col);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = res;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eClassifier="#/5/language/structure/Object"/>
          </eGenericType>
        </eOperations>
        <eOperations name="intersectionWithSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Set corresponding to the intersection of a Set of&#xD;&#xA;&#x9; * elements and the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;G>&quot;));&#xA;&#xA;&#x9;G elem = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = elements.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_549 = false;&#xA;&#x9;while( !idLoopCond_549 ) {&#xA;&#x9;idLoopCond_549 = it.isOff();&#xA;&#x9;if ( idLoopCond_549 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_550 = false;&#xA;&#x9;idIfCond_550 = this.contains(elem);&#xA;&#xA;&#x9;if( idIfCond_550 ) {&#xA;&#xA;&#x9;result.add(elem);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Set">
              <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="asOrderedSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asOrderedSet()&#xD;&#xA;&#x9; * Returns a new OrderedSet containing elements of the Bag without duplicates&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;G> s = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="including">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag which content includes the content of the&#xD;&#xA;&#x9; * current Bag and the element object&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;s.add(object);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="object">
            <eGenericType eTypeParameter="#/5/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="asBag">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asBag()&#xD;&#xA;&#x9; * Returns a new Bag containing all elements of current Bag&#x9;&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Bag&lt;G> s = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eOperations name="union">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a new Bag corresponding to the union of elements and&#xD;&#xA;&#x9; * current Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Bag&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAll(elements);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Bag">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
          <eParameters name="elements">
            <eGenericType eClassifier="#/5/standard/Collection">
              <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="removeOne">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes one instance of element from the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_ft118 = null;&#xA;&#xA;&#x9;G elem_ft118 = null;&#xA;&#xA;&#x9;result_ft118 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft118 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_551 = false;&#xA;&#x9;while( !idLoopCond_551 ) {&#xA;&#x9;idLoopCond_551 = kermeta.standard.helper.BooleanWrapper.or(it_ft118.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft118, null));&#xA;&#x9;if ( idLoopCond_551 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft118 = it_ft118.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_552 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;G e = elem_ft118;&#xA;&#xA;&#x9;idIfCond_552 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(e, element);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_552 ) {&#xA;&#xA;&#x9;result_ft118 = elem_ft118;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;elem = result_ft118;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_553 = false;&#xA;&#x9;idIfCond_553 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(elem, null);&#xA;&#xA;&#x9;if( idIfCond_553 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Bag/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="removeFromOid">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the element identified by the provided Oid from the Bag&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="doesntContainsElementAnymore" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;G elem = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;G result_ft119 = null;&#xA;&#xA;&#x9;G elem_ft119 = null;&#xA;&#xA;&#x9;result_ft119 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it_ft119 = this.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_554 = false;&#xA;&#x9;while( !idLoopCond_554 ) {&#xA;&#x9;idLoopCond_554 = kermeta.standard.helper.BooleanWrapper.or(it_ft119.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft119, null));&#xA;&#x9;if ( idLoopCond_554 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft119 = it_ft119.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_555 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;G e = elem_ft119;&#xA;&#xA;&#x9;idIfCond_555 = kermeta.standard.helper.IntegerWrapper.equals(org.kermeta.compil.runtime.helper.language.ObjectUtil.oid(e), elementOid);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_555 ) {&#xA;&#xA;&#x9;result_ft119 = elem_ft119;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;elem = result_ft119;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_556 = false;&#xA;&#x9;idIfCond_556 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(elem, null);&#xA;&#xA;&#x9;if( idIfCond_556 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.remove(this, elem);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="elementOid" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="asSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Collection&lt;G>.asSet()&#xD;&#xA;&#x9; * Returns a new Set containing elements of the Bag without duplicates&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;G> result = null;&#xA;&#xA;&#x9;kermeta.standard.Set&lt;G> s = ((kermeta.standard.Set&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;G>&quot;));&#xA;&#xA;&#x9;s.addAll(this);&#xA;&#xA;&#x9;result = s;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
          </eGenericType>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Collection">
          <eTypeArguments eTypeParameter="#/5/standard/Bag/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedCollection" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An OrderedCollection is the root abstract class for all ordered Collections.&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="removeAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the element at rank index from the OrderedCollection&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_557 = false;&#xA;&#x9;idIfCond_557 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1)));&#xA;&#xA;&#x9;if( idIfCond_557 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.removeAt(this, index);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds element in the OrderedCollection at rank index&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_558 = false;&#xA;&#x9;idIfCond_558 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_558 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.addAt(this, index, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="last">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the last element in the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_559 = false;&#xA;&#x9;idIfCond_559 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_559 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.EmptyCollection&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.elementAt(kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/OrderedCollection/G"/>
        </eOperations>
        <eOperations name="equals" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Object.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean isEqual = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_560 = false;&#xA;&#x9;idIfCond_560 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(element));&#xA;&#xA;&#x9;if( idIfCond_560 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_561 = false;&#xA;&#x9;idIfCond_561 = org.kermeta.compil.runtime.helper.language.TypeUtil.isInstance(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.standard.OrderedCollection&lt;G>&quot;), element);&#xA;&#xA;&#x9;if( idIfCond_561 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;G> collection = null;&#xA;&#xA;&#x9;collection = (kermeta.standard.Collection&lt;G>) element;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_562 = false;&#xA;&#x9;idIfCond_562 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), collection.size());&#xA;&#xA;&#x9;if( idIfCond_562 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> selfIterator = this.iterator();&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> collectionIterator = collection.iterator();&#xA;&#xA;&#x9;java.lang.Boolean difference = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(1, 1);&#xA;&#x9;java.lang.Boolean idLoopCond_563 = false;&#xA;&#x9;while( !idLoopCond_563 ) {&#xA;&#x9;idLoopCond_563 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(selfIterator.isOff(), collectionIterator.isOff()), difference);&#xA;&#x9;if ( idLoopCond_563 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_564 = false;&#xA;&#x9;idIfCond_564 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(selfIterator.next(), collectionIterator.next()));&#xA;&#xA;&#x9;if( idIfCond_564 ) {&#xA;&#xA;&#x9;difference = true;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;isEqual = kermeta.standard.helper.BooleanWrapper.not(difference);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = isEqual;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="indexOf" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the index of the first instance of element in the OrderedCollection&#xD;&#xA;&#x9; * or -1 if the element is not contained by the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_565 = false;&#xA;&#x9;idIfCond_565 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_565 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.EmptyCollection&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Boolean found = false;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_566 = false;&#xA;&#x9;while( !idLoopCond_566 ) {&#xA;&#x9;idLoopCond_566 = kermeta.standard.helper.BooleanWrapper.or(found, it.isOff());&#xA;&#x9;if ( idLoopCond_566 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_567 = false;&#xA;&#x9;idIfCond_567 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(element, it.next());&#xA;&#xA;&#x9;if( idIfCond_567 ) {&#xA;&#xA;&#x9;found = true;&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_568 = false;&#xA;&#x9;idIfCond_568 = found;&#xA;&#xA;&#x9;if( idIfCond_568 ) {&#xA;&#xA;&#x9;result = i;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/OrderedCollection/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="elementAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the element at rank index in the OrderedCollection&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedCollection&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_569 = false;&#xA;&#x9;idIfCond_569 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isLower(index, 0), kermeta.standard.helper.IntegerWrapper.isGreater(index, kermeta.standard.helper.IntegerWrapper.minus(this.size(), 1)));&#xA;&#xA;&#x9;if( idIfCond_569 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.helper.basetypes.OrderedCollectionUtil.elementAt(this, index);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/OrderedCollection/G"/>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="first">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the first element in the OrderedCollection&#xD;&#xA;&#x9; * Raises an EmptyCollection exception if the OrderedCollection is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_570 = false;&#xA;&#x9;idIfCond_570 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_570 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.EmptyCollection) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.EmptyCollection&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.elementAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/OrderedCollection/G"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Collection">
          <eTypeArguments eTypeParameter="#/5/standard/OrderedCollection/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OrderedSet">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An OrderedSet is a Set that contained ordered distinct elements&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=true isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted in head&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted at rank index&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, subject);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
          <eParameters name="subject">
            <eGenericType eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="addAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides OrderedCollection&lt;G>.addAt(Integer, G)&#xD;&#xA;&#x9; * Adds element in the OrderedSet at rank index if the ordered set does&#xD;&#xA;&#x9; * not already contain the element, does nothing otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_571 = false;&#xA;&#x9;idIfCond_571 = kermeta.standard.helper.BooleanWrapper.not(this.contains(element));&#xA;&#xA;&#x9;if( idIfCond_571 ) {&#xA;&#xA;&#x9;kermeta.standard.OrderedCollectionSuper.super_addAt(this, index, element);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * See OrderedCollection&lt;G>.equals(Object) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.OrderedCollectionSuper.super_equals(this, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet from current one with element&#xD;&#xA;&#x9; * inserted in tail&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns element at rank index in the sequence&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the OrderedSet&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_572 = false;&#xA;&#x9;idIfCond_572 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_572 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean idLoopCond_573 = false;&#xA;&#x9;while( !idLoopCond_573 ) {&#xA;&#x9;idLoopCond_573 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( idLoopCond_573 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/OrderedSet/G"/>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="add" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * See Set&lt;G>.add(G)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;super.add(element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="subSet">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new OrderedSet composed of elements of current ordered&#xD;&#xA;&#x9; * set from rank min to rank max (order is respected)&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xD;&#xA;&#x9; * the size of the ordered set or min is larger than max&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.OrderedSet&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.OrderedSet&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.OrderedSet&lt;G>&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_574 = false;&#xA;&#x9;idIfCond_574 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( idIfCond_574 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_575 = false;&#xA;&#x9;while( !idLoopCond_575 ) {&#xA;&#x9;idLoopCond_575 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( idLoopCond_575 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_576 = false;&#xA;&#x9;while( !idLoopCond_576 ) {&#xA;&#x9;idLoopCond_576 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( idLoopCond_576 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/OrderedSet">
            <eTypeArguments eTypeParameter="#/5/standard/OrderedSet/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/5/standard/JavaInteger"/>
          <eParameters name="max" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Set">
          <eTypeArguments eTypeParameter="#/5/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/5/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/5/standard/OrderedSet/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Sequence">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A Sequence is an OrderedCollection of elements allowing duplicates&#xD;&#xA; * not used for the moment @EMF_needProperty &quot;isUnique=false isOrdered=true javaClass=org.eclipse.emf.common.util.BasicEList&quot;&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="subSequence">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence composed of elements of current sequence&#xD;&#xA;&#x9; * from rank min to rank max (order is respected)&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if min is negative, max is larger than &#xD;&#xA;&#x9; * the size of the sequence or min is larger than max&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_577 = false;&#xA;&#x9;idIfCond_577 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(min, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(max, this.size())), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(min, max));&#xA;&#xA;&#x9;if( idIfCond_577 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_578 = false;&#xA;&#x9;while( !idLoopCond_578 ) {&#xA;&#x9;idLoopCond_578 = kermeta.standard.helper.IntegerWrapper.equals(i, min);&#xA;&#x9;if ( idLoopCond_578 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Boolean idLoopCond_579 = false;&#xA;&#x9;while( !idLoopCond_579 ) {&#xA;&#x9;idLoopCond_579 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.IntegerWrapper.plus(max, 1));&#xA;&#x9;if ( idLoopCond_579 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="min" eType="#/5/standard/JavaInteger"/>
          <eParameters name="max" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eOperations name="append">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted in head&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="insertAt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted at rank index&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;&#x9;result.addAt(index, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="preppend">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Builds and returns a new Sequence from current one with element&#xD;&#xA;&#x9; * inserted in tail&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Sequence&lt;G> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Sequence&lt;G>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;G>&quot;));&#xA;&#xA;&#x9;result.add(element);&#xA;&#xA;&#x9;result.addAll(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Sequence">
            <eTypeArguments eTypeParameter="#/5/standard/Sequence/G"/>
          </eGenericType>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/standard/Sequence/G"/>
          </eParameters>
        </eOperations>
        <eOperations name="equals" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides OrderedCollection&lt;G>.equals(Object)&#xD;&#xA;&#x9; * Returns a Boolean stating whether the provided element is equal to&#xD;&#xA;&#x9; * current Sequence&#x9;&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::OrderedCollection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.OrderedCollectionSuper.super_equals(this, element);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="element" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="at">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns element at rank index in the sequence&#xD;&#xA;&#x9; * Raises IndexOutOfBound exception if provided index is lower than 0 or&#xD;&#xA;&#x9; * larger than the size of the Sequence&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_580 = false;&#xA;&#x9;idIfCond_580 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(index, 0), kermeta.standard.helper.IntegerWrapper.isLowerOrEqual(index, this.size()));&#xA;&#xA;&#x9;if( idIfCond_580 ) {&#xA;&#xA;&#x9;kermeta.standard.Iterator&lt;G> it = this.iterator();&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#x9;java.lang.Boolean idLoopCond_581 = false;&#xA;&#x9;while( !idLoopCond_581 ) {&#xA;&#x9;idLoopCond_581 = kermeta.standard.helper.IntegerWrapper.equals(i, index);&#xA;&#x9;if ( idLoopCond_581 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result = it.next();&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;}&#xA; else {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IndexOutOfBound) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IndexOutOfBound&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/Sequence/G"/>
          <eParameters name="index" eType="#/5/standard/JavaInteger"/>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Bag">
          <eTypeArguments eTypeParameter="#/5/standard/Sequence/G"/>
        </eGenericSuperTypes>
        <eGenericSuperTypes eClassifier="#/5/standard/OrderedCollection">
          <eTypeArguments eTypeParameter="#/5/standard/Sequence/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Iterator" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Iterator to be used with Collection&#xD;&#xA; * See also Collection&lt;G>.getIterator()&#xD;&#xA; */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=javaIterator javaClass=java.util.Iterator"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="EMF_needProperty" value="name=kermetaCollection classDefinitionQN=kermeta::standard::Collection"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="hasNext" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the iterator has a next element&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.hasNext(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="next">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the next element of the iterator&#xD;&#xA;&#x9; * Raises IteratorIsOff exception in case the iterator is on the last element &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_582 = false;&#xA;&#x9;idIfCond_582 = kermeta.standard.helper.BooleanWrapper.not(this.hasNext());&#xA;&#xA;&#x9;if( idIfCond_582 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.IteratorIsOff) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.IteratorIsOff&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (G) org.kermeta.compil.runtime.helper.basetypes.IteratorUtil.next(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/standard/Iterator/G"/>
        </eOperations>
        <eOperations name="isOff" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns true if the iterator is on the last element&#xD;&#xA;&#x9; * i.e. returns not self.hasNext()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.hasNext());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="javaIterator">
          <eGenericType eClassifier="#/5/standard/KermetaProperty_Iterator_javaIterator">
            <eTypeArguments eTypeParameter="#/5/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="kermetaCollection">
          <eGenericType eClassifier="#/5/standard/Collection">
            <eTypeArguments eTypeParameter="#/5/standard/Iterator/G"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnknownJavaObject" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xD;&#xA;  * This special object is used to represent java objects that cannot be concretely used with kermeta&#xD;&#xA;  * &lt;b>the only actions possible on these objects are : assignment and passing them as parameter&lt;/b>&#xD;&#xA;  * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/java_package.png&quot;/>&#xD;&#xA;  */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA; &#x9; * NOT IMPLEMENTED&#xD;&#xA; &#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;toString of  UnknownJavaObject not implemented yet&quot;;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Collection_values"
          instanceClassName="org.eclipse.emf.common.util.EList">
        <eTypeParameters name="G"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KermetaProperty_Iterator_javaIterator"
          instanceClassName="java.util.Iterator">
        <eTypeParameters name="G"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="io" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/io/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/io"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains file input/output related classes. &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains standard input/output related classes. &#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="FileIO" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Implementation of simple helpers to read ans write text files&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeTextFile">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes a String in a text file&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_583 = false;&#xA;&#x9;idIfCond_583 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_583 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.FileNotFoundException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.writeTextFile(filename, text);&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="#/5/standard/JavaString"/>
          <eParameters name="text" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="readTextFile" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Reads a text file&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_584 = false;&#xA;&#x9;idIfCond_584 = kermeta.standard.helper.StringWrapper.equals(filename, null);&#xA;&#xA;&#x9;if( idIfCond_584 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.FileNotFoundException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean exists = null;&#xA;&#xA;&#x9;java.lang.Boolean isdirectory = null;&#xA;&#xA;&#x9;exists = (java.lang.Boolean) org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.fileExists(filename);&#xA;&#xA;&#x9;isdirectory = (java.lang.Boolean) org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.fileIsDirectory(filename);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_585 = false;&#xA;&#x9;idIfCond_585 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.not(exists), isdirectory);&#xA;&#xA;&#x9;if( idIfCond_585 ) {&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.FileNotFoundException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.FileNotFoundException&quot;)) );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.io.SimpleFileIOUtil.readTextFile(filename);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="filename" eType="#/5/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StdIO" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of StdIO : standard input/output&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/io_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="writeln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writeln the object to standard output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_586 = false;&#xA;&#x9;idIfCond_586 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_586 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="errorln">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writeln the object to error output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_587 = false;&#xA;&#x9;idIfCond_587 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_587 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.errorln(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes the object to error output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_588 = false;&#xA;&#x9;idIfCond_588 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_588 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.error(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="write">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Writes the object to standard output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_589 = false;&#xA;&#x9;idIfCond_589 = kermeta.standard.helper.StringWrapper.equals(object, null);&#xA;&#xA;&#x9;if( idIfCond_589 ) {&#xA;&#xA;&#x9;object = &quot;&lt;void>&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.write(object);&#xA;"/>
          </eAnnotations>
          <eParameters name="object" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="read" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Reads a String from standard input&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_590 = false;&#xA;&#x9;idIfCond_590 = kermeta.standard.helper.StringWrapper.equals(prompt, null);&#xA;&#xA;&#x9;if( idIfCond_590 ) {&#xA;&#xA;&#x9;prompt = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.io.StdIOUtil.read(prompt);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="prompt" eType="#/5/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="persistence" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/persistence/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/persistence"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the classes that handle the serialization of models, in particular&#xD;&#xA; * EMF models.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/persistence_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The main class that handle a loaded/saved model.&#xD;&#xA; * There are a few important things to note for the developer :&#xD;&#xA; * &#xD;&#xA; * - load a Resource : this loads a Collection of instances corresponding to the&#xD;&#xA; *   objects in the loaded model. If the Collection of instances is empty, than &#xD;&#xA; *&#x9; a ResourceLoadException is raised&#xD;&#xA; *&#xD;&#xA; * - save a Resource : this saves the collection of instances in a new file. This can&#xD;&#xA; *   be correctly done if and only if the instances saved are conform to the metamodel&#xD;&#xA; *   linked to this resource (this link does not need to be explicit. It is normally retrieved&#xD;&#xA; *   through the EMF model -- see Java wrapping &quot;Resource.java&quot;).&#xD;&#xA; * &#xD;&#xA; * - add/remove an instance to the Resource : this adds an element in the resource. It cannot&#xD;&#xA; *   be &quot;simply&quot; added because of the following potential errors :&#xD;&#xA; *&#xD;&#xA; *   - The object added is not conform to the metamodel -> Error&#xD;&#xA; *   - The object was already added in the resource -> Not a real error : we do nothing&#xD;&#xA; *   - The object to remove does not exist -> redirect to a collection-specific error&#xD;&#xA; *   - The object to remove is attached to an object in the collection -> &quot;dependency-violation&quot; exception?&#xD;&#xA;&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="loadWithoutChecking">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Loads the Resource, thus making content of the Resource browsable.&#xD;&#xA;&#x9; * Without raises a ResourceLoadException in case loaded Resource is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Save a Resource in the file specified by the current value of uri &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Save a Resource in a file referenced by the new uri.&#xD;&#xA;&#x9; * note: this doesn't change the URI of the resource, it is only saved in another place &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Search for elements referenced by one element contained by this resource that are not contained by this repository&#xD;&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xD;&#xA;&#x9; * checks only objects directly referenced by the elment in this resource, ignores inderecly referenced objects&#xD;&#xA;&#x9; * example of use :&#xD;&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xD;&#xA;&#x9; *&#x9;report := resource.findDanglingModelElements()&#xD;&#xA;&#x9; *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft120 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(this.getContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_591 = false;&#xA;&#x9;while( !idLoopCond_591 ) {&#xA;&#x9;idLoopCond_591 = it_ft120.isOff();&#xA;&#x9;if ( idLoopCond_591 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Object containedObj = it_ft120.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(containedObj).getTypeDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_592 = false;&#xA;&#x9;idIfCond_592 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(classDef));&#xA;&#xA;&#x9;if( idIfCond_592 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft121 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDef.getAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_593 = false;&#xA;&#x9;while( !idLoopCond_593 ) {&#xA;&#x9;idLoopCond_593 = it_ft121.isOff();&#xA;&#x9;if ( idLoopCond_593 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property prop = it_ft121.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_594 = false;&#xA;&#x9;idIfCond_594 = kermeta.standard.helper.BooleanWrapper.not(prop.getIsDerived());&#xA;&#xA;&#x9;if( idIfCond_594 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_595 = false;&#xA;&#x9;idIfCond_595 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( idIfCond_595 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(containedObj, prop);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_596 = false;&#xA;&#x9;idIfCond_596 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(referencedObjs));&#xA;&#xA;&#x9;if( idIfCond_596 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft122 = referencedObjs.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_597 = false;&#xA;&#x9;while( !idLoopCond_597 ) {&#xA;&#x9;idLoopCond_597 = it_ft122.isOff();&#xA;&#x9;if ( idLoopCond_597 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Object referencedObj = it_ft122.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_ft123 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft123 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft123 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_599 = false;&#xA;&#x9;while( !idLoopCond_599 ) {&#xA;&#x9;idLoopCond_599 = kermeta.standard.helper.BooleanWrapper.or(it_ft123.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft123, false));&#xA;&#x9;if ( idLoopCond_599 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.persistence.Resource res2 = it_ft123.next();&#xA;&#xA;&#x9;result_lambda = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2.getContents()).contains(referencedObj);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;&#x9;test_ft123 = kermeta.standard.helper.BooleanWrapper.or(test_ft123, result_lambda);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_ft123 = test_ft123;&#xA;//End of the Inlining of the function type: exists&#xA;java.lang.Boolean idIfCond_598 = false;&#xA;&#x9;idIfCond_598 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft123), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_598 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(containedObj, prop);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_600 = false;&#xA;&#x9;idIfCond_600 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(referencedObj));&#xA;&#xA;&#x9;if( idIfCond_600 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_ft124 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft124 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft124 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_602 = false;&#xA;&#x9;while( !idLoopCond_602 ) {&#xA;&#x9;idLoopCond_602 = kermeta.standard.helper.BooleanWrapper.or(it_ft124.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft124, false));&#xA;&#x9;if ( idLoopCond_602 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.persistence.Resource res2 = it_ft124.next();&#xA;&#xA;&#x9;result_lambda = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2.getContents()).contains(referencedObj);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;&#x9;test_ft124 = kermeta.standard.helper.BooleanWrapper.or(test_ft124, result_lambda);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_ft124 = test_ft124;&#xA;//End of the Inlining of the function type: exists&#xA;java.lang.Boolean idIfCond_601 = false;&#xA;&#x9;idIfCond_601 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft124), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_601 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eClassifier="#/5/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Loads the Resource, thus making content of the Resource browsable.&#xD;&#xA;&#x9; * Raises a ResourceLoadException in case loaded Resource is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="instances" eType="#/5/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The entities contained in the model-instance, that are provided when user loads a resource &#xD;&#xA;&#x9; * instances == rootContents&#xD;&#xA;&#x9; * this is a loop on Resource itself in order to get backward compatibility&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="deprecated" value="user should use the resource directly since this is a collection"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="normalizedUri" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return a normalized version of the Uri of this resource&#xD;&#xA;&#x9; * in order to prevent several loading of the same file because they have diffent path that leads to them, kermeta uses normalizedURI&#xD;&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xD;&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xD;&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xD;&#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xD;&#xA;&#x9; * to check how a given uri is normalized by kermeta&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.normalizeUri(uri);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="dependentResources"
            ordered="false" upperBound="-1" eType="#/5/persistence/Resource" derived="true">
          <eAnnotations source="kermeta">
            <details key="isReadOnly" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the set of Resources the current Resource, which must have been loaded,&#xD;&#xA;&#x9; * depends on, an empty set if current Resource has no dependency&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="contents" ordered="false"
            upperBound="-1" eType="#/5/language/structure/Object" derived="true">
          <eAnnotations source="kermeta">
            <details key="isReadOnly" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Returns the set of all Objects directly or indirectly contained by the Resource,&#xD;&#xA;&#x9; * or an empty set if the Resource is empty&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="repository" eType="#/5/persistence/Repository"
            eOpposite="#/5/persistence/Repository/resources">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Repository used to create the Resource&#xD;&#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xD;&#xA;&#x9; * one Resource of a given Repository&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" eType="#/5/standard/JavaBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Indicates weither this resource will be updated when saving the repository&#xD;&#xA;&#x9; * This is useful if the repository contains some metamodels that should not be saved.&#xD;&#xA;&#x9; *&#xD;&#xA;&#x9; * Note that in the current version, it doesn't ensure that you have not modified its content (using the freeze)&#xD;&#xA;&#x9; * If you modify the elements of such resource, other resource that depend on it will be incorrectly saved &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="metaModelURI" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Uri of the meta-model of the Resource to load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Uri of the Resource to load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eGenericSuperTypes eClassifier="#/5/standard/Set">
          <eTypeArguments eClassifier="#/5/language/structure/Object"/>
        </eGenericSuperTypes>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFResource" eSuperTypes="#/5/persistence/Resource">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Extension of the Resource class definition that is specific to EMF Repository.&#xD;&#xA; * User is not supposed to directly create it. Otherwise it will not be correctly initialized&#xD;&#xA; * You must To create one &#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="loadWithoutChecking">
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.clear();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Loader.load(getValues(), getUri(), getMetaModelURI());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="save">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.save()&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_603 = false;&#xA;&#x9;idIfCond_603 = this.getIsReadOnly();&#xA;&#xA;&#x9;if( idIfCond_603 ) {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceSaveException e = ((kermeta.exceptions.ResourceSaveException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ResourceSaveException&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot save a readonly resource. Probably this resource was indirectly loaded when loading another resource. \n&quot;, &quot;If you really intend to save this resource, you can set isReadOnly to false, but you must ensure to do so before any resource save.\n&quot;), &quot;Note : setting isReadOnly to false on the metamodel may lead to unpredictable results&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(getValues(), getUri(), getMetaModelURI());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Set&lt;Object>.remove(Object)&#xD;&#xA;&#x9; * Remove the instance from the Resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_604 = false;&#xA;&#x9;idIfCond_604 = this.contains(instance);&#xA;&#xA;&#x9;if( idIfCond_604 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.unSetContainingResource(instance);&#xA;&#xA;&#x9;kermeta.standard.SetSuper.super_remove(this, instance);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/5/language/structure/Object"/>
        </eOperations>
        <eOperations name="saveWithNewURI">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.saveWithNewURI(String)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Saver.save(getValues(), new_uri, getMetaModelURI());&#xA;"/>
          </eAnnotations>
          <eParameters name="new_uri" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="saveAndValidateWithEMF" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Checks the Resource using the EMF validation function, and saves it if&#xD;&#xA;&#x9; * validation succeeds&#xD;&#xA;&#x9; * Applies validation to all root objects of the Resource&#xD;&#xA;&#x9; * Returns true if the validation reports no error, raises exceptions otherwise&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.basetypes.ResourceUtil.save(this, this.uri, metaModelURI, &quot;EMF&quot;, this, true);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="load">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Resource.load()&#xD;&#xA;&#x9; * In case the metamodelURI was not previously set, metamodelURI is filled with&#xD;&#xA;&#x9; * the nsuri of the root package of the metamodel used to load the Resource after&#xD;&#xA;&#x9; * a successful load&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Resource"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.clear();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.persistence.Loader.load(getValues(), getUri(), getMetaModelURI());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_605 = false;&#xA;&#x9;idIfCond_605 = kermeta.standard.helper.IntegerWrapper.equals(this.size(), 0);&#xA;&#xA;&#x9;if( idIfCond_605 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;Resource load failed!&quot;);&#xA;&#xA;&#x9;kermeta.exceptions.ResourceLoadException e = ((kermeta.exceptions.ResourceLoadException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ResourceLoadException&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Resource load failed, no object was created in this resource from &quot;, this.getUri()));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="add">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Set&lt;Object>.add(Object)&#xD;&#xA;&#x9; * Add an instance to the Resource &#xD;&#xA;&#x9; * Ensures that the instance is referenced by a one and only one Resource of the same Repository&#xD;&#xA;&#x9; * Ensures that the instance does not appear more than once in the Resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::standard::Set"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.persistence.Resource> result_ft126 = null;&#xA;&#xA;&#x9;kermeta.persistence.Resource elem_ft126 = null;&#xA;&#xA;&#x9;result_ft126 = ((kermeta.standard.Sequence&lt;kermeta.persistence.Resource>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.persistence.Resource>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft126 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getRepository().getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_607 = false;&#xA;&#x9;while( !idLoopCond_607 ) {&#xA;&#x9;idLoopCond_607 = it_ft126.isOff();&#xA;&#x9;if ( idLoopCond_607 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft126 = it_ft126.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_608 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.persistence.Resource r = elem_ft126;&#xA;&#xA;&#x9;idIfCond_608 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(r, this), r.contains(instance));&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_608 ) {&#xA;&#xA;&#x9;result_ft126.add(elem_ft126);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft125 = result_ft126.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_606 = false;&#xA;&#x9;while( !idLoopCond_606 ) {&#xA;&#x9;idLoopCond_606 = it_ft125.isOff();&#xA;&#x9;if ( idLoopCond_606 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.persistence.Resource r = it_ft125.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;DVK ! another resource of the same repository was containing this element&quot;);&#xA;&#xA;&#x9;r.remove(instance);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.language.ObjectUtil.setContainingResource(instance, this);&#xA;&#xA;&#x9;kermeta.standard.SetSuper.super_add(this, instance);&#xA;"/>
          </eAnnotations>
          <eParameters name="instance" eType="#/5/language/structure/Object"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Repository" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Abstract resource container, that contains a list of available loaded resources, &#xD;&#xA; * and methods to create or get a resource given an URI.&#xD;&#xA; * A repository cannot contain 2 resources which points to the same file (ie. that have the same normalizedURI)&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/5/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Creates a new Resource with given uri, and an optional mm_uri&#xD;&#xA;&#x9; * mm_uri is required when creating a new model from scratch.&#xD;&#xA;&#x9; * Raises a ResourceCreate exception in case the Repository already&#xD;&#xA;&#x9; * contains a Resource with the given uri&#xD;&#xA;&#x9; * If uri does not points to an existing model file (in the case of&#xD;&#xA;&#x9; * a model creation), calls to load() operation will fail as long as&#xD;&#xA;&#x9; * the model has not been saved once&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.persistence.Resource result = null;&#xA;return result;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/5/standard/JavaString"/>
          <eParameters name="mm_uri" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="normalizeUri" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Return a normalized version of the Uri &#xD;&#xA;&#x9; * in order to prevent several loading of the same file because they have different path that leads to them, kermeta uses normalizedURI&#xD;&#xA;&#x9; * for some of its functions (eg. repository.getResource )&#xD;&#xA;&#x9; * As EMF needs URI of the form platform:/resource or platform:/plugin, kermeta automatically&#xD;&#xA;&#x9; * normalize the uri when loading or saving. This is especially true for file:/ uri or relative uri (./ or / ) &#xD;&#xA;&#x9; * If you wish to know what concrete uri is used by kermeta when loading and saving you can use this function&#xD;&#xA;&#x9; * to check how a given uri is normalized by kermeta &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.normalizeUri(uri);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="findDanglingModelElements">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Search for elements referenced by one element contained by this repository  that are not contained by this repository&#xD;&#xA;&#x9; * ie. element that EMF would claim as &quot;not contained in a resource&quot;&#xD;&#xA;&#x9; * example of use :&#xD;&#xA;&#x9; *  var report : Set&amp;lt;DanglingDiagnostic&amp;gt;&#xD;&#xA;     *&#x9;report := repository.findDanglingModelElements()&#xD;&#xA;     *&#x9;report.each{ diag | stdio.writeln(diag.toString ) }&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;kermeta.persistence.DanglingDiagnostic>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft127 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_609 = false;&#xA;&#x9;while( !idLoopCond_609 ) {&#xA;&#x9;idLoopCond_609 = it_ft127.isOff();&#xA;&#x9;if ( idLoopCond_609 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.persistence.Resource res = it_ft127.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft128 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res.getContents()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_610 = false;&#xA;&#x9;while( !idLoopCond_610 ) {&#xA;&#x9;idLoopCond_610 = it_ft128.isOff();&#xA;&#x9;if ( idLoopCond_610 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Object containedObj = it_ft128.next();&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition classDef = null;&#xA;&#xA;&#x9;classDef = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(containedObj).getTypeDefinition();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_611 = false;&#xA;&#x9;idIfCond_611 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(classDef));&#xA;&#xA;&#x9;if( idIfCond_611 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft129 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsSet(classDef.getAllAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_612 = false;&#xA;&#x9;while( !idLoopCond_612 ) {&#xA;&#x9;idLoopCond_612 = it_ft129.isOff();&#xA;&#x9;if ( idLoopCond_612 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Property prop = it_ft129.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_613 = false;&#xA;&#x9;idIfCond_613 = kermeta.standard.helper.BooleanWrapper.not(prop.getIsDerived());&#xA;&#xA;&#x9;if( idIfCond_613 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_614 = false;&#xA;&#x9;idIfCond_614 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.isGreater(prop.getUpper(), 1), kermeta.standard.helper.IntegerWrapper.equals(prop.getUpper(), kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#xA;&#x9;if( idIfCond_614 ) {&#xA;&#xA;&#x9;kermeta.standard.Collection&lt;kermeta.language.structure.Object> referencedObjs = null;&#xA;&#xA;&#x9;referencedObjs = (kermeta.standard.Collection&lt;kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ObjectUtil.get(containedObj, prop);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_615 = false;&#xA;&#x9;idIfCond_615 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(referencedObjs));&#xA;&#xA;&#x9;if( idIfCond_615 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Object> it_ft130 = referencedObjs.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_616 = false;&#xA;&#x9;while( !idLoopCond_616 ) {&#xA;&#x9;idLoopCond_616 = it_ft130.isOff();&#xA;&#x9;if ( idLoopCond_616 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Object referencedObj = it_ft130.next();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_ft131 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft131 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft131 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_618 = false;&#xA;&#x9;while( !idLoopCond_618 ) {&#xA;&#x9;idLoopCond_618 = kermeta.standard.helper.BooleanWrapper.or(it_ft131.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft131, false));&#xA;&#x9;if ( idLoopCond_618 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.persistence.Resource res2 = it_ft131.next();&#xA;&#xA;&#x9;result_lambda = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2.getContents()).contains(referencedObj);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;&#x9;test_ft131 = kermeta.standard.helper.BooleanWrapper.or(test_ft131, result_lambda);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_ft131 = test_ft131;&#xA;//End of the Inlining of the function type: exists&#xA;java.lang.Boolean idIfCond_617 = false;&#xA;&#x9;idIfCond_617 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft131), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_617 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.language.structure.Object referencedObj = null;&#xA;&#xA;&#x9;referencedObj = org.kermeta.compil.runtime.helper.language.ObjectUtil.get(containedObj, prop);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_619 = false;&#xA;&#x9;idIfCond_619 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(referencedObj));&#xA;&#xA;&#x9;if( idIfCond_619 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_ft132 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft132 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft132 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_621 = false;&#xA;&#x9;while( !idLoopCond_621 ) {&#xA;&#x9;idLoopCond_621 = kermeta.standard.helper.BooleanWrapper.or(it_ft132.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft132, false));&#xA;&#x9;if ( idLoopCond_621 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.persistence.Resource res2 = it_ft132.next();&#xA;&#xA;&#x9;result_lambda = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Object>convertAsSet(res2.getContents()).contains(referencedObj);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;&#x9;test_ft132 = kermeta.standard.helper.BooleanWrapper.or(test_ft132, result_lambda);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_ft132 = test_ft132;&#xA;//End of the Inlining of the function type: exists&#xA;java.lang.Boolean idIfCond_620 = false;&#xA;&#x9;idIfCond_620 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(result_ft132), kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.String&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Integer&quot;))), org.kermeta.compil.runtime.helper.language.ObjectUtil.isKindOf(referencedObj, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;java.lang.Boolean&quot;)))));&#xA;&#xA;&#x9;if( idIfCond_620 ) {&#xA;&#xA;&#x9;kermeta.persistence.DanglingDiagnostic diagnostic = ((kermeta.persistence.DanglingDiagnostic) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.DanglingDiagnostic&quot;));&#xA;&#xA;&#x9;diagnostic.setDanglingElement(referencedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingElement(containedObj);&#xA;&#xA;&#x9;diagnostic.setReferencingProperty(prop);&#xA;&#xA;&#x9;result.add(diagnostic);&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eClassifier="#/5/persistence/DanglingDiagnostic"/>
          </eGenericType>
        </eOperations>
        <eOperations name="getResource" eType="#/5/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the Resource associated with the given uri if this uri is associated with&#xD;&#xA;&#x9; * an already created Resource of the Repository.&#xD;&#xA;&#x9; * If the Repository contains no Resource associated with the given uri, creates&#xD;&#xA;&#x9; * a new Resource and loads it.&#xD;&#xA;&#x9; * In order to prevent multiple load of the same file by using variant path to the same file, all URI used by this function are normalized&#xD;&#xA;&#x9; * Raises a ResourceCreate exception if the given uri does not point to an existing&#xD;&#xA;&#x9; * model file &#xD;&#xA;&#x9; * May also raises loading exceptions if this is the first retrieval of the resource&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.initRepository(this);&#xA;&#xA;&#x9;java.lang.String normalisedUri = this.normalizeUri(uri);&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_622 = false;&#xA;&#x9;while( !idLoopCond_622 ) {&#xA;&#x9;idLoopCond_622 = it.isOff();&#xA;&#x9;if ( idLoopCond_622 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;kermeta.persistence.Resource next = it.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_623 = false;&#xA;&#x9;idIfCond_623 = kermeta.standard.helper.StringWrapper.equals(normalisedUri, next.normalizedUri());&#xA;&#xA;&#x9;if( idIfCond_623 ) {&#xA;&#xA;&#x9;result = next;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_624 = false;&#xA;&#x9;idIfCond_624 = result == null;&#xA;&#xA;&#x9;if( idIfCond_624 ) {&#xA;&#xA;&#x9;result = this.createResource(uri, &quot;&quot;);&#xA;&#xA;&#x9;result.load();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="resources" ordered="false"
            upperBound="-1" eType="#/5/persistence/Resource" containment="true" eOpposite="#/5/persistence/Resource/repository">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Resources created by this Repository &#xD;&#xA;&#x9; * This feature is supposed read only, otherwise it cannot garantee that an element is contained by only &#xD;&#xA;&#x9; * one Resource of a given Repository&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DanglingDiagnostic" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * class used to gather the information required to make a user friendly report about a dangling element&#xD;&#xA; * (see. findDanglingModelElements())&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * user friendly message build with those informations&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getDanglingElement()), &quot; referenced by &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getReferencingElement())), &quot;.&quot;), this.getReferencingProperty().getName()), &quot; is dangling&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingElement"
            eType="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Element that has a reference to the dangling element  &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="danglingElement" eType="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Element that is not contained by a resource in the repository  &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="referencingProperty"
            eType="#/5/language/structure/Property">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Property used to reference the dangling element  &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EMFRepository" eSuperTypes="#/5/persistence/Repository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Repository that stores and manages resources that come from EMF&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="createResource" eType="#/5/persistence/Resource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Overrides Repository.createResource(String, String)&#xD;&#xA;&#x9; * Create a new resource for a model given by its uri, &#xD;&#xA;&#x9; * which meta-model is stored in file given by mm_uri&#xD;&#xA;&#x9; * If file already exists, you'll be able to call the load method to concretly load the model&#xD;&#xA;&#x9; * otherwise, you can only call the save method&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::persistence::Repository"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.persistence.Resource result = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: collect&#xA;&#xA;kermeta.standard.Sequence&lt;java.lang.String> result_ft133 = null;&#xA;&#xA;&#x9;result_ft133 = ((kermeta.standard.Sequence&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;java.lang.String>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.persistence.Resource> it_ft133 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.persistence.Resource>convertAsSet(this.getResources()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_626 = false;&#xA;&#x9;while( !idLoopCond_626 ) {&#xA;&#x9;idLoopCond_626 = it_ft133.isOff();&#xA;&#x9;if ( idLoopCond_626 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.String result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: collector&#xA;kermeta.persistence.Resource r = it_ft133.next();&#xA;&#xA;&#x9;result_lambda = r.getUri();&#xA;//End of the Inlining of the lambda expression: collector&#xA;&#xA;&#x9;result_ft133.add(result_lambda);&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: collect&#xA;java.lang.Boolean idIfCond_625 = false;&#xA;&#x9;idIfCond_625 = kermeta.standard.helper.BooleanWrapper.not(result_ft133.contains(uri));&#xA;&#xA;&#x9;if( idIfCond_625 ) {&#xA;&#xA;&#x9;result = (kermeta.persistence.Resource) org.kermeta.compil.runtime.helper.basetypes.RepositoryUtil.createResource(this, uri, mm_uri);&#xA;}&#xA; else {&#xA;&#xA;&#x9;kermeta.exceptions.ResourceCreateException e = ((kermeta.exceptions.ResourceCreateException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.ResourceCreateException&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;Trying to create a resource already existing at &quot;, uri), &quot;.\n&quot;), &quot;Remove existing resource from repository first, or use \&quot;getResource\&quot; operation.&quot;));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="uri" eType="#/5/standard/JavaString"/>
          <eParameters name="mm_uri" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="useInterpreterInternalResources"
            eType="#/5/standard/JavaBoolean" defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * If true, tells to the save of the resources that they should also integrate the resources from Kermeta interpreter itself&#xD;&#xA;&#x9; * this is useful for example to make a dependency to framework.km&#xD;&#xA;&#x9; * by default, not setting this is considered as false.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreLoadErrors" eType="#/5/standard/JavaBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * When loading the Resources, &#xD;&#xA;&#x9; * if there are some errors while loading some objects, those objects are ignored&#xD;&#xA;&#x9; * by default, not setting this is considered as false.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="kunit" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/kunit/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/kunit"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * main features of the famous Unit test tool for Kermeta language&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains the implementation of a unit test tool. This is a clone of&#xD;&#xA; * JUnit architecture.&#xD;&#xA; * Reference : http://junit.sourceforge.net/doc/cookstour/cookstour.htm&#xD;&#xA; *&#xD;&#xA; * Usage example of kunit can be found in fr.irisa.triskell.kermeta.samples project.&#xD;&#xA; *&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/kunit_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractFallible" abstract="true"
          eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written ############################&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="distil" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; ** reduces all runs of white-space to a single space character&#xD;&#xA;&#x9; **/"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean white = false;&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_627 = false;&#xA;&#x9;while( !idLoopCond_627 ) {&#xA;&#x9;idLoopCond_627 = kermeta.standard.helper.IntegerWrapper.equals(i, kermeta.standard.helper.StringWrapper.size(s));&#xA;&#x9;if ( idLoopCond_627 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.String c = kermeta.standard.helper.CharacterWrapper.toString(kermeta.standard.helper.StringWrapper.elementAt(s, i));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_628 = false;&#xA;&#x9;idIfCond_628 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.indexOf(&quot; \n\t&quot;, c), 0);&#xA;&#xA;&#x9;if( idIfCond_628 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_629 = false;&#xA;&#x9;idIfCond_629 = kermeta.standard.helper.BooleanWrapper.not(white);&#xA;&#xA;&#x9;if( idIfCond_629 ) {&#xA;&#xA;&#x9;white = true;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot; &quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, c);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_630 = false;&#xA;&#x9;idIfCond_630 = white;&#xA;&#xA;&#x9;if( idIfCond_630 ) {&#xA;&#xA;&#x9;white = false;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="s" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * process the given condition and react with the given message&#xD;&#xA;     * if it is satisfied&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** to be used if a failure reaction is needed */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the two given string and react if they are not equal */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="expected" eType="#/5/standard/JavaString"/>
          <eParameters name="actual" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * process the given condition and react with the given message&#xD;&#xA;     * if it is not satisfied&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** process the given condition and react if it is not satisfied */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertSimilar">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if the two strings are not identical modulo-white-space&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;expected = this.distil(expected);&#xA;&#xA;&#x9;actual = this.distil(actual);&#xA;&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual  \t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/5/standard/JavaString"/>
          <eParameters name="actual" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * process the given condition and react with the given message&#xD;&#xA;     * if it is not satisfied&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AssertionFailedError" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** AssertionViolatedException are raised when assertions are violated */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Assert" eSuperTypes="#/5/kunit/AbstractFallible">
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_631 = false;&#xA;&#x9;idIfCond_631 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_631 ) {&#xA;&#xA;&#x9;this.fail(&quot;assertTrue failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_632 = false;&#xA;&#x9;idIfCond_632 = condition;&#xA;&#xA;&#x9;if( idIfCond_632 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** raise a AssertionViolatedException with the provided message */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AssertionFailedError&quot;));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Will fail if the two strings are not identical */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_633 = false;&#xA;&#x9;idIfCond_633 = kermeta.standard.helper.BooleanWrapper.not(kermeta.standard.helper.StringWrapper.equals(expected, actual));&#xA;&#xA;&#x9;if( idIfCond_633 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertEqual failed\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/5/standard/JavaString"/>
          <eParameters name="actual" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is true */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_634 = false;&#xA;&#x9;idIfCond_634 = condition;&#xA;&#xA;&#x9;if( idIfCond_634 ) {&#xA;&#xA;&#x9;this.fail(&quot;assertTrue number failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_635 = false;&#xA;&#x9;idIfCond_635 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_635 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Fails if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_636 = false;&#xA;&#x9;idIfCond_636 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_636 ) {&#xA;&#xA;&#x9;this.fail(&quot;assert failed&quot;);&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** will fail if condition is false */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_637 = false;&#xA;&#x9;idIfCond_637 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_637 ) {&#xA;&#xA;&#x9;this.fail(kermeta.standard.helper.StringWrapper.plus(&quot;assertTrueWithMsg failed : &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidTestCaseNameException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This exception is rose if there is a problem on the name of the test method&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="InvalidParameterException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This is for when we try to build a suite from a class that isn't a TestCase&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Fallible" abstract="true" eSuperTypes="#/5/kunit/AbstractFallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * This is represents the aspect of tests that they may go wrong.&#xD;&#xA; * it defines the ability to define the conditions for success&#xD;&#xA; * (assertions) and the mechanism for recording that those &#xD;&#xA; * conditions have not been met.&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="assertTrue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this._assert(condition);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="getLogKermeta" eType="#/5/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * where failures will be put &#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="getLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logDefined" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="kermeta.kunit.Log result = null;&#xA;return result;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="assertFalseWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is true&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.BooleanWrapper.not(condition), message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="fail">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure &#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_638 = false;&#xA;&#x9;idIfCond_638 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_638 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AssertionFailedError&quot;));&#xA;&#xA;&#x9;exception.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, kermeta.standard.helper.StringWrapper.plus(&quot;explicit failure: &quot;, msg));&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertEqual">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if the two strings are not identical&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(kermeta.standard.helper.StringWrapper.equals(expected, actual), kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;\nexpected\t:[&quot;, expected), &quot;] != \nactual\t:[&quot;), actual), &quot;]&quot;));&#xA;"/>
          </eAnnotations>
          <eParameters name="expected" eType="#/5/standard/JavaString"/>
          <eParameters name="actual" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="assertFalse">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is true&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this._assert(kermeta.standard.helper.BooleanWrapper.not(condition));&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="assertTrueWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.assertWithMsg(condition, message);&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="message" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="_assert">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_639 = false;&#xA;&#x9;idIfCond_639 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_639 ) {&#xA;&#xA;&#x9;java.lang.String msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_640 = false;&#xA;&#x9;idIfCond_640 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_640 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AssertionFailedError&quot;));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, msg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
        </eOperations>
        <eOperations name="number" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * current order position of counter of assertions&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_641 = false;&#xA;&#x9;idIfCond_641 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getRank());&#xA;&#xA;&#x9;if( idIfCond_641 ) {&#xA;&#xA;&#x9;this.setRank(0);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setRank(kermeta.standard.helper.IntegerWrapper.plus(this.getRank(), 1));&#xA;&#xA;&#x9;result = this.getRank();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="assertWithMsg">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Log a failure if condition is false&#xD;&#xA;   */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::AbstractFallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Integer number = this.number();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_642 = false;&#xA;&#x9;idIfCond_642 = kermeta.standard.helper.BooleanWrapper.not(condition);&#xA;&#xA;&#x9;if( idIfCond_642 ) {&#xA;&#xA;&#x9;java.lang.String realMsg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;assertion number &quot;, kermeta.standard.helper.IntegerWrapper.toString(number)), &quot; failed: &quot;), msg);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_643 = false;&#xA;&#x9;idIfCond_643 = this.mustStop();&#xA;&#xA;&#x9;if( idIfCond_643 ) {&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AssertionFailedError&quot;));&#xA;&#xA;&#x9;exception.setMessage(realMsg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;this.getLogKermeta().addFailure(this, realMsg);&#xA;}&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="condition" eType="#/5/standard/JavaBoolean"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="mustStop" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_644 = false;&#xA;&#x9;idIfCond_644 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getStopOnFailure());&#xA;&#xA;&#x9;if( idIfCond_644 ) {&#xA;&#xA;&#x9;this.setStopOnFailure(true);&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.getStopOnFailure();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stopOnFailure" eType="#/5/standard/JavaBoolean"
            defaultValueLiteral="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * Set this attribute to false if you wish your test to not stop if the assert fails.&#xD;&#xA;   * note : if set to false, the count of failures/errors may be bigger that the number of executed test operations&#xD;&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="rank" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;   * counter of assertions in the test method&#xD;&#xA;   */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Log" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Log is a log of failures and errors that happened to fallibles since start was called&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="addSetUpError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds errors which occur during the SetUp phase&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getHarnessErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;)).initFrom(test, e).makeSetUp());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/5/kunit/Fallible"/>
          <eParameters name="e" eType="#/5/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addTestError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds an error to the list of errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;)).initFrom(test, e));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/5/kunit/Fallible"/>
          <eParameters name="e" eType="#/5/exceptions/Exception"/>
        </eOperations>
        <eOperations name="addFailure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds a failed test to the list of failed tests&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getFailures()).add(((kermeta.kunit.Failure) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Failure&quot;)).initFrom(test, msg));&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/5/kunit/Fallible"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="addTearDownError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds errors which occur during the TearDown phase&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getHarnessErrors()).add(((kermeta.kunit.Error) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Error&quot;)).initFrom(test, e).makeTearDown());&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/5/kunit/Fallible"/>
          <eParameters name="e" eType="#/5/exceptions/Exception"/>
        </eOperations>
        <eOperations name="newAttempt">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Increments the runtests counter&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_645 = false;&#xA;&#x9;idIfCond_645 = kermeta.standard.helper.IntegerWrapper.equals(this.getRuntests(), null);&#xA;&#xA;&#x9;if( idIfCond_645 ) {&#xA;&#xA;&#x9;this.setRuntests(0);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setRuntests(kermeta.standard.helper.IntegerWrapper.plus(1, this.getRuntests()));&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failures" upperBound="-1"
            eType="#/5/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * list of detected assertion failures&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/5/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * list of detected test errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="runtests" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * number of test that were run&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="harnessErrors" upperBound="-1"
            eType="#/5/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;* list of detected errors with the test harness&#xD;&#xA;&#x9;*/"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Failure" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Failure represents an assertion failure stored in a failure log&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * overwrite the default method, in order to add the message&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getFailure()), &quot; &quot;), this.getMessage());&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="#/5/kunit/Failure">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * initialization of the failure&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Failure result = null;&#xA;&#xA;&#x9;this.setFailure(fallible);&#xA;&#xA;&#x9;this.setMessage(msg);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="fallible" eType="#/5/kunit/Fallible"/>
          <eParameters name="msg" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the stored message (given or generated one)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="failure" eType="#/5/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the stored failure&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ErrorKind">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * all kinds of error we can meet&#xD;&#xA; */"/>
        </eAnnotations>
        <eLiterals name="setUpError" literal="setUpError"/>
        <eLiterals name="testError" value="1" literal="testError"/>
        <eLiterals name="tearDownError" value="2" literal="tearDownError"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Error" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Error represents an occurrence of an exception in setUp, tearDown or a test&#xD;&#xA; * and is stored in a failure log&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="makeTearDown" eType="#/5/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Changes the type of an error to makeTearDownError, the best way to use&#xD;&#xA;&#x9; * this method is to call it after the init from line:&#xD;&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeTearDown&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;tearDownError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="makeSetUp" eType="#/5/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Changes the type of an error to SetUpError, the best way to use&#xD;&#xA;&#x9; * this method is to call it after the init from line:&#xD;&#xA;&#x9; * var e : Error init Error.new.initFrom(f, e).makeSetUp&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;setUpError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * overwrite the default method, in order to add :&#xD;&#xA;&#x9; *   - the type&#xD;&#xA;&#x9; *   - the message&#xD;&#xA;&#x9; *   - the stack trace&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_646 = false;&#xA;&#x9;idIfCond_646 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getKind(), kermeta.kunit.ErrorKind.getByName(&quot;testError&quot;));&#xA;&#xA;&#x9;if( idIfCond_646 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(this.getError());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this.getError()).getName(), &quot;.&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_647 = false;&#xA;&#x9;idIfCond_647 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getKind(), kermeta.kunit.ErrorKind.getByName(&quot;setUpError&quot;));&#xA;&#xA;&#x9;if( idIfCond_647 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;setUp()&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;tearDown()&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot; raised &quot;), org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this.getException()).getName());&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_648 = false;&#xA;&#x9;idIfCond_648 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getException().getMessage(), null);&#xA;&#xA;&#x9;if( idIfCond_648 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Caused by: &quot;), this.getException().getMessage());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no message)&quot;);&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_649 = false;&#xA;&#x9;idIfCond_649 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getException().getStackTrace(), null);&#xA;&#xA;&#x9;if( idIfCond_649 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    Stack Trace:\n&quot;), this.getException().getStackTrace());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;\n    (no stack trace)&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initFrom" eType="#/5/kunit/Error">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets up a new error with failable object and the exception that occurred&#xD;&#xA;&#x9; * by default it will be a test error. Use makeSetUp or makeTearDown to&#xD;&#xA;&#x9; * change its type&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Error result = null;&#xA;&#xA;&#x9;this.setError(error);&#xA;&#xA;&#x9;this.setException(e);&#xA;&#xA;&#x9;this.setKind(kermeta.kunit.ErrorKind.getByName(&quot;testError&quot;));&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="error" eType="#/5/kunit/Fallible"/>
          <eParameters name="e" eType="#/5/exceptions/Exception"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="error" eType="#/5/kunit/Fallible">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the stored error&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="exception" eType="#/5/exceptions/Exception">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the Kermeta exception corresponding to the error&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#/5/kunit/ErrorKind">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the nature of the stored error&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Test" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * The abstact notion of a test which is runnable and which has a log&#xD;&#xA; * in which it can keep note of failures&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="setLogKermeta">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Initializes the log where failures and errors will be put&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="EMF_renameAs" value="setLogKermeta"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="paramNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setLog(log);&#xA;"/>
          </eAnnotations>
          <eParameters name="log" eType="#/5/kunit/Log"/>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="isAbstract" value="true"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Execute the test and verify its assertions&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="initLog" eType="#/5/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * called when run by the java testrunner&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;this.setLog(((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Log&quot;)));&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#/5/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * where failures and errors will be put &#xD;&#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestSuite" eSuperTypes="#/5/kunit/Test">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A TestSuite is a structured collection of tests, using the&#xD;&#xA; * composite pattern, all tests are runnable and have a log&#xD;&#xA; * In addition a suite can be populated automatically from a&#xD;&#xA; * test case class with one test case object for each test&#xD;&#xA; * method in the class.&#xD;&#xA; *  You can make a suite and populate it manually like this:&#xD;&#xA; *&#xD;&#xA; *  var suite : TestSuite init TestSuite.new.&#xD;&#xA; *  suite.tests.add(t1)&#xD;&#xA; *&#xD;&#xA; *  Alternatively you can populate a suite automatically from&#xD;&#xA; *  a class that inherits TestCase and which has several methods&#xD;&#xA; *  called test:&#xD;&#xA; *&#xD;&#xA; *  var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="addAllTestCasesFrom" eType="#/5/kunit/TestSuite">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;  * Add to this suite, a set of test cases of type c, one for each&#xD;&#xA;&#x9;  * test method in class c. C must be a descendent of TestCase&#xD;&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testCaseClassIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestSuite result = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: exists&#xA;&#xA;java.lang.Boolean result_ft134 = null;&#xA;&#xA;&#x9;java.lang.Boolean test_ft134 = false;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Class> it_ft134 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Class>convertAsSet(testCaseClass.getSuperClass()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_651 = false;&#xA;&#x9;while( !idLoopCond_651 ) {&#xA;&#x9;idLoopCond_651 = kermeta.standard.helper.BooleanWrapper.or(it_ft134.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(test_ft134, false));&#xA;&#x9;if ( idLoopCond_651 ) {&#xA;&#x9;} else {&#xA;&#xA;java.lang.Boolean result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Class sc = it_ft134.next();&#xA;&#xA;&#x9;result_lambda = sc.equals(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.kunit.TestCase&quot;));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;&#x9;test_ft134 = kermeta.standard.helper.BooleanWrapper.or(test_ft134, result_lambda);&#xA;}&#xA;&#x9;}&#xA;&#xA;&#x9;result_ft134 = test_ft134;&#xA;//End of the Inlining of the function type: exists&#xA;java.lang.Boolean idIfCond_650 = false;&#xA;&#x9;idIfCond_650 = kermeta.standard.helper.BooleanWrapper.not(result_ft134);&#xA;&#xA;&#x9;if( idIfCond_650 ) {&#xA;&#xA;&#x9;kermeta.exceptions.Exception e = ((kermeta.kunit.InvalidParameterException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.InvalidParameterException&quot;));&#xA;&#xA;&#x9;e.setMessage(kermeta.standard.helper.StringWrapper.plus(&quot;Cannot build a suite from class: &quot;, testCaseClass.getName()));&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation> result_ft136 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Operation elem_ft136 = null;&#xA;&#xA;&#x9;result_ft136 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft136 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsSet(testCaseClass.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_653 = false;&#xA;&#x9;while( !idLoopCond_653 ) {&#xA;&#x9;idLoopCond_653 = it_ft136.isOff();&#xA;&#x9;if ( idLoopCond_653 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft136 = it_ft136.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_654 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.language.structure.Operation o = elem_ft136;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_655 = false;&#xA;&#x9;idIfCond_655 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o.getName()), 4);&#xA;&#xA;&#x9;if( idIfCond_655 ) {&#xA;&#xA;&#x9;idIfCond_654 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_654 = false;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_654 ) {&#xA;&#xA;&#x9;result_ft136.add(elem_ft136);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft135 = result_ft136.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_652 = false;&#xA;&#x9;while( !idLoopCond_652 ) {&#xA;&#x9;idLoopCond_652 = it_ft135.isOff();&#xA;&#x9;if ( idLoopCond_652 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Operation o = it_ft135.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) testCaseClass._new();&#xA;&#xA;&#x9;testCase.setTestMethodName(o.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).add(testCase);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/5/language/structure/Class"/>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** &#xD;&#xA;&#x9; * Run all the tests in the test suite&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Test> it_ft137 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_656 = false;&#xA;&#x9;while( !idLoopCond_656 ) {&#xA;&#x9;idLoopCond_656 = it_ft137.isOff();&#xA;&#x9;if ( idLoopCond_656 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.kunit.Test t = it_ft137.next();&#xA;&#xA;&#x9;t.setLogKermeta(this.getLog());&#xA;&#xA;&#x9;t.run();&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addAllTestCasesFromAspects">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;  * to be written #####################################################&#xD;&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation> result_ft139 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Operation elem_ft139 = null;&#xA;&#xA;&#x9;result_ft139 = ((kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;kermeta.language.structure.Operation>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft139 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Operation>convertAsOrderedSet(anAspect.getOwnedOperation()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_658 = false;&#xA;&#x9;while( !idLoopCond_658 ) {&#xA;&#x9;idLoopCond_658 = it_ft139.isOff();&#xA;&#x9;if ( idLoopCond_658 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft139 = it_ft139.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_659 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;kermeta.language.structure.Operation o = elem_ft139;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_660 = false;&#xA;&#x9;idIfCond_660 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(kermeta.standard.helper.StringWrapper.size(o.getName()), 4);&#xA;&#xA;&#x9;if( idIfCond_660 ) {&#xA;&#xA;&#x9;idIfCond_659 = kermeta.standard.helper.StringWrapper.equals(kermeta.standard.helper.StringWrapper.substring(o.getName(), 0, 4), &quot;test&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;idIfCond_659 = false;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_659 ) {&#xA;&#xA;&#x9;result_ft139.add(elem_ft139);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Operation> it_ft138 = result_ft139.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_657 = false;&#xA;&#x9;while( !idLoopCond_657 ) {&#xA;&#x9;idLoopCond_657 = it_ft138.isOff();&#xA;&#x9;if ( idLoopCond_657 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.structure.Operation o = it_ft138.next();&#xA;&#xA;&#x9;kermeta.kunit.TestCase testCase = null;&#xA;&#xA;&#x9;testCase = (kermeta.kunit.TestCase) testCaseClass._new();&#xA;&#xA;&#x9;testCase.setTestMethodName(o.getName());&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Test>convertAsOrderedSet(this.getTests()).add(testCase);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/5/language/structure/Class"/>
          <eParameters name="anAspect" eType="#/5/language/structure/ClassDefinition"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="tests" upperBound="-1"
            eType="#/5/kunit/Test">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The collection of tests which will be ran as the suite&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestCase" abstract="true" eSuperTypes="#/5/kunit/Test #/5/kunit/Fallible">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * A test case comprises one or more test methods plus&#xD;&#xA; * setUp and tearDown that build and destroy their test harness.&#xD;&#xA; * An instance of a subclass of TestCase should have its&#xD;&#xA; * testMethodName set to the name of one of its operations&#xD;&#xA; * which should be called whe the test is run. You can do this&#xD;&#xA; * yourself:&#xD;&#xA; *&#xD;&#xA; * var testCase : TestCase init MyTestCaseClass.new.setTestMethodName(&quot;testSomething&quot;)&#xD;&#xA; *&#xD;&#xA; * Alternatively if your TestCase Class has many methods whose&#xD;&#xA; * name begins with 'test' you can create a set of instaces already&#xD;&#xA; * set up with their testMethodName using the addAllTestCasesFrom&#xD;&#xA; * operation on TestSuite&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="raiseIfHasFailures">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * operation used when the TestCase is run from a java test runner, encapsulates the failures results&#xD;&#xA;&#x9; * into an AssertionFailedError so the TestRunner can detect it&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;java.lang.String msg = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_661 = false;&#xA;&#x9;idIfCond_661 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).empty());&#xA;&#xA;&#x9;if( idIfCond_661 ) {&#xA;&#xA;&#x9;msg = &quot;Failures: &quot;;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Failure> it_ft140 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_662 = false;&#xA;&#x9;while( !idLoopCond_662 ) {&#xA;&#x9;idLoopCond_662 = it_ft140.isOff();&#xA;&#x9;if ( idLoopCond_662 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.kunit.Failure f = it_ft140.next();&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f.toString());&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;kermeta.kunit.AssertionFailedError exception = ((kermeta.kunit.AssertionFailedError) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.AssertionFailedError&quot;));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_663 = false;&#xA;&#x9;idIfCond_663 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_663 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft141 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_664 = false;&#xA;&#x9;while( !idLoopCond_664 ) {&#xA;&#x9;idLoopCond_664 = it_ft141.isOff();&#xA;&#x9;if ( idLoopCond_664 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.kunit.Error f = it_ft141.next();&#xA;&#xA;&#x9;msg = &quot;Errors: &quot;;&#xA;&#xA;&#x9;msg = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(msg, &quot;\n   &quot;), f.toString());&#xA;&#xA;&#x9;kermeta.exceptions.Exception exception = ((kermeta.exceptions.Exception) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.Exception&quot;));&#xA;&#xA;&#x9;exception.setMessage(msg);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( exception );&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setUp">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the things to be done before execution of the test method&#xD;&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getLog" eType="#/5/kunit/Log">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * accessor on the log&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Fallible"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.Log result = null;&#xA;&#xA;&#x9;result = this.getLog();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setTestMethodName" eType="#/5/kunit/TestCase">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Sets the name of the method from the concrete subclass of&#xD;&#xA;&#x9; *  TestCase that should be executed when this TestCase instance&#xD;&#xA;&#x9; * is run as a test.&#xD;&#xA;&#x9; * Throws invalidTestCaseNameException if the given string is not&#xD;&#xA;&#x9; * the name of a method in the test case&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.kunit.TestCase result = null;&#xA;&#xA;&#x9;this.set__testMethodName(name);&#xA;&#xA;&#x9;result = this;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="name" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="getTestMethodName" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * accessor on the method name&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = this.get__testMethodName();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * overwrites the default method for more informative output&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getName(), &quot;.&quot;), this.getTestMethodName()), &quot;()&quot;);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Execute the whole test case : SetUp, test method, TearDown&#xD;&#xA;&#x9; * The assertions of the test method are computed&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::kunit::Test"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.getLog().newAttempt();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;this.setUp();&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;kermeta.interpreter.DynamicExpression de = ((kermeta.interpreter.DynamicExpression) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.interpreter.DynamicExpression&quot;));&#xA;&#xA;&#x9;de.initializeDefaults();&#xA;&#xA;&#x9;de.setSelfClass((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getTypeDefinition());&#xA;&#xA;&#x9;de.parse(kermeta.standard.helper.StringWrapper.plus(&quot;self.&quot;, this.getTestMethodName()));&#xA;&#xA;&#x9;de.execute(this, ((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Object>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Object>&quot;)));&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;this.tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_3 ) {&#xA;if( ex_switcher_3.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_3.getRealException();&#xA;this.getLog().addTearDownError(this, e);&#xA;}&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_4 ) {&#xA;if( ex_switcher_4.getRealException() instanceof kermeta.kunit.AssertionFailedError ) {&#xA;kermeta.kunit.AssertionFailedError afe = (kermeta.kunit.AssertionFailedError) ex_switcher_4.getRealException();&#xA;this.getLog().addFailure(this, kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(afe.getMessage(), &quot;\nstack trace:\n&quot;), afe.getStackTrace()));&#xA;}if( ex_switcher_4.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e1 = (kermeta.exceptions.Exception) ex_switcher_4.getRealException();&#xA;this.getLog().addTestError(this, e1);{&#xA;try {&#xA;&#x9;this.tearDown();&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_5 ) {&#xA;if( ex_switcher_5.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_5.getRealException();&#xA;this.getLog().addTearDownError(this, e);&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_6 ) {&#xA;if( ex_switcher_6.getRealException() instanceof kermeta.exceptions.Exception ) {&#xA;kermeta.exceptions.Exception e = (kermeta.exceptions.Exception) ex_switcher_6.getRealException();&#xA;this.getLog().addSetUpError(this, e);&#xA;}&#xA;}&#xA;}&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="tearDown">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the things to be done after execution of the test method&#xD;&#xA;&#x9; * (designed to be overwritten in real TestCase classes) &#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value=""/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="__testMethodName" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the name of the method which corresponds to the test case in the test class&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TestRunner" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Create and use a test runner to run one or more tests and print the failure log. E.g.:&#xD;&#xA; * do&#xD;&#xA; *&#x9;     var suite : TestSuite init TestSuite.new.addAllTestCasesFrom(InterestingTestCaseSet)&#xD;&#xA; *&#x9;     var runner : TestRunner init TestRunner.new&#xD;&#xA; *&#x9;     runner.run(suite)&#xD;&#xA; *&#x9;     runner.printLogs&#xD;&#xA; * end&#xD;&#xA; *&#xD;&#xA; * Where InterestingTestCaseSet is a subclass of TestCase and contains several test... methods&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="runTest">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Use this to run a test case or a test suite.&#xD;&#xA;&#x9; * If you want to run all the test.... methods in a TestCase class,&#xD;&#xA;&#x9; *  you can populate a suite with TestSuite.addAllTestCasesFrom&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="testNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="kermeta.post">
            <details key="logNotVoid" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setLog(((kermeta.kunit.Log) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.Log&quot;)));&#xA;&#xA;&#x9;test.setLogKermeta(this.getLog());&#xA;&#xA;&#x9;test.run();&#xA;"/>
          </eAnnotations>
          <eParameters name="test" eType="#/5/kunit/Test"/>
        </eOperations>
        <eOperations name="printTestResult" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Prints the log or errors and failures from a test run.&#xD;&#xA;&#x9; * Run some tests first.&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\n---------------------------------------------  TEST RESULTS-----------------------------------------------\n&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_665 = false;&#xA;&#x9;idIfCond_665 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).empty());&#xA;&#xA;&#x9;if( idIfCond_665 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\nFailures: &quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Failure> it_ft142 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_666 = false;&#xA;&#x9;while( !idLoopCond_666 ) {&#xA;&#x9;idLoopCond_666 = it_ft142.isOff();&#xA;&#x9;if ( idLoopCond_666 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.kunit.Failure f = it_ft142.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, f.toString()));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_667 = false;&#xA;&#x9;idIfCond_667 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_667 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\nErrors: &quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft143 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_668 = false;&#xA;&#x9;while( !idLoopCond_668 ) {&#xA;&#x9;idLoopCond_668 = it_ft143.isOff();&#xA;&#x9;if ( idLoopCond_668 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.kunit.Error e = it_ft143.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e.toString()));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_669 = false;&#xA;&#x9;idIfCond_669 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).empty());&#xA;&#xA;&#x9;if( idIfCond_669 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\nErrors from setUp or tearDown : &quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.kunit.Error> it_ft144 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_670 = false;&#xA;&#x9;while( !idLoopCond_670 ) {&#xA;&#x9;idLoopCond_670 = it_ft144.isOff();&#xA;&#x9;if ( idLoopCond_670 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.kunit.Error e = it_ft144.next();&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;\n   &quot;, e.toString()));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\n Summary: &quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of launched tests : &quot;, kermeta.standard.helper.IntegerWrapper.toString(this.getLog().getRuntests())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of failures : &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Failure>convertAsOrderedSet(this.getLog().getFailures()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors : &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getErrors()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(kermeta.standard.helper.StringWrapper.plus(&quot;   Number of errors in setUp or tearDown: &quot;, kermeta.standard.helper.IntegerWrapper.toString(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.kunit.Error>convertAsOrderedSet(this.getLog().getHarnessErrors()).size())));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.io.StdIOUtil.writeln(&quot;\n-------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="run">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9;  * For backwards compatibility with old kunit, this takes a test case class&#xD;&#xA;&#x9;  * and creates the necessary suite, and runs it. DEPRECATED&#xD;&#xA;&#x9;  */"/>
          </eAnnotations>
          <eAnnotations source="kermeta.pre">
            <details key="cIsATestCase" value=""/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.runTest(((kermeta.kunit.TestSuite) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.kunit.TestSuite&quot;)).addAllTestCasesFrom(org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;testCaseClass&quot;)));&#xA;"/>
          </eAnnotations>
          <eParameters name="testCaseClass" eType="#/5/language/structure/Class"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="log" eType="#/5/kunit/Log"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Where to register the failures and errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="utils" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/utils/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/utils"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xD;&#xA; * metamodel&#xD;&#xA; * &#xD;&#xA; * &lt;img src=&quot;./figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains special classes (Hashtable, Stack) that are not contained in Kermeta&#xD;&#xA; * metamodel&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="StringBuffer" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * This class mimic the behavior of the java's StringBuffer class. This enables better performance in long&#xA; * string concatenation.&lt;br>&#xA; * &lt;b>Only work on Strings&lt;/b>&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xA; */"/>
        </eAnnotations>
        <eOperations name="append" eType="#/5/utils/StringBuffer">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Append a given string at the end of this StringBuffer&#xA;&#x9; * @param arg0 A string to append at the end of this StringBuffer&#xA;&#x9; * @return A reference to this object&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.utils.StringBuffer result = null;&#xA;&#xA;&#x9;result = (kermeta.utils.StringBuffer) org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.append(this, arg0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="arg0" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="length" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; * Return the length of the StringBuffer&#xA;&#x9; * @return length of the StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.length(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="toString" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA;&#x9; *Convert this StringBuffer to String and return its value&#xA;&#x9; *@return The string value of this StringBuffer&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="kermeta">
            <details key="superOperation" value="kermeta::language::structure::Object"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.String stringValue = null;&#xA;&#xA;&#x9;stringValue = (java.lang.String) org.kermeta.compil.runtime.helper.basetypes.StringBufferUtil.toString(this);&#xA;&#xA;&#x9;result = stringValue;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Hashtable" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of hashtable&#xD;&#xA; * This implementation is for speed optimisation it cannot be serialized. &#xD;&#xA; * If your wish to serialize its content you need to copy its content into a classical ecore structure (attribute or references)&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="K"/>
        <eTypeParameters name="V"/>
        <eOperations name="getValue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the value for key 'key' if it exists, otherwise returns Void&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;V result = null;&#xA;&#xA;&#x9;result = (V) org.kermeta.compil.runtime.helper.basetypes.MapUtil.get(this, key);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/utils/Hashtable/V"/>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/5/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="clear">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes all elements from the Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.clear(this);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="containsKey" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#x9;&#xD;&#xA;&#x9; * Returns a Boolean stating whether a key is present or not in this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(this.getValue(key), null);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/5/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="put">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Adds a entry into the Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.put(this, key, value);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/5/utils/Hashtable/K"/>
          </eParameters>
          <eParameters name="value">
            <eGenericType eTypeParameter="#/5/utils/Hashtable/V"/>
          </eParameters>
        </eOperations>
        <eOperations name="values">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a collection containing the elements of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Collection&lt;V> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Bag&lt;V>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Bag&lt;V>&quot;));&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it_ft145 = this.keys().iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_671 = false;&#xA;&#x9;while( !idLoopCond_671 ) {&#xA;&#x9;idLoopCond_671 = it_ft145.isOff();&#xA;&#x9;if ( idLoopCond_671 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;K k = it_ft145.next();&#xA;&#xA;&#x9;result.add(this.getValue(k));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Collection">
            <eTypeArguments eTypeParameter="#/5/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="remove">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Removes the entry with key equals to 'key'&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.MapUtil.remove(this, key);&#xA;"/>
          </eAnnotations>
          <eParameters name="key">
            <eGenericType eTypeParameter="#/5/utils/Hashtable/K"/>
          </eParameters>
        </eOperations>
        <eOperations name="keys">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns a set containing the hash keys of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Set&lt;K> result = null;&#xA;&#xA;&#x9;result = ((kermeta.standard.Set&lt;K>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Set&lt;K>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;K> it = this.keyIterator();&#xA;&#x9;java.lang.Boolean idLoopCond_672 = false;&#xA;&#x9;while( !idLoopCond_672 ) {&#xA;&#x9;idLoopCond_672 = it.isOff();&#xA;&#x9;if ( idLoopCond_672 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;result.add(it.next());&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Set">
            <eTypeArguments eTypeParameter="#/5/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="keyIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an iterator over the Keys of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;K> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;K>) org.kermeta.compil.runtime.helper.basetypes.MapUtil.keysIterator(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Iterator">
            <eTypeArguments eTypeParameter="#/5/utils/Hashtable/K"/>
          </eGenericType>
        </eOperations>
        <eOperations name="valueIterator">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns an iterator over the values of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.standard.Iterator&lt;V> result = null;&#xA;&#xA;&#x9;result = (kermeta.standard.Iterator&lt;V>) org.kermeta.compil.runtime.helper.basetypes.MapUtil.valueIterator(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/standard/Iterator">
            <eTypeArguments eTypeParameter="#/5/utils/Hashtable/V"/>
          </eGenericType>
        </eOperations>
        <eOperations name="size" eType="#/5/standard/JavaInteger">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Returns the size of this Hashtable&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = (java.lang.Integer) org.kermeta.compil.runtime.helper.basetypes.MapUtil.size(this);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Stack">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * An implementation of stack&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/utils_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eTypeParameters name="G"/>
        <eOperations name="peek">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Gets the element at the top of the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.first();&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/utils/Stack/G"/>
        </eOperations>
        <eOperations name="pop">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Get and remove the element at the top of the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;G result = null;&#xA;&#xA;&#x9;result = this.peek();&#xA;&#xA;&#x9;this.removeAt(0);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eGenericType eTypeParameter="#/5/utils/Stack/G"/>
        </eOperations>
        <eOperations name="push">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Pushes an element into the stack&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.addAt(0, element);&#xA;"/>
          </eAnnotations>
          <eParameters name="element">
            <eGenericType eTypeParameter="#/5/utils/Stack/G"/>
          </eParameters>
        </eOperations>
        <eGenericSuperTypes eClassifier="#/5/standard/Sequence">
          <eTypeArguments eTypeParameter="#/5/utils/Stack/G"/>
        </eGenericSuperTypes>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="ecore" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/ecore/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/ecore"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains the definition of a Kermeta classes used for compatibility with Ecore &#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="EFeatureMapEntry" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta representation of EMF EFeatureMapEntry&#xD;&#xA; * it contains the name of the required feature and the actual value&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/ecore_compatibility_package.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#/5/language/structure/Object"
            containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="eStructuralFeatureName"
            eType="#/5/standard/JavaString"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="exceptions" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/exceptions/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/exceptions"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** &#xD;&#xA; * Contains the definition of a Kermeta exception and a few basic exceptions.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/exceptions_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="Exception" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Generic exceptions&#xD;&#xA; * The main class from which all the exception inherit&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The message attached to the exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedException" eType="#/5/exceptions/Exception"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Any nested exception     */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="stackTrace" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * The stack trace as a String&#xD;&#xA;     * Filled by the interpreted when the exception is raised&#xD;&#xA;     */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RuntimeError" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Exception for interpreter exceptions */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/5/language/behavior/Expression"
            containment="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** The code that raised the exception */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CallOnVoidTarget" eSuperTypes="#/5/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when a feature is called on void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeCastError" eSuperTypes="#/5/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Occurs when a cast (Object::asType operation) fails&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NotImplementedException" eSuperTypes="#/5/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Use this exception when you want to forbid the access to an unimplemented operation &#xD;&#xA; * and invite to implement it&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UpperBoundReachedError" eSuperTypes="#/5/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** &#xD;&#xA; * Use this exception when user tries to add an element to a property which type is collection&#xD;&#xA; * which has an upper bound != -1 ( ie *)&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AbstractClassInstantiationError"
          eSuperTypes="#/5/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Creation on an abstract class. Usually this is detected by the type-checker. The only&#xD;&#xA; * case where this happens is when instantiating a type variable, whose bound type turns&#xD;&#xA; * out to be abstract.&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IncompatibleTypeError" eSuperTypes="#/5/exceptions/RuntimeError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Raised by the Object::set operation if the type of the &#xD;&#xA; * Object to set has an incompatible type.&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DivisionByZero" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** well-known attempt to divide with a zero valued divider */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OverflowError" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the figure oversteps the capacity of the numeric variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="VoidOperandError" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** one of the required operands is void */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringIndexOutOfBound" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the data overstep the size of the string variable */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StringFormatException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IndexOutOfBound" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access out of bounds elements */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EmptyCollection" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to access element on an empty collection */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IteratorIsOff" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Occurs when calling next() operation while iterator is already&#xD;&#xA; * positioned on the last element of a collection&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="IOException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** an interaction with the underlying system failed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="FileNotFoundException" eSuperTypes="#/5/exceptions/IOException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the file has not be found on the underlying system */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPre" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the pre-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedPost" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** the post-condition is not satisfied */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ConstraintViolatedInv" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** some fixes declared in the invariant condition ave been changed */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceLoadException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource loading fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceSaveException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails for some reasons */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceMixedLevelsException" eSuperTypes="#/5/exceptions/ResourceSaveException">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when Resource saving fails because an object refers to an element which &#xD;&#xA; * belongs to the Definition of the currently running program */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceCreateException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Occurs when trying to crate a Resource already existing in the Repository */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ResourceUnconformityException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when user tries to add an object that is not conform to the metamodel */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UnregisteredMetamodelException"
          eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Raised when a resource cannot be loaded or saved because the URI used for &#xD;&#xA; * the  metamodel is not registered&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpressionException" eSuperTypes="#/5/exceptions/Exception">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * to be written #########################################&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="KRuntimeError" instanceClassName="org.kermeta.compil.runtime.helper.error.KRuntimeError"
          serializable="false"/>
    </eSubpackages>
    <eSubpackages name="interpreter" nsURI="http://www.kermeta.org/kermeta/1_2_0//kermeta/interpreter/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/kermeta/1_2_0//kermeta/interpreter"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * Contains a set of classes whose function is to evaluate a kermeta &#xD;&#xA; * expression written as a string.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/interpreter_package.png&quot;/>&#xD;&#xA; */"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="DynamicExpression" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * DynamicExpression is a class used to make dynamic calls, i.e dynamic evaluation&#xD;&#xA; * of Kermeta statements represented in a string.&#xD;&#xA; * &#xD;&#xA; * An example :&#xD;&#xA; *   var de : DynamicExpression init DynamicExpression.new&#xD;&#xA; *   de.initializeDefaults&#xD;&#xA; *   de.formalParameters.put(&quot;a&quot;, String)&#xD;&#xA; *   de.parse(&quot;stdio.writeln(a)&quot;) // note: to execute a list of statements, you have to surround them with do..end&#xD;&#xA; *   var params : Hashtable&lt;String, Object> init Hashtable&lt;String, Object>.new&#xD;&#xA; *   params.put(&quot;a&quot;, &quot;hello world!&quot;)&#xD;&#xA; *   de.execute(void, params)&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/dynamic_expression_view.png&quot;/>&#xD;&#xA; */"/>
        </eAnnotations>
        <eOperations name="initializeDefaults" ordered="false">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Initializes the formalParameters with an empty set of parameters&#xD;&#xA;&#x9; * and the self type with void&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setFormalParameters(((kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Type>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;java.lang.String, kermeta.language.structure.Type>&quot;)));&#xA;&#xA;&#x9;this.setSelfClass((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Object&quot;).getTypeDefinition());&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute" eType="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * Execute the expression in the given context&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_673 = false;&#xA;&#x9;idIfCond_673 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getExpression(), null);&#xA;&#xA;&#x9;if( idIfCond_673 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DynamicExpressionException&quot;));&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression is void&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_674 = false;&#xA;&#x9;idIfCond_674 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_674 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DynamicExpressionException&quot;));&#xA;&#xA;&#x9;e.setMessage(&quot;execute precondition - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.DynamicExpressionUtil.execute(this, selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="selfObj" eType="#/5/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/5/utils/Hashtable">
              <eTypeArguments eClassifier="#/5/standard/JavaString"/>
              <eTypeArguments eClassifier="#/5/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="parse" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parse the expression as a string&#xD;&#xA;&#x9; * and updates the expression field and errors&#xD;&#xA;&#x9; * Returns true if the expression was parsed sucessfuly&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).clear();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_675 = false;&#xA;&#x9;idIfCond_675 = kermeta.standard.helper.BooleanWrapper.or(org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getFormalParameters(), null), org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(this.getSelfClass(), null));&#xA;&#xA;&#x9;if( idIfCond_675 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DynamicExpressionException&quot;));&#xA;&#xA;&#x9;e.setMessage(&quot;parse precondition - formalParameters or selfType is void&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = (java.lang.Boolean) org.kermeta.compil.runtime.helper.language.DynamicExpressionUtil.parse(this, expression);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_676 = false;&#xA;&#x9;idIfCond_676 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).size(), 0);&#xA;&#xA;&#x9;if( idIfCond_676 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DynamicExpressionException&quot;));&#xA;&#xA;&#x9;e.setMessage(&quot;parse result - expression contains errors&quot;);&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.interpreter.KermetaError> it_ft146 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.interpreter.KermetaError>convertAsOrderedSet(this.getErrors()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_677 = false;&#xA;&#x9;while( !idLoopCond_677 ) {&#xA;&#x9;idLoopCond_677 = it_ft146.isOff();&#xA;&#x9;if ( idLoopCond_677 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.interpreter.KermetaError error = it_ft146.next();&#xA;&#xA;&#x9;kermeta.standard.helper.StringWrapper.append(e.getMessage(), kermeta.standard.helper.StringWrapper.plus(&quot;\n&quot;, error.getMessage()));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="expression" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="evalString" eType="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;     * Execute the expression given as a string.&#xD;&#xA;     * the self type and formal parameters are supposed to be set&#xD;&#xA;     * before calling this operation&#xD;&#xA;     */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_678 = false;&#xA;&#x9;idIfCond_678 = kermeta.standard.helper.BooleanWrapper.not(this.parse(body));&#xA;&#xA;&#x9;if( idIfCond_678 ) {&#xA;&#xA;&#x9;kermeta.exceptions.DynamicExpressionException e = ((kermeta.exceptions.DynamicExpressionException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.DynamicExpressionException&quot;));&#xA;&#xA;&#x9;e.setMessage(&quot;evalString - expression contains errors&quot;);&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( e );&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.execute(selfObj, actualParams);&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="body" eType="#/5/standard/JavaString"/>
          <eParameters name="selfObj" eType="#/5/language/structure/Object"/>
          <eParameters name="actualParams">
            <eGenericType eClassifier="#/5/utils/Hashtable">
              <eTypeArguments eClassifier="#/5/standard/JavaString"/>
              <eTypeArguments eClassifier="#/5/language/structure/Object"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#/5/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * the expression&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="errors" upperBound="-1"
            eType="#/5/interpreter/KermetaError">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Parse errors and type errors&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Formal parameters of the expression (bindings between parameters' names and types)&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
          <eGenericType eClassifier="#/5/utils/Hashtable">
            <eTypeArguments eClassifier="#/5/standard/JavaString"/>
            <eTypeArguments eClassifier="#/5/language/structure/Type"/>
          </eGenericType>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="selfClass" eType="#/5/language/structure/ClassDefinition">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * The type of the self object&#xD;&#xA;&#x9; * or void if the expression is not to be executed&#xD;&#xA;&#x9; * in the context of an object&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="KermetaError" abstract="true" eSuperTypes="#/5/language/structure/Object">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta language error in a code written in Kermeta&#xD;&#xA; */"/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="message" eType="#/5/standard/JavaString">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xD;&#xA;&#x9; * Error message&#xD;&#xA;&#x9; */"/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ParseError" eSuperTypes="#/5/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Kermeta error for parsing problems&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypeError" eSuperTypes="#/5/interpreter/KermetaError">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xD;&#xA; * Type errors in a code written in Kermeta&#xD;&#xA; */"/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="km2ecore" nsURI="http://www.kermeta.org/km2ecore/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/km2ecore"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="KM2EcoreContext" eSuperTypes="#/5/language/structure/Object">
      <eOperations name="getLoopConditionId" eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA;&#x9; * Get the identifier&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;idLoopCond_&quot;, this.getCondStack().peek());&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getIfConditionId" eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA;&#x9; * Get the identifier&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;idIfCond_&quot;, this.getCondStack().peek());&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="pushKRErrorStack">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setInc_kRErrorStack(kermeta.standard.helper.IntegerWrapper.plus(this.getInc_kRErrorStack(), 1));&#xA;&#xA;&#x9;this.getKRErrorStack().push(kermeta.standard.helper.IntegerWrapper.toString(this.getInc_kRErrorStack()));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="save">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setSimkOutput(kermeta.standard.helper.StringWrapper.replaceExtension(this.getKmInput(), &quot;simk&quot;));&#xA;&#xA;&#x9;kermeta.persistence.Resource simkResource = this.getOutputRepository().createResource(this.getSimkOutput(), &quot;http://www.kermeta.org/simk&quot;);&#xA;&#xA;&#x9;simkResource.add(this.getSimkModel());&#xA;&#xA;&#x9;simkResource.save();&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getResultLastStatementType" eType="#/5/standard/JavaString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_679 = false;&#xA;&#x9;idIfCond_679 = kermeta.standard.helper.IntegerWrapper.isGreater(this.getResultLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_679 ) {&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> str_set = kermeta.standard.helper.StringWrapper.split(this.getResultLastStatementStack().peek(), &quot;%%type%%&quot;);&#xA;&#xA;&#x9;result = str_set.last();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="pushFtSuffix">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setInc_ftSuffix(kermeta.standard.helper.IntegerWrapper.plus(this.getInc_ftSuffix(), 1));&#xA;&#xA;&#x9;this.getFtSuffix().push(kermeta.standard.helper.IntegerWrapper.toString(this.getInc_ftSuffix()));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initializeConstants">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA;&#x9; * Initialize the constants&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setJAVA_CLASS_EXCEPTION_SWITCHER(&quot;org.kermeta.compil.runtime.helper.error.KRuntimeError&quot;);&#xA;&#xA;&#x9;this.setVARIABLE_EXCEPTION_SWITCHER(&quot;ex_switcher&quot;);&#xA;&#xA;&#x9;this.setNOT_EVALUATED_MESSAGE(&quot;//FIXME This statement cannot be evaluated without an assignment: &quot;);&#xA;&#xA;&#x9;this.setSELF_EXPRESSION_TO_REPLACE(&quot;SELF_EXPRESSION_TO_REPLACE&quot;);&#xA;&#xA;&#x9;this.setRETURN_EXPRESSION_TO_REPLACE(&quot;RETURN_EXPRESSION_TO_REPLACE&quot;);&#xA;&#xA;&#x9;this.setSEPARATOR_STATEMENT_FT(&quot;&quot;);&#xA;&#xA;&#x9;this.setPREVIOUS_STATEMENT_FT(&quot;PREVIOUS_STATEMENT_FT&quot;);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="popResultLastStatementStack">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_680 = false;&#xA;&#x9;idIfCond_680 = kermeta.standard.helper.IntegerWrapper.isGreater(this.getResultLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_680 ) {&#xA;&#xA;&#x9;this.setInc_resultLastStatementStack(this.getInc_resultLastStatementStack());&#xA;&#xA;&#x9;this.getResultLastStatementStack().pop();&#xA;}&#xA;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initializeFrameworkOperations">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;getMetaClass&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;container&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;checkInvariants&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;checkAllInvariants&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;equals&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isNotEqual&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isKindOf&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;get&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;set&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isSet&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;unset&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;oid&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;toString&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isFrozen&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isVoid&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;hashcode&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;freeze&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;asType&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isInstanceOf&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;containingResource&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;clone&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;deepClone&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isInstance&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isSuperTypeOf&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;java.lang.String>convertAsOrderedSet(this.getFrameworkOperations()).add(&quot;isSubTypeOf&quot;);&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="printFtSuffix" eType="#/5/standard/JavaString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_681 = false;&#xA;&#x9;idIfCond_681 = kermeta.standard.helper.BooleanWrapper.and(this.getFtSuffixActivation(), kermeta.standard.helper.IntegerWrapper.isGreater(this.getFtSuffix().size(), 0));&#xA;&#xA;&#x9;if( idIfCond_681 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_ft&quot;, this.getFtSuffix().peek());&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="pushCondStack">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setInc_condStack(kermeta.standard.helper.IntegerWrapper.plus(this.getInc_condStack(), 1));&#xA;&#xA;&#x9;this.getCondStack().push(kermeta.standard.helper.IntegerWrapper.toString(this.getInc_condStack()));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getResultLastStatementId" eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA;&#x9; * Get the identifier&#xA;&#x9; */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_682 = false;&#xA;&#x9;idIfCond_682 = kermeta.standard.helper.IntegerWrapper.isGreater(this.getResultLastStatementStack().size(), 0);&#xA;&#xA;&#x9;if( idIfCond_682 ) {&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> str_set = kermeta.standard.helper.StringWrapper.split(this.getResultLastStatementStack().peek(), &quot;%%type%%&quot;);&#xA;&#xA;&#x9;result = str_set.one();&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initialize">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setKmInput(modelInput);&#xA;&#xA;&#x9;this.setTraceabilityInput(traceInput);&#xA;&#xA;&#x9;this.setTasks_stack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.getTasks_stack().push(&quot;Start&quot;);&#xA;&#xA;&#x9;this.setCondStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.setInc_condStack(0);&#xA;&#xA;&#x9;this.setKRErrorStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.setInc_kRErrorStack(0);&#xA;&#xA;&#x9;this.initializeConstants();&#xA;&#xA;&#x9;this.setCompiledJavaExtern(&quot;&quot;);&#xA;&#xA;&#x9;this.setCurrent_valueType(null);&#xA;&#xA;&#x9;this.setFtStack(((kermeta.utils.Stack&lt;kermeta.language.behavior.LambdaExpression>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;kermeta.language.behavior.LambdaExpression>&quot;)));&#xA;&#xA;&#x9;this.setCurrent_param_ft(&quot;&quot;);&#xA;&#xA;&#x9;this.setFtSuffix(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.setInc_ftSuffix(0);&#xA;&#xA;&#x9;this.setFtSuffixActivation(false);&#xA;&#xA;&#x9;this.setFtContextualSelf(&quot;&quot;);&#xA;&#xA;&#x9;this.setFtReturnType(&quot;&quot;);&#xA;&#xA;&#x9;this.setBeforeLambdaExpressionResult(&quot;&quot;);&#xA;&#xA;&#x9;this.setFtProductTypeStack(((kermeta.utils.Stack&lt;kermeta.language.structure.ProductType>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;kermeta.language.structure.ProductType>&quot;)));&#xA;&#xA;&#x9;this.setFtMapTypeStack(((kermeta.utils.Stack&lt;kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type>>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;kermeta.utils.Hashtable&lt;kermeta.language.structure.Type, kermeta.language.structure.Type>>&quot;)));&#xA;&#xA;&#x9;this.setLastStatementStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.setResultLastStatementStack(((kermeta.utils.Stack&lt;java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Stack&lt;java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.setInc_resultLastStatementStack(0);&#xA;&#xA;&#x9;this.setJavaKeyWordList(((km2ecore.common.JavaKeyWordList) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.common.JavaKeyWordList&quot;)));&#xA;&#xA;&#x9;this.getJavaKeyWordList().initialize();&#xA;&#xA;&#x9;this.initializeFrameworkOperations();&#xA;&#xA;&#x9;this.setInputRepository(((kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFRepository&quot;)));&#xA;&#xA;&#x9;kermeta.persistence.Resource modelResource = this.getInputRepository().getResource(modelInput);&#xA;&#xA;&#x9;this.setMu(((kermeta.language.structure.ModelingUnit) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(modelResource.instances().one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.ModelingUnit&quot;))));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_683 = false;&#xA;&#x9;idIfCond_683 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(traceInput)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(traceInput, &quot;&quot;));&#xA;&#xA;&#x9;if( idIfCond_683 ) {&#xA;&#xA;&#x9;kermeta.persistence.Resource traceResource = this.getInputRepository().getResource(traceInput);&#xA;&#xA;&#x9;this.setTraceModel(((traceability.TraceModel) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(traceResource.instances().one(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.TraceModel&quot;))));&#xA;&#xA;&#x9;((km2ecore.SourceTracer) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.SourceTracer&quot;)).addSourceInformation(this);&#xA;}&#xA;&#xA;&#xA;&#x9;this.setOutputRepository(((kermeta.persistence.EMFRepository) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.persistence.EMFRepository&quot;)));&#xA;&#xA;&#x9;this.setSimkModel(((simk.SIMKModel) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SIMKModel&quot;)));&#xA;"/>
        </eAnnotations>
        <eParameters name="modelInput" eType="#/5/standard/JavaString"/>
        <eParameters name="traceInput" eType="#/5/standard/JavaString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="javaKeyWordList" eType="#/6/common/JavaKeyWordList">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/******/"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Unique instance of the JavaKeyWordList */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceModel" lowerBound="1"
          eType="#/8/TraceModel">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#x9;The trace model dedicated to the km model (kmt2km) used for the transformation */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="resultOfLastFt" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="VARIABLE_EXCEPTION_SWITCHER"
          lowerBound="1" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="kRErrorStack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ftSuffixActivation" eType="#/5/standard/JavaBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_resultLastStatementStack"
          eType="#/5/standard/JavaInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="RETURN_EXPRESSION_TO_REPLACE"
          lowerBound="1" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mode" lowerBound="1"
          eType="#/6/CompilingMode">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The choosen compiling mode */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="NOT_EVALUATED_MESSAGE"
          lowerBound="1" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kmInput" lowerBound="1"
          eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The input model (as input of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="condStack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SEPARATOR_STATEMENT_FT"
          lowerBound="1" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftStack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/language/behavior/LambdaExpression"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ecoreOutputs" lowerBound="1"
          upperBound="-1" eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The output Ecore models (as output of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="inputRepository" lowerBound="1"
          eType="#/5/persistence/EMFRepository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Unique instance of the JavaTypeMapping */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**  */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="outputRepository" lowerBound="1"
          eType="#/5/persistence/EMFRepository">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**  */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="lastStatementStack" lowerBound="1"
          containment="true">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resultLastStatementStack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="simkOutput" lowerBound="1"
          eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The simk model (as output of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="frameworkOperations"
          upperBound="-1" eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** List of the method from the framework */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAVA_CLASS_EXCEPTION_SWITCHER"
          lowerBound="1" eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** CONSTANTS */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_kRErrorStack" eType="#/5/standard/JavaInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="compiledJavaExtern" lowerBound="1"
          eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/********/"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**  */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="traceabilityInput" lowerBound="1"
          eType="#/5/standard/JavaString">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The input model (as input of the transformation) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="current_valueType" eType="#/5/language/structure/ClassDefinition">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/********/"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeFunctionTypeResult"
          eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="tasks_stack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_condStack" eType="#/5/standard/JavaInteger"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftSuffix">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/*** params for FunctionType contextual ***/"/>
        </eAnnotations>
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/standard/JavaString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="mu" lowerBound="1" eType="#/5/language/structure/ModelingUnit">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** The modeling units source */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftMapTypeStack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/utils/Hashtable"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="simkModel" lowerBound="1"
          eType="#/9/SIMKModel"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ftProductTypeStack">
        <eGenericType eClassifier="#/5/utils/Stack">
          <eTypeArguments eClassifier="#/5/language/structure/ProductType"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="current_param_ft" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="SELF_EXPRESSION_TO_REPLACE"
          lowerBound="1" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="PREVIOUS_STATEMENT_FT"
          lowerBound="1" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ftContextualSelf" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="beforeLambdaExpressionResult"
          eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ftReturnType" eType="#/5/standard/JavaString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="inc_ftSuffix" eType="#/5/standard/JavaInteger"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="CompilingMode">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** Enumeration representing the different compiling modes */"/>
      </eAnnotations>
      <eLiterals name="onlyEcore" literal="onlyEcore"/>
      <eLiterals name="behaviorKmt" value="1" literal="behaviorKmt"/>
      <eLiterals name="behaviorJava" value="2" literal="behaviorJava"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SourceTracer" eSuperTypes="#/5/language/structure/Object">
      <eOperations name="addSourceInformation" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;traceability.TraceModel model = context.getTraceModel();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_684 = false;&#xA;&#x9;idIfCond_684 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(model));&#xA;&#xA;&#x9;if( idIfCond_684 ) {&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.Reference> it_ft147 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.Reference>convertAsSet(model.getReferences()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_685 = false;&#xA;&#x9;while( !idLoopCond_685 ) {&#xA;&#x9;idLoopCond_685 = it_ft147.isOff();&#xA;&#x9;if ( idLoopCond_685 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;traceability.Reference r = it_ft147.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_686 = false;&#xA;&#x9;idIfCond_686 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(r, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.ModelReference&quot;));&#xA;&#xA;&#x9;if( idIfCond_686 ) {&#xA;&#xA;&#x9;traceability.ModelReference mr = ((traceability.ModelReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(r, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.ModelReference&quot;)));&#xA;&#xA;&#x9;traceability.TextReference tr = ((traceability.TraceabilityHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;traceability.TraceabilityHelper&quot;)).getFirstTextReference(mr);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_687 = false;&#xA;&#x9;idIfCond_687 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(tr));&#xA;&#xA;&#x9;if( idIfCond_687 ) {&#xA;&#xA;&#x9;mr.getRefObject().setFileName(tr.getFileURI());&#xA;&#xA;&#x9;mr.getRefObject().setFile(((traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;traceability.File&quot;)).getFile(model, tr.getFileURI()));&#xA;&#xA;&#x9;mr.getRefObject().setLineNumber(tr.getLineBeginAt());&#xA;}&#xA;&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;}&#xA;&#xA;"/>
        </eAnnotations>
        <eParameters name="context" eType="#/6/KM2EcoreContext"/>
      </eOperations>
    </eClassifiers>
    <eSubpackages name="helper" nsURI="http://www.kermeta.org/km2ecore/helper/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper"/>
      </eAnnotations>
      <eSubpackages name="java" nsURI="http://www.kermeta.org/km2ecore/helper/java/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/java"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="IdentifierHelper" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="getMangledIdentifier" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/** An underscore is added if the identifier is used as keyword */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_688 = false;&#xA;&#x9;idIfCond_688 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(id);&#xA;&#xA;&#x9;if( idIfCond_688 ) {&#xA;&#xA;&#x9;result = id;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_689 = false;&#xA;&#x9;idIfCond_689 = context.getJavaKeyWordList().isKeyword(id);&#xA;&#xA;&#x9;if( idIfCond_689 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(&quot;_&quot;, id);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = id;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="id" eType="#/5/standard/JavaString"/>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="kermeta" nsURI="http://www.kermeta.org/km2ecore/helper/kermeta/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/kermeta"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="ConstraintHelper" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="isPre" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(c), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_690 = false;&#xA;&#x9;idIfCond_690 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(op, null);&#xA;&#xA;&#x9;if( idIfCond_690 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(op.getPre()).contains(c);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="c" eType="#/5/language/structure/Constraint"/>
          </eOperations>
          <eOperations name="isPost" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;kermeta.language.structure.Operation op = ((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(c), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.Operation&quot;)));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_691 = false;&#xA;&#x9;idIfCond_691 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(op, null);&#xA;&#xA;&#x9;if( idIfCond_691 ) {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Constraint>convertAsOrderedSet(op.getPost()).contains(c);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="c" eType="#/5/language/structure/Constraint"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CompilerHelperJava" eSuperTypes="#/5/language/structure/Object">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Class containing some helpers dedicated to the Kermeta compiler&#xA; */"/>
          </eAnnotations>
          <eOperations name="ppComaSeparatedNodes" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * This helper is used for the pretty printing of the parameters in a CallFeature&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft148 = expressions.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_692 = false;&#xA;&#x9;while( !idLoopCond_692 ) {&#xA;&#x9;idLoopCond_692 = it_ft148.isOff();&#xA;&#x9;if ( idLoopCond_692 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression e = it_ft148.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_693 = false;&#xA;&#x9;idIfCond_693 = kermeta.standard.helper.IntegerWrapper.equals(i, 1);&#xA;&#xA;&#x9;if( idIfCond_693 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;, &quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;i = 1;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.String str_param = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_694 = false;&#xA;&#x9;idIfCond_694 = kermeta.standard.helper.BooleanWrapper.not(e.isFunctionTypeVariable());&#xA;&#xA;&#x9;if( idIfCond_694 ) {&#xA;&#xA;&#x9;str_param = e.createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_695 = false;&#xA;&#x9;idIfCond_695 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(context.getCurrent_valueType())), kermeta.standard.helper.StringWrapper.equals(str_param, &quot;this&quot;));&#xA;&#xA;&#x9;if( idIfCond_695 ) {&#xA;&#xA;&#x9;str_param = &quot;self&quot;;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_696 = false;&#xA;&#x9;idIfCond_696 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.StringWrapper.equals(e.getStaticType().getTypeQName(), &quot;kermeta::language::structure::Class&quot;), kermeta.standard.helper.StringWrapper.equals(e.getStaticType().getTypeQName(), &quot;kermeta::language::structure::Type&quot;));&#xA;&#xA;&#x9;if( idIfCond_696 ) {&#xA;&#xA;&#x9;str_param = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(\&quot;&quot;, str_param), &quot;\&quot;)&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.String type_label = &quot;&quot;;&#xA;&#xA;&#x9;kermeta.language.behavior.LambdaExpression theLambdaExp = context.getFtStack().peek();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_697 = false;&#xA;&#x9;idIfCond_697 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(e), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.CallFeature&quot;)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;)));&#xA;&#xA;&#x9;if( idIfCond_697 ) {&#xA;&#xA;&#x9;java.lang.String lambdaExp_returnType = ((kermeta.language.structure.FunctionType) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(theLambdaExp.getStaticType(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.structure.FunctionType&quot;))).getRight().createBehaviorJava(context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_698 = false;&#xA;&#x9;idIfCond_698 = kermeta.standard.helper.BooleanWrapper.not(((kermeta.language.structure.Operation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Operation&quot;)).isVoidType(lambdaExp_returnType));&#xA;&#xA;&#x9;if( idIfCond_698 ) {&#xA;&#xA;&#x9;type_label = lambdaExp_returnType;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_699 = false;&#xA;&#x9;idIfCond_699 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(type_label, &quot;&quot;);&#xA;&#xA;&#x9;if( idIfCond_699 ) {&#xA;&#xA;&#x9;context.getResultLastStatementStack().push(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;result_lambda = &quot;, &quot;%%type%%&quot;), type_label));&#xA;&#xA;&#x9;((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(e), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).setBeforeLambdaExpressionResult(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(((kermeta.language.behavior.Expression) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(e), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;kermeta.language.behavior.Expression&quot;))).getBeforeLambdaExpressionResult(), &quot;\n&quot;), type_label), &quot; result_lambda = null;\n&quot;), e.createBehaviorJava(context)));&#xA;&#xA;&#x9;str_param = &quot;result_lambda&quot;;&#xA;&#xA;&#x9;context.getResultLastStatementStack().pop();&#xA;}&#xA; else {&#xA;&#xA;&#x9;str_param = e.createBehaviorJava(context);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, str_param);&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="expressions">
              <eGenericType eClassifier="#/5/standard/Set">
                <eTypeArguments eClassifier="#/5/language/behavior/Expression"/>
              </eGenericType>
            </eParameters>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppCRSeparatedNode" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: each&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.behavior.Expression> it_ft149 = expressions.iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_700 = false;&#xA;&#x9;while( !idLoopCond_700 ) {&#xA;&#x9;idLoopCond_700 = it_ft149.isOff();&#xA;&#x9;if ( idLoopCond_700 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;//Beginning of the Inlining of the lambda expression: func&#xA;kermeta.language.behavior.Expression e = it_ft149.next();&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, e.createBehaviorJava(context));&#xA;//End of the Inlining of the lambda expression: func&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: each&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="expressions">
              <eGenericType eClassifier="#/5/standard/OrderedSet">
                <eTypeArguments eClassifier="#/5/language/behavior/Expression"/>
              </eGenericType>
            </eParameters>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppTypeFromMultiplicityElement" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; *&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_701 = false;&#xA;&#x9;idIfCond_701 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(elem.getUpper(), 1);&#xA;&#xA;&#x9;if( idIfCond_701 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_702 = false;&#xA;&#x9;idIfCond_702 = elem.getIsOrdered();&#xA;&#xA;&#x9;if( idIfCond_702 ) {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_703 = false;&#xA;&#x9;idIfCond_703 = elem.getIsUnique();&#xA;&#xA;&#x9;if( idIfCond_703 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.OrderedSet&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.Sequence&quot;);&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_704 = false;&#xA;&#x9;idIfCond_704 = elem.getIsUnique();&#xA;&#xA;&#x9;if( idIfCond_704 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.Set&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, &quot;kermeta.standard.Bag&quot;);&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(result, &quot;&lt;&quot;), elem.getType().createBehaviorJava(context)), &quot;>&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(result, elem.getType().createBehaviorJava(context));&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="elem" eType="#/5/language/structure/MultiplicityElement"/>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="ppEmfLikeCreateFactory" eType="#/5/standard/JavaString">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * Give the pp string corresponding to the CreateFactory in EMF-like of a type&#xA;&#x9; * @deprecated&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = &quot;&quot;;&#xA;&#xA;&#x9;java.lang.String localType2 = kermeta.standard.helper.StringWrapper.replace(localType, &quot;.&quot;, &quot;%&quot;);&#xA;&#xA;&#x9;kermeta.standard.OrderedSet&lt;java.lang.String> name_set = kermeta.standard.helper.StringWrapper.split(localType2, &quot;%&quot;);&#xA;&#xA;&#x9;java.lang.String allPackages_label = kermeta.standard.helper.StringWrapper.substring(localType, 0, kermeta.standard.helper.IntegerWrapper.minus(kermeta.standard.helper.StringWrapper.size(localType), kermeta.standard.helper.StringWrapper.size(name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 1)))));&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_705 = false;&#xA;&#x9;idIfCond_705 = kermeta.standard.helper.IntegerWrapper.isGreaterOrEqual(name_set.size(), 2);&#xA;&#xA;&#x9;if( idIfCond_705 ) {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot; = &quot;, allPackages_label), kermeta.standard.helper.StringWrapper.capName(name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 2)))), &quot;Factory.eINSTANCE.create&quot;), name_set.elementAt(kermeta.standard.helper.IntegerWrapper.minus(name_set.size(), 1))), &quot;()&quot;);&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot; = &quot;, &quot;Factory.eINSTANCE.create&quot;), localType2), &quot;()&quot;);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="localType" eType="#/5/standard/JavaString"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="GenericTypeDefinitionHelper" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="getKermetaSpecialType" eType="#/7/EClass">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;&#x9; * FIXME CF: this method should be deprecated, because the function type are included in the resulted Ecore&#xA;&#x9; * or we could create only the signature of the method&#xA;&#x9; */"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;ecore.EClass specialType = null;&#xA;&#xA;&#x9;java.lang.String name_KermetaSspecialType = &quot;KermetaSpecialTypesAlias&quot;;&#xA;&#xA;&#x9;ecore.EClassifier retrieveSpecialType = null;&#xA;&#xA;&#x9;retrieveSpecialType = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EClassifier result_ft150 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft150 = null;&#xA;&#xA;&#x9;result_ft150 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft150 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_706 = false;&#xA;&#x9;while( !idLoopCond_706 ) {&#xA;&#x9;idLoopCond_706 = kermeta.standard.helper.BooleanWrapper.or(it_ft150.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft150, null));&#xA;&#x9;if ( idLoopCond_706 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft150 = it_ft150.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_707 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EClassifier c = elem_ft150;&#xA;&#xA;&#x9;idIfCond_707 = kermeta.standard.helper.BooleanWrapper.and(org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;)), kermeta.standard.helper.StringWrapper.equals(c.getName(), name_KermetaSspecialType));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_707 ) {&#xA;&#xA;&#x9;result_ft150 = elem_ft150;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_708 = false;&#xA;&#x9;idIfCond_708 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(retrieveSpecialType));&#xA;&#xA;&#x9;if( idIfCond_708 ) {&#xA;&#xA;&#x9;result = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(retrieveSpecialType, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;)));&#xA;}&#xA; else {&#xA;&#xA;&#x9;specialType = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EClass&quot;));&#xA;&#xA;&#x9;specialType.setName(name_KermetaSspecialType);&#xA;&#xA;&#x9;specialType.setInstanceClassName(&quot;org.eclipse.emf.ecore.EObject&quot;);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(p.getEcoreModelElement().getEClassifiers()).add(specialType);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(specialType.getEAnnotations()).add(((km2ecore.helper.ecore.EAnnotationHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.ecore.EAnnotationHelper&quot;)).createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;alias&quot;).getName()), &quot;KermetaSpecialTypesAlias&quot;));&#xA;&#xA;&#x9;result = specialType;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="p" eType="#/5/language/structure/Package"/>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="ecore" nsURI="http://www.kermeta.org/km2ecore/helper/ecore/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/ecore"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="ModelAnalizer" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="isInterfaceBy" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(this.isExtendedBy(extended_class, super_class));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="extended_class" eType="#/7/EClass"/>
            <eParameters name="super_class" eType="#/7/EClass"/>
          </eOperations>
          <eOperations name="isExtendedBy" eType="#/5/standard/JavaBoolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = false;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_709 = false;&#xA;&#x9;idIfCond_709 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(super_class, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EGenericType>convertAsOrderedSet(extended_class.getEGenericSuperTypes()).one().getEClassifier());&#xA;&#xA;&#x9;if( idIfCond_709 ) {&#xA;&#xA;&#x9;result = true;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="extended_class" eType="#/7/EClass"/>
            <eParameters name="super_class" eType="#/7/EClass"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ENamedElementHelper" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="asString" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_710 = false;&#xA;&#x9;idIfCond_710 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(element)), org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.ENamedElement&quot;)));&#xA;&#xA;&#x9;if( idIfCond_710 ) {&#xA;&#xA;&#x9;result = ((ecore.ENamedElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(element, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.ENamedElement&quot;))).getName();&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.toString(element);&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="element" eType="#/7/EObject"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EcoreModelElementHelper" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="findEOperationProxy" eType="#/7/EOperation">
            <eAnnotations source="kermeta">
              <details key="deprecated" value="unused"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EOperation result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cd = ((kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.ClassDefinition&quot;));&#xA;&#xA;&#x9;cd = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(op);&#xA;&#xA;&#x9;ecore.EOperation eop = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EOperation result_ft151 = null;&#xA;&#xA;&#x9;ecore.EOperation elem_ft151 = null;&#xA;&#xA;&#x9;result_ft151 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EOperation> it_ft151 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EOperation>convertAsOrderedSet(cd.getEcoreModelElement().getEOperations()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_711 = false;&#xA;&#x9;while( !idLoopCond_711 ) {&#xA;&#x9;idLoopCond_711 = kermeta.standard.helper.BooleanWrapper.or(it_ft151.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft151, null));&#xA;&#x9;if ( idLoopCond_711 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft151 = it_ft151.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_712 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EOperation c = elem_ft151;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_713 = false;&#xA;&#x9;idIfCond_713 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EOperation&quot;));&#xA;&#xA;&#x9;if( idIfCond_713 ) {&#xA;&#xA;&#x9;idIfCond_712 = kermeta.standard.helper.StringWrapper.equals(((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EOperation&quot;))).getName(), op.getName());&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_712 ) {&#xA;&#xA;&#x9;result_ft151 = elem_ft151;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;eop = result_ft151;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;result = ((ecore.EOperation) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(eop, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EOperation&quot;)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="op" eType="#/5/language/structure/Operation"/>
          </eOperations>
          <eOperations name="setEStructuralFeatureProperties">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecoreStructuralFeature.setName(((km2ecore.helper.java.IdentifierHelper) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;km2ecore.helper.java.IdentifierHelper&quot;)).getMangledIdentifier(self_.getFinalName(), context));&#xA;&#xA;&#x9;ecoreStructuralFeature.setOrdered(self_.getIsOrdered());&#xA;&#xA;&#x9;ecoreStructuralFeature.setUnique(self_.getIsUnique());&#xA;&#xA;&#x9;ecoreStructuralFeature.setLowerBound(self_.getLower());&#xA;&#xA;&#x9;ecoreStructuralFeature.setUpperBound(self_.getUpper());&#xA;&#xA;&#x9;ecoreStructuralFeature.setDerived(self_.getIsDerived());&#xA;"/>
            </eAnnotations>
            <eParameters name="self_" eType="#/5/language/structure/Property"/>
            <eParameters name="ecoreStructuralFeature" eType="#/7/EStructuralFeature"/>
            <eParameters name="context" eType="#/6/KM2EcoreContext"/>
          </eOperations>
          <eOperations name="findEClassProxy" eType="#/7/EClass">
            <eAnnotations source="kermeta">
              <details key="deprecated" value="unused"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;kermeta.language.structure.Package pack = ((kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.language.structure.Package&quot;));&#xA;&#xA;&#x9;pack = (kermeta.language.structure.Package) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(cd);&#xA;&#xA;&#x9;ecore.EClassifier eclassifier = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EClassifier result_ft152 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft152 = null;&#xA;&#xA;&#x9;result_ft152 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft152 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(pack.getEcoreModelElement().getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_714 = false;&#xA;&#x9;while( !idLoopCond_714 ) {&#xA;&#x9;idLoopCond_714 = kermeta.standard.helper.BooleanWrapper.or(it_ft152.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft152, null));&#xA;&#x9;if ( idLoopCond_714 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft152 = it_ft152.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_715 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EClassifier c = elem_ft152;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_716 = false;&#xA;&#x9;idIfCond_716 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;));&#xA;&#xA;&#x9;if( idIfCond_716 ) {&#xA;&#xA;&#x9;idIfCond_715 = kermeta.standard.helper.StringWrapper.equals(((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(c, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;))).getName(), cd.getName());&#xA;}&#xA;&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_715 ) {&#xA;&#xA;&#x9;result_ft152 = elem_ft152;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;eclassifier = result_ft152;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;result = ((ecore.EClass) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(eclassifier, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EClass&quot;)));&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="cd" eType="#/5/language/structure/ClassDefinition"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EAnnotationHelper" eSuperTypes="#/5/language/structure/Object">
          <eOperations name="createEmpty" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation annotation = ((ecore.EAnnotation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EAnnotation&quot;));&#xA;&#xA;&#x9;annotation.setSource(source);&#xA;&#xA;&#x9;result = annotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="source" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="addEntry">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;ecore.EStringToStringMapEntry entry = ((ecore.EStringToStringMapEntry) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EStringToStringMapEntry&quot;));&#xA;&#xA;&#x9;entry.setKey(key);&#xA;&#xA;&#x9;entry.setValue(value);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStringToStringMapEntry>convertAsOrderedSet(annotation.getDetails()).add(entry);&#xA;"/>
            </eAnnotations>
            <eParameters name="annotation" eType="#/7/EAnnotation"/>
            <eParameters name="key" eType="#/5/standard/JavaString"/>
            <eParameters name="value" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="addAnnotationGenModelImpl">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;&#x9;java.lang.Boolean idIfCond_717 = false;&#xA;&#x9;idIfCond_717 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(eModelElement));&#xA;&#xA;&#x9;if( idIfCond_717 ) {&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(eModelElement.getEAnnotations()).add(this.create(&quot;http://www.eclipse.org/emf/2002/GenModel&quot;, &quot;body&quot;, this.cleanBody(body)));&#xA;}&#xA;&#xA;"/>
            </eAnnotations>
            <eParameters name="eModelElement" eType="#/7/EModelElement"/>
            <eParameters name="body" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="cleanBody" eType="#/5/standard/JavaString">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = body;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="body" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="createKermetaEAnnotation" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = this.create(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationSource.getByName(&quot;kermeta&quot;).getName()), key, value);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="key" eType="#/5/standard/JavaString"/>
            <eParameters name="value" eType="#/5/standard/JavaString"/>
          </eOperations>
          <eOperations name="createAbstract" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = this.createKermetaEAnnotation(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationKey.getByName(&quot;isAbstract&quot;).getName()), &quot;true&quot;);&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="getKermetaEAnnotation" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_718 = false;&#xA;&#x9;idIfCond_718 = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj)));&#xA;&#xA;&#x9;if( idIfCond_718 ) {&#xA;&#xA;&#x9;kermeta.language.structure.Property ecoreMEProp = org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj).getPropertyValue(&quot;ecoreModelElement&quot;);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_719 = false;&#xA;&#x9;idIfCond_719 = kermeta.standard.helper.BooleanWrapper.and(kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(ecoreMEProp)), kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj), ecoreMEProp))));&#xA;&#xA;&#x9;if( idIfCond_719 ) {&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EAnnotation result_ft153 = null;&#xA;&#xA;&#x9;ecore.EAnnotation elem_ft153 = null;&#xA;&#xA;&#x9;result_ft153 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EAnnotation> it_ft153 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(((ecore.EModelElement) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(org.kermeta.compil.runtime.helper.language.ObjectUtil.get(org.kermeta.compil.runtime.helper.language.ObjectUtil.container(obj), ecoreMEProp), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;ecore.EModelElement&quot;))).getEAnnotations()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_720 = false;&#xA;&#x9;while( !idLoopCond_720 ) {&#xA;&#x9;idLoopCond_720 = kermeta.standard.helper.BooleanWrapper.or(it_ft153.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft153, null));&#xA;&#x9;if ( idLoopCond_720 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft153 = it_ft153.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_721 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EAnnotation t = elem_ft153;&#xA;&#xA;&#x9;idIfCond_721 = kermeta.standard.helper.StringWrapper.equals(t.getSource(), kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationSource.getByName(&quot;kermeta&quot;).getName()));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_721 ) {&#xA;&#xA;&#x9;result_ft153 = elem_ft153;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_722 = false;&#xA;&#x9;idIfCond_722 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(result);&#xA;&#xA;&#x9;if( idIfCond_722 ) {&#xA;&#xA;&#x9;result = this.getEmptyKermetaEAnnotation();&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA; else {&#xA;&#xA;&#x9;result = this.getEmptyKermetaEAnnotation();&#xA;}&#xA;&#xA;&#xA;&#x9;result = this.getEmptyKermetaEAnnotation();&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="obj" eType="#/5/language/structure/Object"/>
          </eOperations>
          <eOperations name="getEmptyKermetaEAnnotation" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation annotation = ((ecore.EAnnotation) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;ecore.EAnnotation&quot;));&#xA;&#xA;&#x9;annotation.setSource(kermeta.standard.helper.StringWrapper.toString(km2ecore.helper.ecore.KermetaEAnnotationSource.getByName(&quot;kermeta&quot;).getName()));&#xA;&#xA;&#x9;result = annotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="create" eType="#/7/EAnnotation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;ecore.EAnnotation annotation = this.createEmpty(source);&#xA;&#xA;&#x9;this.addEntry(annotation, key, value);&#xA;&#xA;&#x9;result = annotation;&#xA;&#xA;return result;&#xA;"/>
            </eAnnotations>
            <eParameters name="source" eType="#/5/standard/JavaString"/>
            <eParameters name="key" eType="#/5/standard/JavaString"/>
            <eParameters name="value" eType="#/5/standard/JavaString"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="KermetaEAnnotationSource">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** Enumeration that lists the different keys among the Kermeta annotation in the Ecore side */"/>
          </eAnnotations>
          <eLiterals name="kermeta" literal="kermeta"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="KermetaEAnnotationKey">
          <eLiterals name="isAbstract" literal="isAbstract"/>
          <eLiterals name="alias" value="1" literal="alias"/>
          <eLiterals name="superOperation" value="2" literal="superOperation"/>
          <eLiterals name="isReadOnly" value="3" literal="isReadOnly"/>
          <eLiterals name="documentation" value="4" literal="documentation"/>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="simk" nsURI="http://www.kermeta.org/km2ecore/helper/simk/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/helper/simk"/>
        </eAnnotations>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="common" nsURI="http://www.kermeta.org/km2ecore/common/kermeta_temp_uri"
        nsPrefix="">
      <eAnnotations source="kermeta">
        <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/common"/>
      </eAnnotations>
      <eClassifiers xsi:type="ecore:EClass" name="JavaKeyWordList" eSuperTypes="#/5/language/structure/Object">
        <eOperations name="isKeyword" eType="#/5/standard/JavaBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.BooleanWrapper.not(org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(this.getKeywords().getValue(str)));&#xA;&#xA;return result;&#xA;"/>
          </eAnnotations>
          <eParameters name="str" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="addKeyword">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.getKeywords().put(kw, kw);&#xA;"/>
          </eAnnotations>
          <eParameters name="kw" eType="#/5/standard/JavaString"/>
        </eOperations>
        <eOperations name="initialize">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/** This list has been created from the content of the web page: http://java.sun.com/docs/books/tutorial/java/nutsandbolts/_keywords.html */"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;this.setKeywords(((kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.utils.Hashtable&lt;java.lang.String, java.lang.String>&quot;)));&#xA;&#xA;&#x9;this.addKeyword(&quot;abstract&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;continue&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;for&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;new&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;switch&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;assert&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;default&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;goto&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;package&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;synchronized&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;boolean&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;do&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;if&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;private&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;this&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;break&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;double&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;implements&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;protected&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;throw&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;byte&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;else&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;import&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;public&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;throws&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;case&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;enum&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;instanceof&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;return&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;transient&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;catch&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;extends&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;int&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;short&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;try&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;char&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;final&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;interface&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;static&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;void&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;class&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;finally&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;long&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;strictfp&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;volatile&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;const&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;float&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;native&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;super&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;while&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;true&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;false&quot;);&#xA;&#xA;&#x9;this.addKeyword(&quot;null&quot;);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="keywords" containment="true">
          <eGenericType eClassifier="#/5/utils/Hashtable">
            <eTypeArguments eClassifier="#/5/standard/JavaString"/>
            <eTypeArguments eClassifier="#/5/standard/JavaString"/>
          </eGenericType>
        </eStructuralFeatures>
      </eClassifiers>
      <eSubpackages name="exception" nsURI="http://www.kermeta.org/km2ecore/common/exception/kermeta_temp_uri"
          nsPrefix="">
        <eAnnotations source="kermeta">
          <details key="ecoreUri" value="http://www.kermeta.org/km2ecore/common/exception"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="UndefinedUriEPackageException"
            eSuperTypes="#/5/exceptions/Exception"/>
        <eClassifiers xsi:type="ecore:EClass" name="UndefinedValueTypeInstanceClassNameException"
            eSuperTypes="#/5/exceptions/Exception"/>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EPackage name="ecore" nsURI="http://www.eclipse.org/emf/2002/Ecore/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.eclipse.org/emf/2002/Ecore"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="EAttribute" eSuperTypes="#/7/EStructuralFeature">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/** This class refers to any EDataType feature*/"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAttributeType" lowerBound="1"
          eType="#/7/EDataType" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="iD" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBoolean" instanceClassName="boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EAnnotation" eSuperTypes="#/7/EModelElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="references" upperBound="-1"
          eType="#/7/EObject"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="details" upperBound="-1"
          eType="#/7/EStringToStringMapEntry" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="source" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contents" upperBound="-1"
          eType="#/7/EObject" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eModelElement" eType="#/7/EModelElement"
          transient="true" eOpposite="#/7/EModelElement/eAnnotations">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EString" instanceClassName="java.lang.String">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EClass" eSuperTypes="#/7/EClassifier">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="getEStructuralFeature" eType="#/7/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EStructuralFeature result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="featureName" eType="#/7/EString"/>
      </eOperations>
      <eOperations name="getFeatureID" eType="#/7/EInt">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Get a structural feature among AllStructuralFeatures */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Return the position of the feature in the list of AllStructuralFeatures */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.IntegerWrapper.uminus(1);&#xA;&#xA;&#x9;&#xA;&#x9;java.lang.Integer i = 0;&#xA;&#x9;java.lang.Boolean idLoopCond_723 = false;&#xA;&#x9;while( !idLoopCond_723 ) {&#xA;&#x9;idLoopCond_723 = kermeta.standard.helper.BooleanWrapper.or(kermeta.standard.helper.IntegerWrapper.equals(i, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(this.getEAllStructuralFeatures()).size()), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result, kermeta.standard.helper.IntegerWrapper.uminus(1)));&#xA;&#x9;if ( idLoopCond_723 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_724 = false;&#xA;&#x9;idIfCond_724 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(feature, org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(this.getEAllStructuralFeatures()).elementAt(i));&#xA;&#xA;&#x9;if( idIfCond_724 ) {&#xA;&#xA;&#x9;kermeta.standard.helper.IntegerWrapper.equals(result, i);&#xA;}&#xA;&#xA;&#xA;&#x9;i = kermeta.standard.helper.IntegerWrapper.plus(i, 1);&#xA;}&#xA;&#x9;}&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/7/EStructuralFeature"/>
      </eOperations>
      <eOperations name="isSuperTypeOf" eType="#/7/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EClass result_ft154 = null;&#xA;&#xA;&#x9;ecore.EClass elem_ft154 = null;&#xA;&#xA;&#x9;result_ft154 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClass> it_ft154 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClass>convertAsOrderedSet(someClass.getEAllSuperTypes()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_725 = false;&#xA;&#x9;while( !idLoopCond_725 ) {&#xA;&#x9;idLoopCond_725 = kermeta.standard.helper.BooleanWrapper.or(it_ft154.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft154, null));&#xA;&#x9;if ( idLoopCond_725 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft154 = it_ft154.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_726 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EClass t = elem_ft154;&#xA;&#xA;&#x9;idIfCond_726 = org.kermeta.compil.runtime.helper.language.ObjectUtil.equals(t, this);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_726 ) {&#xA;&#xA;&#x9;result_ft154 = elem_ft154;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;result = org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft154, null);&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="someClass" eType="#/7/EClass"/>
      </eOperations>
      <eOperations name="getFeatureCount" eType="#/7/EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;result = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(this.getEAllStructuralFeatures()).size();&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="op_getEStructuralFeature" eType="#/7/EStructuralFeature">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EStructuralFeature result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="featureID" eType="#/7/EInt"/>
      </eOperations>
      <eOperations name="getEStructuralFeature2" eType="#/7/EStructuralFeature">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EStructuralFeature result = null;&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EStructuralFeature result_ft155 = null;&#xA;&#xA;&#x9;ecore.EStructuralFeature elem_ft155 = null;&#xA;&#xA;&#x9;result_ft155 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EStructuralFeature> it_ft155 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EStructuralFeature>convertAsOrderedSet(this.getEAllStructuralFeatures()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_727 = false;&#xA;&#x9;while( !idLoopCond_727 ) {&#xA;&#x9;idLoopCond_727 = kermeta.standard.helper.BooleanWrapper.or(it_ft155.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft155, null));&#xA;&#x9;if ( idLoopCond_727 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft155 = it_ft155.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_728 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EStructuralFeature e = elem_ft155;&#xA;&#xA;&#x9;idIfCond_728 = kermeta.standard.helper.StringWrapper.equals(e.getName(), featureName);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_728 ) {&#xA;&#xA;&#x9;result_ft155 = elem_ft155;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="featureName" eType="#/7/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eStructuralFeatures"
          upperBound="-1" eType="#/7/EStructuralFeature" containment="true" eOpposite="#/7/EStructuralFeature/eContainingClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_abstract" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllAttributes" upperBound="-1"
          eType="#/7/EAttribute" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOperations" upperBound="-1"
          eType="#/7/EOperation" containment="true" eOpposite="#/7/EOperation/eContainingClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_interface" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eReferences" upperBound="-1"
          eType="#/7/EReference" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllReferences" upperBound="-1"
          eType="#/7/EReference" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSuperTypes" upperBound="-1"
          eType="#/7/EClass"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllContainments" upperBound="-1"
          eType="#/7/EReference" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericSuperTypes" upperBound="-1"
          eType="#/7/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllGenericSuperTypes"
          upperBound="-1" eType="#/7/EGenericType" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAttributes" upperBound="-1"
          eType="#/7/EAttribute" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eIDAttribute" eType="#/7/EAttribute"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllOperations" upperBound="-1"
          eType="#/7/EOperation" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllStructuralFeatures"
          upperBound="-1" eType="#/7/EStructuralFeature" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAllSuperTypes" upperBound="-1"
          eType="#/7/EClass" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EClassifier" abstract="true" eSuperTypes="#/7/ENamedElement">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="isInstance" eType="#/7/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="object" eType="#/7/EJavaObject"/>
      </eOperations>
      <eOperations name="getClassifierID" eType="#/7/EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceClassName" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" eType="#/7/EPackage"
          transient="true" eOpposite="#/7/EPackage/eClassifiers">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceClass" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eGenericType eClassifier="#/7/EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="#/7/EJavaObject"
          transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameters" upperBound="-1"
          eType="#/7/ETypeParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceTypeName" eType="#/7/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EJavaClass" instanceClassName="java.lang.Class">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Class"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="T"/>
      </eAnnotations>
      <eTypeParameters name="T"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EJavaObject" instanceClassName="java.lang.Object">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EDataType" eSuperTypes="#/7/EClassifier">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="serializable" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EEnum" eSuperTypes="#/7/EDataType">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="getEEnumLiteral2" eType="#/7/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** returns the enum literal which name is name */"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** returns the enum literal which value is value */"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EEnumLiteral result = null;&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EEnumLiteral result_ft156 = null;&#xA;&#xA;&#x9;ecore.EEnumLiteral elem_ft156 = null;&#xA;&#xA;&#x9;result_ft156 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EEnumLiteral> it_ft156 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EEnumLiteral>convertAsOrderedSet(this.getELiterals()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_729 = false;&#xA;&#x9;while( !idLoopCond_729 ) {&#xA;&#x9;idLoopCond_729 = kermeta.standard.helper.BooleanWrapper.or(it_ft156.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft156, null));&#xA;&#x9;if ( idLoopCond_729 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft156 = it_ft156.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_730 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EEnumLiteral e = elem_ft156;&#xA;&#xA;&#x9;idIfCond_730 = kermeta.standard.helper.IntegerWrapper.equals(e.getValue(), value);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_730 ) {&#xA;&#xA;&#x9;result_ft156 = elem_ft156;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="value" eType="#/7/EInt"/>
      </eOperations>
      <eOperations name="op_getEEnumLiteral" eType="#/7/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EEnumLiteral result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="name" eType="#/7/EString"/>
      </eOperations>
      <eOperations name="getEEnumLiteral" eType="#/7/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EEnumLiteral result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="value" eType="#/7/EInt"/>
      </eOperations>
      <eOperations name="getEEnumLiteralByLiteral" eType="#/7/EEnumLiteral">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EEnumLiteral result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="literal" eType="#/7/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eLiterals" upperBound="-1"
          eType="#/7/EEnumLiteral" containment="true" eOpposite="#/7/EEnumLiteral/eEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EEnumLiteral" eSuperTypes="#/7/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eEnum" eType="#/7/EEnum"
          transient="true" eOpposite="#/7/EEnum/eLiterals">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/7/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instance" eType="#/7/EEnumerator"
          transient="true">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="literal" eType="#/7/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EInt" instanceClassName="int">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="int"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EEnumerator" instanceClassName="org.eclipse.emf.common.util.Enumerator"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.Enumerator"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EFactory" eSuperTypes="#/7/EModelElement">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="createFromString" eType="#/7/EJavaObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="kermeta.language.structure.Object result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="eDataType" eType="#/7/EDataType"/>
        <eParameters name="literalValue" eType="#/7/EString"/>
      </eOperations>
      <eOperations name="convertToString" eType="#/7/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.String result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="eDataType" eType="#/7/EDataType"/>
        <eParameters name="instanceValue" eType="#/7/EJavaObject"/>
      </eOperations>
      <eOperations name="create" eType="#/7/EObject">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EObject result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="eClass" eType="#/7/EClass"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ePackage" lowerBound="1"
          eType="#/7/EPackage" transient="true" eOpposite="#/7/EPackage/eFactoryInstance">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EModelElement" abstract="true" eSuperTypes="#/7/EObject">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="getEAnnotation" eType="#/7/EAnnotation">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EAnnotation result = null;&#xA;&#xA;&#x9;result = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;ecore.EAnnotation result_ft157 = null;&#xA;&#xA;&#x9;ecore.EAnnotation elem_ft157 = null;&#xA;&#xA;&#x9;result_ft157 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EAnnotation> it_ft157 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EAnnotation>convertAsOrderedSet(this.getEAnnotations()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_731 = false;&#xA;&#x9;while( !idLoopCond_731 ) {&#xA;&#x9;idLoopCond_731 = kermeta.standard.helper.BooleanWrapper.or(it_ft157.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft157, null));&#xA;&#x9;if ( idLoopCond_731 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft157 = it_ft157.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_732 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;ecore.EAnnotation a = elem_ft157;&#xA;&#xA;&#x9;idIfCond_732 = kermeta.standard.helper.StringWrapper.equals(a.getSource(), source);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_732 ) {&#xA;&#xA;&#x9;result_ft157 = elem_ft157;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="source" eType="#/7/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eAnnotations" upperBound="-1"
          eType="#/7/EAnnotation" containment="true" eOpposite="#/7/EAnnotation/eModelElement"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ENamedElement" abstract="true" eSuperTypes="#/7/EModelElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/7/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EObject" eSuperTypes="#/5/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="eGet" eType="#/7/EJavaObject">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="kermeta.language.structure.Object result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/7/EStructuralFeature"/>
        <eParameters name="resolve" eType="#/7/EBoolean"/>
      </eOperations>
      <eOperations name="eUnset">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value=""/>
        </eAnnotations>
        <eParameters name="feature" eType="#/7/EStructuralFeature"/>
      </eOperations>
      <eOperations name="eSet">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value=""/>
        </eAnnotations>
        <eParameters name="feature" eType="#/7/EStructuralFeature"/>
        <eParameters name="newValue" eType="#/7/EJavaObject"/>
      </eOperations>
      <eOperations name="eContainer" eType="#/7/EObject">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EObject result = null;&#xA;&#xA;&#x9;result = (ecore.EObject) org.kermeta.compil.runtime.helper.language.ObjectUtil.container(this);&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eCrossReferences">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#/7/EEList">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="eContainingFeature" eType="#/7/EStructuralFeature">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EStructuralFeature result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eResource" eType="#/7/EResource">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eContainmentFeature" eType="#/7/EReference">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EReference result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eContents">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#/7/EEList">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="eIsProxy" eType="#/7/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eClass" eType="#/7/EClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EClass result = null;&#xA;&#xA;&#x9;result = (ecore.EClass) fr.irisa.triskell.kermeta.ecore.wrapper.EObjectWrapper.eClass(this);&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="eAllContents">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#/7/ETreeIterator">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eOperations name="op_eGet" eType="#/7/EJavaObject">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/7/EStructuralFeature"/>
      </eOperations>
      <eOperations name="eIsSet" eType="#/7/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="feature" eType="#/7/EStructuralFeature"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EOperation" eSuperTypes="#/7/ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eContainingClass" eType="#/7/EClass"
          transient="true" eOpposite="#/7/EClass/eOperations">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericExceptions" upperBound="-1"
          eType="#/7/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eParameters" upperBound="-1"
          eType="#/7/EParameter" containment="true" eOpposite="#/7/EParameter/eOperation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameters" upperBound="-1"
          eType="#/7/ETypeParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eExceptions" upperBound="-1"
          eType="#/7/EClassifier"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EPackage" eSuperTypes="#/7/ENamedElement">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="getEClassifier" eType="#/7/EClassifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;ecore.EClassifier result = null;&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: select&#xA;&#xA;kermeta.standard.Sequence&lt;ecore.EClassifier> result_ft158 = null;&#xA;&#xA;&#x9;ecore.EClassifier elem_ft158 = null;&#xA;&#xA;&#x9;result_ft158 = ((kermeta.standard.Sequence&lt;ecore.EClassifier>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;ecore.EClassifier>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;ecore.EClassifier> it_ft158 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;ecore.EClassifier>convertAsOrderedSet(this.getEClassifiers()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_733 = false;&#xA;&#x9;while( !idLoopCond_733 ) {&#xA;&#x9;idLoopCond_733 = it_ft158.isOff();&#xA;&#x9;if ( idLoopCond_733 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft158 = it_ft158.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_734 = false;&#xA;//Beginning of the Inlining of the lambda expression: selector&#xA;ecore.EClassifier c = elem_ft158;&#xA;&#xA;&#x9;idIfCond_734 = kermeta.standard.helper.StringWrapper.equals(c.getName(), name);&#xA;//End of the Inlining of the lambda expression: selector&#xA;&#xA;&#xA;&#x9;if( idIfCond_734 ) {&#xA;&#xA;&#x9;result_ft158.add(elem_ft158);&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: select&#xA;result = result_ft158.one();&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="name" eType="#/7/EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nsURI" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSubpackages" upperBound="-1"
          eType="#/7/EPackage" containment="true" eOpposite="#/7/EPackage/eSuperPackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eSuperPackage" eType="#/7/EPackage"
          transient="true" eOpposite="#/7/EPackage/eSubpackages">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nsPrefix" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifiers" upperBound="-1"
          eType="#/7/EClassifier" containment="true" eOpposite="#/7/EClassifier/ePackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eFactoryInstance" lowerBound="1"
          eType="#/7/EFactory" transient="true" eOpposite="#/7/EFactory/ePackage">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EParameter" eSuperTypes="#/7/ETypedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOperation" eType="#/7/EOperation"
          transient="true" eOpposite="#/7/EOperation/eParameters">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EReference" eSuperTypes="#/7/EStructuralFeature">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="setContainerValue" ordered="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;kermeta.language.structure.ClassDefinition cls = null;&#xA;&#xA;&#x9;cls = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Property result_ft159 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft159 = null;&#xA;&#xA;&#x9;result_ft159 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft159 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cls.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_735 = false;&#xA;&#x9;while( !idLoopCond_735 ) {&#xA;&#x9;idLoopCond_735 = kermeta.standard.helper.BooleanWrapper.or(it_ft159.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft159, null));&#xA;&#x9;if ( idLoopCond_735 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft159 = it_ft159.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_736 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Property p = elem_ft159;&#xA;&#xA;&#x9;idIfCond_736 = kermeta.standard.helper.StringWrapper.equals(p.getName(), &quot;container&quot;);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_736 ) {&#xA;&#xA;&#x9;result_ft159 = elem_ft159;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.set(this, RETURN_EXPRESSION_TO_REPLACEresult_ft159, booleanValue);&#xA;"/>
        </eAnnotations>
        <eParameters name="booleanValue" eType="#/7/EBoolean"/>
      </eOperations>
      <eOperations name="getContainerValue" eType="#/7/EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Boolean result = null;&#xA;&#xA;&#x9;kermeta.language.structure.ClassDefinition cls = null;&#xA;&#xA;&#x9;cls = (kermeta.language.structure.ClassDefinition) org.kermeta.compil.runtime.helper.language.ObjectUtil.getMetaClass(this).getTypeDefinition();&#xA;&#xA;&#x9;//Beginning of the Inlining of the function type: detect&#xA;&#xA;kermeta.language.structure.Property result_ft160 = null;&#xA;&#xA;&#x9;kermeta.language.structure.Property elem_ft160 = null;&#xA;&#xA;&#x9;result_ft160 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;kermeta.language.structure.Property> it_ft160 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;kermeta.language.structure.Property>convertAsOrderedSet(cls.getOwnedAttribute()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_737 = false;&#xA;&#x9;while( !idLoopCond_737 ) {&#xA;&#x9;idLoopCond_737 = kermeta.standard.helper.BooleanWrapper.or(it_ft160.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft160, null));&#xA;&#x9;if ( idLoopCond_737 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft160 = it_ft160.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_738 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;kermeta.language.structure.Property p = elem_ft160;&#xA;&#xA;&#x9;idIfCond_738 = kermeta.standard.helper.StringWrapper.equals(p.getName(), &quot;container&quot;);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_738 ) {&#xA;&#xA;&#x9;result_ft160 = elem_ft160;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;org.kermeta.compil.runtime.helper.language.ObjectUtil.get(this, result = (java.lang.Boolean) result_ft160);&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eReferenceType" lowerBound="1"
          eType="#/7/EClass" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eOpposite" eType="#/7/EReference"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="resolveProxies" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="container" eType="#/7/EBoolean"
          transient="true" defaultValueLiteral="false" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eKeys" upperBound="-1"
          eType="#/7/EAttribute"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="containment" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EStructuralFeature" abstract="true"
        eSuperTypes="#/7/ETypedElement">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eOperations name="getFeatureID" eType="#/7/EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.Integer result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getContainerClass">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;kermeta.language.structure.Object result = null;&#xA;&#xA;&#x9;&#xA;if (true)&#xA;&#x9;throw new org.kermeta.compil.runtime.helper.error.KRuntimeError( ((kermeta.exceptions.NotImplementedException) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.exceptions.NotImplementedException&quot;)) );&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#/7/EJavaClass">
          <eTypeArguments/>
        </eGenericType>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_volatile" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eContainingClass" eType="#/7/EClass"
          transient="true" eOpposite="#/7/EClass/eStructuralFeatures">
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValueLiteral"
          eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="_transient" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unsettable" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="derived" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="#/7/EJavaObject"
          derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="changeable" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ETypedElement" abstract="true" eSuperTypes="#/7/ENamedElement">
      <eAnnotations source="kermeta">
        <details key="aspect" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="many" eType="#/7/EBoolean"
          transient="true" defaultValueLiteral="false" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBound" eType="#/7/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="unique" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eType" eType="#/7/EClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ordered" eType="#/7/EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="required" eType="#/7/EBoolean"
          transient="true" defaultValueLiteral="false" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBound" eType="#/7/EInt"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eGenericType" eType="#/7/EGenericType"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EStringToStringMapEntry" eSuperTypes="#/5/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="#/7/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EGenericType" eSuperTypes="#/7/EObject">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eUpperBound" eType="#/7/EGenericType"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeArguments" upperBound="-1"
          eType="#/7/EGenericType" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifier" eType="#/7/EClassifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eRawType" lowerBound="1"
          eType="#/7/EClassifier" transient="true" derived="true">
        <eAnnotations source="kermeta">
          <details key="isReadOnly" value="false"/>
        </eAnnotations>
        <eAnnotations source="kermeta">
          <details key="ecore.isTransient" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eTypeParameter" eType="#/7/ETypeParameter"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eLowerBound" eType="#/7/EGenericType"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ETypeParameter" eSuperTypes="#/7/ENamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eBounds" upperBound="-1"
          eType="#/7/EGenericType" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBigDecimal" instanceClassName="java.math.BigDecimal">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.math.BigDecimal"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBigInteger" instanceClassName="java.math.BigInteger">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.math.BigInteger"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EBooleanObject" instanceClassName="java.lang.Boolean">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Boolean"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByte" instanceClassName="byte">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="byte"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByteArray" instanceClassName="byte[]">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="byte[]"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EByteObject" instanceClassName="java.lang.Byte">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Byte"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EChar" instanceClassName="char">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="char"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ECharacterObject" instanceClassName="java.lang.Character">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Character"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDate" instanceClassName="java.util.Date">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.util.Date"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDiagnosticChain" instanceClassName="org.eclipse.emf.common.util.DiagnosticChain"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.DiagnosticChain"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDouble" instanceClassName="double">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="double"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EDoubleObject" instanceClassName="java.lang.Double">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Double"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EEList" instanceClassName="org.eclipse.emf.common.util.EList"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.EList"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="E"/>
      </eAnnotations>
      <eTypeParameters name="E"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFeatureMap" instanceClassName="org.eclipse.emf.ecore.util.FeatureMap"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.util.FeatureMap"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFeatureMapEntry" instanceClassName="org.eclipse.emf.ecore.util.FeatureMap$Entry"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::ecore::EFeatureMapEntry"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.util.FeatureMap$Entry"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFloat" instanceClassName="float">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="float"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EFloatObject" instanceClassName="java.lang.Float">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Real"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Float"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EIntegerObject" instanceClassName="java.lang.Integer">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ELong" instanceClassName="long">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="long"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ELongObject" instanceClassName="java.lang.Long">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Long"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EMap" instanceClassName="java.util.Map"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.util.Map"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="K , V"/>
      </eAnnotations>
      <eTypeParameters name="K"/>
      <eTypeParameters name="V"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EResource" instanceClassName="org.eclipse.emf.ecore.resource.Resource"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.resource.Resource"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EResourceSet" instanceClassName="org.eclipse.emf.ecore.resource.ResourceSet"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.ecore.resource.ResourceSet"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EShort" instanceClassName="short">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="short"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="EShortObject" instanceClassName="java.lang.Short">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Short"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="ETreeIterator" instanceClassName="org.eclipse.emf.common.util.TreeIterator"
        serializable="false">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="org.eclipse.emf.common.util.TreeIterator"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_eTypeParameters" value="E"/>
      </eAnnotations>
      <eTypeParameters name="E"/>
    </eClassifiers>
  </ecore:EPackage>
  <ecore:EPackage name="traceability" nsURI="http://www.kermeta.org/Traceability/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/Traceability"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="TraceabilityHelper" eSuperTypes="#/5/language/structure/Object">
      <eOperations name="getFirstTextReference" eType="#/8/TextReference">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;traceability.TextReference result = null;&#xA;&#xA;&#x9;kermeta.standard.Sequence&lt;traceability.Reference> c = null;&#xA;//Beginning of the Inlining of the function type: collect&#xA;&#xA;kermeta.standard.Sequence&lt;traceability.Reference> result_ft161 = null;&#xA;&#xA;&#x9;result_ft161 = ((kermeta.standard.Sequence&lt;traceability.Reference>) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;kermeta.standard.Sequence&lt;traceability.Reference>&quot;));&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.Trace> it_ft161 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.Trace>convertAsOrderedSet(mr.getSourceTraces()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_739 = false;&#xA;&#x9;while( !idLoopCond_739 ) {&#xA;&#x9;idLoopCond_739 = it_ft161.isOff();&#xA;&#x9;if ( idLoopCond_739 ) {&#xA;&#x9;} else {&#xA;&#xA;traceability.Reference result_lambda = null;&#xA;//Beginning of the Inlining of the lambda expression: collector&#xA;traceability.Trace t = it_ft161.next();&#xA;&#xA;&#x9;result_lambda = //Beginning of the Inlining of the function type: detect&#xA;&#xA;traceability.Reference result_ft162 = null;&#xA;&#xA;&#x9;traceability.Reference elem_ft162 = null;&#xA;&#xA;&#x9;result_ft162 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.Reference> it_ft162 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.Reference>convertAsOrderedSet(t.getSourceReferences()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_740 = false;&#xA;&#x9;while( !idLoopCond_740 ) {&#xA;&#x9;idLoopCond_740 = kermeta.standard.helper.BooleanWrapper.or(it_ft162.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft162, null));&#xA;&#x9;if ( idLoopCond_740 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft162 = it_ft162.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_741 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;traceability.Reference sr = elem_ft162;&#xA;&#xA;&#x9;idIfCond_741 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isInstanceOf(sr, org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.TextReference&quot;));&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_741 ) {&#xA;&#xA;&#x9;result_ft162 = elem_ft162;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;//End of the Inlining of the lambda expression: collector&#xA;&#xA;&#x9;result_ft161.add(result_lambda);&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;c = result_ft161;&#xA;//End of the Inlining of the function type: collect&#xA;&#xA;&#xA;&#x9;{&#xA;try {&#xA;&#x9;traceability.TextReference tr = ((traceability.TextReference) org.kermeta.compil.runtime.helper.language.ObjectUtil.asType(c.first(), org.kermeta.compil.runtime.ExecutionContext.getInstance().getMetaClass(&quot;traceability.TextReference&quot;)));&#xA;&#xA;&#x9;result = tr;&#xA;} catch( org.kermeta.compil.runtime.helper.error.KRuntimeError ex_switcher_7 ) {&#xA;if( ex_switcher_7.getRealException() instanceof kermeta.exceptions.EmptyCollection ) {&#xA;kermeta.exceptions.EmptyCollection e = (kermeta.exceptions.EmptyCollection) ex_switcher_7.getRealException();&#xA;result = null;&#xA;}&#xA;}&#xA;}&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="mr" eType="#/8/ModelReference"/>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TraceModel" eSuperTypes="#/5/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace model.&#xD;&#xA; * This is a set of traces, references and messages.&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="files" upperBound="-1"
          eType="#/8/File" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="references" ordered="false"
          upperBound="-1" eType="#/8/Reference" containment="true" eOpposite="#/8/Reference/traceMdl">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Set of references to the traced objects of the trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traces" ordered="false"
          upperBound="-1" eType="#/8/Trace" containment="true" eOpposite="#/8/Trace/traceMdl">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Set of traces contained by the trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="messages" ordered="false"
          upperBound="-1" eType="#/8/Message" containment="true" eOpposite="#/8/Message/traceMdl">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Set of messages contained by the trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="File" eSuperTypes="#/5/language/structure/Object">
      <eOperations name="getFile" eType="#/8/File">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;traceability.File result = null;&#xA;&#xA;&#x9;traceability.File file = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;traceability.File result_ft163 = null;&#xA;&#xA;&#x9;traceability.File elem_ft163 = null;&#xA;&#xA;&#x9;result_ft163 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;traceability.File> it_ft163 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.File>convertAsOrderedSet(traceModel.getFiles()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_742 = false;&#xA;&#x9;while( !idLoopCond_742 ) {&#xA;&#x9;idLoopCond_742 = kermeta.standard.helper.BooleanWrapper.or(it_ft163.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft163, null));&#xA;&#x9;if ( idLoopCond_742 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft163 = it_ft163.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_743 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;traceability.File f = elem_ft163;&#xA;&#xA;&#x9;idIfCond_743 = kermeta.standard.helper.StringWrapper.equals(f.getUri(), uri_toFind);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_743 ) {&#xA;&#xA;&#x9;result_ft163 = elem_ft163;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;file = result_ft163;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_744 = false;&#xA;&#x9;idIfCond_744 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(file);&#xA;&#xA;&#x9;if( idIfCond_744 ) {&#xA;&#xA;&#x9;file = ((traceability.File) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;traceability.File&quot;));&#xA;&#xA;&#x9;file.setUri(uri_toFind);&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.File>convertAsOrderedSet(traceModel.getFiles()).add(file);&#xA;&#xA;&#x9;file.setId(org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;traceability.File>convertAsOrderedSet(traceModel.getFiles()).size());&#xA;}&#xA;&#xA;&#xA;&#x9;result = file;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="traceModel" eType="#/8/TraceModel"/>
        <eParameters name="uri_toFind" eType="#/8/String"/>
      </eOperations>
      <eOperations name="toString" eType="#/8/String">
        <eAnnotations source="kermeta">
          <details key="superOperation" value="kermeta::language::structure::Object"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;java.lang.String result = null;&#xA;&#xA;&#x9;result = kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(kermeta.standard.helper.StringWrapper.plus(&quot;self.uri: &quot;, this.getUri()), &quot; - self.id: &quot;), kermeta.standard.helper.IntegerWrapper.toString(this.getId()));&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="#/8/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" lowerBound="1" eType="#/8/String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Message" eSuperTypes="#/5/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace message, used to add some information to traces.&#xD;&#xA; * Typically, in order to known what had generated a given trace or provide a user&#xD;&#xA; * friendly message to the user.&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1"
          eType="#/8/TraceModel" eOpposite="#/8/TraceModel/messages">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the containing trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traces" upperBound="-1"
          eType="#/8/Trace" eOpposite="#/8/Trace/description">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the traces the message is associated with */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
          eType="#/8/String"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" eType="#/8/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Language of the message (english, french, etc.) */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#/8/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Message kind */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.String"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Trace" eSuperTypes="#/5/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a trace element&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1"
          eType="#/8/TraceModel" eOpposite="#/8/TraceModel/traces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the containing trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sourceReferences" upperBound="-1"
          eType="#/8/Reference" eOpposite="#/8/Reference/targetTraces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the references to the trace incoming elements */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="description" upperBound="-1"
          eType="#/8/Message" eOpposite="#/8/Message/traces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the messages describing the trace */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetReferences" upperBound="-1"
          eType="#/8/Reference" eOpposite="#/8/Reference/sourceTraces">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the references to the trace outgoing elements */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Reference" abstract="true" eSuperTypes="#/5/language/structure/Object">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This abstract class represents a reference to a concrete object&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetTraces" upperBound="-1"
          eType="#/8/Trace" eOpposite="#/8/Trace/sourceReferences">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the reference target traces */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="traceMdl" lowerBound="1"
          eType="#/8/TraceModel" eOpposite="#/8/TraceModel/references">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the containing trace model */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sourceTraces" upperBound="-1"
          eType="#/8/Trace" eOpposite="#/8/Trace/targetReferences">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Link to the reference source traces */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FileReference" abstract="true" eSuperTypes="#/8/Reference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a concrete object contained by a file&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="fileURI" lowerBound="1"
          eType="#/8/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** URI of the file containing the referred concrete object */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TextReference" eSuperTypes="#/8/FileReference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a textual file concrete object&#xD;&#xA; */"/>
      </eAnnotations>
      <eAnnotations source="kermeta.inv">
        <details key="validTextRef" value=""/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="charEndAt" lowerBound="1"
          eType="#/8/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Ending character number */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="charBeginAt" lowerBound="1"
          eType="#/8/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Starting character number */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineEndAt" lowerBound="1"
          eType="#/8/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Ending line number */"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineBeginAt" lowerBound="1"
          eType="#/8/Integer">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** Starting line number */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::standard::Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Integer"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="XMLReference" eSuperTypes="#/8/FileReference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a XML concrete object&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="xPointer" lowerBound="1"
          eType="#/8/String">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/** XML link to the referred XML concrete object */"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModelReference" eSuperTypes="#/8/Reference">
      <eAnnotations source="kermeta">
        <details key="documentation" value="/**&#xD;&#xA; * This class represents a reference to a model element&#xD;&#xA; */"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="refObject" lowerBound="1"
          eType="#/7/EObject"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceClassName="java.lang.Object">
      <eAnnotations source="kermeta">
        <details key="alias" value="kermeta::language::structure::Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_instanceClassName" value="java.lang.Object"/>
      </eAnnotations>
      <eAnnotations source="kermeta">
        <details key="ecore.EDataType_isSerializable" value="true"/>
      </eAnnotations>
    </eClassifiers>
  </ecore:EPackage>
  <ecore:EPackage name="simk" nsURI="http://www.kermeta.org/simk/kermeta_temp_uri"
      nsPrefix="">
    <eAnnotations source="kermeta">
      <details key="ecoreUri" value="http://www.kermeta.org/simk"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="SIMKModel" eSuperTypes="#/9/SMNamedElement">
      <eOperations name="getNextId" eType="#/7/EInt">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.Integer result = null;&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="retrieveOrCreateContextForWrapper" eType="#/9/SMContext">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = this.retrieveOrCreateContext(kermeta.standard.helper.StringWrapper.plus(context.getCurrent_valueType().getName(), &quot;Wrapper&quot;), context);&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_745 = false;&#xA;&#x9;idIfCond_745 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(sMContext.getSMClass());&#xA;&#xA;&#x9;if( idIfCond_745 ) {&#xA;&#xA;&#x9;simk.SMClass sMClass = ((simk.SMClass) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMClass&quot;));&#xA;&#xA;&#x9;sMContext.setSMClass(sMClass);&#xA;&#xA;&#x9;sMClass.setName(kermeta.standard.helper.StringWrapper.plus(context.getCurrent_valueType().getName(), &quot;Wrapper&quot;));&#xA;&#xA;&#x9;sMClass.setWrapperUsage();&#xA;}&#xA;&#xA;&#xA;&#x9;simk.StaticMethod sm = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;simk.StaticMethod result_ft164 = null;&#xA;&#xA;&#x9;simk.StaticMethod elem_ft164 = null;&#xA;&#xA;&#x9;result_ft164 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.StaticMethod> it_ft164 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.StaticMethod>convertAsOrderedSet(sMContext.getStaticMethods()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_746 = false;&#xA;&#x9;while( !idLoopCond_746 ) {&#xA;&#x9;idLoopCond_746 = kermeta.standard.helper.BooleanWrapper.or(it_ft164.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft164, null));&#xA;&#x9;if ( idLoopCond_746 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft164 = it_ft164.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_747 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;simk.StaticMethod o = elem_ft164;&#xA;&#xA;&#x9;idIfCond_747 = kermeta.standard.helper.StringWrapper.equals(o.getName(), op.getName());&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_747 ) {&#xA;&#xA;&#x9;result_ft164 = elem_ft164;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;sm = result_ft164;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_748 = false;&#xA;&#x9;idIfCond_748 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(sm);&#xA;&#xA;&#x9;if( idIfCond_748 ) {&#xA;&#xA;&#x9;result = sMContext;&#xA;}&#xA;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="op" eType="#/5/language/structure/Operation"/>
        <eParameters name="context" eType="#/6/KM2EcoreContext"/>
      </eOperations>
      <eOperations name="retrieveOrCreateContext" eType="#/9/SMContext">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;simk.SMContext result = null;&#xA;&#xA;&#x9;result = null;&#xA;&#xA;&#x9;simk.SMContext sMContext = null;&#xA;//Beginning of the Inlining of the function type: detect&#xA;&#xA;simk.SMContext result_ft165 = null;&#xA;&#xA;&#x9;simk.SMContext elem_ft165 = null;&#xA;&#xA;&#x9;result_ft165 = null;&#xA;&#xA;&#x9;&#xA;&#x9;kermeta.standard.Iterator&lt;simk.SMContext> it_ft165 = org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMContext>convertAsOrderedSet(this.getSMContexts()).iterator();&#xA;&#x9;java.lang.Boolean idLoopCond_749 = false;&#xA;&#x9;while( !idLoopCond_749 ) {&#xA;&#x9;idLoopCond_749 = kermeta.standard.helper.BooleanWrapper.or(it_ft165.isOff(), org.kermeta.compil.runtime.helper.language.ObjectUtil.isNotEqual(result_ft165, null));&#xA;&#x9;if ( idLoopCond_749 ) {&#xA;&#x9;} else {&#xA;&#xA;&#x9;elem_ft165 = it_ft165.next();&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_750 = false;&#xA;//Beginning of the Inlining of the lambda expression: detector&#xA;simk.SMContext c = elem_ft165;&#xA;&#xA;&#x9;idIfCond_750 = kermeta.standard.helper.StringWrapper.equals(c.getSMClass().getName(), class_qname);&#xA;//End of the Inlining of the lambda expression: detector&#xA;&#xA;&#xA;&#x9;if( idIfCond_750 ) {&#xA;&#xA;&#x9;result_ft165 = elem_ft165;&#xA;}&#xA;&#xA;}&#xA;&#x9;}&#xA;&#xA;//callElement&#xA;sMContext = result_ft165;&#xA;//End of the Inlining of the function type: detect&#xA;&#xA;&#xA;&#x9;java.lang.Boolean idIfCond_751 = false;&#xA;&#x9;idIfCond_751 = org.kermeta.compil.runtime.helper.language.ObjectUtil.isVoid(sMContext);&#xA;&#xA;&#x9;if( idIfCond_751 ) {&#xA;&#xA;&#x9;sMContext = ((simk.SMContext) org.kermeta.compil.runtime.helper.language.ClassUtil.newObject(&quot;simk.SMContext&quot;));&#xA;&#xA;&#x9;org.kermeta.compil.runtime.helper.basetypes.CollectionUtil.&lt;simk.SMContext>convertAsOrderedSet(this.getSMContexts()).add(sMContext);&#xA;}&#xA;&#xA;&#xA;&#x9;result = sMContext;&#xA;&#xA;return result;&#xA;"/>
        </eAnnotations>
        <eParameters name="class_qname" eType="#/5/standard/JavaString"/>
        <eParameters name="context" eType="#/6/KM2EcoreContext"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMContexts" upperBound="-1"
          eType="#/9/SMContext" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="staticMethods" upperBound="-1"
          eType="#/9/StaticMethod" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMClass" eSuperTypes="#/9/SMNamedElement">
      <eOperations name="setWrapperUsage">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setUsages(simk.SMUsage.getByName(&quot;Wrapper&quot;));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getQualifiedName" eType="#/7/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.String result = null;&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMPackage" eType="#/9/SMPackage"
          eOpposite="#/9/SMPackage/sMClass"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="usages" eType="#/9/SMUsage"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StaticMethod" eSuperTypes="#/9/SMNamedElement">
      <eOperations name="getParentMethodFromModel" eType="#/7/EOperation">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="ecore.EOperation result = null;&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="setWrapperUsage">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#xA;&#x9;this.setUsages(simk.SMUsage.getByName(&quot;Wrapper&quot;));&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" eType="#/7/EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentAttribute" eType="#/7/EAttribute"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMParameters" upperBound="-1"
          eType="#/9/SMParameter" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMReturn" eType="#/9/SMReturn"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="usages" eType="#/9/SMUsage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentMethod" eType="#/7/EOperation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMContext" eType="#/9/SMContext"
          eOpposite="#/9/SMContext/staticMethods"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentReference" eType="#/7/EReference"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="SMUsage">
      <eLiterals name="Runner" literal="Runner"/>
      <eLiterals name="Launcher" value="1" literal="Launcher"/>
      <eLiterals name="DerivedProperty" value="2" literal="DerivedProperty"/>
      <eLiterals name="PreCondition" value="3" literal="PreCondition"/>
      <eLiterals name="PostCondition" value="4" literal="PostCondition"/>
      <eLiterals name="Wrapper" value="5" literal="Wrapper"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMContext" eSuperTypes="#/5/language/structure/Object">
      <eOperations name="getDeepestPackage" eType="#/9/SMPackage">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="simk.SMPackage result = null;&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMPackage" eType="#/9/SMPackage"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMClass" eType="#/9/SMClass"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="staticMethods" upperBound="-1"
          eType="#/9/StaticMethod" eOpposite="#/9/StaticMethod/sMContext"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMPackage" eSuperTypes="#/9/SMNamedElement">
      <eOperations name="getQualifiedName" eType="#/7/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.String result = null;&#xA;return result;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getQualifiedNameRec" eType="#/7/EString">
        <eAnnotations source="kermeta">
          <details key="isAbstract" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.lang.String result = null;&#xA;return result;"/>
        </eAnnotations>
        <eParameters name="element" eType="#/9/SMPackage"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="sMClass" eType="#/9/SMClass"
          eOpposite="#/9/SMClass/sMPackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="subSMPackage" eType="#/9/SMPackage"
          containment="true" eOpposite="#/9/SMPackage/parentSMPackage"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parentSMPackage" eType="#/9/SMPackage"
          eOpposite="#/9/SMPackage/subSMPackage"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMNamedElement" abstract="true" eSuperTypes="#/5/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="#/7/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMParameter" eSuperTypes="#/9/SMNamedElement #/9/SMTypedElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="SMTypedElement" abstract="true" eSuperTypes="#/5/language/structure/Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1"
          eType="#/7/EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SMReturn" eSuperTypes="#/9/SMTypedElement"/>
  </ecore:EPackage>
</xmi:XMI>
