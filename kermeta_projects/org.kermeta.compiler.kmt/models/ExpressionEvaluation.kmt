/* $Id: ExpressionEvaluation.kmt,v 1.1 2008-08-01 18:45:09 cfaucher Exp $ 
 * Creation : July 29, 2008
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            cfaucher <cfaucher@irisa.fr>
 */

@uri "http://www.kermeta.org/kompiler"
package kompiler;

require kermeta

using kermeta::standard

class A {}

class Main
{
	attribute name : String [0..1]
	
	reference ref : A [0..1]
	
	property prop : A [0..1]
	
	operation op() : Void is do
	end
	
	operation opString() : String is do
		result := ""
	end
	
	operation withoutAssign() : Void is do 
		
		var s : String init "e"
		
		//CallVariable
		s
		
		//SelfExpression
		self
		
		//CallResult
		result
		
		//CallFeature : Attribute
		name
		
		//CallFeature : Reference
		ref
		
		//CallFeature : Property
		prop
		
		//CallFeature : Operation without ReturnType
		op()
		
		//CallFeature : Operation with ReturnType
		opString()
		
		//CallVariable
		if 1==1 then
			s
		end
		
		//String
		if 1==1 then
			"test"
		end
		
		//Integer
		if 1==1 then
			2
		end
		
		//Boolean
		if 1==1 then
			true
		end
		
		//Void
		if 1==1 then
			void
		end
		
		//
		if 1==1 then
			"testThen1"
			2
			true
			"testThen2"
		else
			"testElse"
		end

		"The last expression of an operation"
	end
	
	operation withAssign() : Void is do 
		
		if String.isInstance("str") then	
			stdio.write("toto")
			stdio.writeln("tiit")
		end
		
		if 1 != 2 then
		end
		
		var string1_ : String init ""
		string1_ := if true then
				"aString"
				"stringIf"
			else
				if true then
					"sub_aString"
					"sub_stringIf"
				else
					var string2_ : String init if true then "tata" else "tutu" end
					"sub_stringElse"
				end
				"stringElse"
			end

	end
	
	operation withInit() : Void is do 
		
		var string : String init if true then
				"aString"
				"stringIf"
			else
				if true then
					"sub_aString"
					"sub_stringIf"
				else
					"sub_stringElse"
				end
				"stringElse"
			end

	end

}