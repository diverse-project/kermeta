<?xml version="1.0" encoding="ASCII"?>
<kermeta_language_structure:ModelingUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:kermeta_language_behavior="http://www.kermeta.org/kermeta//language/behavior" xmlns:kermeta_language_structure="http://www.kermeta.org/kermeta//language/structure">
  <packages name="kermeta">
    <nestedPackage tag="//@packages.0/reflection/@ownedTag.0" name="reflection" uri="http://www.kermeta.org/kermeta/reflection">
      <ownedTag value="/**&#xD;&#xA; * Contains all the abstract classes used in the reflection mechanism. Implements the &lt;b>derived&#xD;&#xA; * properties&lt;/b> contained in the classes; declares the abstract operations.&#xD;&#xA; * Concrete implementation is in kermeta.language.structure.&#xD;&#xA; * &lt;img src=&quot;platform:/plugin/fr.irisa.triskell.kermeta.documentation/src/figures/reflection_package.png&quot;>&#xD;&#xA; */" object="//@packages.0/reflection"/>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" name="String">
        <instanceType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Object/@ownedTag.0" name="Object" isAbstract="true">
        <ownedTag value="/** &#xD;&#xA; * Object definition: all entities of Kermeta metamodel explicitly inherit from Object&#xD;&#xA; */" object="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/Object/ownedTag/@ownedTag.0" name="ownedTag" type="//@packages.0/reflection/Object/ownedTag/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * An object can contains a Tag.  &#xD;&#xA;  * Be careful, owning a tag doesn't means that the tag applies to the Object&#xD;&#xA;  * To know which Tags apply to the object use the &quot;tag&quot; reference&#xD;&#xA;  */" object="//@packages.0/reflection/Object/ownedTag"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Tag"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Object/tag/@ownedTag.0" name="tag" type="//@packages.0/reflection/Object/tag/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Tag/object">
          <ownedTag value="/**&#xD;&#xA;  * An Object can be tagged by a Tag. &#xD;&#xA;  * They are typically used to put comments/documentation on the object&#xD;&#xA;  */" object="//@packages.0/reflection/Object/tag"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Tag"/>
        </ownedAttribute>
        <ownedOperation tag="//@packages.0/reflection/Object/getMetaClass/@ownedTag.0" name="getMetaClass" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Class object that is the metaclass of current Object&#xD;&#xA;  */" object="//@packages.0/reflection/Object/getMetaClass"/>
          <type href="../standard/primitive_types.km#//@packages.0/standard/Boolean/equals/@body/@statement.0/@condition/@target/@containedType.0"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/container/@ownedTag.0" name="container" type="//@packages.0/reflection/Object/container/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Object that contains current Object, void if the Object has&#xD;&#xA;  * no container&#xD;&#xA;  */" object="//@packages.0/reflection/Object/container"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/checkInvariants/@ownedTag.0" name="checkInvariants" type="//@packages.0/reflection/Object/checkInvariants/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;  */" object="//@packages.0/reflection/Object/checkInvariants"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/checkAllInvariants/@ownedTag.0" name="checkAllInvariants" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Recursively runs checking of invariants defined for the metaclass of the Object&#xD;&#xA;  * and its supertypes&#xD;&#xA;  */" object="//@packages.0/reflection/Object/checkAllInvariants"/>
          <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@thenBody/@statement.2/@parameters.0/@containedType.0/@containedType.1"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/equals/@ownedTag.0" name="equals" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * semantic equality,&#xD;&#xA;  * if you wish to test for object identity you need to use the method oid&#xD;&#xA;  * ex: x.oid == y.oid&#xD;&#xA;  * by default, (ie. if not overloaded), the equals method for class Object implements &#xD;&#xA;  * the most discriminating possible equivalence relation on objects; that is, for any non-null &#xD;&#xA;  * reference values x and y, this method returns true if and only if x and y refer to the same &#xD;&#xA;  * object (x.oid == y.oid has the value true). &#xD;&#xA;  *&#xD;&#xA;  * note1: the operator == is mapped to this &#xD;&#xA;  * note2: overloading this operation have some impact on the behavior on collection and hashtable that rely on it&#xD;&#xA;  */" object="//@packages.0/reflection/Object/equals"/>
          <ownedParameter name="element" type="//@packages.0/reflection/Object/equals/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/isNotEqual/@ownedTag.0" name="isNotEqual" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * See kermeta::reflection::Object.equals(Object)&#xD;&#xA;  */" object="//@packages.0/reflection/Object/isNotEqual"/>
          <ownedParameter name="element" type="//@packages.0/reflection/Object/isNotEqual/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/isKindOf/@ownedTag.0" name="isKindOf" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the current Object is an instance of the given Class&#xD;&#xA;  */" object="//@packages.0/reflection/Object/isKindOf"/>
          <ownedParameter name="cl" type="//@packages.0/reflection/Object/isKindOf/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Class"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/isInstanceOf/@ownedTag.0" name="isInstanceOf" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the current Object conforms to given Type&#xD;&#xA;  * This means: is this object an instance of this type, or is it an instance of its subtype &#xD;&#xA;  */" object="//@packages.0/reflection/Object/isInstanceOf"/>
          <ownedParameter name="type" type="//@packages.0/reflection/Object/isInstanceOf/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/asType/@ownedTag.0" name="asType" type="//@packages.0/reflection/Object/asType/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Implementation of OCL like cast. It returns self if the object object conforms to the type given as parameter.&#xD;&#xA;  */" object="//@packages.0/reflection/Object/asType"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          <ownedParameter name="type" type="//@packages.0/reflection/Object/asType/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Class"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/get/@ownedTag.0" name="get" type="//@packages.0/reflection/Object/get/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/** &#xD;&#xA;  * Returns the instances of the given property for this Object.&#xD;&#xA;  *&#xD;&#xA;  * Example : &#xD;&#xA;  * &lt;pre>&#xD;&#xA;  * class A { reference attr : String }&#xD;&#xA;  * &lt;/pre>&#xD;&#xA;  * Using A :&#xD;&#xA;  * &lt;pre>&#xD;&#xA;  * operation getAProp() is do&#xD;&#xA;  *    var a : A&#xD;&#xA;  *    var s : String&#xD;&#xA;  *    var the_attr : Property init self.getMetaClass.ownedAttribute.one&#xD;&#xA;  *    s ?= a.get(the_attr)&#xD;&#xA;  * end&#xD;&#xA;  * &lt;/pre>&#xD;&#xA;  * The user has to cast&#xD;&#xA;  * the result of this method according to the type and the upper multiplicity&#xD;&#xA;  * of this property. If upper multiplicity > 1, than the effective type of the &#xD;&#xA;  * result is a Sequence&lt;ThePropertyName>. Otherwise, the type corresponds to &#xD;&#xA;  * the name of the given Property (i.e the type of the property instance).&#xD;&#xA;  */" object="//@packages.0/reflection/Object/get"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          <ownedParameter name="property" type="//@packages.0/reflection/Object/get/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/set/@ownedTag.0" name="set" type="//@packages.0/reflection/Object/set/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Sets the &lt;code>element&lt;/code> to the &lt;code>~property&lt;/code> of the object &#xD;&#xA;  */" object="//@packages.0/reflection/Object/set"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="property" type="//@packages.0/reflection/Object/set/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
          </ownedParameter>
          <ownedParameter name="element" type="//@packages.0/reflection/Object/set/@ownedParameter.1/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/isSet/@ownedTag.0" name="isSet" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * True if the &lt;code>~property&lt;/code> of the object has been set&#xD;&#xA;  */" object="//@packages.0/reflection/Object/isSet"/>
          <ownedParameter name="property" type="//@packages.0/reflection/Object/isSet/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/unset/@ownedTag.0" name="unset" type="//@packages.0/reflection/Object/unset/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Remove the element set as the &lt;code>~property&lt;/code> of the object.&#xD;&#xA;  * The &lt;code>isSet(~property)&lt;/code> method will then return False&#xD;&#xA;  */" object="//@packages.0/reflection/Object/unset"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="property" type="//@packages.0/reflection/Object/unset/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/oid/@ownedTag.0" name="oid" type="//@packages.0/reflection/Integer" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the unique Oid of the Object&#xD;&#xA;  */" object="//@packages.0/reflection/Object/oid"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/toString/@ownedTag.0" name="toString" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the String representation of the Object&#xD;&#xA;  */" object="//@packages.0/reflection/Object/toString"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/isFrozen/@ownedTag.0" name="isFrozen" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the Object is currently in a&#xD;&#xA;  * frozen state&#xD;&#xA;  */" object="//@packages.0/reflection/Object/isFrozen"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/freeze/@ownedTag.0" name="freeze" type="//@packages.0/reflection/Object/freeze/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Freeze the Object&#xD;&#xA;  */" object="//@packages.0/reflection/Object/freeze"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/isVoid/@ownedTag.0" name="isVoid" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether the Object is Void&#xD;&#xA;  */" object="//@packages.0/reflection/Object/isVoid"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/hashcode/@ownedTag.0" name="hashcode" type="//@packages.0/reflection/Integer" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * code used in hashtable in order to identify an object in the hashtable keys&#xD;&#xA;  * This system is similar to the hashcode used in java. Please refer to java documentation&#xD;&#xA;  * for more information about hashcode&#xD;&#xA;  */" object="//@packages.0/reflection/Object/hashcode"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Object/containingResource/@ownedTag.0" name="containingResource" type="//@packages.0/reflection/Object/containingResource/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Resource currently containing (directly or indirectly) the Object &#xD;&#xA;  * or void if the object belongs to no Resource&#xD;&#xA;  */" object="//@packages.0/reflection/Object/containingResource"/>
          <containedType xsi:type="kermeta_language_structure:Class">
            <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../persistence/resource.km#//@packages.0/persistence/Resource"/>
          </containedType>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" tag="//@packages.0/reflection/Boolean/@ownedTag.0" name="Boolean">
        <ownedTag value="/** Alias for kermeta::standard::Boolean */" object="//@packages.0/reflection/Boolean"/>
        <instanceType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" tag="//@packages.0/reflection/Integer/@ownedTag.0" name="Integer" instanceType="//@packages.0/reflection/Integer/@containedType.0">
        <ownedTag value="/** Alias for kermeta::standard::Integer */" object="//@packages.0/reflection/Integer"/>
        <containedType xsi:type="kermeta_language_structure:Class">
          <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/primitive_types.km#//@packages.0/standard/Integer"/>
        </containedType>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:PrimitiveType" tag="//@packages.0/reflection/UnlimitedNatural/@ownedTag.0" name="UnlimitedNatural">
        <ownedTag value="/** Alias for kermeta::standard::UnlimitedNatural */" object="//@packages.0/reflection/UnlimitedNatural"/>
        <instanceType href="../standard/primitive_types.km#//@packages.0/standard/UnlimitedNatural"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ParameterizedType/@ownedTag.0" name="ParameterizedType" isAbstract="true" superType="//@packages.0/reflection/ParameterizedType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Abstraction for Parameterized types, namely, Class and ModelType&#xD;&#xA; */" object="//@packages.0/reflection/ParameterizedType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        <ownedAttribute tag="//@packages.0/reflection/ParameterizedType/typeDefinition/@ownedTag.0" name="typeDefinition" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Definition of the Type&#xD;&#xA;  */" object="//@packages.0/reflection/ParameterizedType/typeDefinition"/>
          <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ParameterizedType/typeParamBinding/@ownedTag.0" name="typeParamBinding" type="//@packages.0/reflection/ParameterizedType/typeParamBinding/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Bindings between type variables and provided types &#xD;&#xA;  */" object="//@packages.0/reflection/ParameterizedType/typeParamBinding"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariableBinding"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ParameterizedType/virtualTypeBinding/@ownedTag.0" name="virtualTypeBinding" type="//@packages.0/reflection/ParameterizedType/virtualTypeBinding/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written #################################&#xD;&#xA;  */" object="//@packages.0/reflection/ParameterizedType/virtualTypeBinding"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariableBinding"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Class/@ownedTag.0" name="Class" isAbstract="true" superType="//@packages.0/reflection/Class/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Type corresponding to the &lt;b>use&lt;/b> of a ClassDefinition (see ClassDefinition)&#xD;&#xA; */" object="//@packages.0/reflection/Class"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ParameterizedType"/>
        <ownedAttribute tag="//@packages.0/reflection/Class/ownedAttribute/@ownedTag.0" name="ownedAttribute" upper="-1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Attributes, References, and derived Properties owned by&#xD;&#xA;  * the ClassDefinition of this Class.&#xD;&#xA;  */" object="//@packages.0/reflection/Class/ownedAttribute"/>
          <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class">
              <typeParamBinding>
                <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
              </typeParamBinding>
              <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0" identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
              <type type="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0" isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0" name="result">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding>
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                    <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@containedType.0" name="ownedAttribute" staticProperty="//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Class/ownedOperation/@ownedTag.0" name="ownedOperation" type="//@packages.0/reflection/Class/ownedOperation/@containedType.0" upper="-1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Operations owned by the ClassDefinition of this Class.&#xD;&#xA;  */" object="//@packages.0/reflection/Class/ownedOperation"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class">
              <typeParamBinding type="//@packages.0/reflection/Class/ownedOperation/@containedType.0">
                <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
              </typeParamBinding>
              <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0" identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
              <type type="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0" isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0" name="result">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding type="//@packages.0/reflection/Class/ownedOperation/@containedType.0">
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@containedType.0" name="ownedOperation" staticProperty="//@packages.0/reflection/ClassDefinition/ownedOperation">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Class/superClass/@ownedTag.0" name="superClass" type="//@packages.0/reflection/Class/superClass/@containedType.0" upper="-1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the Classes of which the ClassDefinition of this Class inherits.&#xD;&#xA;  */" object="//@packages.0/reflection/Class/superClass"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Class"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class">
              <typeParamBinding type="//@packages.0/reflection/Class/superClass/@containedType.0">
                <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
              </typeParamBinding>
              <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0" identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
              <type type="//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0" isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@containedType.0">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@statement.2/@target/@containedType.0" name="result">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding type="//@packages.0/reflection/Class/superClass/@containedType.0">
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@containedType.0" name="superType" staticProperty="//@packages.0/reflection/ClassDefinition/superType">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/superClass/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Class/isAbstract/@ownedTag.0" name="isAbstract" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a Boolean stating whether ClassDefinition of this Class is abstract.&#xD;&#xA;  */" object="//@packages.0/reflection/Class/isAbstract"/>
          <getterBody xsi:type="kermeta_language_behavior:Block">
            <staticType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0" identifier="cDef">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
              <type type="//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0" isCast="true">
              <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment">
              <staticType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
              <target xsi:type="kermeta_language_behavior:CallResult" name="result">
                <staticType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="isAbstract" staticProperty="//@packages.0/reflection/ClassDefinition/isAbstract">
                <staticType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/isAbstract/@getterBody/@statement.0/@containedType.0" name="cDef"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Class/classDefinition/@ownedTag.0" name="classDefinition" type="//@packages.0/reflection/Class/classDefinition/@containedType.0" isOrdered="true" upper="1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the ClassDefinition for this class&#xD;&#xA;  */" object="//@packages.0/reflection/Class/classDefinition"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
          <getterBody xsi:type="kermeta_language_behavior:Block" staticType="//@packages.0/reflection/Class/classDefinition/@containedType.0">
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/Class/classDefinition/@containedType.0" isCast="true">
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/classDefinition/@containedType.0" name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Class/name/@ownedTag.0" name="name" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns the name of the ClassDefinition of this Class&#xD;&#xA;  */" object="//@packages.0/reflection/Class/name"/>
          <getterBody xsi:type="kermeta_language_behavior:Block">
            <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
            <statement xsi:type="kermeta_language_behavior:Assignment">
              <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
              <target xsi:type="kermeta_language_behavior:CallResult" name="result">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="name" staticProperty="//@packages.0/reflection/NamedElement/name">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
                <target xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                  <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
                </target>
              </value>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedOperation tag="//@packages.0/reflection/Class/new/@ownedTag.0" name="new" type="//@packages.0/reflection/Class/new/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Instantiates a new occurence for this Class&#xD;&#xA;  */" object="//@packages.0/reflection/Class/new"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Class/toString/@ownedTag.0" name="toString" type="//@packages.0/reflection/String" isOrdered="true" upper="1" superOperation="//@packages.0/reflection/Object/toString">
          <ownedTag value="/**&#xD;&#xA;  * Returns the String representation of this class. &#xD;&#xA;  *  Note : throws an exception if this class has no classDefinition&#xD;&#xA;  *  or if the classDefinition is not well constructed.&#xD;&#xA;  */" object="//@packages.0/reflection/Class/toString"/>
          <body xsi:type="kermeta_language_behavior:Block">
            <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
            <statement xsi:type="kermeta_language_behavior:Assignment">
              <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
              <target xsi:type="kermeta_language_behavior:CallResult" name="result">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="name" staticProperty="//@packages.0/reflection/NamedElement/name">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
                <target xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                  <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
                  <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/Class/toString/@body/@statement.0/@value/@target/@target/@containedType.0">
                    <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Class"/>
                  </target>
                </target>
              </value>
            </statement>
          </body>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ModelType/@ownedTag.0" name="ModelType" isAbstract="true" superType="//@packages.0/reflection/ModelType/@containedType.0 //@packages.0/reflection/ModelType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Type of a model, consisting of a set of included type definitions&#xD;&#xA; */" object="//@packages.0/reflection/ModelType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinition"/>
        <ownedAttribute tag="//@packages.0/reflection/ModelType/includedTypeDefinition/@ownedTag.0" name="includedTypeDefinition" type="//@packages.0/reflection/ModelType/includedTypeDefinition/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written #######################################&#xD;&#xA;  */" object="//@packages.0/reflection/ModelType/includedTypeDefinition"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
        <ownedOperation tag="//@packages.0/reflection/ModelType/new/@ownedTag.0" name="new" type="//@packages.0/reflection/ModelType/new/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written ##########################################&#xD;&#xA;  */" object="//@packages.0/reflection/ModelType/new"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Model"/>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/ModelType/isModelTypeOf/@ownedTag.0" name="isModelTypeOf" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written ############################################&#xD;&#xA;  */" object="//@packages.0/reflection/ModelType/isModelTypeOf"/>
          <ownedParameter name="model" type="//@packages.0/reflection/ModelType/isModelTypeOf/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Model"/>
          </ownedParameter>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Model/@ownedTag.0" name="Model" isAbstract="true" superType="//@packages.0/reflection/Model/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Is the holder of a set of model elements (Object) that are compatible with the ModelType that has &#xD;&#xA; * instanciated this Model.&#xD;&#xA; */" object="//@packages.0/reflection/Model"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/Model/contents/@ownedTag.0" name="contents" type="//@packages.0/reflection/Model/contents/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isReadOnly="true">
          <ownedTag value="/**&#xD;&#xA;  * Contents of this model ...&#xD;&#xA;  */" object="//@packages.0/reflection/Model/contents"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        </ownedAttribute>
        <ownedOperation tag="//@packages.0/reflection/Model/filter/@ownedTag.0" name="filter" type="//@packages.0/reflection/Model/filter/@containedType.0" upper="-1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Returns a set of all the elements of the model that are instance of the given Type&#xD;&#xA;   */" object="//@packages.0/reflection/Model/filter"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          <ownedParameter name="vtype" type="//@packages.0/reflection/Model/filter/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Model/add/@ownedTag.0" name="add" type="//@packages.0/reflection/Model/add/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Add an object to the model. According to the ModelType, the typechecker will statically verify if the object can be added or not&#xD;&#xA;   */" object="//@packages.0/reflection/Model/add"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="obj" type="//@packages.0/reflection/Model/add/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Model/remove/@ownedTag.0" name="remove" type="//@packages.0/reflection/Model/remove/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Remove an object from the model&#xD;&#xA;   */" object="//@packages.0/reflection/Model/remove"/>
          <containedType xsi:type="kermeta_language_structure:VoidType"/>
          <ownedParameter name="obj" type="//@packages.0/reflection/Model/remove/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Model/addAllCompatible/@ownedTag.0" name="addAllCompatible" type="//@packages.0/reflection/Model/addAllCompatible/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Add all the Object of the collection that are copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA;   * Returns the list of Object that have been added (One can check that some element have been ignored or not)&#xD;&#xA;   */" object="//@packages.0/reflection/Model/addAllCompatible"/>
          <containedType xsi:type="kermeta_language_structure:Class">
            <typeParamBinding type="//@packages.0/reflection/Model/addAllCompatible/@containedType.0/@typeParamBinding.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
              <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Collection/G"/>
            </typeParamBinding>
            <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Collection"/>
          </containedType>
          <ownedParameter name="objectsToAdd" type="//@packages.0/reflection/Model/addAllCompatible/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class">
              <typeParamBinding type="//@packages.0/reflection/Model/addAllCompatible/@ownedParameter.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
                <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Collection/G"/>
              </typeParamBinding>
              <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Collection"/>
            </containedType>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Model/addCompatible/@ownedTag.0" name="addCompatible" type="//@packages.0/reflection/Model/addCompatible/@containedType.0" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;   * Add the Object if it is copmpatible with the ModelDefinition. Other objects are ignored.&#xD;&#xA;   * Returns the object if it has been added (One can check that some element have been ignored or not)&#xD;&#xA;   * return Void if not added&#xD;&#xA;   */" object="//@packages.0/reflection/Model/addCompatible"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          <ownedParameter name="objectsToAdd" type="//@packages.0/reflection/Model/addCompatible/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/MultiplicityElement/@ownedTag.0" name="MultiplicityElement" isAbstract="true" superType="//@packages.0/reflection/MultiplicityElement/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; *  Model elements with a multiplicity [lower..upper] inherit this class&#xD;&#xA; */" object="//@packages.0/reflection/MultiplicityElement"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/MultiplicityElement/isOrdered/@ownedTag.0" name="isOrdered" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the element is ordered&#xD;&#xA;  */" object="//@packages.0/reflection/MultiplicityElement/isOrdered"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/MultiplicityElement/isUnique/@ownedTag.0" name="isUnique" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether duplicated elements are allowed&#xD;&#xA;  */" object="//@packages.0/reflection/MultiplicityElement/isUnique"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/MultiplicityElement/lower/@ownedTag.0" name="lower" type="//@packages.0/reflection/Integer" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Min cardinality of the element&#xD;&#xA;  */" object="//@packages.0/reflection/MultiplicityElement/lower"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/MultiplicityElement/upper/@ownedTag.0" name="upper" type="//@packages.0/reflection/UnlimitedNatural" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Max cardinality of the element, '-1' for '*'&#xD;&#xA;  */" object="//@packages.0/reflection/MultiplicityElement/upper"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Constraint/@ownedTag.0" name="Constraint" isAbstract="true" superType="//@packages.0/reflection/Constraint/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Constraint is part of a contract implementation in a Class definition or an operation.&#xD;&#xA; * Three kinds of constraints are available : pre, post, and inv (invariant constraint)&#xD;&#xA; */" object="//@packages.0/reflection/Constraint"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/Constraint/invOwner/@ownedTag.0" name="invOwner" type="//@packages.0/reflection/Constraint/invOwner/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/ClassDefinition/inv">
          <ownedTag value="/**&#xD;&#xA;  * Owning ClassDefinition if Constraint corresponds to invariant&#xD;&#xA;  */" object="//@packages.0/reflection/Constraint/invOwner"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Constraint/preOwner/@ownedTag.0" name="preOwner" type="//@packages.0/reflection/Constraint/preOwner/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Operation/pre">
          <ownedTag value="/**&#xD;&#xA;  * Owning Operation if Constraint corresponds to pre-condition&#xD;&#xA;  */" object="//@packages.0/reflection/Constraint/preOwner"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Constraint/postOwner/@ownedTag.0" name="postOwner" type="//@packages.0/reflection/Constraint/postOwner/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Operation/post">
          <ownedTag value="/**&#xD;&#xA;  * Owning Operation if Constraint corresponds to post-condition&#xD;&#xA;  */" object="//@packages.0/reflection/Constraint/postOwner"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Operation/@ownedTag.0" name="Operation" isAbstract="true" superType="//@packages.0/reflection/Operation/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Every one knows what an operation is.&#xD;&#xA; */" object="//@packages.0/reflection/Operation"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/MultiplicityElement"/>
        <ownedAttribute tag="//@packages.0/reflection/Operation/isAbstract/@ownedTag.0" name="isAbstract" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the Operation is abstract&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/isAbstract"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/pre/@ownedTag.0" name="pre" type="//@packages.0/reflection/Operation/pre/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Constraint/preOwner" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Pre-conditions of the Operation&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/pre"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Constraint"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/post/@ownedTag.0" name="post" type="//@packages.0/reflection/Operation/post/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Constraint/postOwner" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Post-conditions of the Operation&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/post"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Constraint"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/superOperation/@ownedTag.0" name="superOperation" type="//@packages.0/reflection/Operation/superOperation/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Super-operation of the Operation, if any&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/superOperation"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/owningClass/@ownedTag.0" name="owningClass" type="//@packages.0/reflection/Operation/owningClass/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/ClassDefinition/ownedOperation">
          <ownedTag value="/**&#xD;&#xA;  * ClassDefinition owning the Operation&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/owningClass"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/typeParameter/@ownedTag.0" name="typeParameter" type="//@packages.0/reflection/Operation/typeParameter/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * TypeParameters of the Operation&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/typeParameter"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariable"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/raisedException/@ownedTag.0" name="raisedException" type="//@packages.0/reflection/Operation/raisedException/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Exceptions raised by the Operation&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/raisedException"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Operation/ownedParameter/@ownedTag.0" name="ownedParameter" type="//@packages.0/reflection/Operation/ownedParameter/@containedType.0" isOrdered="true" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Parameter/operation" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Parameters of the Operation&#xD;&#xA;  */" object="//@packages.0/reflection/Operation/ownedParameter"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Parameter"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Tag/@ownedTag.0" name="Tag" isAbstract="true" superType="//@packages.0/reflection/Tag/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Tag is intended to be used to add documentation on a  model element,&#xD;&#xA; * or add some textual information that cannot be expressed with any&#xD;&#xA; * model element definition.&#xD;&#xA; */" object="//@packages.0/reflection/Tag"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/Tag/object/@ownedTag.0" name="object" type="//@packages.0/reflection/Tag/object/@containedType.0" lower="1" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Object/tag">
          <ownedTag value="/**&#xD;&#xA;  * Objects to which the Tag is attached to&#xD;&#xA;  */" object="//@packages.0/reflection/Tag/object"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Tag/name/@ownedTag.0" name="name" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Name of the Tag&#xD;&#xA;  */" object="//@packages.0/reflection/Tag/name"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Tag/value/@ownedTag.0" name="value" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * String value of the Tag&#xD;&#xA;  */" object="//@packages.0/reflection/Tag/value"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Property/@ownedTag.0" name="Property" isAbstract="true" superType="//@packages.0/reflection/Property/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Class representing the property definition. Kermeta&lt;->Ecore equivalence:&#xD;&#xA; *  - Property with isComposite == true or with type is a base type (String, Integer, Boolean)  : EAttribute&#xD;&#xA; *  - Property with isComposite == false : EReference&#xD;&#xA; */" object="//@packages.0/reflection/Property"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/MultiplicityElement"/>
        <ownedAttribute tag="//@packages.0/reflection/Property/owningClass/@ownedTag.0" name="owningClass" type="//@packages.0/reflection/Property/owningClass/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/ClassDefinition/ownedAttribute">
          <ownedTag value="/**&#xD;&#xA;  * ClassDefinition that owns the Property&#xD;&#xA;  */" object="//@packages.0/reflection/Property/owningClass"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/opposite/@ownedTag.0" name="opposite" type="//@packages.0/reflection/Property/opposite/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Opposite Property of the Property, void if the Property has no opposite&#xD;&#xA;  */" object="//@packages.0/reflection/Property/opposite"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/isReadOnly/@ownedTag.0" name="isReadOnly" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the Property is read-only&#xD;&#xA;  */" object="//@packages.0/reflection/Property/isReadOnly"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/default/@ownedTag.0" name="default" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written #######################################&#xD;&#xA;  */" object="//@packages.0/reflection/Property/default"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/isComposite/@ownedTag.0" name="isComposite" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the Property has a containment role&#xD;&#xA;  */" object="//@packages.0/reflection/Property/isComposite"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/isDerived/@ownedTag.0" name="isDerived" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * If True, the value of the property is not stored but computed from other properties&#xD;&#xA;  */" object="//@packages.0/reflection/Property/isDerived"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/isID/@ownedTag.0" name="isID" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the property allows to identify its containing Object&#xD;&#xA;  */" object="//@packages.0/reflection/Property/isID"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/isGetterAbstract/@ownedTag.0" name="isGetterAbstract" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating wether the getter is abstract.&#xD;&#xA;  */" object="//@packages.0/reflection/Property/isGetterAbstract"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Property/isSetterAbstract/@ownedTag.0" name="isSetterAbstract" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating wether the setter is abstract.&#xD;&#xA;  */" object="//@packages.0/reflection/Property/isSetterAbstract"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/TypeContainer/@ownedTag.0" name="TypeContainer" isAbstract="true" superType="//@packages.0/reflection/TypeContainer/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Phantom class : EMF reflexive editors need that any element of a metamodel &#xD;&#xA; * has a direct or indirect containment relationship with the root model element of&#xD;&#xA; * the metamodel. This class resolves this technical requirement.&#xD;&#xA; */" object="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/TypeContainer/containedType/@ownedTag.0" name="containedType" type="//@packages.0/reflection/TypeContainer/containedType/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Type/typeContainer" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Contained types&#xD;&#xA;  */" object="//@packages.0/reflection/TypeContainer/containedType"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/VirtualTypeContainer/@ownedTag.0" name="VirtualTypeContainer" isAbstract="true" superType="//@packages.0/reflection/VirtualTypeContainer/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written #################################&#xD;&#xA; */" object="//@packages.0/reflection/VirtualTypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/VirtualTypeContainer/virtualType/@ownedTag.0" name="virtualType" type="//@packages.0/reflection/VirtualTypeContainer/virtualType/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/VirtualType/modelType" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written ##########################################&#xD;&#xA;  */" object="//@packages.0/reflection/VirtualTypeContainer/virtualType"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/VirtualType"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/GenericTypeDefinition/@ownedTag.0" name="GenericTypeDefinition" isAbstract="true" superType="//@packages.0/reflection/GenericTypeDefinition/@containedType.0">
        <ownedTag value="/** &#xD;&#xA; * Abstracts the definition of generic type definitions (i.e. type definitions that&#xD;&#xA; * can be parameterized), namely, for ClassDefinition and ModelTypeDefinition.&#xD;&#xA; */" object="//@packages.0/reflection/GenericTypeDefinition"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinition"/>
        <ownedAttribute tag="//@packages.0/reflection/GenericTypeDefinition/typeParameter/@ownedTag.0" name="typeParameter" type="//@packages.0/reflection/GenericTypeDefinition/typeParameter/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Type variables defined for the GenericTypeDefinition&#xD;&#xA;  */" object="//@packages.0/reflection/GenericTypeDefinition/typeParameter"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariable"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ClassDefinition/@ownedTag.0" name="ClassDefinition" isAbstract="true" superType="//@packages.0/reflection/ClassDefinition/@containedType.0 //@packages.0/reflection/ClassDefinition/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * The definition of a class definition :)&#xD;&#xA; *  &lt;pre>class A&#xD;&#xA; *{ &#xD;&#xA; *   attribute s : String&#xD;&#xA; *}&#xD;&#xA; *   &lt;/pre> is a class definition; in :&#xD;&#xA; * &lt;pre>&#xD;&#xA; * main() : A is do end&#xD;&#xA; * &lt;/pre>&#xD;&#xA; * A is a &lt;b>Class&lt;/b> : it corresponds to the &lt;b>use&lt;/b> of the class definition of A&#xD;&#xA; */" object="//@packages.0/reflection/ClassDefinition"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/GenericTypeDefinition"/>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/isAbstract/@ownedTag.0" name="isAbstract" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Boolean stating whether the ClassDefinition is abstract (which means that&#xD;&#xA;  * no instance can be allocated)&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/isAbstract"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/ownedAttribute/@ownedTag.0" name="ownedAttribute" type="//@packages.0/reflection/ClassDefinition/ownedAttribute/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Property/owningClass" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Attributes, References, and derived Properties owned by this ClassDefinition.&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/ownedAttribute"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/ownedOperation/@ownedTag.0" name="ownedOperation" type="//@packages.0/reflection/ClassDefinition/ownedOperation/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Operation/owningClass" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Operations owned by this ClassDefinition.&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/ownedOperation"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/inv/@ownedTag.0" name="inv" type="//@packages.0/reflection/ClassDefinition/inv/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Constraint/invOwner" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Invariants defined for this ClassDefinition&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/inv"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Constraint"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/superType/@ownedTag.0" name="superType" type="//@packages.0/reflection/ClassDefinition/superType/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Classes from which this ClassDefinition inherits.&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/superType"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Class"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/allAttribute/@ownedTag.0" name="allAttribute" type="//@packages.0/reflection/ClassDefinition/allAttribute/@containedType.0" upper="-1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns all the Attributes, References, derived Properties of this &#xD;&#xA;  * ClassDefinition including the inherited ones&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/allAttribute"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
          <getterBody xsi:type="kermeta_language_behavior:Block">
            <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class">
                <typeParamBinding type="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Property"/>
                  <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                </typeParamBinding>
                <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0" name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0" name="new">
                <staticOperation href="../language/structure.km#//@packages.0/language/structure/Class/new"/>
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class">
                    <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../language/structure.km#//@packages.0/language/structure/Class"/>
                  </containedType>
                  <typeref type="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@containedType.0" upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" name="addAll">
              <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@containedType.0"/>
              <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.1/@parameters.0/@containedType.0" name="ownedAttribute" staticProperty="//@packages.0/reflection/ClassDefinition/ownedAttribute">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding>
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                    <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.1/@parameters.0/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
                </target>
              </parameters>
              <staticOperation href="../standard/collections.km#//@packages.0/standard/Collection/addAll"/>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0" name="result"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" name="each">
              <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType" left="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@containedType.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType" type="//@packages.0/reflection/Class/superClass/@containedType.0"/>
                  <right href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
                </containedType>
                <parameters name="t"/>
                <body xsi:type="kermeta_language_behavior:Block">
                  <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
                  <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" identifier="cDef">
                    <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
                    <type type="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" isCast="true">
                    <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" name="cDef"/>
                    <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                      <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/superClass/@containedType.0" name="t"/>
                    </value>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:CallFeature" name="each">
                    <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
                    <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0">
                      <containedType xsi:type="kermeta_language_structure:FunctionType" left="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0/@containedType.0">
                        <containedType xsi:type="kermeta_language_structure:ProductType">
                          <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                        </containedType>
                        <right href="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"/>
                      </containedType>
                      <parameters name="p"/>
                      <body xsi:type="kermeta_language_behavior:Block">
                        <staticType href="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"/>
                        <statement xsi:type="kermeta_language_behavior:CallFeature" name="add">
                          <staticType href="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"/>
                          <parameters xsi:type="kermeta_language_behavior:CallVariable" name="p">
                            <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                          </parameters>
                          <staticOperation href="../standard/collections.km#//@packages.0/standard/Set/add"/>
                          <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedAttribute/@getterBody/@statement.2/@target/@containedType.0" name="result"/>
                        </statement>
                      </body>
                    </parameters>
                    <staticOperation href="../standard/collections.km#//@packages.0/standard/Collection/each"/>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@target/@containedType.0" name="allAttribute" staticProperty="//@packages.0/reflection/ClassDefinition/allAttribute">
                      <containedType xsi:type="kermeta_language_structure:Class">
                        <typeParamBinding>
                          <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                          <type href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@containedType.0/@containedType.0/@containedType.0"/>
                        </typeParamBinding>
                        <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                      </containedType>
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" name="cDef"/>
                    </target>
                  </statement>
                </body>
              </parameters>
              <staticOperation href="../standard/collections.km#//@packages.0/standard/Collection/each"/>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.2/@target/@containedType.0" name="superType" staticProperty="//@packages.0/reflection/ClassDefinition/superType">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding type="//@packages.0/reflection/Class/superClass/@containedType.0">
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.1/@parameters.0/@target/@containedType.0"/>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ClassDefinition/allOperation/@ownedTag.0" name="allOperation" type="//@packages.0/reflection/ClassDefinition/allOperation/@containedType.0" upper="-1" isSetterAbstract="true" isReadOnly="true" isDerived="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns all the Operations of this ClassDefinition&#xD;&#xA;  * including the inherited ones&#xD;&#xA;  */" object="//@packages.0/reflection/ClassDefinition/allOperation"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
          <getterBody xsi:type="kermeta_language_behavior:Block">
            <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
            <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0">
              <containedType xsi:type="kermeta_language_structure:Class">
                <typeParamBinding type="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0/@typeParamBinding.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
                  <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                </typeParamBinding>
                <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
              </containedType>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0" name="result"/>
              <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0" name="new">
                <staticOperation href="../language/structure.km#//@packages.0/language/structure/Class/new"/>
                <target xsi:type="kermeta_language_behavior:TypeLiteral" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                  <typeref type="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.0/@containedType.0" upper="1"/>
                </target>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" name="addAll">
              <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@containedType.0"/>
              <parameters xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.1/@parameters.0/@containedType.0" name="ownedOperation" staticProperty="//@packages.0/reflection/ClassDefinition/ownedOperation">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding type="//@packages.0/reflection/Class/ownedOperation/@containedType.0">
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.1/@parameters.0/@target/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
                </target>
              </parameters>
              <staticOperation href="../standard/collections.km#//@packages.0/standard/Collection/addAll"/>
              <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0" name="result"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:CallFeature" name="each">
              <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
              <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:FunctionType" left="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@containedType.0/@containedType.0">
                  <containedType xsi:type="kermeta_language_structure:ProductType" type="//@packages.0/reflection/Class/superClass/@containedType.0"/>
                  <right href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
                </containedType>
                <parameters name="t"/>
                <body xsi:type="kermeta_language_behavior:Block">
                  <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
                  <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" identifier="cDef">
                    <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
                    <type type="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" isCast="true">
                    <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" name="cDef"/>
                    <value xsi:type="kermeta_language_behavior:CallFeature" name="typeDefinition" staticProperty="//@packages.0/reflection/ParameterizedType/typeDefinition">
                      <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@target/@containedType.0"/>
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/superClass/@containedType.0" name="t"/>
                    </value>
                  </statement>
                  <statement xsi:type="kermeta_language_behavior:CallFeature" name="each">
                    <staticType href="../standard/collections.km#//@packages.0/standard/Collection/addAll/@body/@containedType.0"/>
                    <parameters xsi:type="kermeta_language_behavior:LambdaExpression" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0">
                      <containedType xsi:type="kermeta_language_structure:FunctionType" left="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@parameters.0/@containedType.0/@containedType.0">
                        <containedType xsi:type="kermeta_language_structure:ProductType" type="//@packages.0/reflection/Class/ownedOperation/@containedType.0"/>
                        <right href="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"/>
                      </containedType>
                      <parameters name="p"/>
                      <body xsi:type="kermeta_language_behavior:Block">
                        <staticType href="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"/>
                        <statement xsi:type="kermeta_language_behavior:CallFeature" name="add">
                          <staticType href="../standard/collections.km#//@packages.0/standard/Set/add/@containedType.0"/>
                          <parameters xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/Class/ownedOperation/@containedType.0" name="p"/>
                          <staticOperation href="../standard/collections.km#//@packages.0/standard/Set/add"/>
                          <target xsi:type="kermeta_language_behavior:CallResult" staticType="//@packages.0/reflection/Class/ownedOperation/@getterBody/@statement.2/@target/@containedType.0" name="result"/>
                        </statement>
                      </body>
                    </parameters>
                    <staticOperation href="../standard/collections.km#//@packages.0/standard/Collection/each"/>
                    <target xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.2/@target/@containedType.0" name="allOperation" staticProperty="//@packages.0/reflection/ClassDefinition/allOperation">
                      <containedType xsi:type="kermeta_language_structure:Class">
                        <typeParamBinding type="//@packages.0/reflection/Class/ownedOperation/@containedType.0">
                          <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                        </typeParamBinding>
                        <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                      </containedType>
                      <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@parameters.0/@body/@statement.0/@containedType.0" name="cDef"/>
                    </target>
                  </statement>
                </body>
              </parameters>
              <staticOperation href="../standard/collections.km#//@packages.0/standard/Collection/each"/>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.2/@target/@containedType.0" name="superType" staticProperty="//@packages.0/reflection/ClassDefinition/superType">
                <containedType xsi:type="kermeta_language_structure:Class">
                  <typeParamBinding type="//@packages.0/reflection/Class/superClass/@containedType.0">
                    <variable xsi:type="kermeta_language_structure:ObjectTypeVariable" href="../standard/collections.km#//@packages.0/standard/Set/G"/>
                  </typeParamBinding>
                  <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/collections.km#//@packages.0/standard/Set"/>
                </containedType>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/ClassDefinition/allOperation/@getterBody/@statement.1/@parameters.0/@target/@containedType.0"/>
              </target>
            </statement>
          </getterBody>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/TypedElement/@ownedTag.0" name="TypedElement" isAbstract="true" superType="//@packages.0/reflection/TypedElement/@containedType.0 //@packages.0/reflection/TypedElement/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Abstraction of the notion of typed element : each element &#xD;&#xA; * that is typed inherits this class.&#xD;&#xA; */" object="//@packages.0/reflection/TypedElement"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/TypedElement/type/@ownedTag.0" name="type" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;     * Type of the model element&#xD;&#xA;     */" object="//@packages.0/reflection/TypedElement/type"/>
          <type href="../language/structure.km#//@packages.0/language/structure/Object/set/@body/@statement.0/@condition/@parameters.0/@containedType.0"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/TypeVariable/@ownedTag.0" name="TypeVariable" isAbstract="true" superType="//@packages.0/reflection/TypeVariable/@containedType.0 //@packages.0/reflection/TypeVariable/@containedType.1 //@packages.0/reflection/TypeVariable/@containedType.2">
        <ownedTag value="/**&#xD;&#xA; * Definition of a type variable for generic types :  &#xD;&#xA; * in class definition &lt;pre>class AClass&lt;X,Y> {}&lt;/pre>, X and Y are type variables.&#xD;&#xA; */" object="//@packages.0/reflection/TypeVariable"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/TypeVariable/supertype/@ownedTag.0" name="supertype" type="//@packages.0/reflection/TypeVariable/supertype/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Reference to the supertype, if any&#xD;&#xA;  */" object="//@packages.0/reflection/TypeVariable/supertype"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ObjectTypeVariable/@ownedTag.0" name="ObjectTypeVariable" isAbstract="true" superType="//@packages.0/reflection/ObjectTypeVariable/@containedType.0 //@packages.0/reflection/ObjectTypeVariable/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * To be written ######################################&#xD;&#xA; */" object="//@packages.0/reflection/ObjectTypeVariable"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariable"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/VirtualType/@ownedTag.0" name="VirtualType" isAbstract="true" superType="//@packages.0/reflection/VirtualType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written ######################################&#xD;&#xA; */" object="//@packages.0/reflection/VirtualType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ObjectTypeVariable"/>
        <ownedAttribute tag="//@packages.0/reflection/VirtualType/classDefinition/@ownedTag.0" name="classDefinition" type="//@packages.0/reflection/VirtualType/classDefinition/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written ######################################&#xD;&#xA;  */" object="//@packages.0/reflection/VirtualType/classDefinition"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ClassDefinition"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/VirtualType/modelType/@ownedTag.0" name="modelType" type="//@packages.0/reflection/VirtualType/modelType/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/VirtualTypeContainer/virtualType">
          <ownedTag value="/**&#xD;&#xA;  * To be written ######################################&#xD;&#xA;  */" object="//@packages.0/reflection/VirtualType/modelType"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/VirtualTypeContainer"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/VirtualType/typeParamBinding/@ownedTag.0" name="typeParamBinding" type="//@packages.0/reflection/VirtualType/typeParamBinding/@containedType.0" isOrdered="true" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written ######################################&#xD;&#xA;  */" object="//@packages.0/reflection/VirtualType/typeParamBinding"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariableBinding"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ModelTypeVariable/@ownedTag.0" name="ModelTypeVariable" isAbstract="true" superType="//@packages.0/reflection/ModelTypeVariable/@containedType.0 //@packages.0/reflection/ModelTypeVariable/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * To be written ######################################&#xD;&#xA; */" object="//@packages.0/reflection/ModelTypeVariable"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariable"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/VirtualTypeContainer"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ProductType/@ownedTag.0" name="ProductType" isAbstract="true" superType="//@packages.0/reflection/ProductType/@containedType.0 //@packages.0/reflection/ProductType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Type corresponding to a set of Types&#xD;&#xA; * Only used in the context of FunctionType&#xD;&#xA; */" object="//@packages.0/reflection/ProductType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        <ownedAttribute tag="//@packages.0/reflection/ProductType/type/@ownedTag.0" name="type" type="//@packages.0/reflection/ProductType/type/@containedType.0" lower="1" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Types &#xD;&#xA;  */" object="//@packages.0/reflection/ProductType/type"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/FunctionType/@ownedTag.0" name="FunctionType" isAbstract="true" superType="//@packages.0/reflection/FunctionType/@containedType.0 //@packages.0/reflection/FunctionType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Type used to define the use of lambda expressions.&#xD;&#xA; *  Uses :&#xD;&#xA; *  &lt;pre>operation forAll(func : &lt;G -> Boolean>) : Boolean is do&#xD;&#xA; *      var test : Boolean init true&#xD;&#xA; *      from var it : Iterator&lt;G> init iterator&#xD;&#xA; *      until it.isOff&#xD;&#xA; *      loop&#xD;&#xA; *         test := test and func(it.next)&#xD;&#xA; *      end&#xD;&#xA; *      result := test&#xD;&#xA; *  end&#xD;&#xA; *  &lt;/pre>&#xD;&#xA; *&#xD;&#xA; *  In the above example, &amp;lt;G -> Boolean&amp;gt; is a function type f(G) -&amp;gt; &#xD;&#xA; *  Boolean, with a parameter of type G and a return type of type Boolean&#xD;&#xA; *  The operation &lt;code>forAll&lt;/code> takes a lambda expression as parameter.&#xD;&#xA; */" object="//@packages.0/reflection/FunctionType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        <ownedAttribute tag="//@packages.0/reflection/FunctionType/left/@ownedTag.0" name="left" type="//@packages.0/reflection/FunctionType/left/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Parameters of the function (a ProductType for multiple parameters)&#xD;&#xA;  */" object="//@packages.0/reflection/FunctionType/left"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/FunctionType/right/@ownedTag.0" name="right" type="//@packages.0/reflection/FunctionType/right/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Result type of the function&#xD;&#xA;  */" object="//@packages.0/reflection/FunctionType/right"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
        <inv name="resultType">
          <body xsi:type="kermeta_language_behavior:CallFeature" name="not">
            <staticType href="../standard/collections.km#//@packages.0/standard/Collection/remove/@post.0/@body/@containedType.0"/>
            <staticOperation href="../standard/primitive_types.km#//@packages.0/standard/Boolean/not"/>
            <target xsi:type="kermeta_language_behavior:CallFeature" name="isKindOf" staticOperation="//@packages.0/reflection/Object/isKindOf">
              <staticType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
              <parameters xsi:type="kermeta_language_behavior:TypeLiteral" staticType="//@packages.0/reflection/ClassDefinition/allAttribute/@getterBody/@statement.0/@value/@target/@containedType.0">
                <typeref type="//@packages.0/reflection/FunctionType/resultType/@body/@target/@parameters.0/@typeref/@containedType.0" upper="1">
                  <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ProductType"/>
                </typeref>
              </parameters>
              <target xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/FunctionType/right/@containedType.0" name="right" staticProperty="//@packages.0/reflection/FunctionType/right"/>
            </target>
          </body>
        </inv>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Type/@ownedTag.0" name="Type" isAbstract="true" superType="//@packages.0/reflection/Type/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Base class definition for the &lt;b>use&lt;/b> of a type.&#xD;&#xA; */" object="//@packages.0/reflection/Type"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/Type/typeContainer/@ownedTag.0" name="typeContainer" type="//@packages.0/reflection/Type/typeContainer/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/TypeContainer/containedType">
          <ownedTag value="/**&#xD;&#xA;  * Owning TypeContainer, if any&#xD;&#xA;  */" object="//@packages.0/reflection/Type/typeContainer"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        </ownedAttribute>
        <ownedOperation tag="//@packages.0/reflection/Type/isInstance/@ownedTag.0" name="isInstance" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns a boolean stating if &lt;code>element&lt;/code> is an instance of the type&#xD;&#xA;  */" object="//@packages.0/reflection/Type/isInstance"/>
          <ownedParameter name="element" type="//@packages.0/reflection/Type/isInstance/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Type/isSuperTypeOf/@ownedTag.0" name="isSuperTypeOf" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns true if element is a supertype of self&#xD;&#xA;  */" object="//@packages.0/reflection/Type/isSuperTypeOf"/>
          <ownedParameter name="element" type="//@packages.0/reflection/Type/isSuperTypeOf/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation tag="//@packages.0/reflection/Type/isSubTypeOf/@ownedTag.0" name="isSubTypeOf" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Returns true if element is a subtype of self&#xD;&#xA;  */" object="//@packages.0/reflection/Type/isSubTypeOf"/>
          <ownedParameter name="element" type="//@packages.0/reflection/Type/isSubTypeOf/@ownedParameter.0/@containedType.0" isOrdered="true" upper="1">
            <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
          </ownedParameter>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/TypeVariableBinding/@ownedTag.0" name="TypeVariableBinding" isAbstract="true" superType="//@packages.0/reflection/TypeVariableBinding/@containedType.0 //@packages.0/reflection/TypeVariableBinding/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Definition of a binding between a TypeVariable and a Type&#xD;&#xA; */" object="//@packages.0/reflection/TypeVariableBinding"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/TypeVariableBinding/variable/@ownedTag.0" name="variable" type="//@packages.0/reflection/TypeVariableBinding/variable/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * TypeVariable&#xD;&#xA;  */" object="//@packages.0/reflection/TypeVariableBinding/variable"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeVariable"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/TypeVariableBinding/type/@ownedTag.0" name="type" type="//@packages.0/reflection/TypeVariableBinding/type/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * Assigned Type&#xD;&#xA;  */" object="//@packages.0/reflection/TypeVariableBinding/type"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/PrimitiveType/@ownedTag.0" name="PrimitiveType" isAbstract="true" superType="//@packages.0/reflection/PrimitiveType/@containedType.0 //@packages.0/reflection/PrimitiveType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * The class definition for kermeta aliases. Above statement defines a primitive&#xD;&#xA; * type called MyString, which instanceType is &lt;code>kermeta::standard::String&lt;/code>&#xD;&#xA; * &lt;pre>alias MyString : kermeta::standard::String&lt;/pre>&#xD;&#xA; */" object="//@packages.0/reflection/PrimitiveType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/DataType"/>
        <ownedAttribute tag="//@packages.0/reflection/PrimitiveType/instanceType/@ownedTag.0" name="instanceType" type="//@packages.0/reflection/PrimitiveType/instanceType/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * The type the primitive type is linked with&#xD;&#xA;  */" object="//@packages.0/reflection/PrimitiveType/instanceType"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/NamedElement/@ownedTag.0" name="NamedElement" isAbstract="true" superType="//@packages.0/reflection/NamedElement/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Any element that contain a  name (example : Operation, Property) inherit this&#xD;&#xA; * class.&#xD;&#xA; */" object="//@packages.0/reflection/NamedElement"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/NamedElement/name/@ownedTag.0" name="name" type="//@packages.0/reflection/String" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;     * Name of this named element&#xD;&#xA;     */" object="//@packages.0/reflection/NamedElement/name"/>
        </ownedAttribute>
        <ownedOperation tag="//@packages.0/reflection/NamedElement/qualifiedName/@ownedTag.0" name="qualifiedName" type="//@packages.0/reflection/String" isOrdered="true" upper="1">
          <ownedTag value="/**&#xD;&#xA;  * Returns the qualified name of this named element. Qualified name is &#xD;&#xA;  * the list of the names of the packages hierarchically ordered, delimited by&#xD;&#xA;  * a &quot;::&quot;, followed by the name of this named element.&#xD;&#xA;  */" object="//@packages.0/reflection/NamedElement/qualifiedName"/>
          <body xsi:type="kermeta_language_behavior:Block" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@containedType.0">
            <containedType xsi:type="kermeta_language_structure:Class">
              <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/primitive_types.km#//@packages.0/standard/Void"/>
            </containedType>
            <statement xsi:type="kermeta_language_behavior:VariableDecl" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" identifier="elem">
              <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
              <initialization xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@initialization/@containedType.0">
                <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
              </initialization>
              <type type="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" isOrdered="true" upper="1"/>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Assignment">
              <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
              <target xsi:type="kermeta_language_behavior:CallResult" name="result">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
              </target>
              <value xsi:type="kermeta_language_behavior:CallFeature" name="name" staticProperty="//@packages.0/reflection/NamedElement/name">
                <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
                <target xsi:type="kermeta_language_behavior:SelfExpression" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@initialization/@containedType.0"/>
              </value>
            </statement>
            <statement xsi:type="kermeta_language_behavior:Loop" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@containedType.0">
              <initialization xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" isCast="true">
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" name="elem"/>
                <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/Object/container/@containedType.0" name="container" staticOperation="//@packages.0/reflection/Object/container">
                  <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" name="elem"/>
                </value>
              </initialization>
              <body xsi:type="kermeta_language_behavior:Block" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0">
                <statement xsi:type="kermeta_language_behavior:Assignment">
                  <staticType href="../standard/primitive_types.km#//@packages.0/standard/String/plus/@containedType.0"/>
                  <target xsi:type="kermeta_language_behavior:CallResult" name="result">
                    <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
                  </target>
                  <value xsi:type="kermeta_language_behavior:CallFeature" name="plus">
                    <staticType href="../standard/primitive_types.km#//@packages.0/standard/String/plus/@containedType.0"/>
                    <parameters xsi:type="kermeta_language_behavior:CallResult" name="result">
                      <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
                    </parameters>
                    <staticOperation href="../standard/primitive_types.km#//@packages.0/standard/String/plus"/>
                    <target xsi:type="kermeta_language_behavior:CallFeature" name="plus">
                      <staticType href="../standard/primitive_types.km#//@packages.0/standard/String/plus/@containedType.0"/>
                      <parameters xsi:type="kermeta_language_behavior:StringLiteral" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.2/@body/@statement.0/@value/@target/@parameters.0/@containedType.0" value="::">
                        <containedType xsi:type="kermeta_language_structure:Class">
                          <typeDefinition xsi:type="kermeta_language_structure:ClassDefinition" href="../standard/primitive_types.km#//@packages.0/standard/String"/>
                        </containedType>
                      </parameters>
                      <staticOperation href="../standard/primitive_types.km#//@packages.0/standard/String/plus"/>
                      <target xsi:type="kermeta_language_behavior:CallFeature" name="name" staticProperty="//@packages.0/reflection/NamedElement/name">
                        <staticType href="../language/structure.km#//@packages.0/language/structure/Object/checkAllInvariants/@body/@statement.0/@thenBody/@statement.1/@parameters.0/@body/@statement.0/@thenBody/@statement.0/@condition/@parameters.0/@target/@containedType.0"/>
                        <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" name="elem"/>
                      </target>
                    </target>
                  </value>
                </statement>
                <statement xsi:type="kermeta_language_behavior:Assignment" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" isCast="true">
                  <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" name="elem"/>
                  <value xsi:type="kermeta_language_behavior:CallFeature" staticType="//@packages.0/reflection/Object/container/@containedType.0" name="container" staticOperation="//@packages.0/reflection/Object/container">
                    <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" name="elem"/>
                  </value>
                </statement>
              </body>
              <stopCondition xsi:type="kermeta_language_behavior:CallFeature" name="equals" staticOperation="//@packages.0/reflection/Object/equals">
                <staticType href="../standard/collections.km#//@packages.0/standard/Set/equals/@body/@statement.1/@condition/@target/@containedType.0"/>
                <parameters xsi:type="kermeta_language_behavior:VoidLiteral" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@containedType.0"/>
                <target xsi:type="kermeta_language_behavior:CallVariable" staticType="//@packages.0/reflection/NamedElement/qualifiedName/@body/@statement.0/@containedType.0" name="elem"/>
              </stopCondition>
            </statement>
          </body>
        </ownedOperation>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/SelfType/@ownedTag.0" name="SelfType" isAbstract="true" superType="//@packages.0/reflection/SelfType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Self type : DEPRECATED&#xD;&#xA; */" object="//@packages.0/reflection/SelfType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/TypeDefinitionContainer/@ownedTag.0" name="TypeDefinitionContainer" isAbstract="true" superType="//@packages.0/reflection/TypeDefinitionContainer/@containedType.0">
        <ownedTag value="/** &#xD;&#xA; * Abstraction of the notion of containment for type definitions. Now, kermeta metamodel contains one container&#xD;&#xA; * element, that is Package. In a later release, ModelTypeDefinition will be the main container for type and&#xD;&#xA; * package definition.&#xD;&#xA; */" object="//@packages.0/reflection/TypeDefinitionContainer"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/TypeDefinitionContainer/ownedTypeDefinition/@ownedTag.0" name="ownedTypeDefinition" type="//@packages.0/reflection/TypeDefinitionContainer/ownedTypeDefinition/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Contained TypeDefinitions&#xD;&#xA;  */" object="//@packages.0/reflection/TypeDefinitionContainer/ownedTypeDefinition"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Package/@ownedTag.0" name="Package" isAbstract="true" superType="//@packages.0/reflection/Package/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Package in kermeta. Each kermeta model must have a root package. &#xD;&#xA; */" object="//@packages.0/reflection/Package"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinitionContainer"/>
        <ownedAttribute tag="//@packages.0/reflection/Package/nestedPackage/@ownedTag.0" name="nestedPackage" type="//@packages.0/reflection/Package/nestedPackage/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Package/nestingPackage" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Nested Packages contained by the Package&#xD;&#xA;  */" object="//@packages.0/reflection/Package/nestedPackage"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Package"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Package/nestingPackage/@ownedTag.0" name="nestingPackage" type="//@packages.0/reflection/Package/nestingPackage/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Package/nestedPackage">
          <ownedTag value="/**&#xD;&#xA;  * Owning Package, if any&#xD;&#xA;  */" object="//@packages.0/reflection/Package/nestingPackage"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Package"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/Package/uri/@ownedTag.0" name="uri" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Uri of the Package&#xD;&#xA;  */" object="//@packages.0/reflection/Package/uri"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/ModelingUnit/@ownedTag.0" name="ModelingUnit" isAbstract="true" superType="//@packages.0/reflection/ModelingUnit/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * The modeling unit is the root of any kermeta model. It contains packages, requires and usings.&#xD;&#xA; * It also reference others modeling unit.&#xD;&#xA; */" object="//@packages.0/reflection/ModelingUnit"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/packages/@ownedTag.0" name="packages" type="//@packages.0/reflection/ModelingUnit/packages/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * root packages contained by this ModelingUnit&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/packages"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Package"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/requires/@ownedTag.0" name="requires" type="//@packages.0/reflection/ModelingUnit/requires/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Set of &quot;require&quot; statements associated with this ModelingUnit. Ie. list of the other&#xD;&#xA;  * files required to run this unit&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/requires"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Require"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/usings/@ownedTag.0" name="usings" type="//@packages.0/reflection/ModelingUnit/usings/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Set of &quot;using&quot; statement associated with this ModelingUnit. Ie. list of &quot;syntatic shortcut&quot;&#xD;&#xA;  * that can be used within this unit.&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/usings"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Using"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/referencedModelingUnits/@ownedTag.0" name="referencedModelingUnits" type="//@packages.0/reflection/ModelingUnit/referencedModelingUnits/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/referencedModelingUnits"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/ModelingUnit"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/ownedTags/@ownedTag.0" name="ownedTags" type="//@packages.0/reflection/ModelingUnit/ownedTags/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Tag directly owned by this ModelingUnit.  (typically the mainClass and mainOperation tags)&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/ownedTags"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Tag"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/includeFilters/@ownedTag.0" name="includeFilters" type="//@packages.0/reflection/ModelingUnit/includeFilters/@containedType.0" isOrdered="true" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * list of filters that apply to this modeling unit.&#xD;&#xA;  * This means that if the same unit was loaded without this filters, it would have loaded more content&#xD;&#xA;  * only element whose qualified name begins with one of these filter will be loaded in the unit&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/includeFilters"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Filter"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/ModelingUnit/excludeFilters/@ownedTag.0" name="excludeFilters" type="//@packages.0/reflection/ModelingUnit/excludeFilters/@containedType.0" isOrdered="true" upper="-1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * list of filters that apply to this modeling unit.&#xD;&#xA;  * This means that if the same unit was loaded without this filters, it would have loaded more content&#xD;&#xA;  * element whose qualified name begins with one of these filter will NOT be loaded in the unit&#xD;&#xA;  */" object="//@packages.0/reflection/ModelingUnit/excludeFilters"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Filter"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Filter/@ownedTag.0" name="Filter" isAbstract="true" superType="//@packages.0/reflection/Filter/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Filter is the class that represent a filter on a ModelingUnit.&#xD;&#xA; * the qualifiedName represent the beginning of the matched names&#xD;&#xA; */" object="//@packages.0/reflection/Filter"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute name="qualifiedName" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Require/@ownedTag.0" name="Require" isAbstract="true" superType="//@packages.0/reflection/Require/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */" object="//@packages.0/reflection/Require"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/Require/uri/@ownedTag.0" name="uri" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */" object="//@packages.0/reflection/Require/uri"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Using/@ownedTag.0" name="Using" isAbstract="true" superType="//@packages.0/reflection/Using/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * To be written&#xD;&#xA; */" object="//@packages.0/reflection/Using"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Object"/>
        <ownedAttribute tag="//@packages.0/reflection/Using/qualifiedName/@ownedTag.0" name="qualifiedName" type="//@packages.0/reflection/String" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * To be written&#xD;&#xA;  */" object="//@packages.0/reflection/Using/qualifiedName"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/TypeDefinition/@ownedTag.0" name="TypeDefinition" isAbstract="true" superType="//@packages.0/reflection/TypeDefinition/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Abstraction for type definitions (ClassDefinition, ModelTypeDefinition, DataType inherit&#xD;&#xA; * this class)&#xD;&#xA; */" object="//@packages.0/reflection/TypeDefinition"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/TypeDefinition/isAspect/@ownedTag.0" name="isAspect" type="//@packages.0/reflection/Boolean" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * This boolean allows to tell if this Type definition is an aspect or not&#xD;&#xA;  * If it is an aspect, then at runtime, its definition will be merged with the definition of another&#xD;&#xA;  * TypeDefinition that has exactly the same qualified name&#xD;&#xA;  */" object="//@packages.0/reflection/TypeDefinition/isAspect"/>
        </ownedAttribute>
        <ownedAttribute tag="//@packages.0/reflection/TypeDefinition/baseAspects/@ownedTag.0" name="baseAspects" type="//@packages.0/reflection/TypeDefinition/baseAspects/@containedType.0" isOrdered="true" upper="-1" isGetterAbstract="true" isSetterAbstract="true">
          <ownedTag value="/**&#xD;&#xA;  * References to the base classes&#xD;&#xA;  */" object="//@packages.0/reflection/TypeDefinition/baseAspects"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinition"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/VoidType/@ownedTag.0" name="VoidType" isAbstract="true" superType="//@packages.0/reflection/VoidType/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Class definition for the &lt;pre>Void&lt;/pre> type&#xD;&#xA; */" object="//@packages.0/reflection/VoidType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/DataType/@ownedTag.0" name="DataType" isAbstract="true" superType="//@packages.0/reflection/DataType/@containedType.0 //@packages.0/reflection/DataType/@containedType.1">
        <ownedTag value="/**&#xD;&#xA; * Special type definition for Enumeration, PrimitiveType&#xD;&#xA; */" object="//@packages.0/reflection/DataType"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/TypeDefinition"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Type"/>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Enumeration/@ownedTag.0" name="Enumeration" isAbstract="true" superType="//@packages.0/reflection/Enumeration/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Definition for Enumeration&#xD;&#xA; */" object="//@packages.0/reflection/Enumeration"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/DataType"/>
        <ownedAttribute tag="//@packages.0/reflection/Enumeration/ownedLiteral/@ownedTag.0" name="ownedLiteral" type="//@packages.0/reflection/Enumeration/ownedLiteral/@containedType.0" upper="-1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/EnumerationLiteral/enumeration" isComposite="true">
          <ownedTag value="/**&#xD;&#xA;  * Owned items in an Enumeration&#xD;&#xA;  */" object="//@packages.0/reflection/Enumeration/ownedLiteral"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/EnumerationLiteral"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/EnumerationLiteral/@ownedTag.0" name="EnumerationLiteral" isAbstract="true" superType="//@packages.0/reflection/EnumerationLiteral/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Item definition for enumeration&#xD;&#xA; */" object="//@packages.0/reflection/EnumerationLiteral"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/NamedElement"/>
        <ownedAttribute tag="//@packages.0/reflection/EnumerationLiteral/enumeration/@ownedTag.0" name="enumeration" type="//@packages.0/reflection/EnumerationLiteral/enumeration/@containedType.0" isOrdered="true" lower="1" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Enumeration/ownedLiteral">
          <ownedTag value="/**&#xD;&#xA;  * Owning Enumeration&#xD;&#xA;  */" object="//@packages.0/reflection/EnumerationLiteral/enumeration"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Enumeration"/>
        </ownedAttribute>
      </ownedTypeDefinition>
      <ownedTypeDefinition xsi:type="kermeta_language_structure:ClassDefinition" tag="//@packages.0/reflection/Parameter/@ownedTag.0" name="Parameter" isAbstract="true" superType="//@packages.0/reflection/Parameter/@containedType.0">
        <ownedTag value="/**&#xD;&#xA; * Definition for operation parameter&#xD;&#xA; */" object="//@packages.0/reflection/Parameter"/>
        <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/MultiplicityElement"/>
        <ownedAttribute tag="//@packages.0/reflection/Parameter/operation/@ownedTag.0" name="operation" type="//@packages.0/reflection/Parameter/operation/@containedType.0" isOrdered="true" upper="1" isGetterAbstract="true" isSetterAbstract="true" opposite="//@packages.0/reflection/Operation/ownedParameter">
          <ownedTag value="/**&#xD;&#xA;  * Owning operation&#xD;&#xA;  */" object="//@packages.0/reflection/Parameter/operation"/>
          <containedType xsi:type="kermeta_language_structure:Class" typeDefinition="//@packages.0/reflection/Operation"/>
        </ownedAttribute>
      </ownedTypeDefinition>
    </nestedPackage>
  </packages>
  <requires uri="../standard/collections.kmt"/>
  <requires uri="../persistence/resource.kmt"/>
  <usings qualifiedName="kermeta::reflection"/>
  <referencedModelingUnits href="../standard/collections.km#/"/>
  <referencedModelingUnits href="../standard/primitive_types.km#/"/>
  <referencedModelingUnits href="../Standard.km#/"/>
  <referencedModelingUnits href="../language/behavior.km#/"/>
  <referencedModelingUnits href="../language/structure.km#/"/>
  <referencedModelingUnits href="../persistence/resource.km#/"/>
  <referencedModelingUnits href="../language/reflective_collections.km#/"/>
  <referencedModelingUnits href="../kunit/kunit.km#/"/>
  <referencedModelingUnits href="../kunit/assert.km#/"/>
  <referencedModelingUnits href="../utils/utils.km#/"/>
  <referencedModelingUnits href="../utils/StringBuffer.km#/"/>
  <referencedModelingUnits href="../utils/hashtable.km#/"/>
  <referencedModelingUnits href="../utils/stack.km#/"/>
  <referencedModelingUnits href="../io/std_io.km#/"/>
  <referencedModelingUnits href="../io/file_io.km#/"/>
  <referencedModelingUnits href="../exceptions/exceptions.km#/"/>
  <referencedModelingUnits href="../language/dynamic_expression.km#/"/>
  <referencedModelingUnits href="../standard/java.km#/"/>
  <referencedModelingUnits href="../ecore/ecore_compatibility.km#/"/>
</kermeta_language_structure:ModelingUnit>
