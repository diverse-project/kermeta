<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModellingUnit">
    <details key="require" value="structure.kmt|"/>
    <details key="using" value="kermeta::language::behavior|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="file:/home/paco/workspace/fr.irisa.triskell.kermeta.framework/dist/language/behavior.ecore#/" nsPrefix="kermeta">
    <eSubpackages name="language" nsURI="file:/home/paco/workspace/fr.irisa.triskell.kermeta.framework/dist/language/behavior.ecore#/kermeta/language" nsPrefix="language">
      <eSubpackages name="behavior" nsURI="http://www.kermeta.org/kermeta/language/behavior" nsPrefix="behavior">
        <eAnnotations source="kermeta">
          <details key="documentation" value="/**&#xA; * Contains all the classes that define the behavior of Kermeta (i.e the model representation&#xA; * of operation bodies). It is the definition, in kermeta language, of the behavior part of the kermeta &#xA; * metamodel, viewed as a model.&#xA; * You can also find some information about the behavior package here : &lt;a href=&quot;http://www.kermeta.org/documents/manual/html.single&quot;>KermetaManual&lt;/a>&#xA; * &lt;img src=&quot;./figures/language_behavior_package.png&quot;>&#xA; */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="CallExpression" abstract="true" eSuperTypes="/1/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Any callable expression inherits this class, e.g : &#xA; *   - variable call&#xA; *   - feature call ( &lt;code>a.b&lt;/code> : b is a feature call)&#xA; *&#xA; * &lt;img alt=&quot;&quot;  height=&quot;90%&quot; width=&quot;90%&quot;  src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_call_expressions.png&quot; />&#xA; *&#xA; */"/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" ordered="false" upperBound="-1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Kermeta calls can embedd expressions as parameters&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * A call must be named&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticTypeVariableBindings" upperBound="-1">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * to be written #########################################&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="structure.ecore#/1/language/structure/Type"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * The base class for every entity used to define a behavior in operation body.&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="structure.ecore#/1/language/structure/Object"/>
          <eSuperTypes href="structure.ecore#/1/language/structure/TypeContainer"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticType">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Type of the Expression (set by type checking)&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="structure.ecore#/1/language/structure/Type"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallVariable" eSuperTypes="/1/language/behavior/CallExpression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * We call &quot;CallVariable&quot; the use of a variable in a statement.&#xA; * in &lt;code>i := j + 1&lt;/code>, i and j are 2 CallVariables.&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitCallVariable(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on CallFeature objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/CallVariable/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/CallVariable/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Tells whether this CallVariable represents a call to @pre in a postcondition&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallFeature" eSuperTypes="/1/language/behavior/CallExpression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * CallFeature is the model element that refers to the use of a feature, i.e either &#xA; * a property or an operation in a statement. In &lt;code>stdio.writeln(&quot;hello&quot;)&lt;/code>, &#xA; * &lt;code>writeln&lt;/code> is a CallFeature.&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitCallFeature(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on CallFeature objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/CallFeature/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/CallFeature/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticOperation">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * The method which will be executed (operation case)&#xA;  * and the result value passed to the caller&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="structure.ecore#/1/language/structure/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticEnumLiteral">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * To be written #################################&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="structure.ecore#/1/language/structure/EnumerationLiteral"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="staticProperty">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * The object which will be returned (property case)&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="structure.ecore#/1/language/structure/Property"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAtpre">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Tells whether this CallFeature represents a call to @pre in a postcondition&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Target Expression (the owner of the feature)&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallSuperOperation" eSuperTypes="/1/language/behavior/CallExpression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This class represents a call to the operataion in the parent class&#xA; * In the following example, the type of super(element) is CallSuperOperation:&#xA; *&#xA; * class ParentClass {&#xA; *   operation op(element : Integer) : Integer is do&#xA; *       result := element + 1&#xA; *   end&#xA; * }&#xA; *&#xA; * class ChildClass {&#xA; *   method op(element : Integer) : Integer is do&#xA; *       result := super(element)&#xA; *   end&#xA; * }&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitCallSuperOperation(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on CallFeature objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/CallSuperOperation/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/CallSuperOperation/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallResult" eSuperTypes="/1/language/behavior/CallVariable /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This class represents a call to the special internal variable &quot;result&quot; that is used to store the return value of any operation &#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/CallVariable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitCallResult(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on CallFeature objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::CallVariable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/CallResult/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/CallResult/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="CallValue" eSuperTypes="/1/language/behavior/CallExpression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * CallValue refers to the use of the &lt;code>value&lt;/code> reserved keyword. This keyword is&#xA; * only used in the body of the &lt;code>setter&lt;/code> part of derived properties.&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitCallValue(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on CallFeature objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/CallValue/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/CallValue/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Assignment is the model-element representation of the assignment statement &lt;code>x := y&lt;/code>&#xA; * &lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_assign_expressions.png&quot;/>&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitAssignment(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Assignment objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/Assignment/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/Assignment/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1" eType="/1/language/behavior/CallExpression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Target of the assignment, as a CallExpression&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Value to be assigned, as a KerMeta expression&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCast">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Boolean stating whether current assignment corresponds to a cast operation &#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Block is the model-element representation for the &lt;code>do...end&lt;/code> block.&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitBlock(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Block objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/Block/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/Block/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="statement" upperBound="-1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * List of statements composing the block&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="rescueBlock" upperBound="-1" eType="/1/language/behavior/Rescue" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * List of rescues defined for the block&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Condition is the model-element representation for the &lt;code>&lt;/code> &#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitConditional(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Conditional objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/Conditional/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/Conditional/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="thenBody" lowerBound="1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Then part of the conditional statement&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Optional else part of the conditional statement&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Condition expression of conditional statement&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Literal" abstract="true" eSuperTypes="/1/language/behavior/Expression">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Literal refers to String values, Integer values, etc.&#xA; */"/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="EmptyExpression" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * As suggested by its name, this class represents an expression that do nothing. Like a &quot;nop&quot;&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitEmptyExpression(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on EmptyExpression objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/EmptyExpression/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/EmptyExpression/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="/1/language/behavior/Literal /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This expression is a literal representing an Integer value&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitIntegerLiteral(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on IntegerLiteral objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/IntegerLiteral/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/IntegerLiteral/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * The concrete value represented by this literal&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/Integer"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="/1/language/behavior/Literal /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This expression is a literal representing a String value, typically : &quot;my string&quot;&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitStringLiteral(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on StringLiteral objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/StringLiteral/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/StringLiteral/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * The concrete value represented by this literal&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="/1/language/behavior/Literal /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This expression is a literal representing a Boolean value, typically : true or false keyword&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitBooleanLiteral(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on BooleanLiteral objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/BooleanLiteral/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/BooleanLiteral/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * The concrete value represented by this literal&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/Boolean"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeLiteral" eSuperTypes="/1/language/behavior/Literal /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This expression is a literal representing a Type.&#xA; * for example, in &#xA; *    Integer.new&#xA; * Integer is a type literal representing the type kermeta::standard::Integer&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTypeLiteral(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on TypeLiteral objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/TypeLiteral/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/TypeLiteral/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="typeref" lowerBound="1" eType="/1/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * The type refered by this literal&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypeReference">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * TypeReference refers to the type used in a variable declaration&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="structure.ecore#/1/language/structure/MultiplicityElement"/>
          <eSuperTypes href="#/1/language/behavior/KMExpressionVisitable"/>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitTypeReference(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on BooleanLiteral objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/TypeReference/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/TypeReference/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VoidLiteral" eSuperTypes="/1/language/behavior/Literal /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This class is used to represent the special expression void&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitVoidLiteral(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on VoidLiteral objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/VoidLiteral/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/VoidLiteral/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Loop" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Loop refers to &lt;code>from var x : X init a until booleanCondition loop ... end&lt;/code>&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitLoop(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Loop objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/Loop/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/Loop/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Initialization expression for the loop&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Body of the loop&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="stopCondition" lowerBound="1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Stop condition of the loop, is interpreted as a Bollean value&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="SelfExpression" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Refers to &lt;code>self&lt;/code> use&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitSelfExpression(self, context)&#xA;end"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/SelfExpression/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/SelfExpression/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="VariableDecl" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * refers to variable declaration &lt;code>var x : X init a&lt;/code>&#xA; * &lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_var_expressions.png&quot;/>&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitVariableDecl(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Variable objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/VariableDecl/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/VariableDecl/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="initialization" lowerBound="1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Initialization expression for the variable&#xA;  * Default value is &lt;code>void&lt;/code> ????&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="identifier">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Name of the declared variable&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="/1/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Type of the declared variable&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Raise" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Refers to raise exception block&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitRaise(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Raise objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/Raise/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/Raise/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * To be written #######################&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Rescue">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Refers to rescue exception block&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="structure.ecore#/1/language/structure/Object"/>
          <eSuperTypes href="#/1/language/behavior/KMExpressionVisitable"/>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitRescue(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on Rescue objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/Rescue/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/Rescue/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" ordered="false" lowerBound="1" upperBound="-1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Body of the rescue block, specified as a KerMeta expression&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="exceptionType" lowerBound="1" eType="/1/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Type of the cathed exception&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="exceptionName">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Name of the catched exception&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="JavaStaticCall" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This class represent a call to an extern Java operation. &#xA; * This Java operation must be static and have at least one RuntimeO&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitJavaStaticCall(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on JavaStaticCall objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/JavaStaticCall/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/JavaStaticCall/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" ordered="false" upperBound="-1" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Parameters of the Java static call provided as KerMeta expressions&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jclass">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Qualified name of the targeted Java class&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="jmethod">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Name of the Java method to be launched in the identified Java class&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaExpression" eSuperTypes="/1/language/behavior/Expression /1/language/behavior/KMExpressionVisitable">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Refers to lambda expression definition (&lt;code>function { e | stdio.writeln(e.toString) }&lt;/code>)&#xA; * &lt;img alt=&quot;&quot; src=&quot;http://www.kermeta.org/docs/html.single/KerMeta-Manual/KerMeta-Manual_figures/kermeta_lambda_expressions.png&quot;/>&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitLambdaExpression(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  *&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/LambdaExpression/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/LambdaExpression/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" ordered="false" upperBound="-1" eType="/1/language/behavior/LambdaParameter" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Parameters of the lambda expression&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="/1/language/behavior/Expression" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * Body of the lambda expression providede as a KerMeta expression&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LambdaParameter">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * Refers to parameter definition in lambda expression&#xA; */"/>
          </eAnnotations>
          <eSuperTypes href="structure.ecore#/1/language/structure/Object"/>
          <eSuperTypes href="#/1/language/behavior/KMExpressionVisitable"/>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta" references="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor">
              <details key="body" value="do&#xA;&#x9;result := visitor.visitLambdaParameter(self, context)&#xA;end"/>
              <details key="documentation" value="/**&#xA;  * Implementation of the visitor design pattern on LambdaParameter objects&#xA;  */"/>
              <details key="superOperation" value="kermeta::language::behavior::KMExpressionVisitable"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/LambdaParameter/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/LambdaParameter/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="true"/>
              <details key="documentation" value="/**&#xA;  * Name of the lambda parameter&#xA;  */"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../standard/primitive_types.ecore#/1/standard/String"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="/1/language/behavior/TypeReference" containment="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="/**&#xA;  * To be written ################################&#xA;  */"/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="KMExpressionVisitor" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * This class implements the visitor design pattern for all the classes of this Behavior package,&#xA; * in particular the classes that inherits from kermeta::behavior::Expression&#xA; */"/>
          </eAnnotations>
          <eTypeParameters name="ContextType"/>
          <eTypeParameters name="ResultType"/>
          <eSuperTypes href="structure.ecore#/1/language/structure/Object"/>
          <eOperations name="visitCallVariable">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/CallVariable"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitCallFeature">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/CallFeature"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitCallSuperOperation">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/CallSuperOperation"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitCallResult">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/CallResult"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitCallValue">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/CallValue"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitAssignment">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/Assignment"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitBlock">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/Block"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitConditional">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/Conditional"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitEmptyExpression">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/EmptyExpression"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitIntegerLiteral">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/IntegerLiteral"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitStringLiteral">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/StringLiteral"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitBooleanLiteral">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/BooleanLiteral"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTypeLiteral">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/TypeLiteral"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitTypeReference">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/TypeReference"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitVoidLiteral">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/VoidLiteral"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitLoop">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/Loop"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitSelfExpression">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/SelfExpression"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitVariableDecl">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/VariableDecl"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitRaise">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/Raise"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitRescue">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/Rescue"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitJavaStaticCall">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/JavaStaticCall"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitLambdaExpression">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/LambdaExpression"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
          <eOperations name="visitLambdaParameter">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := void&#xA;end"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ResultType"/>
            <eParameters name="node" eType="/1/language/behavior/LambdaParameter"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="KMExpressionVisitable" abstract="true">
          <eAnnotations source="kermeta">
            <details key="documentation" value="/**&#xA; * All classes that can be visited using kermeta::behavior::KMExpressionVisitor must implement this class&#xA; */"/>
          </eAnnotations>
          <eOperations name="acceptKMExpressionVisitor">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="/**&#xA;  * accept method of the visitor design pattern&#xA;  */"/>
            </eAnnotations>
            <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor/ResultType"/>
            <eTypeParameters name="ContextType"/>
            <eTypeParameters name="ResultType"/>
            <eParameters name="visitor" eType="/1/language/behavior/KMExpressionVisitor"/>
            <eParameters name="context">
              <eGenericType eTypeParameter="/1/language/behavior/KMExpressionVisitable/acceptKMExpressionVisitor/ContextType"/>
            </eParameters>
          </eOperations>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EAnnotation source="dependentResource">
    <references href="structure.ecore#/0"/>
    <references href="structure.ecore#/1"/>
    <references href="../Standard.ecore#/0"/>
    <references href="../Standard.ecore#/1"/>
    <references href="../Standard.ecore#/2"/>
    <references href="../standard/collections.ecore#/0"/>
    <references href="../standard/collections.ecore#/1"/>
    <references href="../standard/primitive_types.ecore#/0"/>
    <references href="../standard/primitive_types.ecore#/1"/>
    <references href="../reflection/reflection.ecore#/0"/>
    <references href="../reflection/reflection.ecore#/1"/>
    <references href="../persistence/resource.ecore#/0"/>
    <references href="../persistence/resource.ecore#/1"/>
    <references href="reflective_collections.ecore#/0"/>
    <references href="reflective_collections.ecore#/1"/>
    <references href="../kunit/kunit.ecore#/0"/>
    <references href="../kunit/kunit.ecore#/1"/>
    <references href="../kunit/assert.ecore#/0"/>
    <references href="../kunit/assert.ecore#/1"/>
    <references href="../utils/hashtable.ecore#/0"/>
    <references href="../utils/hashtable.ecore#/1"/>
    <references href="../utils/stack.ecore#/0"/>
    <references href="../utils/stack.ecore#/1"/>
    <references href="../io/std_io.ecore#/0"/>
    <references href="../io/std_io.ecore#/1"/>
    <references href="../io/file_io.ecore#/0"/>
    <references href="../io/file_io.ecore#/1"/>
    <references href="../exceptions/exceptions.ecore#/0"/>
    <references href="../exceptions/exceptions.ecore#/1"/>
    <references href="dynamic_expression.ecore#/0"/>
    <references href="dynamic_expression.ecore#/1"/>
    <references href="../standard/java.ecore#/0"/>
    <references href="../standard/java.ecore#/1"/>
    <references href="../standard/java.ecore#/2"/>
    <references href="../ecore/ecore_compatibility.ecore#/0"/>
    <references href="../ecore/ecore_compatibility.ecore#/1"/>
    <references href="../utils/StringBuffer.ecore#/0"/>
    <references href="../utils/StringBuffer.ecore#/1"/>
    <references href="../utils/StringBuffer.ecore#/2"/>
  </ecore:EAnnotation>
</xmi:XMI>
