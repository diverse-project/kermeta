<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
  <ecore:EAnnotation source="ModelingUnit">
    <details key="require" value="../Standard.kmt|platform:/resource/fr.irisa.triskell.kermeta.model/build/ecore/kermeta_java.ecore|"/>
    <details key="using" value="kermeta::language::structure|kermeta::standard|"/>
  </ecore:EAnnotation>
  <ecore:EPackage name="kermeta" nsURI="file:/C:/eclipse3.3M5/eclipse/workspace/fr.irisa.triskell.kermeta.framework/dist/language/structure.ecore#/" nsPrefix="kermeta">
    <eSubpackages name="language" nsURI="file:/C:/eclipse3.3M5/eclipse/workspace/fr.irisa.triskell.kermeta.framework/dist/language/structure.ecore#/kermeta/language" nsPrefix="language">
      <eSubpackages name="structure" nsURI="http://www.kermeta.org/kermeta/language/structure" nsPrefix="structure">
        <eAnnotations source="kermeta">
          <details key="documentation" value=" */"/>
        </eAnnotations>
        <eClassifiers xsi:type="ecore:EClass" name="Object">
          <eOperations name="getMetaClass">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.getMetaClass(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="container">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Object.container(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkInvariants">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.checkInvariants(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="checkAllInvariants">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;if self.isNotEqual(void) then&#xA;&#x9;&#x9;self.checkInvariants&#xA;&#x9;&#x9;self.getMetaClass.ownedAttribute.each{subObj | do&#xA;&#x9;&#x9;&#x9;&#x9;if subObj.isComposite then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ((self.get(subObj).getMetaClass.typeDefinition.name.equals(&quot;ReflectiveSequence&quot;)) or (self.get(subObj).getMetaClass.typeDefinition.name.equals(&quot;ReflectiveCollection&quot;))) then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var subObjInstances : kermeta::standard::Collection&lt;kermeta::language::structure::Object>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;subObjInstances ?= self.get(subObj)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;subObjInstances.each{aSubObjInstances | do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;aSubObjInstances.checkAllInvariants&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.get(subObj).checkAllInvariants&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="equals">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.equals(self, element)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="element" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="isNotEqual">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := equals(element).~not&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="element" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="isKindOf">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := self.getMetaClass.equals(cl)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="cl" eType="/1/language/structure/Class"/>
          </eOperations>
          <eOperations name="get">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Object.get(self, ~property)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Property"/>
            </eParameters>
          </eOperations>
          <eOperations name="set">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;if element.isInstanceOf(~property.type) then&#xA;&#x9;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.~set(self, ~property, element)&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;var e : kermeta::exceptions::IncompatibleTypeError init kermeta::exceptions::IncompatibleTypeError.new&#xA;&#x9;&#x9;e.message := ((((((((((((&quot;IncompatibleTypeError : Cannot set property &quot;) + (~property.name))) + (&quot; of object &quot;))) + (self.toString))) + (&quot; to &quot;))) + (element.toString))) + (&quot;.&quot;))&#xA;&#x9;&#x9;raise e&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Property"/>
            </eParameters>
            <eParameters name="element" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSet">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.isSet(self, ~property)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Property"/>
            </eParameters>
          </eOperations>
          <eOperations name="unset">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.unSet(self, ~property)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="property">
              <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Property"/>
            </eParameters>
          </eOperations>
          <eOperations name="oid">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.oid(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="toString">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := ((((((((&quot;[&quot;) + (self.getMetaClass.typeDefinition.qualifiedName))) + (&quot;:&quot;))) + (oid.toString))) + (&quot;]&quot;))&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isFrozen">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.isFrozen(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isVoid">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := false&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="hashcode">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.hashcode(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="freeze">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Object.freeze(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="asType">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;if isInstanceOf(type) then&#xA;&#x9;&#x9;result := self&#xA;&#xA;&#x9;else&#xA;&#x9;&#x9;raise kermeta::exceptions::TypeCastError.new&#xA;&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="type" eType="/1/language/structure/Class"/>
          </eOperations>
          <eOperations name="isInstanceOf">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.isInstanceOf(self, type)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="type" eType="/1/language/structure/Type"/>
          </eOperations>
          <eOperations name="containingResource">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Object.getContainingResource(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ModelType" eSuperTypes="/1/language/structure/Object">
          <eOperations name="new">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::ModelType.newObject(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isModelTypeOf">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::ModelType.isModelTypeOf(self, m)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="m" eType="/1/language/structure/Model"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="/1/language/structure/Object">
          <eOperations name="new">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Class.newObject(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="clone">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Class.cloneObject(self, objectToClone)&#xA;end"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Class.deepCloneObject(self, objectToClone)&#xA;end"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="equals">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Class.equals(self, other)&#xA;end"/>
            </eAnnotations>
            <eParameters name="other" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="toString">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := self.typeDefinition.name&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" ordered="false" upperBound="-1" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;var cDef : kermeta::language::structure::ClassDefinition&#xA;&#x9;cDef ?= typeDefinition&#xA;&#x9;result := cDef.ownedAttribute&#xA;end"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Property"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" ordered="false" upperBound="-1" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;var cDef : kermeta::language::structure::ClassDefinition&#xA;&#x9;cDef ?= typeDefinition&#xA;&#x9;result := cDef.ownedOperation&#xA;end"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Operation"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" ordered="false" upperBound="-1" eType="/1/language/structure/Class" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;var cDef : kermeta::language::structure::ClassDefinition&#xA;&#x9;cDef ?= typeDefinition&#xA;&#x9;var supertypes : kermeta::standard::OrderedSet&lt;kermeta::language::structure::Class> init kermeta::standard::OrderedSet&lt;kermeta::language::structure::Class>.new&#xA;&#x9;cDef.superType.each{elem | do&#xA;&#x9;&#x9;&#x9;if kermeta::language::structure::Class.isInstance(elem) then&#xA;&#x9;&#x9;&#x9;&#x9;var c : kermeta::language::structure::Class&#xA;&#x9;&#x9;&#x9;&#x9;c ?= elem&#xA;&#x9;&#x9;&#x9;&#x9;supertypes.add(c)&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end}&#xA;&#x9;result := supertypes&#xA;end"/>
            </eAnnotations>
            <eAnnotations source="kermeta">
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;var cDef : kermeta::language::structure::ClassDefinition&#xA;&#x9;cDef ?= typeDefinition&#xA;&#x9;result := cDef.isAbstract&#xA;end"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../kermeta_java.ecore#/1/language/structure/Boolean"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classDefinition" eType="/1/language/structure/ClassDefinition" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="&#x9; */"/>
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;result ?= typeDefinition&#xA;end"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermeta">
              <details key="isComposite" value="false"/>
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;result := typeDefinition.name&#xA;end"/>
            </eAnnotations>
            <eType xsi:type="ecore:EDataType" href="../kermeta_java.ecore#/1/language/structure/String"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ClassDefinition" eSuperTypes="/1/language/structure/Object">
          <eStructuralFeatures xsi:type="ecore:EReference" name="allAttribute" ordered="false" upperBound="-1" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="&#x9; */"/>
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;result := kermeta::standard::Set&lt;kermeta::language::structure::Property>.new&#xA;&#x9;result.addAll(self.ownedAttribute)&#xA;&#x9;self.superType.each{t | do&#xA;&#x9;&#x9;&#x9;if kermeta::language::structure::Class.isInstance(t) then&#xA;&#x9;&#x9;&#x9;&#x9;var c : kermeta::language::structure::Class&#xA;&#x9;&#x9;&#x9;&#x9;c ?= t&#xA;&#x9;&#x9;&#x9;&#x9;var cDef : kermeta::language::structure::ClassDefinition&#xA;&#x9;&#x9;&#x9;&#x9;cDef ?= c.typeDefinition&#xA;&#x9;&#x9;&#x9;&#x9;cDef.allAttribute.each{p | do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result.add(p)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end}&#xA;end"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Property"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="allOperation" ordered="false" upperBound="-1" changeable="false" volatile="true" transient="true" derived="true">
            <eAnnotations source="kermeta">
              <details key="documentation" value="&#x9; */"/>
              <details key="isReadOnly" value="true"/>
            </eAnnotations>
            <eAnnotations source="kermetaderivedProp.getter">
              <details key="body" value="do&#xA;&#x9;result := kermeta::standard::Set&lt;kermeta::language::structure::Operation>.new&#xA;&#x9;result.addAll(self.ownedOperation)&#xA;&#x9;self.superType.each{t | do&#xA;&#x9;&#x9;&#x9;if kermeta::language::structure::Class.isInstance(t) then&#xA;&#x9;&#x9;&#x9;&#x9;var c : kermeta::language::structure::Class&#xA;&#x9;&#x9;&#x9;&#x9;c ?= t&#xA;&#x9;&#x9;&#x9;&#x9;var cDef : kermeta::language::structure::ClassDefinition&#xA;&#x9;&#x9;&#x9;&#x9;cDef ?= c.typeDefinition&#xA;&#x9;&#x9;&#x9;&#x9;cDef.allOperation.each{p | do&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result.add(p)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;end}&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end}&#xA;end"/>
            </eAnnotations>
            <eType xsi:type="ecore:EClass" href="../kermeta_java.ecore#/1/language/structure/Operation"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="/1/language/structure/Object">
          <eOperations name="filter" ordered="false" upperBound="-1">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := contents.~select{o | do&#xA;&#x9;&#x9;&#x9;typeName.isInstance(o)&#xA;&#x9;&#x9;end}.asSet&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="typeName" eType="/1/language/structure/Type"/>
          </eOperations>
          <eOperations name="add">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;contents&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::Model.add(self, obj)&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="obj" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="remove">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;extern fr::irisa::triskell::kermeta::runtime::language::ReflectiveCollection.remove(contents, obj)&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="obj" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="addAllCompatible">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := kermeta::standard::Set&lt;kermeta::language::structure::Object>.new&#xA;&#x9;objectsToAdd.each{obj | do&#xA;&#x9;&#x9;&#x9;var addedObject : kermeta::language::structure::Object init addCompatible(obj)&#xA;&#x9;&#x9;&#x9;if addedObject.isVoid.~not then&#xA;&#x9;&#x9;&#x9;&#x9;result.add(obj)&#xA;&#xA;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;end}&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="objectsToAdd">
              <eGenericType>
                <eTypeArguments eClassifier="/1/language/structure/Object"/>
                <eClassifier xsi:type="ecore:EClass" href="../standard/collections.ecore#/1/standard/Collection"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="addCompatible">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;contents&#xA;&#x9;result := extern fr::irisa::triskell::kermeta::runtime::language::Model.addCompatible(self, objectToAdd)&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToAdd" eType="/1/language/structure/Object"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="/1/language/structure/Object">
          <eOperations name="clone">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="deepClone">
            <eAnnotations source="kermeta">
              <details key="isAbstract" value="true"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="isInstance">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := element.isInstanceOf(self)&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="element" eType="/1/language/structure/Object"/>
          </eOperations>
          <eOperations name="isSuperTypeOf">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result ?= extern fr::irisa::triskell::kermeta::runtime::language::Type.hasSubType(self, object)&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="object" eType="/1/language/structure/Type"/>
          </eOperations>
          <eOperations name="isSubTypeOf">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;result := object.isSuperTypeOf(self)&#xA;end"/>
              <details key="documentation" value=" &#x9; */"/>
            </eAnnotations>
            <eParameters name="object" eType="/1/language/structure/Type"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" eSuperTypes="/1/language/structure/Object">
          <eOperations name="qualifiedName">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;var elem : kermeta::language::structure::NamedElement init self&#xA;&#x9;result := self.name&#xA;&#x9;from elem ?= elem.container&#xA;&#x9;until elem.equals(void)&#xA;&#x9;loop&#xA;&#x9;&#x9;result := ((((elem.name) + (&quot;::&quot;))) + (result))&#xA;&#x9;&#x9;elem ?= elem.container&#xA;&#x9;end&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="/1/language/structure/Object">
          <eOperations name="clone">
            <eAnnotations source="kermeta">
              <details key="body" value="do&#xA;&#x9;raise &quot;NOT IMPLEMENTED&quot;&#xA;end"/>
              <details key="documentation" value="&#x9; */"/>
            </eAnnotations>
            <eParameters name="objectToClone" eType="/1/language/structure/Object"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="FunctionType" eSuperTypes="/1/language/structure/Object">
          <eAnnotations source="kermeta.inv">
            <details key="resultType" value="right.isKindOf(kermeta::language::structure::ProductType).~not"/>
          </eAnnotations>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
  </ecore:EPackage>
  <ecore:EAnnotation source="dependentResource">
    <references href="../Standard.ecore#/0"/>
    <references href="../Standard.ecore#/1"/>
    <references href="../Standard.ecore#/2"/>
    <references href="../standard/collections.ecore#/0"/>
    <references href="../standard/collections.ecore#/1"/>
    <references href="../standard/primitive_types.ecore#/0"/>
    <references href="../standard/primitive_types.ecore#/1"/>
    <references href="../standard/primitive_types.ecore#/2"/>
    <references href="../kermeta_java.ecore#/0"/>
    <references href="../kermeta_java.ecore#/1"/>
    <references href="../kermeta_java.ecore#/2"/>
    <references href="reflective_collections.ecore#/0"/>
    <references href="reflective_collections.ecore#/1"/>
    <references href="reflective_collections.ecore#/2"/>
    <references href="../kunit/kunit.ecore#/0"/>
    <references href="../kunit/kunit.ecore#/1"/>
    <references href="../kunit/assert.ecore#/0"/>
    <references href="../kunit/assert.ecore#/1"/>
    <references href="../kunit/assert.ecore#/2"/>
    <references href="../utils/utils.ecore#/0"/>
    <references href="../utils/utils.ecore#/1"/>
    <references href="../utils/StringBuffer.ecore#/0"/>
    <references href="../utils/StringBuffer.ecore#/1"/>
    <references href="../utils/StringBuffer.ecore#/2"/>
    <references href="../utils/hashtable.ecore#/0"/>
    <references href="../utils/hashtable.ecore#/1"/>
    <references href="../utils/hashtable.ecore#/2"/>
    <references href="../utils/stack.ecore#/0"/>
    <references href="../utils/stack.ecore#/1"/>
    <references href="../utils/stack.ecore#/2"/>
    <references href="../io/std_io.ecore#/0"/>
    <references href="../io/std_io.ecore#/1"/>
    <references href="../io/file_io.ecore#/0"/>
    <references href="../io/file_io.ecore#/1"/>
    <references href="../io/file_io.ecore#/2"/>
    <references href="../exceptions/exceptions.ecore#/0"/>
    <references href="../exceptions/exceptions.ecore#/1"/>
    <references href="../exceptions/exceptions.ecore#/2"/>
    <references href="dynamic_expression.ecore#/0"/>
    <references href="dynamic_expression.ecore#/1"/>
    <references href="dynamic_expression.ecore#/2"/>
    <references href="../persistence/resource.ecore#/0"/>
    <references href="../persistence/resource.ecore#/1"/>
    <references href="../persistence/resource.ecore#/2"/>
    <references href="../standard/java.ecore#/0"/>
    <references href="../standard/java.ecore#/1"/>
    <references href="../standard/java.ecore#/2"/>
    <references href="../ecore/ecore_compatibility.ecore#/0"/>
    <references href="../ecore/ecore_compatibility.ecore#/1"/>
    <references href="../ecore/ecore_compatibility.ecore#/2"/>
  </ecore:EAnnotation>
</xmi:XMI>
