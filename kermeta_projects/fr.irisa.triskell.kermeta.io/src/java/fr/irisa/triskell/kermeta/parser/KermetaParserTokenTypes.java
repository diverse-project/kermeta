// $ANTLR : "Kermeta.g" -> "KermetaParser.java"$

package fr.irisa.triskell.kermeta.parser;
import fr.irisa.triskell.kermeta.ast.*;
import com.ibm.eclipse.ldt.core.parser.*;

public interface KermetaParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int LITERAL_package = 4;
	int SEMI = 5;
	int ID = 6;
	int COL_COL = 7;
	int STRING_LITERAL = 8;
	int AT = 9;
	int SINGLE_LINE_COMMENT = 10;
	int MULTI_LINE_COMMENT = 11;
	int LITERAL_require = 12;
	int LITERAL_using = 13;
	int LCURLY = 14;
	int RCURLY = 15;
	int LT = 16;
	int GT = 17;
	int LITERAL_inherits = 18;
	int LITERAL_class = 19;
	int LITERAL_abstract = 20;
	int COMMA = 21;
	int COLON = 22;
	int LSQUARE = 23;
	int RSQUARE = 24;
	int MINUS_GT = 25;
	int LITERAL_Self = 26;
	int LITERAL_Void = 27;
	int HASH = 28;
	int LITERAL_attribut = 29;
	int LITERAL_reference = 30;
	int LITERAL_property = 31;
	int LITERAL_readonly = 32;
	int LITERAL_getter = 33;
	int LITERAL_is = 34;
	int LITERAL_setter = 35;
	int LPAREN = 36;
	int RPAREN = 37;
	int LITERAL_from = 38;
	int LITERAL_raises = 39;
	int LITERAL_operation = 40;
	int LITERAL_method = 41;
	int LITERAL_bag = 42;
	int LITERAL_set = 43;
	int LITERAL_seq = 44;
	int LITERAL_oset = 45;
	int DOT_DOT = 46;
	int STAR = 47;
	int PLUS = 48;
	int QMARK = 49;
	int INT_LITERAL = 50;
	int LITERAL_alias = 51;
	int LITERAL_enumeration = 52;
	int EQUALS = 53;
	int LITERAL_and = 54;
	int LITERAL_or = 55;
	int EQEQ = 56;
	int NEQ = 57;
	int GTE = 58;
	int LTE = 59;
	int MINUS = 60;
	int DIV = 61;
	int LITERAL_not = 62;
	int DOT = 63;
	int PIPE = 64;
	int LITERAL_self = 65;
	int LITERAL_super = 66;
	int LITERAL_result = 67;
	int LITERAL_do = 68;
	int LITERAL_end = 69;
	int LITERAL_function = 70;
	int LITERAL_rescue = 71;
	int LITERAL_until = 72;
	int LITERAL_loop = 73;
	int LITERAL_if = 74;
	int LITERAL_then = 75;
	int LITERAL_else = 76;
	int LITERAL_raise = 77;
	int LITERAL_var = 78;
	int LITERAL_init = 79;
	int LITERAL_extern = 80;
	int LITERAL_true = 81;
	int LITERAL_false = 82;
	int LITERAL_void = 83;
	int BANG = 84;
	int DOLLAR = 85;
	int GT_LT = 86;
	int LT_GT = 87;
	int CHAR_LITERAL = 88;
	int ESC = 89;
	int DIGIT = 90;
	int WS = 91;
}
