package fr.irisa.triskell.kermeta.ast;

import com.ibm.eclipse.ldt.core.ast.ASTNode;
import antlr.Token;

/**
 *
 * @generated by Gymnast from kermeta.ast on 22 févr. 2005 00:18:28
 */
public class CompUnit extends KermetaASTNode  {


	private PackageDecl _packageDecl;
	private ImportStmts _importStmts;
	private UsingStmts _usingStmts;
	private TopLevelDecls _topLevelDecls;

	public PackageDecl getPackageDecl() {
		return _packageDecl;
	}
	public ImportStmts getImportStmts() {
		return _importStmts;
	}
	public UsingStmts getUsingStmts() {
		return _usingStmts;
	}
	public TopLevelDecls getTopLevelDecls() {
		return _topLevelDecls;
	}


	/**
	 * @return the number of children of this ASTNode
	 */
	public int getChildCount() {
		int count = 0;
		if (_packageDecl != null) count++;
		if (_importStmts != null) count++;
		if (_usingStmts != null) count++;
		if (_topLevelDecls != null) count++;

		return count;
	}

	/**
	 * @param index the index of a child ASTNode to get
	 * @return the child ASTNode at the given index
	 * @throws IndexOutOfBoundsException when the index is out of bounds
	 */
	public ASTNode getChild(int index) {
		int count = -1;
		if ((_packageDecl != null) && (++count == index)) return _packageDecl;
		if ((_importStmts != null) && (++count == index)) return _importStmts;
		if ((_usingStmts != null) && (++count == index)) return _usingStmts;
		if ((_topLevelDecls != null) && (++count == index)) return _topLevelDecls;

		throw new IndexOutOfBoundsException();
	}
	
	/**
	 * Construct a new CompUnit.
	 */
	public CompUnit(
		PackageDecl packageDecl,
		ImportStmts importStmts,
		UsingStmts usingStmts,
		TopLevelDecls topLevelDecls
	) {
		super();

		if (packageDecl != null) {
			_packageDecl = packageDecl;
			if (_packageDecl._parent != null) throw new RuntimeException();
			_packageDecl._parent = this;
		}
		if (importStmts != null) {
			_importStmts = importStmts;
			if (_importStmts._parent != null) throw new RuntimeException();
			_importStmts._parent = this;
		}
		if (usingStmts != null) {
			_usingStmts = usingStmts;
			if (_usingStmts._parent != null) throw new RuntimeException();
			_usingStmts._parent = this;
		}
		if (topLevelDecls != null) {
			_topLevelDecls = topLevelDecls;
			if (_topLevelDecls._parent != null) throw new RuntimeException();
			_topLevelDecls._parent = this;
		}

	}

	/**
	 * This method overrides the superclass <code>acceptImpl</code> providing
	 * the same implementation.  Here <code>this</code> refers to this specific node
	 * class, so the <code>beginVisit</code> and <code>endVisit</code> methods
	 * specific to this type in the visitor will be invoked.
	 */
	public void acceptImpl(KermetaASTNodeVisitor visitor) {
		boolean visitChildren = visitor.beginVisit(this);
		if (visitChildren) visitChildren(visitor);
		visitor.endVisit(this);
	}

}
