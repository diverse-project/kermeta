@mainClass "ptpr::Main" 
@mainOperation "main"

package ptpr;

require "printer.kmt"
using kermeta::utils
class Main
{

    operation main() : Void is do 
        // The basic pretty printer
        var bpp : BasicPrettyPrinter init BasicPrettyPrinter.new
        bpp.initialize()
        
        // The class to visit
        var kmlogo : AClass init AClass.new

		// Print a package content?
		var p : kermeta::language::structure::Package init kermeta::language::structure::Package.new

		// Print a class definition
		var c : kermeta::language::structure::ClassDefinition 
	    var mc : kermeta::language::structure::Class
	    mc ?= kmlogo.getMetaClass  
	    c ?= mc.typeDefinition
	    
	    // Set the package such as it is the reference of the c's container
		p ?= c.container
		
		stdio.write(p.acceptKMStructureVisitor(bpp, 0))

    end
    
}

/** Comment for 'aclass' */
class AClass  inherits AbstractAClass
{
	attribute a : kermeta::standard::String
	/** An annotation */
	operation initialize() is do
		a :=  "initialized a"
		if (a == "Hello world") then
			stdio.writeln("Hello world")
		end
	end
	
	operation testTypedOperation<E>() is do
	
	end
	
}

abstract class AbstractAClass
{
}
