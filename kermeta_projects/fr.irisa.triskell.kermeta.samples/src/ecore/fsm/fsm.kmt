package fsm;

require "ecore.kmt"
class Main
{
	operation main() : kermeta::standard::~Void is do
		//TODO: implement operation main
	end
	operation printFSM() : kermeta::standard::~Void is do
		//TODO: implement operation printFSM
	end
	operation createFSM() : kermeta::standard::~Void is do
		//TODO: implement operation createFSM
	end
}
class FSM
{
	attribute ownedState : State[0..*]#owningFSM
	reference initialState : State[1..1]
	reference currentState : State
	reference serializer : Main
	operation run() : kermeta::standard::~Void is do
		//TODO: implement operation run
	end
	operation reset() : kermeta::standard::~Void is do
		//TODO: implement operation reset
	end
}
class State
{
	reference owningFSM : FSM[1..1]#ownedState
	attribute name : ecore::EString
	attribute outgoingTransition : Transition[0..*]#source
	reference incomingTransition : Transition#target
	operation step(c : ecore::EString) : kermeta::standard::~Void is do
		//TODO: implement operation step
	end
}
class Transition
{
	reference source : State[1..1]#outgoingTransition
	reference target : State[1..1]#incomingTransition
	attribute input : ecore::EString
	attribute output : ecore::EString
	operation fire() : ecore::EString is do
		//TODO: implement operation fire
	end
}
class FSMException
{
}
class NonDeterminism inherits FSMException
{
}
class NoTransition inherits FSMException
{
}
