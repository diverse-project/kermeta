/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.kermeta.language.structure.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.kermeta.language.structure.util.StructureAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class StructureItemProviderAdapterFactory extends StructureAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public StructureItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationItemProvider operationItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationAdapter() {
		if (operationItemProvider == null) {
			operationItemProvider = new OperationItemProvider(this);
		}

		return operationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.EnumerationLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationLiteralItemProvider enumerationLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.EnumerationLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationLiteralAdapter() {
		if (enumerationLiteralItemProvider == null) {
			enumerationLiteralItemProvider = new EnumerationLiteralItemProvider(this);
		}

		return enumerationLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.TypeVariableBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeVariableBindingItemProvider typeVariableBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.TypeVariableBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeVariableBindingAdapter() {
		if (typeVariableBindingItemProvider == null) {
			typeVariableBindingItemProvider = new TypeVariableBindingItemProvider(this);
		}

		return typeVariableBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.TypeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeDefinitionItemProvider typeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.TypeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeDefinitionAdapter() {
		if (typeDefinitionItemProvider == null) {
			typeDefinitionItemProvider = new TypeDefinitionItemProvider(this);
		}

		return typeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Class} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassItemProvider classItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Class}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassAdapter() {
		if (classItemProvider == null) {
			classItemProvider = new ClassItemProvider(this);
		}

		return classItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Enumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationItemProvider enumerationItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Enumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationAdapter() {
		if (enumerationItemProvider == null) {
			enumerationItemProvider = new EnumerationItemProvider(this);
		}

		return enumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Package} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageItemProvider packageItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Package}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageAdapter() {
		if (packageItemProvider == null) {
			packageItemProvider = new PackageItemProvider(this);
		}

		return packageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.PrimitiveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveTypeItemProvider primitiveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.PrimitiveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveTypeAdapter() {
		if (primitiveTypeItemProvider == null) {
			primitiveTypeItemProvider = new PrimitiveTypeItemProvider(this);
		}

		return primitiveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Tag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TagItemProvider tagItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Tag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTagAdapter() {
		if (tagItemProvider == null) {
			tagItemProvider = new TagItemProvider(this);
		}

		return tagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Constraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintItemProvider constraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Constraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintAdapter() {
		if (constraintItemProvider == null) {
			constraintItemProvider = new ConstraintItemProvider(this);
		}

		return constraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ClassDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassDefinitionItemProvider classDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ClassDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassDefinitionAdapter() {
		if (classDefinitionItemProvider == null) {
			classDefinitionItemProvider = new ClassDefinitionItemProvider(this);
		}

		return classDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ObjectTypeVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeVariableItemProvider objectTypeVariableItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ObjectTypeVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeVariableAdapter() {
		if (objectTypeVariableItemProvider == null) {
			objectTypeVariableItemProvider = new ObjectTypeVariableItemProvider(this);
		}

		return objectTypeVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ModelTypeVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTypeVariableItemProvider modelTypeVariableItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ModelTypeVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelTypeVariableAdapter() {
		if (modelTypeVariableItemProvider == null) {
			modelTypeVariableItemProvider = new ModelTypeVariableItemProvider(this);
		}

		return modelTypeVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Metamodel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetamodelItemProvider metamodelItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Metamodel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetamodelAdapter() {
		if (metamodelItemProvider == null) {
			metamodelItemProvider = new MetamodelItemProvider(this);
		}

		return metamodelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.VirtualType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VirtualTypeItemProvider virtualTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.VirtualType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVirtualTypeAdapter() {
		if (virtualTypeItemProvider == null) {
			virtualTypeItemProvider = new VirtualTypeItemProvider(this);
		}

		return virtualTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedTypeItemProvider unresolvedTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedTypeAdapter() {
		if (unresolvedTypeItemProvider == null) {
			unresolvedTypeItemProvider = new UnresolvedTypeItemProvider(this);
		}

		return unresolvedTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedPropertyItemProvider unresolvedPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedPropertyAdapter() {
		if (unresolvedPropertyItemProvider == null) {
			unresolvedPropertyItemProvider = new UnresolvedPropertyItemProvider(this);
		}

		return unresolvedPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedOperationItemProvider unresolvedOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedOperationAdapter() {
		if (unresolvedOperationItemProvider == null) {
			unresolvedOperationItemProvider = new UnresolvedOperationItemProvider(this);
		}

		return unresolvedOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.Using} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UsingItemProvider usingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.Using}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUsingAdapter() {
		if (usingItemProvider == null) {
			usingItemProvider = new UsingItemProvider(this);
		}

		return usingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ProductType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductTypeItemProvider productTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ProductType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductTypeAdapter() {
		if (productTypeItemProvider == null) {
			productTypeItemProvider = new ProductTypeItemProvider(this);
		}

		return productTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.FunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionTypeItemProvider functionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.FunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionTypeAdapter() {
		if (functionTypeItemProvider == null) {
			functionTypeItemProvider = new FunctionTypeItemProvider(this);
		}

		return functionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.VoidType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VoidTypeItemProvider voidTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.VoidType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVoidTypeAdapter() {
		if (voidTypeItemProvider == null) {
			voidTypeItemProvider = new VoidTypeItemProvider(this);
		}

		return voidTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedInferredType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedInferredTypeItemProvider unresolvedInferredTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedInferredType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedInferredTypeAdapter() {
		if (unresolvedInferredTypeItemProvider == null) {
			unresolvedInferredTypeItemProvider = new UnresolvedInferredTypeItemProvider(this);
		}

		return unresolvedInferredTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedTypeVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedTypeVariableItemProvider unresolvedTypeVariableItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedTypeVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedTypeVariableAdapter() {
		if (unresolvedTypeVariableItemProvider == null) {
			unresolvedTypeVariableItemProvider = new UnresolvedTypeVariableItemProvider(this);
		}

		return unresolvedTypeVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ModelTypeDefinitionBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTypeDefinitionBindingItemProvider modelTypeDefinitionBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ModelTypeDefinitionBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelTypeDefinitionBindingAdapter() {
		if (modelTypeDefinitionBindingItemProvider == null) {
			modelTypeDefinitionBindingItemProvider = new ModelTypeDefinitionBindingItemProvider(this);
		}

		return modelTypeDefinitionBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ClassDefinitionBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassDefinitionBindingItemProvider classDefinitionBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ClassDefinitionBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassDefinitionBindingAdapter() {
		if (classDefinitionBindingItemProvider == null) {
			classDefinitionBindingItemProvider = new ClassDefinitionBindingItemProvider(this);
		}

		return classDefinitionBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.EnumerationBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationBindingItemProvider enumerationBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.EnumerationBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationBindingAdapter() {
		if (enumerationBindingItemProvider == null) {
			enumerationBindingItemProvider = new EnumerationBindingItemProvider(this);
		}

		return enumerationBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.PropertyBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyBindingItemProvider propertyBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.PropertyBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyBindingAdapter() {
		if (propertyBindingItemProvider == null) {
			propertyBindingItemProvider = new PropertyBindingItemProvider(this);
		}

		return propertyBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.OperationBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationBindingItemProvider operationBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.OperationBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationBindingAdapter() {
		if (operationBindingItemProvider == null) {
			operationBindingItemProvider = new OperationBindingItemProvider(this);
		}

		return operationBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.AdaptationOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdaptationOperatorItemProvider adaptationOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.AdaptationOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdaptationOperatorAdapter() {
		if (adaptationOperatorItemProvider == null) {
			adaptationOperatorItemProvider = new AdaptationOperatorItemProvider(this);
		}

		return adaptationOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UseAdaptationOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UseAdaptationOperatorItemProvider useAdaptationOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UseAdaptationOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUseAdaptationOperatorAdapter() {
		if (useAdaptationOperatorItemProvider == null) {
			useAdaptationOperatorItemProvider = new UseAdaptationOperatorItemProvider(this);
		}

		return useAdaptationOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.PropertyAdaptationOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyAdaptationOperatorItemProvider propertyAdaptationOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.PropertyAdaptationOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdaptationOperatorAdapter() {
		if (propertyAdaptationOperatorItemProvider == null) {
			propertyAdaptationOperatorItemProvider = new PropertyAdaptationOperatorItemProvider(this);
		}

		return propertyAdaptationOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedAdaptationOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedAdaptationOperatorItemProvider unresolvedAdaptationOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedAdaptationOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedAdaptationOperatorAdapter() {
		if (unresolvedAdaptationOperatorItemProvider == null) {
			unresolvedAdaptationOperatorItemProvider = new UnresolvedAdaptationOperatorItemProvider(this);
		}

		return unresolvedAdaptationOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.AdaptationParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdaptationParameterItemProvider adaptationParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.AdaptationParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdaptationParameterAdapter() {
		if (adaptationParameterItemProvider == null) {
			adaptationParameterItemProvider = new AdaptationParameterItemProvider(this);
		}

		return adaptationParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.OperationAdaptationOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationAdaptationOperatorItemProvider operationAdaptationOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.OperationAdaptationOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationAdaptationOperatorAdapter() {
		if (operationAdaptationOperatorItemProvider == null) {
			operationAdaptationOperatorItemProvider = new OperationAdaptationOperatorItemProvider(this);
		}

		return operationAdaptationOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTypeItemProvider modelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelTypeAdapter() {
		if (modelTypeItemProvider == null) {
			modelTypeItemProvider = new ModelTypeItemProvider(this);
		}

		return modelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.FilteredMetamodelReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilteredMetamodelReferenceItemProvider filteredMetamodelReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.FilteredMetamodelReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilteredMetamodelReferenceAdapter() {
		if (filteredMetamodelReferenceItemProvider == null) {
			filteredMetamodelReferenceItemProvider = new FilteredMetamodelReferenceItemProvider(this);
		}

		return filteredMetamodelReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ModelTypeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTypeDefinitionItemProvider modelTypeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ModelTypeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelTypeDefinitionAdapter() {
		if (modelTypeDefinitionItemProvider == null) {
			modelTypeDefinitionItemProvider = new ModelTypeDefinitionItemProvider(this);
		}

		return modelTypeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.ModelTransformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTransformationItemProvider modelTransformationItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.ModelTransformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelTransformationAdapter() {
		if (modelTransformationItemProvider == null) {
			modelTransformationItemProvider = new ModelTransformationItemProvider(this);
		}

		return modelTransformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedModelTypeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedModelTypeDefinitionItemProvider unresolvedModelTypeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedModelTypeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedModelTypeDefinitionAdapter() {
		if (unresolvedModelTypeDefinitionItemProvider == null) {
			unresolvedModelTypeDefinitionItemProvider = new UnresolvedModelTypeDefinitionItemProvider(this);
		}

		return unresolvedModelTypeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.kermeta.language.structure.UnresolvedModelTransformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnresolvedModelTransformationItemProvider unresolvedModelTransformationItemProvider;

	/**
	 * This creates an adapter for a {@link org.kermeta.language.structure.UnresolvedModelTransformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnresolvedModelTransformationAdapter() {
		if (unresolvedModelTransformationItemProvider == null) {
			unresolvedModelTransformationItemProvider = new UnresolvedModelTransformationItemProvider(this);
		}

		return unresolvedModelTransformationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (operationItemProvider != null) operationItemProvider.dispose();
		if (propertyItemProvider != null) propertyItemProvider.dispose();
		if (enumerationLiteralItemProvider != null) enumerationLiteralItemProvider.dispose();
		if (typeVariableBindingItemProvider != null) typeVariableBindingItemProvider.dispose();
		if (typeDefinitionItemProvider != null) typeDefinitionItemProvider.dispose();
		if (classItemProvider != null) classItemProvider.dispose();
		if (enumerationItemProvider != null) enumerationItemProvider.dispose();
		if (packageItemProvider != null) packageItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (primitiveTypeItemProvider != null) primitiveTypeItemProvider.dispose();
		if (tagItemProvider != null) tagItemProvider.dispose();
		if (constraintItemProvider != null) constraintItemProvider.dispose();
		if (classDefinitionItemProvider != null) classDefinitionItemProvider.dispose();
		if (metamodelItemProvider != null) metamodelItemProvider.dispose();
		if (objectTypeVariableItemProvider != null) objectTypeVariableItemProvider.dispose();
		if (modelTypeVariableItemProvider != null) modelTypeVariableItemProvider.dispose();
		if (virtualTypeItemProvider != null) virtualTypeItemProvider.dispose();
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (unresolvedTypeItemProvider != null) unresolvedTypeItemProvider.dispose();
		if (unresolvedPropertyItemProvider != null) unresolvedPropertyItemProvider.dispose();
		if (unresolvedOperationItemProvider != null) unresolvedOperationItemProvider.dispose();
		if (usingItemProvider != null) usingItemProvider.dispose();
		if (productTypeItemProvider != null) productTypeItemProvider.dispose();
		if (functionTypeItemProvider != null) functionTypeItemProvider.dispose();
		if (voidTypeItemProvider != null) voidTypeItemProvider.dispose();
		if (unresolvedInferredTypeItemProvider != null) unresolvedInferredTypeItemProvider.dispose();
		if (unresolvedTypeVariableItemProvider != null) unresolvedTypeVariableItemProvider.dispose();
		if (modelTypeDefinitionBindingItemProvider != null) modelTypeDefinitionBindingItemProvider.dispose();
		if (classDefinitionBindingItemProvider != null) classDefinitionBindingItemProvider.dispose();
		if (enumerationBindingItemProvider != null) enumerationBindingItemProvider.dispose();
		if (propertyBindingItemProvider != null) propertyBindingItemProvider.dispose();
		if (operationBindingItemProvider != null) operationBindingItemProvider.dispose();
		if (adaptationOperatorItemProvider != null) adaptationOperatorItemProvider.dispose();
		if (useAdaptationOperatorItemProvider != null) useAdaptationOperatorItemProvider.dispose();
		if (propertyAdaptationOperatorItemProvider != null) propertyAdaptationOperatorItemProvider.dispose();
		if (unresolvedAdaptationOperatorItemProvider != null) unresolvedAdaptationOperatorItemProvider.dispose();
		if (adaptationParameterItemProvider != null) adaptationParameterItemProvider.dispose();
		if (operationAdaptationOperatorItemProvider != null) operationAdaptationOperatorItemProvider.dispose();
		if (modelTypeItemProvider != null) modelTypeItemProvider.dispose();
		if (filteredMetamodelReferenceItemProvider != null) filteredMetamodelReferenceItemProvider.dispose();
		if (modelTypeDefinitionItemProvider != null) modelTypeDefinitionItemProvider.dispose();
		if (modelTransformationItemProvider != null) modelTransformationItemProvider.dispose();
		if (unresolvedModelTypeDefinitionItemProvider != null) unresolvedModelTypeDefinitionItemProvider.dispose();
		if (unresolvedModelTransformationItemProvider != null) unresolvedModelTransformationItemProvider.dispose();
	}

}
