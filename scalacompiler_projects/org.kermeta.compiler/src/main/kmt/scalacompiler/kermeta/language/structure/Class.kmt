/* $Id:$
 * Creation : 2010-01-15
 * Licence  : EPL 
 * Copyright: IRISA/INRIA
 * Authors  : 
 *            
 */
package kermeta::language::structure;

require kermeta
// require "http://www.kermeta.org/kermeta/1_2_0//kermeta"
// require "platform:/plugin/fr.irisa.triskell.kermeta.model/build/ecore/kermeta_java.ecore"
require "../../../ScalaCompilerContext.kmt"
require "ParameterizedType.kmt"
require "Object.kmt"
require "Package.kmt"


using kermeta::standard
using kermeta::utils
using scalacompiler

aspect class Class inherits ParameterizedType{
   /**
    * Generate Scala code
    */
   method generateScala(context : ScalaCompilerContext, res : kermeta::utils::StringBuffer)   is do
		var pack : String init self.typeDefinition.container.asType(Package).getQualifiedName 
		pack:=context.getPackageEquivalence(pack)
		var s : String init pack + "."+self.typeDefinition.asType(ClassDefinition).name 
		res.append(context.getTypeEquivalence(s))
   end
   
    method getQualifiedNameCompilo(context : ScalaCompilerContext):String  is do
		result := self.typeDefinition.getQualifiedNameCompilo(context)
	end
   
}