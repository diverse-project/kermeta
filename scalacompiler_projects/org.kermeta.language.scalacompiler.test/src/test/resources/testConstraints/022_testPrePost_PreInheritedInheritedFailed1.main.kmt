// $Id: 022_testPrePost_PreInheritedInheritedFailed1.main.kmt,v 1.3 2008-07-31 16:11:48 dvojtise Exp $
@mainClass "prepost_PreInheritedInheritedFailed1::Main"
@mainOperation "main"


package prepost_PreInheritedInheritedFailed1;

require kermeta

using kermeta::standard
using kermeta::exceptions
using kermeta::kunit


class Main inherits MainParent, TestCase 
{
	reference b : Boolean
	reference strMain : Boolean
	
	operation main() : Void is do
    	var tr : TestRunner init TestRunner.new
		tr.run(Main)
		tr.printTestResult
    end		
	
    operation test0() : Void is
     do
        str := "truc"
        strParent := "trucParent"
        strParentParent := "trucParentParent"
        b := true	
 		strMain := true
 
        truc("no truc")       
 
 		// to make the execution fail:
        b := true	
 		truc("truc")
            assert(false)
        	rescue (err : ConstraintViolatedPre)
        		stdio.writeln(err.toString)
        		stdio.writeln(err.message)
        		assert(true)   
     end
     
     method truc(param : String)
     pre lapre is b
     post lapost is do strMain end
     post lapost2 is do strParent@pre == "trucParent" and str == param end
     is
     do   	
        stdio.writeln("test")
        str := param
        b := false

     end
     
}

class MainParent  inherits MainParentParent 
{
	reference strParent : String 
	
	method truc(param : String)
	pre lapreparent1 is do str == "truc" end
	post lapostparent1 is do strParent == "trucParent" end
	is
		abstract
	
}

class MainParentParent
{
	reference strParentParent : String 
	reference str : String
	
	operation truc(param : String)
	pre lapreparentparent1 is do str == "truc" end
	post lapostparentparent1 is do strParentParent == "trucParentParent" end
	is
		abstract
	
}

