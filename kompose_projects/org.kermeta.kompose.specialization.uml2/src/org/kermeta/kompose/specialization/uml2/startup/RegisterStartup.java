/*
 * code generated by Kompose Specialization wizard v0.1
 * Kompose 2008 - http://www.kermeta.org/mdk/kompose
 * 
 * author: Freddy Munoz - fmunoz(at)irisa.fr
 * author: Mickael Clavreul - mclavreu(at)irisa.fr
 * 
 * Specialization implemented by
 * author: Cyril Faucher - cyril.faucher(at)gmail.com - L3i, University of La Rochelle
 * 
 */
package org.kermeta.kompose.specialization.uml2.startup;

import java.util.List;

import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EPackage.Registry;
import org.eclipse.ui.IStartup;
import org.eclipse.uml2.uml.internal.impl.UMLPackageImpl;

public class RegisterStartup implements IStartup {
   /*
    * This method register all the meta-model packages on startup
    */
	public void earlyStartup() {

		/*String strURI = null;
		URI mmURI = null;
		Resource res = null;
		ResourceSet rs = new ResourceSetImpl();
		strURI = "platform:/plugin" + "/org.kermeta.kompose.specialization.uml2" + "/model/UML.ecore";
		mmURI=URI.createURI(strURI);
		res = rs.getResource(mmURI, true);
		for(EObject eobj : (List<EObject>)res.getContents()) {
			if( eobj instanceof EPackage) {
				registerPackages((EPackage) eobj);
			}
		}*/
		
		UMLPackageImpl.init();
	}

	private void registerPackages(EPackage pack) {
		if( pack.getNsURI() != null && !pack.getNsURI().equals("") ) {
			Registry.INSTANCE.put(pack.getNsURI(), pack);
			for(EPackage subPack :(List<EPackage>) pack.getESubpackages()) {
				registerPackages(subPack);
			}

		}
	}

}
