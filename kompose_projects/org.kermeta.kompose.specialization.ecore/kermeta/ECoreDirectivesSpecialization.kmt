/* $Id: ECoreDirectivesSpecialization.kmt,v 1.1 2009-01-14 15:35:33 mclavreu Exp $ 
 * Creation : January 5, 2009
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            mclavreu
 */
package kompose;


require kermeta
//require "platform:/resource/org.kermeta.kompose.core.model/kermeta/kompose.kmt"
require "platform:/plugin/org.kermeta.kompose.core.model/kermeta/kompose.kmt"
require "http://www.eclipse.org/emf/2002/Ecore"
using ecore
using kompose
using kermeta::language::structure

aspect class Remove {
	method execute () : Void is do
		// resolve the target object
		var targetObj : Mergeable init resolveTarget
		// find the property
		var prop : Property init getProperty(targetObj)
		// get value
		var val : Object init resolveValue
		var c : kermeta::standard::Collection<Object> 
		c ?= targetObj.get(prop)
		stdio.writeln(prop.name)
		if prop.name.equals("eSuperTypes") then
			var aClass : EClass
			var o : Object
			o := targetObj
			aClass ?= o			
			var generic : EGenericType init aClass.eGenericSuperTypes.detect{
			generic| not aClass.eSuperTypes.select{t|t.equals(generic.eClassifier)}.isEmpty}
			aClass.eGenericSuperTypes.each{t|stdio.writeln(t.eClassifier.name.equals(aClass.name).toString)}
			stdio.writeln(aClass.name)
			stdio.writeln("slurp "+aClass.eGenericSuperTypes.one.eClassifier.name)
			aClass.eGenericSuperTypes.remove(generic)
			//aClass.eSuperTypes.remove(val)
			c.remove(val)
		else
			c.remove(val)
		end
	end
}