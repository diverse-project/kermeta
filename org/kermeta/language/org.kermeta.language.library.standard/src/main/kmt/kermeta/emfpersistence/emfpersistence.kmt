

using kermeta::standard::*
using kermeta::utils::*
using org::kermeta::language::structure::*
using kermeta::exceptions::*

package kermeta{

package emfpersistence{


@CompilerIgnore "true"
class Resource {        @CompilerIgnore "true"
         operation load(arg0:Map<Object,Object>) : Void is do

          end
          /** Saves the resource using the specified options.
           * save is "safe" in the sense that unlike the original EMF version, if the user creates dangling in it, the save will automatically try to patch the resulting xmi file by adding the dangling element at the root of the resource
           */
        @CompilerIgnore "true"
         operation save(arg0:Map<Object,Object>) : Void is do

          end
        @CompilerIgnore "true"
         operation delete(arg0:Map<Object,Object>) : Void is do

          end
        @CompilerIgnore "true"
         operation unload() : Void is do

          end
        @CompilerIgnore "true"
         operation getURI() : URI is do

          end
        @CompilerIgnore "true"
         operation isLoaded() : Boolean is do

          end
        @CompilerIgnore "true"
         operation getAllContents() : Iterator<Object> is do

          end
        @CompilerIgnore "true"
         operation getContents() : OrderedSet<Object> is do

          end
        @CompilerIgnore "true"
         operation getEObject(arg0:String) : Object is do

          end
        @CompilerIgnore "true"
         operation getErrors() : OrderedSet<Object> is do

          end
        @CompilerIgnore "true"
         operation getResourceSet() : ResourceSet is do

          end
        @CompilerIgnore "true"
         operation getTimeStamp() : Long is do

          end
        @CompilerIgnore "true"
         operation getURIFragment(arg0:Object) : String is do

          end
        @CompilerIgnore "true"
         operation getWarnings() : OrderedSet<Object> is do

          end
        @CompilerIgnore "true"
         operation isModified() : Boolean is do

          end
        @CompilerIgnore "true"
         operation isTrackingModification() : Boolean is do

          end
        @CompilerIgnore "true"
         operation setModified(arg0:Boolean) : Void is do

          end
        @CompilerIgnore "true"
         operation setTimeStamp(arg0:Long) : Void is do

          end
        @CompilerIgnore "true"
         operation setTrackingModification(arg0:Boolean) : Void is do

          end
        @CompilerIgnore "true"
         operation setURI(uri:URI) : Void is do

          end
        @CompilerIgnore "true"
         operation eAdapters() : OrderedSet<Object> is do

          end
        @CompilerIgnore "true"
         operation eDeliver() : Boolean is do

          end
        @CompilerIgnore "true"
         operation eSetDeliver(arg0:Boolean) : Void is do

          end
}
@CompilerIgnore "true"
class ResourceSet {        @CompilerIgnore "true"
         operation getResource(arg0:String,arg1:Boolean) : Resource is do

          end
        @CompilerIgnore "true"
         operation getResources() : OrderedSet<Resource> is do

          end
        @CompilerIgnore "true"
         operation getAllContents() : Iterator<Object> is do

          end
        @CompilerIgnore "true"
         operation getEObject(arg0:String,arg1:Boolean) : Object is do

          end
        @CompilerIgnore "true"
         operation createResource(arg0:String) : Resource is do

          end
        @CompilerIgnore "true"
         operation createResource(arg0:String,arg1:String) : Resource is do

          end
        @CompilerIgnore "true"
         operation getAdapterFactories() : OrderedSet<Object> is do

          end
        @CompilerIgnore "true"
         operation getLoadOptions() : Map<Object,Object> is do

          end
        @CompilerIgnore "true"
         operation eAdapters() : OrderedSet<Object> is do

          end
        @CompilerIgnore "true"
         operation eDeliver() : Boolean is do

          end
        @CompilerIgnore "true"
         operation eSetDeliver(arg0:Boolean) : Void is do

          end
        @CompilerIgnore "true"
         operation resolveAllProxies() : Void is do

          end
}

}

}
