<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>language.root</artifactId>
		<groupId>org.kermeta.language</groupId>
		<version>2.0.1-SNAPSHOT</version>
	</parent>
	<!-- workaround bug apt !? -->
	<!-- <groupId>org.kermeta.language</groupId> <version>2.0.1-SNAPSHOT</version> 
		<properties> <kermeta.version>2.0.1-SNAPSHOT</kermeta.version> <art2.version>2.2.1-beta2</art2.version> 
		</properties> -->
	<modelVersion>4.0.0</modelVersion>
	<artifactId>language.merger.binarymerger</artifactId>
	<packaging>jar</packaging>
	<name>language.merger.binarymerger :: binary merger for Kermeta 2</name>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>language.model</artifactId>
			<version>${kermeta.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.irisa.triskell.kermeta</groupId>
			<artifactId>kermeta.model</artifactId>
			<version>${kermeta.model.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.kermeta.eclipse</groupId>
					<artifactId>org.eclipse.core.runtime</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kermeta.language</groupId>
			<artifactId>language.framework.scala</artifactId>
			<version>${framework.scala.version}</version>
		</dependency>
		<!-- <dependency> <groupId>${project.groupId}</groupId> <artifactId>language.api</artifactId> 
			<version>${kermeta.version}</version> </dependency> <dependency> <groupId>${project.groupId}</groupId> 
			<artifactId>language.api.tests</artifactId> <version>${kermeta.version}</version> 
			<scope>test</scope> <type>jar</type> </dependency> -->
		<dependency>
			<groupId>org.kermeta.emf</groupId>
			<artifactId>emf.lib</artifactId>
			<version>${emf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kermeta.language</groupId>
			<artifactId>language.merger.binarymerger.api</artifactId>
			<version>${kermeta.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.kermeta.language</groupId> <artifactId>language.api.tests</artifactId> 
			<version>${kermeta.version}</version> <type>pom</type> <scope>test</scope> 
			<exclusions> <exclusion> <groupId>org.kermeta.traceability</groupId> <artifactId>traceability.model</artifactId> 
			</exclusion> </exclusions> </dependency> -->
		<!-- Test dependencies -->
		
		
		
		<dependency>
			<groupId>org.kermeta.language</groupId>
			<artifactId>language.helper.tests</artifactId>
			<version>${kermeta.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Kermeta Compiler plugin -->

			<plugin>
				<groupId>org.kermeta.language</groupId>
				<artifactId>language.compiler.mavenplugin</artifactId>
				<version>${language.compiler.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>src/generated/km/km_BinaryMerger.km</model>
							<targetGroupId>${project.groupId}</targetGroupId>
							<targetArtifactId>${project.artifactId}</targetArtifactId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Add generated source to build cycle -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/kermeta</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Scala plugin : allow to compile Scala file -->
			<!-- <plugin> <groupId>org.scala-tools</groupId> <artifactId>maven-scala-plugin</artifactId> 
				<executions> <execution> <id>scala-compile-first</id> <phase>process-resources</phase> 
				<goals> <goal>add-source</goal> <goal>compile</goal> </goals> </execution> 
				<execution> <id>scala-test-compile</id> <phase>process-test-resources</phase> 
				<goals> <goal>testCompile</goal> </goals> </execution> </executions> <configuration> 
				<jvmArgs> <jvmArg>-Xmx1024m</jvmArg> </jvmArgs> <launchers> <launcher> <id>language.merger</id> 
				<mainClass>runner.MainRunner</mainClass> -->  <!-- args are optional <args> <arg>arg1</arg> </args> -->
			<!-- </launcher> </launchers> </configuration> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<includes>
						<include>**/*TestSuite.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>

				<configuration>
					<archive>
						<!-- <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile> -->
						<manifestEntries>
							<Bundle-SymbolicName>org.kermeta.${project.artifactId}</Bundle-SymbolicName>
							<Bundle-Name>${project.name}</Bundle-Name>
							<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
							<Bundle-ClassPath>.</Bundle-ClassPath>
							<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
							<Bundle-Activator>org.kermeta.language.merger.binarymerger.internal.Activator</Bundle-Activator>
							<Export-Package>
								org.kermeta.language.merger.binarymerger
                        </Export-Package>
							<Require-Bundle>
								org.kermeta.scala.scala-library,
								fr.irisa.triskell.kermeta.model,
								org.kermeta.language.model,
								org.kermeta.language.merger.binarymerger.api,
								org.kermeta.language.framework.scala,
								org.kermeta.utils.systemservices.api,
								org.kermeta.language.helper.test
                        </Require-Bundle>
							<Import-Package>
								kermeta.persistence,
								org.eclipse.emf.common.notify,
								org.eclipse.emf.common.util,
								org.eclipse.emf.ecore,
								org.eclipse.emf.ecore.impl,
								org.eclipse.emf.ecore.resource,
								org.eclipse.emf.ecore.util,
								org.eclipse.emf.ecore.xmi,
								org.eclipse.emf.ecore.xmi.impl,
								org.kermeta.language.structure,
								org.kermeta.language.helper.test.utils,
								org.osgi.framework;version="[1.5,2)",
								org.slf4j;version="[1.5,2)"
                        </Import-Package>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- Create a correct OSGI bundle -->
			<!-- <plugin> <groupId>org.apache.felix</groupId> <artifactId>maven-bundle-plugin</artifactId> 
				<version>2.1.0</version> <extensions>true</extensions> <configuration> <instructions> 
				<Bundle-SymbolicName>org.kermeta.${project.artifactId}</Bundle-SymbolicName> 
				<Bundle-Vendor>${bundle.vendor}</Bundle-Vendor> <Bundle-ClassPath>.</Bundle-ClassPath> 
				<Export-Package> org.kermeta.language.merger.binarymerger.* </Export-Package> 
				<Require-Bundle> -->  <!-- avoid splitted package issue, must require some eclipse bundle -->
			<!-- org.eclipse. -->
			<!-- </Require-Bundle> <Private-Package> </Private-Package> --><!-- use the ! for avoiding to import some packages that are already there 
				with the Require-Bundle Be careful some Packages does also come from framework.scala, 
				they must be added even if present locally in this jar -->
			<!-- <Import-Package> org.kermeta.*, org.eclipse.emf.*, scala.*, org.slf4j.*;version="${slf4j.version.range}", 
				org.osgi.framework;version="[1.5,2)", ScalaAspect.org.kermeta.language.structure, 
				runner </Import-Package> -->
			<!-- add extra element in the manifest, copy them from this file ex: Bundle-ActivationPolicy: 
				lazy -->
			<!-- <_include>resources/META-INF/MANIFEST-part.MF</_include> -->
			<!-- </instructions> </configuration> </plugin> -->
		</plugins>
	</build>
</project>

