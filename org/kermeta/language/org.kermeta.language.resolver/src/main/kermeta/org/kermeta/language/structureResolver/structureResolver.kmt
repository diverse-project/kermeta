package org::kermeta::language::structure;
require kermeta
require "platform:/lookup/org.kermeta.language.model/src/main/ecore/kermeta.ecore"

require "platform:/lookup/org.kermeta.language.mdk/src/kmt/language/helpers/eachOwnedElement_kermeta_aspect.kmt"
require "ResolverContext_Aspect.kmt"
require "resolveStructureType.kmt"
require "resolveStructureOperation.kmt"
require "resolveStructureProperty.kmt"
using kermeta::standard
using org::kermeta::language::resolver

aspect class ModelingUnit inherits TypeDefinitionContainer, KermetaModelElement {
	/* *
	*	The Structure resolving is done in 2 passes : first pass set all types	
	*	and second pass set unresolved operations and unresolved properties
	*	To resolve a superOperation, it is required that the whole inheritance hierarchy
	*	is resolved
	*/
	/*operation resolveWholeStructure(context : LanguageVisitorContext) is do
		
		
		self.resolveStructureInheritance(context)
		self.resolveStructure(context)
		
	end*/
	

}

aspect class KermetaModelElement{

	/**
	* resolve only unresolvedType
	
	*/
	operation resolveStructureInheritance(context : LanguageVisitorContext) is do
		self.eachOwnedElement{ e|
				if e.isInstanceOf(KermetaModelElement) then
					e.asType(KermetaModelElement).resolveStructureInheritance(context)
				end
			e}// must return somthing for scala compiler to work		
		self.resolveStructureType(context)
		
	end
	/**
	* resolve unresolvedOperation (with resolved from:unresolvedType) and unresolvedProperty 
	*
	*/
	operation resolveStructure(context : LanguageVisitorContext) is do
		self.eachOwnedElement{ e|
				if e.isInstanceOf(KermetaModelElement) then
					e.asType(KermetaModelElement).resolveStructure(context)
				end
			e}// must return somthing for scala compiler to work		
		self.resolveStructureOperation(context)
		self.resolveStructureProperty(context)
	end
}

aspect class ClassDefinition inherits GenericTypeDefinition{
	method resolveStructureInheritance(context : LanguageVisitorContext) is do
		context.currentClassDef:=self
		super(context)
		context.currentClassDef:=void
	end

	method resolveStructure(context : LanguageVisitorContext) is do
		context.currentClassDef:=self
		super(context)
		context.currentClassDef:=void
	end
}

aspect class Operation inherits MultiplicityElement, AbstractOperation{

	method resolveStructureInheritance(context : LanguageVisitorContext) is do
		context.currentOperation:=self
		super(context)
		context.currentOperation:=void
	end
	method resolveStructure(context : LanguageVisitorContext) is do
		context.currentOperation:=self
		super(context)
		context.currentOperation:=void
	end
}

aspect class Package inherits NamedElement, TypeDefinitionContainer{
	method resolveStructureInheritance(context : LanguageVisitorContext) is do
		context.currentPackage:=self
		super(context)
		if container.isInstanceOf(Package) then
			context.currentPackage?=container
		else
			context.currentPackage:=void
		end
	end

	method resolveStructure(context : LanguageVisitorContext) is do
		context.currentPackage:=self
		super(context)
		if container.isInstanceOf(Package) then
			context.currentPackage?=container
		else
			context.currentPackage:=void
		end
	end
}