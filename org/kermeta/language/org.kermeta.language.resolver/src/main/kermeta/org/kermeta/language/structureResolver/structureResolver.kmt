package org::kermeta::language::structure;
require kermeta
require "platform:/lookup/org.kermeta.language.model/src/main/ecore/kermeta.ecore"

require "platform:/lookup/org.kermeta.language.mdk/src/kmt/language/helpers/eachOwnedElement_kermeta_aspect.kmt"
require "ResolverContext_Aspect.kmt"
require "resolveStructureType.kmt"
require "resolveStructureOperation.kmt"
require "resolveStructureProperty.kmt"
using kermeta::standard
using org::kermeta::language::resolver
aspect class ModelingUnit {
	operation resolveWholeStructure() is do
	
		//init of context
		var context : LanguageVisitorContext init LanguageVisitorContext.new.initialize(self)
		
		self.resolveStructure(context)
		
	end
	

}

aspect class KermetaModelElement{

	operation resolveStructure(context : LanguageVisitorContext) is do
		self.eachOwnedElement{ e|
				if e.isInstanceOf(KermetaModelElement) then
					e.asType(KermetaModelElement).resolveStructure(context)
				end
			e}// must return somthing for scala compiler to work		
		self.resolveStructureType(context)
		self.resolveStructureOperation(context)
		self.resolveStructureProperty(context)
	end
}

aspect class ClassDefinition{

	method resolveStructure(context : LanguageVisitorContext) is do
		context.currentClassDef:=self
		super(context)
		context.currentClassDef:=void
	end
}

aspect class Operation{

	method resolveStructure(context : LanguageVisitorContext) is do
		context.currentOperation:=self
		super(context)
		context.currentOperation:=void
	end
}

aspect class Package{

	method resolveStructure(context : LanguageVisitorContext) is do
		context.currentPackage:=self
		super(context)
		if container.isInstanceOf(Package) then
			context.currentPackage?=container
		else
			context.currentPackage:=void
		end
	end
}