package org::kermeta::language::structure;
require kermeta
require "platform:/lookup/org.kermeta.language.model/src/main/ecore/kermeta.ecore"
require "ResolverContext_Aspect.kmt"
using kermeta::standard
using org::kermeta::language::resolver

aspect class KermetaModelElement{

	operation resolveStructureProperty(context : LanguageVisitorContext) is do
		
	end
}

aspect class UnresolvedProperty inherits AbstractProperty, Unresolved {

	reference correspondingProperty : Property

	operation findCorrespondingProperty (context : LanguageVisitorContext):Property is do
		
		//corresponding Property is in the typeDefinition of the type of containing property
		var correspondingPropertyClass : Class
		correspondingPropertyClass?= container.asType(Property).type
		if correspondingPropertyClass.isVoid then
			result:=void
		else
			var cd : ClassDefinition init correspondingPropertyClass.typeDefinition.asType(ClassDefinition)
			correspondingProperty:=cd.ownedAttribute.detect{x|
				x.name==propertyIdentifier
				}
			result:=correspondingProperty
		end
	end
}
aspect class Property inherits MultiplicityElement, AbstractProperty{
	method resolveStructureProperty(context : LanguageVisitorContext) is do
		if not opposite.isVoid then
			if opposite.isInstanceOf(UnresolvedProperty) then
				var unresolvedP : UnresolvedProperty init opposite.asType(UnresolvedProperty)
				unresolvedP.findCorrespondingProperty(context)
				if not unresolvedP.correspondingProperty.isVoid then
					opposite:=unresolvedP.correspondingProperty
					ownedUnresolvedProperties.remove(unresolvedP)
				end
			end
		end
	end

}

