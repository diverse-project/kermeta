/* $Id:$ 
 * Creation : September 14, 2010
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            jfalcou
 */


package org::kermeta::language::structure;

require kermeta

require "platform:/lookup/org.kermeta.language.model/src/main/ecore/kermeta.ecore"

using kermeta::standard

aspect class ModelingUnit
{
	/**
	 * Fake invariant for testing purposes
	 */
	@Scope "LOADED MERGED RESOLVED"
	//@IsWarning "true"
	inv fake_invariant is do
		// TODO
		// To code this this would be probably easier if we reuse part of the code from resolver (using a require ?)
		true
	end
	
	/**
	 * Deprecated use of mainClass and mainOperation tags.
	 * Consider moving these to the project's kp file.
	 */
	@Scope "MERGED"
	@IsWarning "true"
	inv deprecated_mainClassOperation is do
		not (self.kOwnedTags.exists{ t | t.name=="mainClass"} or
		self.kOwnedTags.exists{ t | t.name=="mainOperation"} )
		
	end
	
	/**
	 * The ModelingUnit has two sub packages with the same name.
	 * This might be due to packages having the same name but
	 * different nsUris coming from different files in the project.
	 */
	@Scope "MERGED"
	inv no_subpackages_with_same_name is do
		
		//stdio.writeln("checking ModelingUnit " + self.name + " for no_subpackages_with_same_name")
		
		var names : Collection<String> init Sequence<String>.new
		var invResult : Boolean init true

		self.packages.each{ p | 
			if (names.contains(p.name))
			then
				invResult:=false
			else
				names.add(p.name)
			end
				
		}
		invResult
	end
	
}