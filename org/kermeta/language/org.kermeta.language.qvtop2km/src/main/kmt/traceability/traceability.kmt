package org::kermeta::traceability;


require kermeta

/**
 * This class represents a trace model.
 * This is a set of traces, references and messages.
 */
		class TracePackage
		{
	
/** Set of references to the traced objects of the trace model */
			attribute references : set Reference[0..*]#traceMdl

	
			attribute subpackage : TracePackage[0..*]

	
			attribute contexts : Object[0..*]

		}

/**
 * This class represents a trace element
 */
		class Trace
		{

			reference sourceElem : Traceable#target


			reference targetElem : Traceable#source


			reference context : Object

		}

/**
 * This abstract class represents a reference to a concrete object
 */
		abstract class Reference inherits Traceable
		{

/** Link to the containing trace model */
			reference traceMdl : TracePackage[1..1]#references

		}

/**
 * This class represents a reference to a concrete object contained by a file
 */
		abstract class FileReference inherits Reference
		{

/** URI of the file containing the referred concrete object */
			attribute fileURI : String[1..1]


			attribute timeStamp : String

		}
		alias String : kermeta::standard::String;

/**
 * This class represents a reference to a textual file concrete object
 */
		class TextReference inherits FileReference
		{
			inv validTextRef is
				do
					(charEndOffset) >= (charBeginOffset)
				end
			
/** Starting line number */
			attribute charBeginOffset : Integer[1..1]


/** Starting character number */
			attribute charEndOffset : Integer[1..1]

		}
		alias Integer : kermeta::standard::Integer;

/**
 * This class represents a reference to a XML concrete object
 */
		class XMLReference inherits FileReference
		{

/** XML link to the referred XML concrete object */
			attribute xPointer : String[1..1]

		}

/**
 * This class represents a reference to a model element
 */
		class ModelReference inherits Reference
		{

			reference refObject : Object[1..1]

		}
		alias Object : kermeta::standard::Object;

		class QualifiedNameReference inherits Reference
		{

			attribute qualifiedName : String[1..1]

		}

		abstract class Traceable
		{

			attribute target : Trace[0..*]#sourceElem


			reference source : Trace[0..*]#targetElem

		}
	}

}

