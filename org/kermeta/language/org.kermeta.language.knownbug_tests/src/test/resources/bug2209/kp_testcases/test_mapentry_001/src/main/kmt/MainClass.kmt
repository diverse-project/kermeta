using kermeta::standard
using kermeta::io::StdIO => stdio
using kermeta::kunit
using MM_with_Maps

package mainPackage{
	class MainClass  inherits TestCase
	{
		operation mainOperation() : Void is do 
			var testRunner : TestRunner init TestRunner.new
	       	testRunner.run(self.getMetaClass)
	       	testRunner.printTestResult
		end
		
		operation testNewStringToString() is do
			var root : Root init Root.new
			assert(root.stringToStringMap.isEmpty)
			
			var s2sentry : StringToString := StringToString.new
			s2sentry.key := "foo"
			s2sentry.~value := "bar"
			root.stringToStringMap.add(s2sentry)
			
			assert(not root.stringToStringMap.isEmpty)
						
		end
		
		operation testStringToStringFromModel() is do
			// TODO: implement 'mainOperation' operation
			// B is pure ecore model element
	/*		var root : Root init B.new
			b1.name := "bfoo"
			var b2 : B
			b2 ?= extern org::eclipse::emf::ecore::util::EcoreUtil.copy(b1)
			stdio.writeln(b1.toString)
			stdio.writeln(b2.toString)
			assert(b1 != b2)
			assert(b1.name == b2.name)
		*/	//b2 := (extern org::eclipse::emf::ecore::util::EcoreUtil.copy(b1)).asType(B)
			//stdio.writeln(b2.toString)
			
		end
	}
}