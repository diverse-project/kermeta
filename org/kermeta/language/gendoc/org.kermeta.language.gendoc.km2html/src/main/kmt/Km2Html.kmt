using kermeta
using kermeta::standard
using org::kermeta::language::structure
using kermeta::emfpersistence
require "helpers/EcoreUtil.kmt"
require "helpers/ecore_behavior.kmt"
require "helpers/EcoreDocHelper.kmt"
using kermeta::standard
using kermeta::utils
using kermeta::io
using ecore
using EcoreUtil
using EcoreDocHelper  

package gendoc{
	/** 
	 * test documentation on MainClass 
	 */
	
	class HtmlGenerator
	{
		//@main ""
		operation generateHtml(inputModelUrl : String , outputFolderUrl : String, excludePackages : String, documentName : String) : Void is do 
			
			kermeta::io::StdIO.writeln("Generating Html from " + inputModelUrl)
			var repository : ResourceSet init ResourceSet.new
			var resource : Resource init repository.createResource(inputModelUrl)
			resource.load(void) 
			
			// Retrieve km rooot
			//var mu : ModelingUnit init resource.getContents().first
			from var it : Iterator<Object> init resource.getContents.iterator
	       	until it.isOff
	       	loop
	           var next : Object init it.next
	           if (next.isInstanceOf(ModelingUnit)) then                 
	           		var mu : ModelingUnit
	           		mu ?= next
	           		mu.generateHtml(outputFolderUrl, excludePackages)
	           		mu.generateXmlToc(outputFolderUrl, excludePackages, documentName)
					kermeta::io::StdIO.writeln("Html generated in " + outputFolderUrl)
	           		
	           end
	       	end
			//mu.generateHtml()
		end
		
		
		
		
	}
}