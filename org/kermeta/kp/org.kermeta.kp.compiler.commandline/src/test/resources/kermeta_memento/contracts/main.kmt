using kermeta::standard::String => String

package pkg {
	class Main {
		@main ""
		operation main() is do
			// new tool : its stringTable must be initialized
			var st1 : pkg::StringTool init pkg::StringTool.new
			st1.stringTable := kermeta::standard::Set<kermeta::standard::String>.new
			var s1 : kermeta::standard::String
			var s2 : kermeta::standard::String
			do
				// void strings should raise exception
				st1.concatenate(s1, s2)
				rescue (err : kermeta::exceptions::ConstraintViolatedPre)
				kermeta::io::StdIO.writeln("expected err " + err.toString)
			end
			do
				// new tool without table
				var st2 : pkg::StringTool init pkg::StringTool.new
				st2.checkInvariants
				rescue (err : kermeta::exceptions::ConstraintViolatedInv)
				kermeta::io::StdIO.writeln("expected err " + err.toString)
			end
		end
	}
	
	class StringTool {
		attribute stringTable : kermeta::standard::Set<kermeta::standard::String>
		
		inv notable is stringTable != void
		
		
		operation concatenate(s1 : String, s2 : String) : String 
			pre paramnotvoid is do
				s1 != void and s2 != void
			end
		is do
			result := s1.append(s2)
		end
	}
}
