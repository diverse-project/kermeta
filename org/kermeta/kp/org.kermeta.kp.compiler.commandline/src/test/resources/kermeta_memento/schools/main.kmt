package CollegeMM {
	class Test {
		@main ""
		operation main() is do
			var coll : CollegeMM::College init CollegeMM::College.new
			var student : CollegeMM::Student init CollegeMM::Student.new
			var subject : CollegeMM::Subject init CollegeMM::Subject.new
			var note : CollegeMM::Note init CollegeMM::Note.new
			
			note.~value := "11".toDouble.floatValue
			student.notes.add(note)
			
			student.name := "s1"
			subject.level := CollegeMM::Level.expert
			subject.title := "title"
			coll.students.add(student)
			coll.subjects.add(subject)
		end
	}
	
	class Note {
		attribute ~value : kermeta::standard::Float
		// add the opposite for managing notes from students/matters
		reference student : Student#notes
		reference subject : Subject#notes
	}

	aspect class Student {
		reference notes : Note[0..*]#student
		property average : kermeta::standard::Float
		getter is do
			var total : kermeta::standard::Float
			notes.each{ n | total := total + n.~value }
			result := total / notes.size.floatValue
		end
	}
	
	aspect class Subject {
		reference notes : Note[0..*]#subject
		property average : kermeta::standard::Float
		getter is do
			var total : kermeta::standard::Float
			notes.each{ n | total := total + n.~value }
			result := total / notes.size.floatValue
		end
	}
}
	
	