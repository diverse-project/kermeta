package ex::kermeta::kompren::ram;

using kermeta::emfpersistence
using kermeta::standard
using kermeta::utils
using ram
using kermeta::io::StdIO => stdio

class Test {
	operation main() : Void is do
		var inputRep : ResourceSet init ResourceSet.new
		var inputRes : Resource
		inputRes ?= inputRep.createResource("platform:/resource/examples.RAMSlicer/models/design_patterns/Command.ram", 
											"platform:/resource/examples.RAMSlicer/RAM.ecore")
		inputRes.load(void)
		var rootAspect : Aspect
		rootAspect ?= inputRes.getContents.one
		var requiredAspects : Bag<Aspect> init Bag<Aspect>.new
		requiredAspects.add(rootAspect)
		stdio.writeln(rootAspect.name)

		var slicer : RAMSlicer init RAMSlicer.new.initialise(requiredAspects)
		slicer.launch
	end
}
