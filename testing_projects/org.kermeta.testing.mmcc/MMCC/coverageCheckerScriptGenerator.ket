<%@ket
package="mmcc"
require="kermeta"
using="kermeta::standard"
class="CoverageCheckerScriptGenerator"
parameters="fragmentsModelName : String, sourceMMName : String, path : String,classesQualifiedNames:Sequence<String>"
%>
/*THIS CLASS IS GENERATED BY BuildModelFragments.kmt*/ 


package mmcc; 

require kermeta 
require "<%=sourceMMName%>"
require "platform:/resource/org.kermeta.testing.mmcc/MMCC/CheckInputModels.kmt" 
using kermeta::persistence 
using kermeta::standard 
using kermeta::language
using kermeta::language::structure


class ModelsCoverageChecker{ 

	operation checkModelsCoverage(models : OrderedSet<String>) : Void is do 
		var modelsToCheck : OrderedSet<EMFResource> init OrderedSet<EMFResource>.new
		var repository : EMFRepository init EMFRepository.new 
		models.each{model | 
			var resource : EMFResource    resource ?= repository.createResource(model, "<%=sourceMMName%>") 
			resource.load 
			modelsToCheck.add(resource) 
		} 

		var mmClasses : Class[*] init OrderedSet<Class>.new 
		<%classesQualifiedNames.each{ qn | %>
	 	mmClasses.add(<%=qn.toString%>)
	 	<%}%>

		var c: CheckInputModels init CheckInputModels.new 
		c.checkInputModels(repository,modelsToCheck, "<%=fragmentsModelName%>","<%=sourceMMName%>", mmClasses) 
	end 
} 
