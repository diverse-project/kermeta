<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-05-16T09:59:29" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.1</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="ModÃ¨le UML" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="70" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="81" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="82" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="83" isRoot="false" isAbstract="false" name="virtual" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="69" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="71" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="72" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="73" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="74" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="75" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="76" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="77" isRoot="false" isAbstract="false" name="unsigned int" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="78" isRoot="false" isAbstract="false" name="unsigned short" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="79" isRoot="false" isAbstract="false" name="unsigned long" />
    <UML:DataType stereotype="70" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="80" isRoot="false" isAbstract="false" name="string" />
    <UML:Entity isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="118" isRoot="false" isAbstract="false" name="first:Switch" >
     <UML:EntityAttribute attributes="" values="" dbindex_type="1100" isSpecification="false" allow_null="0" isLeaf="false" visibility="private" namespace="118" auto_increment="0" xmi.id="178" isRoot="false" initialValue="true" type="179" isAbstract="false" name="up" />
    </UML:Entity>
    <UML:Entity isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="119" isRoot="false" isAbstract="false" name="second:Switch" >
     <UML:EntityAttribute attributes="true" values="" dbindex_type="1100" isSpecification="false" allow_null="0" isLeaf="false" visibility="private" namespace="119" auto_increment="0" xmi.id="180" isRoot="false" initialValue="true" type="179" isAbstract="false" name="up" />
    </UML:Entity>
    <UML:Entity isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="120" isRoot="false" isAbstract="false" name="aBulb:Light" />
    <UML:Entity isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="121" isRoot="false" isAbstract="false" name="supply:Generator" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="179" isRoot="false" isAbstract="false" name="Boolean" />
    <UML:Entity isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="187" isRoot="false" isAbstract="false" name="aMan" />
    <UML:Entity isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="189" isRoot="false" isAbstract="false" name="aMan:Operator" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="122" name="aPowerWire" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="123" aggregation="none" type="121" name="power" />
      <UML:AssociationEnd isSpecification="false" relationship="true" visibility="public" changeability="changeable" isNavigable="true" xmi.id="124" aggregation="none" type="118" name="firstSwitch" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="125" name="aThreeWireCable" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="126" aggregation="none" type="118" name="first" />
      <UML:AssociationEnd isSpecification="false" relationship="true" visibility="public" changeability="changeable" isNavigable="true" xmi.id="127" aggregation="none" type="119" name="second" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="128" name="aPowerLine" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="129" aggregation="none" type="119" name="power" />
      <UML:AssociationEnd isSpecification="false" relationship="true" visibility="public" changeability="changeable" isNavigable="true" xmi.id="130" aggregation="none" type="120" name="light" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="190" name="operateSecond" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="191" aggregation="none" type="189" name="operator" />
      <UML:AssociationEnd isSpecification="false" relationship="true" visibility="public" changeability="changeable" isNavigable="true" xmi.id="192" aggregation="none" type="119" name="switch" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="199" name="operateFirst" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="200" aggregation="none" type="189" name="operator" />
      <UML:AssociationEnd isSpecification="false" relationship="true" visibility="public" changeability="changeable" isNavigable="true" xmi.id="201" aggregation="none" type="118" name="" />
     </UML:Association.connection>
    </UML:Association>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="104" documentation="" uniqueid="205" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="586" snapy="10" showatts="1" xmi.id="84" documentation="" type="404" showops="1" showpackage="0" name="Switch states chart" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="595" >
    <widgets>
     <statewidget statetype="0" statename="State" usesdiagramfillcolour="1" width="31" usesdiagramusefillcolour="1" x="53" y="174" linewidth="none" fillcolour="none" height="31" usefillcolor="1" isinstance="0" xmi.id="85" documentation="" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
     <statewidget statetype="1" statename="up" usesdiagramfillcolour="1" width="71" usesdiagramusefillcolour="1" x="230" y="288" linewidth="none" fillcolour="none" height="46" usefillcolor="1" isinstance="0" xmi.id="86" documentation="" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
     <statewidget statetype="1" statename="down" usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="229" y="110" linewidth="none" fillcolour="none" height="47" usefillcolor="1" isinstance="0" xmi.id="87" documentation="" showstereotype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
     <statewidget statetype="2" statename="State" usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="475" y="179" linewidth="none" fillcolour="none" height="32" usefillcolor="1" isinstance="0" xmi.id="88" documentation="" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="86" widgetaid="85" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="84" starty="194" />
       <endpoint endx="230" endy="311" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="131" y="256" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="151" text="begin" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="3" indexb="1" linewidth="none" widgetbid="87" widgetaid="86" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="253" starty="288" />
       <endpoint endx="253" endy="157" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="85" usesdiagramusefillcolour="1" x="164" y="202" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="152" text="switchDown()" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="3" indexb="2" linewidth="none" widgetbid="86" widgetaid="87" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="277" starty="157" />
       <endpoint endx="277" endy="288" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="69" usesdiagramusefillcolour="1" x="280" y="199" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="153" text="switchUp()" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" linewidth="none" widgetbid="88" widgetaid="86" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="301" starty="311" />
       <endpoint endx="475" endy="200" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="396" y="239" linewidth="none" posttext="" role="703" fillcolour="none" height="32" usefillcolor="1" pretext="" isinstance="0" xmi.id="154" text="end" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" linewidth="none" widgetbid="88" widgetaid="87" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="302" starty="133" />
       <endpoint endx="475" endy="189" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="393" y="136" linewidth="none" posttext="" role="703" fillcolour="none" height="32" usefillcolor="1" pretext="" isinstance="0" xmi.id="155" text="end" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="87" widgetaid="85" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="84" starty="184" />
       <endpoint endx="229" endy="133" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="129" y="131" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="156" text="begin" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="586" snapy="10" showatts="1" xmi.id="104" documentation="" type="404" showops="1" showpackage="0" name="Light states chart" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="595" >
    <widgets>
     <statewidget statetype="0" statename="State" usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="21" y="169" linewidth="none" fillcolour="none" height="32" usefillcolor="1" isinstance="0" xmi.id="105" documentation="" showstereotype="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
     <statewidget statetype="1" statename="On" usesdiagramfillcolour="1" width="41" usesdiagramusefillcolour="1" x="253" y="297" linewidth="none" fillcolour="none" height="28" usefillcolor="1" isinstance="0" xmi.id="106" documentation="" showstereotype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
     <statewidget statetype="1" statename="Off" usesdiagramfillcolour="1" width="41" usesdiagramusefillcolour="1" x="253" y="171" linewidth="none" fillcolour="none" height="28" usefillcolor="1" isinstance="0" xmi.id="107" documentation="" showstereotype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
     <statewidget statetype="2" statename="State" usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="489" y="169" linewidth="none" fillcolour="none" height="32" usefillcolor="1" isinstance="0" xmi.id="108" documentation="" showstereotype="1" font="Sans,10,-1,5,75,0,0,0,0,0" linecolor="none" >
      <Activities/>
     </statewidget>
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="107" widgetaid="105" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="53" starty="185" />
       <endpoint endx="253" endy="185" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="153" y="185" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="159" text="begin" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="108" widgetaid="107" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="294" starty="185" />
       <endpoint endx="489" endy="185" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="391" y="185" linewidth="none" posttext="" role="703" fillcolour="none" height="32" usefillcolor="1" pretext="" isinstance="0" xmi.id="160" text="end" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="3" indexb="1" linewidth="none" widgetbid="106" widgetaid="107" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="266" starty="199" />
       <endpoint endx="266" endy="297" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="67" usesdiagramusefillcolour="1" x="200" y="246" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="161" text="powerOn()" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="3" indexb="2" linewidth="none" widgetbid="107" widgetaid="106" roleBdoc="" documentation="" roleAdoc="" type="514" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="280" starty="297" />
       <endpoint endx="280" endy="199" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="280" y="248" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="162" text="powerOff()" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="586" snapy="10" showatts="1" xmi.id="117" documentation="" type="408" showops="1" showpackage="0" name="InitialSystem instances diagram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="595" >
    <widgets>
     <entitywidget usesdiagramfillcolour="0" width="85" usesdiagramusefillcolour="0" x="115" y="194" linewidth="none" fillcolour="#ffffc0" height="34" usefillcolor="1" isinstance="0" xmi.id="118" font="Sans,10,-1,5,75,1,0,0,0,0" linecolor="#ff0000" />
     <entitywidget usesdiagramfillcolour="0" width="106" usesdiagramusefillcolour="0" x="415" y="194" linewidth="none" fillcolour="#ffffc0" height="34" usefillcolor="1" isinstance="0" xmi.id="119" showstereotype="1" font="Sans,10,-1,5,75,1,0,0,0,0" linecolor="#ff0000" />
     <entitywidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="418" y="357" linewidth="none" fillcolour="none" height="30" usefillcolor="1" isinstance="0" xmi.id="120" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <entitywidget usesdiagramfillcolour="1" width="123" usesdiagramusefillcolour="1" x="82" y="42" linewidth="none" fillcolour="none" height="25" usefillcolor="1" isinstance="0" xmi.id="121" showstereotype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     <entitywidget usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="347" y="32" linewidth="none" fillcolour="none" height="25" usefillcolor="1" isinstance="0" xmi.id="189" showstereotype="1" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="118" widgetaid="121" xmi.id="122" linecolor="none" >
      <linepath>
       <startpoint startx="143" starty="67" />
       <endpoint endx="143" endy="194" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="77" usesdiagramusefillcolour="1" x="146" y="110" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="184" text="aPowerWire" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="91" y="69" linewidth="none" posttext="" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="167" text="power" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="77" usesdiagramusefillcolour="1" x="67" y="159" linewidth="none" posttext="" role="710" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="168" showstereotype="1" text="firstSwitch" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="119" widgetaid="118" xmi.id="125" linecolor="none" >
      <linepath>
       <startpoint startx="200" starty="211" />
       <endpoint endx="415" endy="211" />
       <point x="318" y="211" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="245" y="189" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="182" text="aThreeWireCable" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="202" y="235" linewidth="none" posttext="" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="171" text="first" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="58" usesdiagramusefillcolour="1" x="357" y="215" linewidth="none" posttext="" role="710" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="172" text="second" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="120" widgetaid="119" xmi.id="128" linecolor="none" >
      <linepath>
       <startpoint startx="468" starty="228" />
       <endpoint endx="468" endy="357" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="75" usesdiagramusefillcolour="1" x="471" y="281" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="186" text="aPowerLine" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="470" y="228" linewidth="none" posttext="" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="175" text="power" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="40" usesdiagramusefillcolour="1" x="472" y="331" linewidth="none" posttext="" role="710" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="176" text="light" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="119" widgetaid="189" xmi.id="190" linecolor="none" >
      <linepath>
       <startpoint startx="418" starty="57" />
       <endpoint endx="468" endy="194" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="134" usesdiagramusefillcolour="1" x="427" y="116" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="194" text="operateSecond" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="63" usesdiagramusefillcolour="1" x="427" y="61" linewidth="none" posttext="" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="196" text="operator" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="53" usesdiagramusefillcolour="1" x="463" y="166" linewidth="none" posttext="" role="710" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="198" text="switch" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="118" widgetaid="189" xmi.id="199" linecolor="none" >
      <linepath>
       <startpoint startx="382" starty="57" />
       <endpoint endx="171" endy="194" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="77" usesdiagramusefillcolour="1" x="285" y="111" linewidth="none" posttext="" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="203" text="operateFirst" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="63" usesdiagramusefillcolour="1" x="315" y="63" linewidth="none" posttext="" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="205" text="operator" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Vues" >
    <listitem open="1" type="801" label="Vue logique" >
     <listitem open="1" type="813" id="179" />
     <listitem open="0" type="830" label="Types de donnÃ©es" >
      <listitem open="1" type="829" id="72" />
      <listitem open="1" type="829" id="71" />
      <listitem open="1" type="829" id="74" />
      <listitem open="1" type="829" id="73" />
      <listitem open="1" type="829" id="69" />
      <listitem open="1" type="829" id="76" />
      <listitem open="1" type="829" id="75" />
      <listitem open="1" type="829" id="80" />
      <listitem open="1" type="829" id="77" />
      <listitem open="1" type="829" id="79" />
      <listitem open="1" type="829" id="78" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Vue des cas d'utilisation" />
    <listitem open="1" type="821" label="Composants" />
    <listitem open="1" type="827" label="DÃ©ploiements" />
    <listitem open="1" type="836" label="ModÃ¨le de relations entre entitÃ©s" >
     <listitem open="1" type="832" id="120" />
     <listitem open="1" type="832" id="187" />
     <listitem open="1" type="832" id="189" />
     <listitem open="1" type="832" id="118" />
     <listitem open="1" type="832" id="119" />
     <listitem open="1" type="832" id="121" />
    </listitem>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument writeOutCode="true" package="" id="179" parent_class="179" fileExt=".cpp" fileName="boolean" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;boolean.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        boolean.cpp - Copyright vmahe&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mar mai 16 2006 at 09:02:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="187" parent_class="187" fileExt=".cpp" fileName="aman" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;aman.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        aman.cpp - Copyright vmahe&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mar mai 16 2006 at 09:27:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="189" parent_class="189" fileExt=".cpp" fileName="aman:operator" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;aman:operator.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        aman:operator.cpp - Copyright vmahe&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mar mai 16 2006 at 09:31:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="190" field_type="6881382" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="190" tag="" canDelete="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="190" tag="" canDelete="false" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="190" tag="" canDelete="false" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="190" tag="" canDelete="false" writeOutText="false" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="190" tag="" canDelete="false" writeOutText="false" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="190" tag="" canDelete="false" writeOutText="false" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="199" field_type="4194304" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="199" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="199" tag="" canDelete="false" writeOutText="false" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="199" tag="" canDelete="false" writeOutText="false" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="199" tag="" canDelete="false" writeOutText="false" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="199" tag="" canDelete="false" writeOutText="false" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="199" tag="" canDelete="false" writeOutText="false" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader179" parent_class="179" fileExt=".h" fileName="boolean" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BOOLEAN_H&amp;#010;#define BOOLEAN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="179" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Boolean&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Boolean ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BOOLEAN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        boolean.h - Copyright vmahe&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mar mai 16 2006 at 09:02:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader187" parent_class="187" fileExt=".h" fileName="aman" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef AMAN_H&amp;#010;#define AMAN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="187" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class aMan&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="aMan ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //AMAN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        aman.h - Copyright vmahe&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mar mai 16 2006 at 09:27:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader189" parent_class="189" fileExt=".h" fileName="aman:operator" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef AMAN:OPERATOR_H&amp;#010;#define AMAN:OPERATOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="189" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class aMan:Operator&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="199" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" first:Switch ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="aMan:Operator ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="199" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="199" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="199" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="199" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="199" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //AMAN:OPERATOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        aman:operator.h - Copyright vmahe&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on mar mai 16 2006 at 09:31:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="190" field_type="6553710" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="190" tag="" canDelete="false" indentLevel="1" role_id="0" text=" second:Switch switch;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="190" tag="" canDelete="false" indentLevel="1" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="190" tag="" canDelete="false" indentLevel="1" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="190" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="190" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="190" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="190" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="199" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="199" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" first:Switch ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="199" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="199" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="199" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="199" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="199" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="199" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
