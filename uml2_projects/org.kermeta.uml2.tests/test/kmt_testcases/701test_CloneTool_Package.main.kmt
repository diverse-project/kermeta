package tools_tests;


require kermeta
require "platform:/plugin/org.kermeta.uml2/src/kermeta/transformations/UmlCloneFactory.kmt"

using uml
using uml::transformations

class ToolClonePackageTestCase inherits kermeta::kunit::TestCase
{
	reference orig : Package
	reference clone : Package
	
	method setUp() is do
		//creating needed instances
		orig := Package.new
		orig.name := "pack"
		orig.visibility := VisibilityKind.private
		
		var factory : UmlCloneFactory init UmlCloneFactory.new
		factory.initialize
		clone := factory.clonePackage(orig)
	end
	
	method tearDown() is do
		// We don't need to tearDown anything in this test case.
	end
    
    operation test_CloneTool_Package() is do
    	assertTrueWithMsg(clone != void,
    		"the clonePackage() method must return something")
    	assertTrueWithMsg(Package.isInstance(clone),
    		"the object returned by clonePackage() method must be a Package")
    	assertTrueWithMsg(clone != orig,
    		"the clone object must be different than the original")
    end
    operation test_CloneTool_PackageProperties() is do
    	assertTrueWithMsg(clone.name == orig.name,
    		"the clone must be have the same name than the original")
    	// as visibility is an attribute, must not erased orig's one
    	assertTrueWithMsg(clone.visibility == VisibilityKind.private,
    		"the clone must be have the same visibility than the original")
    end
}