/* $Id: BuildTopDownVisitor.kmt,v 1.1 2007-12-13 10:34:41 vmahe Exp $
 * Creation date: November 26, 2007
 * License:
 * Copyright:
 * Authors:
 */
@mainClass "tools::BuildTopDownVisitor"
@mainOperation "main"


package tools;


require kermeta
require "platform:/plugin/fr.irisa.triskell.kermeta.ecore/src/kermeta/transformations/Patterns4Ecore.kmt"

class BuildTopDownVisitor
{
	operation main() : Void is do 
		// load the given Ecore metamodel
    	var inputRepository : kermeta::persistence::EMFRepository init kermeta::persistence::EMFRepository.new
    	var inputResource : kermeta::persistence::EMFResource
    	inputResource ?= inputRepository.getResource("platform:/resource/fr.irisa.triskell.uml2/src/ecore/UML.ecore")

    	stdio.writeln("<<<<<<<<<<<<< loading model")
    	inputResource.load()
    	stdio.writeln(" ---------> model loaded")
    	
    	var umlMetamodel : ecore::EPackage
		umlMetamodel ?= inputResource.instances.one
		
    	stdio.writeln("\n*** adding TopDownVisitor to model ***\nIt could take some minutes....")
    	var tool : EcoreTransformations::Patterns4Ecore init EcoreTransformations::Patterns4Ecore.new
    	tool.generateJavaCode := false
    	tool.generateKermetaCode := true
    	tool.addTopDownVisitor(umlMetamodel, void)

    	var outputRepository : kermeta::persistence::EMFRepository init kermeta::persistence::EMFRepository.new
    	var outputResource : kermeta::persistence::EMFResource
    	outputResource ?= outputRepository.createResource("platform:/resource/fr.irisa.triskell.uml2/src/ecore/visitedUML.ecore",
    												"platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore")
    	outputResource.instances.add(umlMetamodel)
		
    	stdio.writeln("\n>>>>>>>>>>>> saving visitedUML model")
		outputResource.save
	   	stdio.writeln(" ---------> model saved")
 	end
}