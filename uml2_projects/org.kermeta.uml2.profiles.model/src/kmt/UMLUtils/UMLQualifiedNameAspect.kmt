/* $Id: UMLQualifiedNameAspect.kmt,v 1.6 2008-11-02 17:26:53 gperroui Exp $
 * Creation date: December 13, 2007
 * License: EPL
 * Copyright:
 * Authors: Gilles Perrouin
 */


package uml;

 
require kermeta


require "platform:/plugin/org.kermeta.uml2.profiles.model/model/ecore/Ecore.profile.ecore"
require "platform:/plugin/org.kermeta.uml2.profiles.model/model/ecore/Standard.profile.ecore"

using kermeta::standard

/** The role of this file is to extend the UML 2 metamodel  with several behaviors useful to implement the transformation */ 

//@aspect "true"
aspect class NamedElement {


operation getQualifiedName(): String[1..1] is do

		var elem : uml::NamedElement init self
		result := self.name
		from elem ?= elem.container
			until elem == void 
			loop
				if not elem.isInstanceOf(uml::RedefinableTemplateSignature)
					and not elem.isInstanceOf(uml::TemplateParameter) 
					and not elem.name.equals("<void>") 
					and not elem.name.isVoid then
						result := elem.name + "::" + result
				end
				elem ?= elem.container
			end
end

/**
* Retrieves the package containing the element
*/
operation getPackageName() : String is do

	var pkg : Object
	from var tmp : Object init self.container()
	until  tmp.isInstanceOf(uml::Package)
	loop
		tmp := tmp.container
		pkg := tmp
	end
	if not pkg.isVoid then
		result := pkg.asType(uml::Package).getQualifiedName
	end
end

}
