/* $Id:$ 
 * Creation : July 6, 2009
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            dvojtise
 */


package uml;


require kermeta
require "http://www.eclipse.org/uml2/3.0.0/UML"

using kermeta::standard
/**
 * Aspect adding navigation to namedElementStereotypes
 */
aspect class Element
{
	/**
	 * returns the list of the stereotypes that apply to this Element
	 * Note: this work only if we have added an opposite the the "base_" properties on the stereotypes
	 */
	operation getStereotypesByOppositeAspect() : set kermeta::standard::Object[0..*] is do
		result := kermeta::standard::Set<kermeta::standard::Object>.new
		// retreives all the attributes that can be a stereotype
		var cd : kermeta::language::structure::ClassDefinition 
		cd := self.getMetaClass().classDefinition
		if ( not cd.isVoid ) then
			cd.getCachedAllAttribute.select{ prop |
					if prop.opposite.isVoid then false
					else
						if prop.opposite.name.size >=5 then 
							prop.opposite.name.substring(0,5).equals("base_")
						else 
							false
						end
					end 
				}.each{ prop |
						if  prop.upper.equals(1) then
							result.add(self.get(prop))
						else
							result.addAll(self.get(prop).asType(kermeta::standard::Collection<Object>))							
						end					
					}
		end
	end
}

/**
 * in order to be able to use the stereotype helper, the stereotypes must inherit of one of these classes
 */ 
package profile {
	
	/**
	 * 
	 */
	abstract class StereotypeInstance {
		/**
		 * return the base_ value associated to the stereotype
		 * return void if this not a sterotype
		 */
		operation getStereotypeBase() : uml::Element is do
			result := void // default result value
			var classDefinition : kermeta::language::structure::ClassDefinition 
			classDefinition ?= self.getMetaClass.typeDefinition
			classDefinition.getCachedAllAttribute.select { o | 
					if o.name.size >=5 then o.name.substring(0,5).equals("base_")
					else 
						false
					end
				}.each{att | 
						var base_value : kermeta::standard::Object init self.get(att)
						if not base_value.isVoid then
							result ?= base_value
						end
					}		
		end
	}
	
}