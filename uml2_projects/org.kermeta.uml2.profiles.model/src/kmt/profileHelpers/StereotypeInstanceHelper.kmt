/* $Id: ProfiledResourceHelper.kmt,v 1.10 2009-01-06 13:15:08 dvojtise Exp $
 * Creation date: June 19, 2007
 * License: EPL
 * Copyright: IRISA/INRIA
 * Authors:
 * 		Francois Tanguy
 *		Didier Vojtisek
 */


package uml::profileHelpers;


require kermeta
require "platform:/lookup/org.kermeta.uml2.profiles.model/model/ecore/Ecore.profile.ecore"
require "platform:/lookup/org.kermeta.uml2.profiles.model/model/ecore/Standard.profile.ecore"

using kermeta::standard

using ecore
using uml

/**
 * This class is an helper for manipulating stereotype instances Ie. classes that implement a stereotype
 */
class StereotypeInstanceHelper {
	
	/**
	 * Gets the property with the given name for the given object.
	 */	
	operation getProperty( name : String, object : Object ) : kermeta::language::structure::Property is do
	
		var classDefinition : kermeta::language::structure::ClassDefinition 
		classDefinition ?= object.getMetaClass.typeDefinition
		result := classDefinition.allAttribute.detect { o | o.name.equals( name ) }
	
	end
	/**
	 * tells weither this object has a base_ property.
	 */	
	operation hasBaseProperty( object : Object ) : Boolean is do
	
		var classDefinition : kermeta::language::structure::ClassDefinition 
		classDefinition ?= object.getMetaClass.typeDefinition
		result := classDefinition.allAttribute.exists { o | if o.name.size >=5 then o.name.substring(0,5).equals("base_")
														 else false
														 end
													}	
	end	
	
	/**
	 * return the base_ value associated to the stereotype
	 * return void if this not a sterotype
	 */
	operation getBase(object : Object) : uml::Element is do
		result := void // default result value
		var classDefinition : kermeta::language::structure::ClassDefinition 
		classDefinition ?= object.getMetaClass.typeDefinition
		classDefinition.allAttribute.select { o | 
				if o.name.size >=5 then o.name.substring(0,5).equals("base_")
				else 
					false
				end
			}.each{att | 
					var base_value : Object init object.get(att)
					if not base_value.isVoid then
						result ?= base_value
					end
				}		
	end
	
	/**
	 * determine if the object is an UML stereotype (ie. it declares a base_ to an uml element
	 */
	operation isStereotype(object : Object) : kermeta::standard::Boolean is do
		result := false
		var metaclassName : String init object.getMetaClass.name
		var classDefinition : kermeta::language::structure::ClassDefinition 
		classDefinition ?= object.getMetaClass.typeDefinition
		if not classDefinition.isVoid then
			if classDefinition.allAttribute.exists{ att |
					var  propType : kermeta::language::structure::Class
					propType ?= att.type
					if not propType.isVoid then 
						//stdio.writeln("   " + att.name + "  matches " +propType.classDefinition.name + "?")
						if att.name.equals("base_" +propType.classDefinition.name) then 
							true
						else
							false
						end
					else
						//stdio.writeln("   " + att.name + "  isn't a Class")
						false
					end
		 		} then
		 		result := true
			// else
			//	stdio.writeln("  isStereotype : classDefinition.allAttribute.size=" + classDefinition.allAttribute.size.toString + " classDefinition.name=" + classDefinition.name)
		 	end
		// else
		//	stdio.writeln("  isStereotype : no classDefinition !")
		end	
		// stdio.writeln("  isStereotype returns "+ result.toString)
	end
			


}

/**
 * Exception used to report errors in UML stereotypes
 */
class InvalidUMLStereotype inherits kermeta::exceptions::Exception {

}