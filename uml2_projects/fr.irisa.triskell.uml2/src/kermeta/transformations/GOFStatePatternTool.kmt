/* $Id: GOFStatePatternTool.kmt,v 1.1 2006-07-18 15:10:45 vmahe Exp $
 * Creation date: July 6, 2006
 * License:
 * Copyright:
 * Authors:
 */

package uml2::transformations;


require "StaticTools.kmt"
require "UmlCloneFactory.kmt"

using uml2

class GOFStatePatternTool inherits UmlTool
{
	/** method for applying the pattern only on one element
	  * @parameter machine : we will calculate the "class" owning the state machine
	  *     in order to give it the reified states as links (recursive composites)
	  * @parameter input : the package where the state machine is
	  *     for correspondance through the hash table
	  * @parameter output : the same package, but playing its clone
	  *     (needed as the pattern involves a visitor approach) */
	operation applyPattern(machine : StateMachine, input : Package, output : Package) is do
		// the given packages are used as original and clone root packages
		initialize(input, output)
		
		
		//////////// TODO : navigate inside the state machine, processing elements ////////////
		
	end
    
    operation processState(visitable : State) : Void is do 
        
    end
}