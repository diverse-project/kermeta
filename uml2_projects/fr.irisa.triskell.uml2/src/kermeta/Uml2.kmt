package uml2;

require "ecore.kmt"
require kermeta

using kermeta::standard

//alias Integer : kermeta::standard::Integer;
//alias Boolean : kermeta::standard::Boolean;
//alias String : kermeta::standard::String;
alias UnlimitedNatural : kermeta::standard::Integer;
alias Sequence : kermeta::language::structure::Object;
alias Set : kermeta::language::structure::Object;
abstract class Element inherits ecore::EModelElement, visitors::Visitable
{
	property ownedElement : set Element[0..*]#owner
		getter is do
			//TODO: implement getter for derived property ownedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property ownedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property owner : Element#ownedElement
		getter is do
			//TODO: implement getter for derived property owner
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property owner
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute ownedComment : set Comment[0..*]
	operation not_own_self(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation not_own_self
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation has_owner(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation has_owner
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation allOwnedElements() : Set is do
		//TODO: implement operation allOwnedElements
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation mustBeOwned() : Boolean is do
		//TODO: implement operation mustBeOwned
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitElement(self)
}
abstract class MultiplicityElement inherits Element
{
	attribute isOrdered : Boolean
	attribute isUnique : Boolean
	property lower : Integer
		getter is do
			//TODO: implement getter for derived property lower
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property lower
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property upper : UnlimitedNatural
		getter is do
			//TODO: implement getter for derived property upper
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property upper
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute upperValue : ValueSpecification
	attribute lowerValue : ValueSpecification
	operation lowerBound() : Integer is do
		//TODO: implement operation lowerBound
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation upperBound() : UnlimitedNatural is do
		//TODO: implement operation upperBound
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation isMultivalued() : Boolean is do
		//TODO: implement operation isMultivalued
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation includesCardinality(C : Integer) : Boolean is do
		//TODO: implement operation includesCardinality
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation includesMultiplicity(M : MultiplicityElement) : Boolean is do
		//TODO: implement operation includesMultiplicity
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation upper_gt_0(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation upper_gt_0
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation lower_ge_0(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation lower_ge_0
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation upper_ge_lower(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation upper_ge_lower
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation lower_eq_lowerbound(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation lower_eq_lowerbound
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation upper_eq_upperbound(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation upper_eq_upperbound
		raise kermeta::exceptions::NotImplementedException.new 
	end
/*	operation lower() : Integer is do
		//TODO: implement operation lower
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation upper() : UnlimitedNatural is do
		//TODO: implement operation upper
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitMultiplicityElement(self)
}
abstract class NamedElement inherits TemplateableElement
{
	attribute name : String
	property qualifiedName : String
		getter is do
			//TODO: implement getter for derived property qualifiedName
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property qualifiedName
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute visibility : VisibilityKind
	reference clientDependency : set Dependency[0..*]#client
	attribute nameExpression : StringExpression
	operation no_name(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation no_name
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation qualified_name(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation qualified_name
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation allNamespaces() : Sequence is do
		//TODO: implement operation allNamespaces
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation isDistinguishableFrom(n : NamedElement, ns : Namespace) : Boolean is do
		//TODO: implement operation isDistinguishableFrom
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation separator() : String is do
		//TODO: implement operation separator
		raise kermeta::exceptions::NotImplementedException.new 
	end
/* the class contains a property with the same name
	operation qualifiedName() : String is do
		//TODO: implement operation qualifiedName
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	operation visibility_needs_ownership(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation visibility_needs_ownership
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitNamedElement(self)
}
abstract class Namespace inherits NamedElement
{
	property member : set NamedElement[0..*]
		getter is do
			//TODO: implement getter for derived property member
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property member
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute ownedRule : set Constraint[0..*]#namespace
	property importedMember : set PackageableElement[0..*]
		getter is do
			//TODO: implement getter for derived property importedMember
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property importedMember
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute elementImport : set ElementImport[0..*]#importingNamespace
	attribute packageImport : set PackageImport[0..*]#importingNamespace
	operation members_are_distinguishable(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation members_are_distinguishable
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation getNamesOfMember(element : NamedElement) : Set is do
		//TODO: implement operation getNamesOfMember
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation membersAreDistinguishable() : Boolean is do
		//TODO: implement operation membersAreDistinguishable
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation importedMember_derived(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation importedMember_derived
		raise kermeta::exceptions::NotImplementedException.new 
	end
/* the class contains a property with the same name
	operation importedMember() : Set is do
		//TODO: implement operation importedMember
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	operation importMembers(imps : Set) : Set is do
		//TODO: implement operation importMembers
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation excludeCollisions(imps : Set) : Set is do
		//TODO: implement operation excludeCollisions
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitNamespace(self)
}
class OpaqueExpression inherits ValueSpecification
{
	attribute body : String
	attribute language : String
	property ~result : Parameter
		getter is do
			//TODO: implement getter for derived property result
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property result
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference behavior : Behavior
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitOpaqueExpression(self)
}
abstract class ValueSpecification inherits TypedElement, ParameterableElement
{
	operation isComputable() : Boolean is do
		//TODO: implement operation isComputable
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation integerValue() : Integer is do
		//TODO: implement operation integerValue
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation booleanValue() : Boolean is do
		//TODO: implement operation booleanValue
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation stringValue() : String is do
		//TODO: implement operation stringValue
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation unlimitedValue() : UnlimitedNatural is do
		//TODO: implement operation unlimitedValue
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation isNull() : Boolean is do
		//TODO: implement operation isNull
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from TypedElement is
		result := visitor.visitValueSpecification(self)
}
class Expression inherits OpaqueExpression
{
	attribute symbol : String
	attribute operand : ValueSpecification[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExpression(self)
}
class Comment inherits TemplateableElement
{
	attribute body : String
	reference annotatedElement : set Element[0..*]
	attribute bodyExpression : StringExpression
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitComment(self)
}
abstract class DirectedRelationship inherits Relationship
{
	property source : set Element[1..*]
		getter is do
			//TODO: implement getter for derived property source
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property source
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property target : set Element[1..*]
		getter is do
			//TODO: implement getter for derived property target
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property target
			raise kermeta::exceptions::NotImplementedException.new 
		end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDirectedRelationship(self)
}
abstract class Relationship inherits Element
{
	property relatedElement : set Element[1..*]
		getter is do
			//TODO: implement getter for derived property relatedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property relatedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitRelationship(self)
}
class Class inherits BehavioredClassifier, EncapsulatedClassifier
{
	attribute ownedOperation : Operation[0..*]#class_
	property superClass : set Class[0..*]
		getter is do
			//TODO: implement getter for derived property superClass
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property superClass
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property extension : set Extension[0..*]#metaclass
		getter is do
			//TODO: implement getter for derived property extension
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property extension
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute nestedClassifier : Classifier[0..*]
	attribute isActive : Boolean
	attribute ownedReception : set Reception[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from BehavioredClassifier is
		result := visitor.visitClass(self)
}
abstract class Type inherits PackageableElement
{
	property ~package : Package#ownedType
		getter is do
			//TODO: implement getter for derived property package
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property package
			raise kermeta::exceptions::NotImplementedException.new 
		end
	operation conformsTo(other : Type) : Boolean is do
		//TODO: implement operation conformsTo
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitType(self)
}
class Property inherits StructuralFeature, ConnectableElement, DeploymentTarget
{
	property default : String
		getter is do
			//TODO: implement getter for derived property default
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property default
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property isComposite : Boolean
		getter is do
			//TODO: implement getter for derived property isComposite
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property isComposite
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute isDerived : Boolean
	reference class_ : Class
	property opposite : Property
		getter is do
			//TODO: implement getter for derived property opposite
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property opposite
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute isDerivedUnion : Boolean
	reference owningAssociation : Association#ownedEnd
	reference redefinedProperty : set Property[0..*]
	reference subsettedProperty : set Property[0..*]
	reference datatype : DataType#ownedAttribute
	reference association : Association#memberEnd
	attribute aggregation : AggregationKind
	attribute defaultValue : ValueSpecification
	attribute qualifier : Property[0..*]#associationEnd
	reference associationEnd : Property#qualifier
	operation opposite_is_other_end(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation opposite_is_other_end
		raise kermeta::exceptions::NotImplementedException.new 
	end
/* the class contains a property with the same name
	operation opposite() : Property is do
		//TODO: implement operation opposite
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	operation multiplicity_of_composite(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation multiplicity_of_composite
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation subsetting_context(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation subsetting_context
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation navigable_property_redefinition(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation navigable_property_redefinition
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation subsetting_rules(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation subsetting_rules
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation navigable_readonly(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation navigable_readonly
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation derivedUnion_is_derived(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation derivedUnion_is_derived
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation subsettingContext() : Set is do
		//TODO: implement operation subsettingContext
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from StructuralFeature is
		result := visitor.visitProperty(self)
}
class Operation inherits BehavioralFeature, TypedElement, MultiplicityElement, ParameterableElement
{
	attribute ownedParameter : Parameter[0..*]#~operation
	reference class_ : Class#ownedOperation
	attribute isQuery : Boolean
	reference datatype : DataType#ownedOperation
	reference precondition : set Constraint[0..*]
	reference postcondition : set Constraint[0..*]
	reference redefinedOperation : set Operation[0..*]
	reference bodyCondition : Constraint
	operation type_of_result(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation type_of_result
		raise kermeta::exceptions::NotImplementedException.new 
	end
/* those operations resist to the parser and are not used
	method isOrdered() : Boolean from BehavioralFeature is do
		//TODO: implement operation isOrdered
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method isUnique() : Boolean from BehavioralFeature is do
		//TODO: implement operation isUnique
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method type() : Classifier from BehavioralFeature is do
		//TODO: implement operation type
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	operation only_body_for_query(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation only_body_for_query
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from BehavioralFeature is
		result := visitor.visitOperation(self)
}
abstract class TypedElement inherits NamedElement
{
	reference type : Type
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTypedElement(self)
}
class Parameter inherits ConnectableElement, TypedElement, MultiplicityElement
{
	reference ~operation : Operation#ownedParameter
	property default : String
		getter is do
			//TODO: implement getter for derived property default
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property default
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute direction : ParameterDirectionKind
	attribute defaultValue : ValueSpecification
	attribute isException : Boolean
	attribute isStream : Boolean
	attribute effect : ParameterEffectKind
	reference parameterSet : set ParameterSet[0..*]#parameter
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ConnectableElement is
		result := visitor.visitParameter(self)
}
class Package inherits Namespace, PackageableElement
{
	property nestedPackage : set Package[0..*]#nestingPackage
		getter is do
			//TODO: implement getter for derived property nestedPackage
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property nestedPackage
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property nestingPackage : Package#nestedPackage
		getter is do
			//TODO: implement getter for derived property nestingPackage
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property nestingPackage
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property ownedType : set Type[0..*]#~package
		getter is do
			//TODO: implement getter for derived property ownedType
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property ownedType
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute ownedMember : set PackageableElement[0..*]
	attribute packageMerge : set PackageMerge[0..*]#mergingPackage
	reference appliedProfile : set ProfileApplication[0..*]
	attribute packageExtension : set PackageMerge[0..*]
	operation elements_public_or_private(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation elements_public_or_private
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation visibleMembers() : Set is do
		//TODO: implement operation visibleMembers
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation makesVisible(el : NamedElement) : Boolean is do
		//TODO: implement operation makesVisible
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Namespace is
		result := visitor.visitPackage(self)
}
class Enumeration inherits DataType
{
	attribute ownedLiteral : EnumerationLiteral[0..*]#~enumeration
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitEnumeration(self)
}
class DataType inherits Classifier
{
	attribute ownedAttribute : Property[0..*]#datatype
	attribute ownedOperation : Operation[0..*]#datatype
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDataType(self)
}
class EnumerationLiteral inherits InstanceSpecification
{
	reference ~enumeration : Enumeration#ownedLiteral
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitEnumerationLiteral(self)
}
class PrimitiveType inherits DataType
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPrimitiveType(self)
}
abstract class Classifier inherits Namespace, Type, RedefinableElement
{
	property feature : set Feature[0..*]#featuringClassifier
		getter is do
			//TODO: implement getter for derived property feature
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property feature
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute isAbstract : Boolean
	property inheritedMember : set NamedElement[0..*]
		getter is do
			//TODO: implement getter for derived property inheritedMember
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property inheritedMember
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property general : set Classifier[0..*]
		getter is do
			//TODO: implement getter for derived property general
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property general
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute generalization : set Generalization[0..*]#specific
	property ~attribute : set Property[0..*]
		getter is do
			//TODO: implement getter for derived property attribute
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property attribute
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference redefinedClassifier : set Classifier[0..*]
	attribute substitution : set Substitution[0..*]#substitutingClassifier
	reference powertypeExtent : set GeneralizationSet[0..*]#powertype
	attribute ownedUseCase : set UseCase[0..*]
	reference useCase : set UseCase[0..*]#subject
	reference representation : CollaborationOccurrence
	attribute occurrence : set CollaborationOccurrence[0..*]
	operation allFeatures() : Set is do
		//TODO: implement operation allFeatures
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation no_cycles_in_generalization(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation no_cycles_in_generalization
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation specialize_type(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation specialize_type
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation inherited_member(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation inherited_member
		raise kermeta::exceptions::NotImplementedException.new 
	end
/* the class contains a property with the same name
	operation inheritedMember() : Set is do
		//TODO: implement operation inheritedMember
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	operation parents() : Set is do
		//TODO: implement operation parents
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation allParents() : Set is do
		//TODO: implement operation allParents
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation inheritableMembers(c : Classifier) : Set is do
		//TODO: implement operation inheritableMembers
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation hasVisibilityOf(n : NamedElement) : Boolean is do
		//TODO: implement operation hasVisibilityOf
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation inherit(inhs : Set) : Set is do
		//TODO: implement operation inherit
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation maySpecializeType(c : Classifier) : Boolean is do
		//TODO: implement operation maySpecializeType
		raise kermeta::exceptions::NotImplementedException.new 
	end
/* the class contains a property with the same name
	operation general() : Set is do
		//TODO: implement operation general
		raise kermeta::exceptions::NotImplementedException.new 
	end
*/
	operation general_equals_parents(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation general_equals_parents
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method conformsTo(other : Classifier) : Boolean is do
		//TODO: implement operation conformsTo
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Namespace is
		result := visitor.visitClassifier(self)
}
abstract class Feature inherits RedefinableElement
{
	property featuringClassifier : set Classifier[0..*]#feature
		getter is do
			//TODO: implement getter for derived property featuringClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property featuringClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute isStatic : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitFeature(self)
}
class Constraint inherits PackageableElement
{
	property context : Namespace
		getter is do
			//TODO: implement getter for derived property context
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property context
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference namespace : Namespace#ownedRule
	attribute specification : ValueSpecification[1..1]
	reference constrainedElement : Element[0..*]
	operation not_apply_to_self(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation not_apply_to_self
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitConstraint(self)
}
enumeration VisibilityKind
{
	public;
	private;
	protected;
	~package;
}
class LiteralBoolean inherits LiteralSpecification
{
	attribute ~value : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLiteralBoolean(self)
}
abstract class LiteralSpecification inherits ValueSpecification
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLiteralSpecification(self)
}
class LiteralString inherits LiteralSpecification
{
	attribute ~value : String
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLiteralString(self)
}
class LiteralNull inherits LiteralSpecification
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLiteralNull(self)
}
class LiteralInteger inherits LiteralSpecification
{
	attribute ~value : Integer
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLiteralInteger(self)
}
class LiteralUnlimitedNatural inherits LiteralSpecification
{
	attribute ~value : UnlimitedNatural
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLiteralUnlimitedNatural(self)
}
abstract class BehavioralFeature inherits Namespace, Feature
{
	property parameter : Parameter[0..*]
		getter is do
			//TODO: implement getter for derived property parameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property parameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute formalParameter : set Parameter[0..*]
	attribute returnResult : Parameter[0..*]
	reference raisedException : set Type[0..*]
	attribute isAbstract : Boolean
	reference ~method : set Behavior[0..*]#specification
	attribute concurrency : CallConcurrencyKind
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Namespace is
		result := visitor.visitBehavioralFeature(self)
}
abstract class StructuralFeature inherits Feature, TypedElement, MultiplicityElement
{
	attribute isReadOnly : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Feature is
		result := visitor.visitStructuralFeature(self)
}
class InstanceSpecification inherits PackageableElement, DeploymentTarget, DeployedArtifact
{
	attribute slot : set Slot[0..*]#owningInstance
	reference classifier : set Classifier[0..*]
	attribute specification : ValueSpecification
	operation slots_are_defined(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation slots_are_defined
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation no_duplicate_slots(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation no_duplicate_slots
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from PackageableElement is
		result := visitor.visitInstanceSpecification(self)
}
class Slot inherits Element
{
	reference owningInstance : InstanceSpecification[1..1]#slot
	attribute ~value : ValueSpecification[0..*]
	reference definingFeature : StructuralFeature[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitSlot(self)
}
class InstanceValue inherits ValueSpecification
{
	reference instance : InstanceSpecification[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInstanceValue(self)
}
abstract class RedefinableElement inherits NamedElement
{
	property redefinitionContext : Classifier[0..*]
		getter is do
			//TODO: implement getter for derived property redefinitionContext
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property redefinitionContext
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute isLeaf : Boolean
	operation redefinition_context_valid(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation redefinition_context_valid
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation redefinition_consistent(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation redefinition_consistent
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation isConsistentWith(redefinee : RedefinableElement) : Boolean is do
		//TODO: implement operation isConsistentWith
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation isRedefinitionContextValid(redefinable : RedefinableElement) : Boolean is do
		//TODO: implement operation isRedefinitionContextValid
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitRedefinableElement(self)
}
class Generalization inherits DirectedRelationship
{
	reference specific : Classifier[1..1]#generalization
	reference general : Classifier[1..1]
	attribute isSubstitutable : Boolean
	reference generalizationSet : set GeneralizationSet[0..*]#generalization
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitGeneralization(self)
}
abstract class PackageableElement inherits NamedElement, ParameterableElement
{
	attribute packageableElement_visibility : VisibilityKind
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from NamedElement is
		result := visitor.visitPackageableElement(self)
}
class ElementImport inherits DirectedRelationship
{
	attribute visibility : VisibilityKind
	attribute ~alias : String
	reference importedElement : PackageableElement[1..1]
	reference importingNamespace : Namespace[1..1]#elementImport
	operation visibility_public_or_private(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation visibility_public_or_private
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation imported_element_is_public(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation imported_element_is_public
		raise kermeta::exceptions::NotImplementedException.new 
	end
	operation getName() : String is do
		//TODO: implement operation getName
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitElementImport(self)
}
class PackageImport inherits DirectedRelationship
{
	attribute visibility : VisibilityKind
	reference importedPackage : Package[1..1]
	reference importingNamespace : Namespace[1..1]#packageImport
	operation public_or_private(diagnostics : ecore::EDiagnosticChain, context : ecore::EMap) : Boolean is do
		//TODO: implement operation public_or_private
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPackageImport(self)
}
class Association inherits Classifier, Relationship
{
	attribute isDerived : Boolean
	attribute ownedEnd : Property[0..*]#owningAssociation
	property endType : set Type[1..*]
		getter is do
			//TODO: implement getter for derived property endType
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property endType
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference memberEnd : Property[2..*]#association
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Classifier is
		result := visitor.visitAssociation(self)
}
class PackageMerge inherits DirectedRelationship
{
	reference mergingPackage : Package[1..1]#packageMerge
	reference mergedPackage : Package[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPackageMerge(self)
}
class Stereotype inherits Class
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStereotype(self)
}
class Profile inherits Package
{
	property ownedStereotype : set Stereotype[0..*]
		getter is do
			//TODO: implement getter for derived property ownedStereotype
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property ownedStereotype
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference metaclassReference : set ElementImport[0..*]
	reference metamodelReference : set PackageImport[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitProfile(self)
}
class ProfileApplication inherits PackageImport
{
	reference importedProfile : Profile[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitProfileApplication(self)
}
class Extension inherits Association
{
	property isRequired : Boolean
		getter is do
			//TODO: implement getter for derived property isRequired
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property isRequired
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property metaclass : Class[1..1]#extension
		getter is do
			//TODO: implement getter for derived property metaclass
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property metaclass
			raise kermeta::exceptions::NotImplementedException.new 
		end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExtension(self)
}
class ExtensionEnd inherits Property
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExtensionEnd(self)
}
enumeration ParameterDirectionKind
{
	in;
	inout;
	out;
	return;
}
enumeration AggregationKind
{
	none;
	shared;
	composite;
}
abstract class Behavior inherits Class
{
	attribute isReentrant : Boolean
	reference context : BehavioredClassifier#ownedBehavior
	reference redefinedBehavior : set Behavior[0..*]
	reference specification : BehavioralFeature#~method
	attribute parameter : Parameter[0..*]
	property formalParameter : Parameter[0..*]
		getter is do
			//TODO: implement getter for derived property formalParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property formalParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property returnResult : Parameter[0..*]
		getter is do
			//TODO: implement getter for derived property returnResult
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property returnResult
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference precondition : set Constraint[0..*]
	reference postcondition : set Constraint[0..*]
	attribute ownedParameterSet : set ParameterSet[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitBehavior(self)
}
abstract class BehavioredClassifier inherits Classifier
{
	attribute ownedBehavior : set Behavior[0..*]#context
	reference classifierBehavior : Behavior
	attribute implementation : set Implementation[0..*]#implementingClassifier
	attribute ownedTrigger : set Trigger[0..*]
	attribute ownedStateMachine : set StateMachine[0..*]#stateMachine_redefinitionContext
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitBehavioredClassifier(self)
}
class Activity inherits Behavior
{
	attribute body : String
	attribute language : String
	attribute edge : set ActivityEdge[0..*]#activity
	attribute group : set ActivityGroup[0..*]#activityGroup_activity
	attribute node : set ActivityNode[0..*]#activity
	reference action : Action[0..*]
	property structuredNode : set StructuredActivityNode[0..*]
		getter is do
			//TODO: implement getter for derived property structuredNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property structuredNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute isSingleExecution : Boolean
	attribute isReadOnly : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActivity(self)
}
class Permission inherits Dependency
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPermission(self)
}
class Dependency inherits PackageableElement, DirectedRelationship
{
	reference client : set NamedElement[1..*]#clientDependency
	reference supplier : set NamedElement[1..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from PackageableElement is
		result := visitor.visitDependency(self)
}
class Usage inherits Dependency
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitUsage(self)
}
class Abstraction inherits Dependency
{
	attribute mapping : OpaqueExpression
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAbstraction(self)
}
class Realization inherits Abstraction
{
	reference abstraction : Component#realization
	reference realizingClassifier : Classifier[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitRealization(self)
}
class Substitution inherits Realization
{
	reference contract : Classifier[1..1]
	reference substitutingClassifier : Classifier[1..1]#substitution
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitSubstitution(self)
}
class GeneralizationSet inherits PackageableElement
{
	attribute isCovering : Boolean
	attribute isDisjoint : Boolean
	reference powertype : Classifier#powertypeExtent
	reference generalization : set Generalization[0..*]#generalizationSet
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitGeneralizationSet(self)
}
class AssociationClass inherits Class, Association
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Class is
		result := visitor.visitAssociationClass(self)
}
class InformationItem inherits Classifier
{
	reference represented : set Classifier[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInformationItem(self)
}
class InformationFlow inherits PackageableElement, DirectedRelationship
{
	reference realization : set Relationship[0..*]
	reference conveyed : set Classifier[1..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from PackageableElement is
		result := visitor.visitInformationFlow(self)
}
class Model inherits Package
{
	attribute viewpoint : String
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitModel(self)
}
class ConnectorEnd inherits MultiplicityElement
{
	property definingEnd : Property
		getter is do
			//TODO: implement getter for derived property definingEnd
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property definingEnd
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference role : ConnectableElement#~end
	reference partWithPort : Property
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitConnectorEnd(self)
}
abstract class ConnectableElement inherits NamedElement, ParameterableElement
{
	reference ~end : set ConnectorEnd[0..*]#role
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from NamedElement is
		result := visitor.visitConnectableElement(self)
}
class Connector inherits Feature
{
	reference type : Association
	reference redefinedConnector : set Connector[0..*]
	attribute ~end : ConnectorEnd[2..*]
	attribute kind : ConnectorKind
	reference contract : set Behavior[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitConnector(self)
}
abstract class StructuredClassifier inherits Classifier
{
	attribute ownedAttribute : Property[0..*]
	property part : set Property[0..*]
		getter is do
			//TODO: implement getter for derived property part
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property part
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property role : set ConnectableElement[0..*]
		getter is do
			//TODO: implement getter for derived property role
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property role
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute ownedConnector : set Connector[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStructuredClassifier(self)
}
abstract class ActivityEdge inherits RedefinableElement
{
	reference activity : Activity#edge
	reference source : ActivityNode[1..1]#outgoing
	reference target : ActivityNode[1..1]#incoming
	property inGroup : set ActivityGroup[0..*]
		getter is do
			//TODO: implement getter for derived property inGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property inGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute guard : ValueSpecification[1..1]
	reference redefinedElement : set ActivityEdge[0..*]
	reference inStructuredNode : StructuredActivityNode#containedEdge
	reference inPartition : set ActivityPartition[0..*]#containedEdge
	attribute weight : ValueSpecification[1..1]
	reference interrupts : InterruptibleActivityRegion#interruptingEdge
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActivityEdge(self)
}
abstract class ActivityGroup inherits Element
{
	property superGroup : ActivityGroup
		getter is do
			//TODO: implement getter for derived property superGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property superGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference activityGroup_activity : Activity#group
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActivityGroup(self)
}
abstract class ActivityNode inherits RedefinableElement
{
	reference outgoing : set ActivityEdge[0..*]#source
	reference incoming : set ActivityEdge[0..*]#target
	property inGroup : set ActivityGroup[0..*]
		getter is do
			//TODO: implement getter for derived property inGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property inGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference activity : Activity#node
	reference redefinedElement : set ActivityNode[0..*]
	reference inStructuredNode : StructuredActivityNode#containedNode
	reference inPartition : set ActivityPartition[0..*]#containedNode
	reference inInterruptibleRegion : set InterruptibleActivityRegion[0..*]#containedNode
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActivityNode(self)
}
class Action inherits ExecutableNode
{
	attribute effect : String
	property output : OutputPin[0..*]
		getter is do
			//TODO: implement getter for derived property output
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property output
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property input : InputPin[0..*]
		getter is do
			//TODO: implement getter for derived property input
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property input
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property context : Classifier
		getter is do
			//TODO: implement getter for derived property context
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property context
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute localPrecondition : set Constraint[0..*]
	attribute localPostcondition : set Constraint[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAction(self)
}
abstract class ObjectNode inherits ActivityNode, TypedElement
{
	attribute ordering : ObjectNodeOrderingKind
	attribute upperBound : ValueSpecification[1..1]
	reference inState : set State[0..*]
	reference selection : Behavior
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ActivityNode is
		result := visitor.visitObjectNode(self)
}
abstract class ControlNode inherits ActivityNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitControlNode(self)
}
class ControlFlow inherits ActivityEdge
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitControlFlow(self)
}
class ObjectFlow inherits ActivityEdge
{
	attribute isMulticast : Boolean
	attribute isMultireceive : Boolean
	reference transformation : Behavior
	reference selection : Behavior
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitObjectFlow(self)
}
class InitialNode inherits ControlNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInitialNode(self)
}
abstract class FinalNode inherits ControlNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitFinalNode(self)
}
class ActivityFinalNode inherits FinalNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActivityFinalNode(self)
}
class DecisionNode inherits ControlNode
{
	reference decisionInput : Behavior
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDecisionNode(self)
}
class MergeNode inherits ControlNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitMergeNode(self)
}
abstract class ExecutableNode inherits ActivityNode
{
	attribute handler : set ExceptionHandler[0..*]#protectedNode
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExecutableNode(self)
}
class OutputPin inherits Pin
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitOutputPin(self)
}
class InputPin inherits Pin
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInputPin(self)
}
abstract class Pin inherits ObjectNode, MultiplicityElement
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ObjectNode is
		result := visitor.visitPin(self)
}
class ActivityParameterNode inherits ObjectNode
{
	reference parameter : Parameter[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActivityParameterNode(self)
}
class ValuePin inherits InputPin
{
	attribute ~value : ValueSpecification[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitValuePin(self)
}
class Interface inherits Classifier
{
	attribute ownedAttribute : Property[0..*]
	attribute ownedOperation : Operation[0..*]
	reference redefinedInterface : set Interface[0..*]
	attribute nestedClassifier : Classifier[0..*]
	attribute ownedReception : set Reception[0..*]
	attribute protocol : ProtocolStateMachine
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInterface(self)
}
class Implementation inherits Realization
{
	reference contract : Interface[1..1]
	reference implementingClassifier : BehavioredClassifier[1..1]#implementation
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitImplementation(self)
}
class Artifact inherits Classifier, DeployedArtifact
{
	attribute fileName : String
	attribute nestedArtifact : set Artifact[0..*]
	attribute manifestation : set Manifestation[0..*]
	attribute ownedOperation : Operation[0..*]
	attribute ownedAttribute : Property[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Classifier is
		result := visitor.visitArtifact(self)
}
class Manifestation inherits Abstraction
{
	reference utilizedElement : PackageableElement[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitManifestation(self)
}
class Actor inherits Classifier
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitActor(self)
}
class Extend inherits NamedElement, DirectedRelationship
{
	reference extendedCase : UseCase[1..1]
	reference extension : UseCase[1..1]#extend
	attribute condition : Constraint
	reference extensionLocation : ExtensionPoint[1..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from NamedElement is
		result := visitor.visitExtend(self)
}
class UseCase inherits BehavioredClassifier
{
	attribute include : set Include[0..*]#includingCase
	attribute extend : set Extend[0..*]#extension
	attribute extensionPoint : set ExtensionPoint[0..*]#useCase
	reference subject : set Classifier[0..*]#useCase
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitUseCase(self)
}
class ExtensionPoint inherits RedefinableElement
{
	reference useCase : UseCase[1..1]#extensionPoint
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExtensionPoint(self)
}
class Include inherits NamedElement, DirectedRelationship
{
	reference includingCase : UseCase[1..1]#include
	reference addition : UseCase[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from NamedElement is
		result := visitor.visitInclude(self)
}
class CollaborationOccurrence inherits NamedElement
{
	reference type : Collaboration[1..1]
	attribute roleBinding : set Dependency[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCollaborationOccurrence(self)
}
class Collaboration inherits BehavioredClassifier, StructuredClassifier
{
	reference collaborationRole : set ConnectableElement[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from BehavioredClassifier is
		result := visitor.visitCollaboration(self)
}
class Port inherits Property
{
	attribute isBehavior : Boolean
	attribute isService : Boolean
	property required : set Interface[0..*]
		getter is do
			//TODO: implement getter for derived property required
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property required
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference redefinedPort : set Port[0..*]
	property provided : set Interface[0..*]
		getter is do
			//TODO: implement getter for derived property provided
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property provided
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference protocol : ProtocolStateMachine
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPort(self)
}
abstract class EncapsulatedClassifier inherits StructuredClassifier
{
	attribute ownedPort : set Port[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitEncapsulatedClassifier(self)
}
enumeration CallConcurrencyKind
{
	sequential;
	guarded;
	concurrent;
}
class CallTrigger inherits MessageTrigger
{
	reference ~operation : Operation[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCallTrigger(self)
}
abstract class MessageTrigger inherits Trigger
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitMessageTrigger(self)
}
class ChangeTrigger inherits Trigger
{
	attribute changeExpression : ValueSpecification[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitChangeTrigger(self)
}
abstract class Trigger inherits NamedElement
{
	reference port : set Port[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTrigger(self)
}
class Reception inherits BehavioralFeature
{
	reference signal : Signal
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReception(self)
}
class Signal inherits Classifier
{
	attribute ownedAttribute : Property[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitSignal(self)
}
class SignalTrigger inherits MessageTrigger
{
	reference signal : Signal[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitSignalTrigger(self)
}
class TimeTrigger inherits Trigger
{
	attribute isRelative : Boolean
	attribute when : ValueSpecification[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTimeTrigger(self)
}
class AnyTrigger inherits MessageTrigger
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAnyTrigger(self)
}
// FIXME  to be continued indicating "from " for multi inheritage
class Variable inherits ConnectableElement, TypedElement, MultiplicityElement
{
	reference scope : StructuredActivityNode[1..1]#variable
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from ConnectableElement is
		result := visitor.visitVariable(self)
}
class StructuredActivityNode inherits Action, Namespace, ActivityGroup
{
	attribute variable : set Variable[0..*]#scope
	attribute containedNode : ActivityNode[0..*]#inStructuredNode
	attribute containedEdge : ActivityEdge[0..*]#inStructuredNode
	attribute mustIsolate : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Action is
		result := visitor.visitStructuredActivityNode(self)
}
class ConditionalNode inherits StructuredActivityNode
{
	attribute isDeterminate : Boolean
	attribute isAssured : Boolean
	attribute clause : set Clause[1..*]
	attribute ~result : OutputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitConditionalNode(self)
}
class Clause inherits Element
{
	reference test : set ActivityNode[0..*]
	reference body : set ActivityNode[0..*]
	reference predecessorClause : set Clause[0..*]#successorClause
	reference successorClause : set Clause[0..*]#predecessorClause
	reference decider : OutputPin[1..1]
	reference bodyOutput : set OutputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitClause(self)
}
class LoopNode inherits StructuredActivityNode
{
	attribute isTestedFirst : Boolean
	reference bodyPart : set ActivityNode[0..*]
	reference setupPart : set ActivityNode[0..*]
	reference decider : OutputPin[1..1]
	reference test : set ActivityNode[0..*]
	attribute ~result : OutputPin[0..*]
	attribute loopVariable : OutputPin[0..*]
	reference bodyOutput : set OutputPin[0..*]
	attribute loopVariableInput : InputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLoopNode(self)
}
class Interaction inherits Behavior, InteractionFragment
{
	attribute lifeline : set Lifeline[0..*]#interaction
	attribute message : set Message[0..*]#interaction
	attribute fragment : InteractionFragment[0..*]#enclosingInteraction
	attribute formalGate : set Gate[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Behavior is
		result := visitor.visitInteraction(self)
}
abstract class InteractionFragment inherits NamedElement
{
	reference covered : Lifeline[0..*]#coveredBy
	attribute generalOrdering : set GeneralOrdering[0..*]
	reference enclosingInteraction : Interaction#fragment
	reference enclosingOperand : InteractionOperand#fragment
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInteractionFragment(self)
}
class Lifeline inherits NamedElement
{
	reference coveredBy : set InteractionFragment[0..*]#covered
	reference represents : ConnectableElement[1..1]
	reference interaction : Interaction[1..1]#lifeline
	attribute selector : OpaqueExpression
	reference decomposedAs : PartDecomposition
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLifeline(self)
}
class Message inherits NamedElement
{
	property messageKind : MessageKind
		getter is do
			//TODO: implement getter for derived property messageKind
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property messageKind
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute messageSort : MessageSort
	reference receiveEvent : MessageEnd#receiveMessage
	reference sendEvent : MessageEnd#sendMessage
	reference connector : Connector
	reference interaction : Interaction[1..1]#message
	reference signature : NamedElement
	attribute argument : set ValueSpecification[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitMessage(self)
}
class GeneralOrdering inherits NamedElement
{
	reference before : EventOccurrence[1..1]#toAfter
	reference after : EventOccurrence[1..1]#toBefore
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitGeneralOrdering(self)
}
enumeration MessageKind
{
	complete;
	lost;
	found;
	unknown;
}
enumeration MessageSort
{
	synchCall;
	synchSignal;
	asynchCall;
	asynchSignal;
}
abstract class MessageEnd inherits NamedElement
{
	reference receiveMessage : Message#receiveEvent
	reference sendMessage : Message#sendEvent
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitMessageEnd(self)
}
class EventOccurrence inherits InteractionFragment, MessageEnd
{
	reference startExec : set ExecutionOccurrence[0..*]#start
	reference finishExec : set ExecutionOccurrence[0..*]#finish
	reference toAfter : set GeneralOrdering[0..*]#before
	reference toBefore : set GeneralOrdering[0..*]#after
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from InteractionFragment is
		result := visitor.visitEventOccurrence(self)
}
class ExecutionOccurrence inherits InteractionFragment
{
	reference start : EventOccurrence[1..1]#startExec
	reference finish : EventOccurrence[1..1]#finishExec
	reference behavior : Behavior[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExecutionOccurrence(self)
}
class StateInvariant inherits InteractionFragment
{
	attribute invariant : Constraint[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStateInvariant(self)
}
class Stop inherits EventOccurrence
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStop(self)
}
class TemplateSignature inherits Element
{
	reference parameter : set TemplateParameter[1..*]
	attribute ownedParameter : set TemplateParameter[0..*]#signature
	reference nestedSignature : set TemplateSignature[0..*]#nestingSignature
	reference nestingSignature : TemplateSignature#nestedSignature
	reference template : TemplateableElement[1..1]#ownedTemplateSignature
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTemplateSignature(self)
}
class TemplateParameter inherits Element
{
	reference signature : TemplateSignature[1..1]#ownedParameter
	reference parameteredElement : ParameterableElement[1..1]#templateParameter
	attribute ownedParameteredElement : ParameterableElement#owningParameter
	reference default : ParameterableElement
	attribute ownedDefault : ParameterableElement
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTemplateParameter(self)
}
abstract class TemplateableElement inherits Element
{
	attribute templateBinding : set TemplateBinding[0..*]#boundElement
	attribute ownedTemplateSignature : TemplateSignature#template
	operation parameterableElements() : Set is do
		//TODO: implement operation parameterableElements
		raise kermeta::exceptions::NotImplementedException.new 
	end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTemplateableElement(self)
}
class StringExpression inherits TemplateableElement
{
	attribute subExpression : set StringExpression[0..*]#owningExpression
	reference owningExpression : StringExpression#subExpression
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStringExpression(self)
}
abstract class ParameterableElement inherits Element
{
	reference templateParameter : TemplateParameter#parameteredElement
	reference owningParameter : TemplateParameter#ownedParameteredElement
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitParameterableElement(self)
}
class TemplateBinding inherits DirectedRelationship
{
	reference boundElement : TemplateableElement[1..1]#templateBinding
	reference signature : TemplateSignature[1..1]
	attribute parameterSubstitution : set TemplateParameterSubstitution[0..*]#templateBinding
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTemplateBinding(self)
}
class TemplateParameterSubstitution inherits Element
{
	reference formal : TemplateParameter[1..1]
	reference templateBinding : TemplateBinding[1..1]#parameterSubstitution
	reference actual : set ParameterableElement[1..*]
	attribute ownedActual : set ParameterableElement[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTemplateParameterSubstitution(self)
}
class OperationTemplateParameter inherits TemplateParameter
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitOperationTemplateParameter(self)
}
class ClassifierTemplateParameter inherits TemplateParameter
{
	attribute allowSubstitutable : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitClassifierTemplateParameter(self)
}
abstract class ParameterableClassifier inherits Classifier
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitParameterableClassifier(self)
}
class RedefinableTemplateSignature inherits RedefinableElement, TemplateSignature
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from RedefinableElement is
		result := visitor.visitRedefinableTemplateSignature(self)
}
abstract class TemplateableClassifier inherits Classifier
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTemplateableClassifier(self)
}
class ConnectableElementTemplateParameter inherits TemplateParameter
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitConnectableElementTemplateParameter(self)
}
class ForkNode inherits ControlNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitForkNode(self)
}
class JoinNode inherits ControlNode
{
	attribute isCombineDuplicate : Boolean
	attribute joinSpec : ValueSpecification[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitJoinNode(self)
}
class FlowFinalNode inherits FinalNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitFlowFinalNode(self)
}
class CentralBufferNode inherits ObjectNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCentralBufferNode(self)
}
class ActivityPartition inherits NamedElement, ActivityGroup
{
	attribute isDimension : Boolean
	attribute isExternal : Boolean
	reference containedEdge : ActivityEdge[0..*]#inPartition
	reference containedNode : ActivityNode[0..*]#inPartition
	attribute subgroup : set ActivityPartition[0..*]#superPartition
	reference superPartition : ActivityPartition#subgroup
	reference represents : Element
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from NamedElement is
		result := visitor.visitActivityPartition(self)
}
class ExpansionNode inherits ObjectNode
{
	reference regionAsOutput : ExpansionRegion#outputElement
	reference regionAsInput : ExpansionRegion#inputElement
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExpansionNode(self)
}
class ExpansionRegion inherits StructuredActivityNode
{
	attribute mode : ExpansionKind
	reference outputElement : set ExpansionNode[0..*]#regionAsOutput
	reference inputElement : set ExpansionNode[1..*]#regionAsInput
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExpansionRegion(self)
}
enumeration ExpansionKind
{
	parallel;
	iterative;
	stream;
}
class ExceptionHandler inherits Element
{
	reference protectedNode : ExecutableNode[1..1]#handler
	reference handlerBody : ExecutableNode[1..1]
	reference exceptionInput : ObjectNode[1..1]
	reference exceptionType : set Classifier[1..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExceptionHandler(self)
}
class InteractionOccurrence inherits InteractionFragment
{
	reference refersTo : Interaction[1..1]
	attribute actualGate : set Gate[0..*]
	attribute argument : set InputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInteractionOccurrence(self)
}
class Gate inherits MessageEnd
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitGate(self)
}
class PartDecomposition inherits InteractionOccurrence
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPartDecomposition(self)
}
class InteractionOperand inherits Namespace, InteractionFragment
{
	attribute guard : InteractionConstraint
	attribute fragment : set InteractionFragment[0..*]#enclosingOperand
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Namespace is
		result := visitor.visitInteractionOperand(self)
}
class InteractionConstraint inherits Constraint
{
	attribute minint : ValueSpecification
	attribute maxint : ValueSpecification
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInteractionConstraint(self)
}
enumeration InteractionOperator
{
	~seq;
	alt;
	opt;
	break;
	par;
	strict;
	~loop;
	critical;
	neg;
	assert;
	ignore;
	consider;
}
class CombinedFragment inherits InteractionFragment
{
	attribute interactionOperator : InteractionOperator
	attribute operand : set InteractionOperand[1..*]
	attribute cfragmentGate : set Gate[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCombinedFragment(self)
}
class Continuation inherits InteractionFragment
{
	attribute setting : Boolean
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitContinuation(self)
}
class StateMachine inherits Behavior
{
	attribute region : set Region[1..*]#stateMachine
	attribute connectionPoint : set Pseudostate[0..*]
	reference extendedStateMachine : StateMachine
	reference stateMachine_redefinitionContext : BehavioredClassifier#ownedStateMachine
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStateMachine(self)
}
class Region inherits Namespace, RedefinableElement
{
	attribute subvertex : set Vertex[0..*]#container
	attribute transition : set Transition[0..*]#container
	reference stateMachine : StateMachine#region
	reference state : State#region
	reference extendedRegion : Region
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Namespace is
		result := visitor.visitRegion(self)
}
class Pseudostate inherits Vertex
{
	attribute kind : PseudostateKind
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPseudostate(self)
}
class State inherits Namespace, RedefinableElement, Vertex
{
	property isComposite : Boolean
		getter is do
			//TODO: implement getter for derived property isComposite
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property isComposite
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property isOrthogonal : Boolean
		getter is do
			//TODO: implement getter for derived property isOrthogonal
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property isOrthogonal
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property isSimple : Boolean
		getter is do
			//TODO: implement getter for derived property isSimple
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property isSimple
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property isSubmachineState : Boolean
		getter is do
			//TODO: implement getter for derived property isSubmachineState
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property isSubmachineState
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference submachine : StateMachine
	attribute connection : set ConnectionPointReference[0..*]
	reference redefinedState : State
	reference deferrableTrigger : set Trigger[0..*]
	attribute region : set Region[0..*]#state
	attribute entry : Activity
	attribute exit : Activity
	attribute doActivity : Activity
	attribute stateInvariant : Constraint
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Namespace is
		result := visitor.visitState(self)
}
abstract class Vertex inherits NamedElement
{
	reference container : Region#subvertex
	reference outgoing : set Transition[0..*]#source
	reference incoming : set Transition[0..*]#target
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitVertex(self)
}
class ConnectionPointReference inherits Vertex
{
	reference entry : set Pseudostate[0..*]
	reference exit : set Pseudostate[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitConnectionPointReference(self)
}
class Transition inherits RedefinableElement
{
	attribute kind : TransitionKind
	reference container : Region[1..1]#transition
	reference source : Vertex[1..1]#outgoing
	reference target : Vertex[1..1]#incoming
	reference redefinedTransition : Transition
	reference trigger : set Trigger[0..*]
	attribute guard : Constraint
	attribute effect : Activity
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTransition(self)
}
enumeration TransitionKind
{
	internal;
	local;
	external;
}
enumeration PseudostateKind
{
	initial;
	deepHistory;
	shallowHistory;
	join;
	fork;
	junction;
	choice;
	entryPoint;
	exitPoint;
	terminate;
}
class FinalState inherits State
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitFinalState(self)
}
class CreateObjectAction inherits Action
{
	reference classifier : Classifier[1..1]
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCreateObjectAction(self)
}
class DestroyObjectAction inherits Action
{
	attribute isDestroyLinks : Boolean
	attribute isDestroyOwnedObjects : Boolean
	attribute target : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDestroyObjectAction(self)
}
class TestIdentityAction inherits Action
{
	attribute first : InputPin[1..1]
	attribute second : InputPin[1..1]
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTestIdentityAction(self)
}
class ReadSelfAction inherits Action
{
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadSelfAction(self)
}
abstract class StructuralFeatureAction inherits Action
{
	reference structuralFeature : StructuralFeature[1..1]
	attribute object : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStructuralFeatureAction(self)
}
class ReadStructuralFeatureAction inherits StructuralFeatureAction
{
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadStructuralFeatureAction(self)
}
abstract class WriteStructuralFeatureAction inherits StructuralFeatureAction
{
	attribute ~value : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitWriteStructuralFeatureAction(self)
}
class ClearStructuralFeatureAction inherits StructuralFeatureAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitClearStructuralFeatureAction(self)
}
class RemoveStructuralFeatureValueAction inherits WriteStructuralFeatureAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitRemoveStructuralFeatureValueAction(self)
}
class AddStructuralFeatureValueAction inherits WriteStructuralFeatureAction
{
	attribute isReplaceAll : Boolean
	attribute insertAt : InputPin
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAddStructuralFeatureValueAction(self)
}
abstract class LinkAction inherits Action
{
	attribute endData : set LinkEndData[2..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLinkAction(self)
}
class LinkEndData inherits Element
{
	reference ~value : InputPin
	reference ~end : Property[1..1]
	attribute qualifier : QualifierValue[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLinkEndData(self)
}
class ReadLinkAction inherits LinkAction
{
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadLinkAction(self)
}
class LinkEndCreationData inherits LinkEndData
{
	attribute isReplaceAll : Boolean
	reference insertAt : InputPin
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitLinkEndCreationData(self)
}
class CreateLinkAction inherits WriteLinkAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCreateLinkAction(self)
}
abstract class WriteLinkAction inherits LinkAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitWriteLinkAction(self)
}
class DestroyLinkAction inherits WriteLinkAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDestroyLinkAction(self)
}
class ClearAssociationAction inherits Action
{
	attribute object : InputPin[1..1]
	reference association : Association[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitClearAssociationAction(self)
}
abstract class VariableAction inherits Action
{
	reference variable : Variable[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitVariableAction(self)
}
class ReadVariableAction inherits VariableAction
{
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadVariableAction(self)
}
abstract class WriteVariableAction inherits VariableAction
{
	attribute ~value : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitWriteVariableAction(self)
}
class ClearVariableAction inherits VariableAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitClearVariableAction(self)
}
class AddVariableValueAction inherits WriteVariableAction
{
	attribute isReplaceAll : Boolean
	attribute insertAt : InputPin
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAddVariableValueAction(self)
}
class RemoveVariableValueAction inherits WriteVariableAction
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitRemoveVariableValueAction(self)
}
class ApplyFunctionAction inherits Action
{
	reference ~function : PrimitiveFunction[1..1]
	attribute argument : set InputPin[0..*]
	attribute ~result : OutputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitApplyFunctionAction(self)
}
class PrimitiveFunction inherits PackageableElement
{
	attribute body : String
	attribute language : String
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitPrimitiveFunction(self)
}
abstract class CallAction inherits InvocationAction
{
	attribute isSynchronous : Boolean
	attribute ~result : OutputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCallAction(self)
}
abstract class InvocationAction inherits Action
{
	attribute argument : InputPin[0..*]
	reference onPort : Port
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInvocationAction(self)
}
class SendSignalAction inherits InvocationAction
{
	attribute target : InputPin[1..1]
	reference signal : Signal[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitSendSignalAction(self)
}
class BroadcastSignalAction inherits InvocationAction
{
	reference signal : Signal[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitBroadcastSignalAction(self)
}
class SendObjectAction inherits InvocationAction
{
	attribute target : InputPin[1..1]
	attribute request : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitSendObjectAction(self)
}
class CallOperationAction inherits CallAction
{
	reference ~operation : Operation[1..1]
	attribute target : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCallOperationAction(self)
}
class CallBehaviorAction inherits CallAction
{
	reference behavior : Behavior[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCallBehaviorAction(self)
}
class TimeExpression inherits ValueSpecification
{
	attribute firstTime : Boolean
	reference event : NamedElement
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTimeExpression(self)
}
class Duration inherits ValueSpecification
{
	attribute firstTime : Boolean
	reference event : set NamedElement[0..2]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDuration(self)
}
class TimeObservationAction inherits WriteStructuralFeatureAction
{
	attribute now : TimeExpression[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTimeObservationAction(self)
}
class DurationInterval inherits Interval
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDurationInterval(self)
}
class Interval inherits ValueSpecification
{
	reference min : ValueSpecification[0..*]
	reference max : ValueSpecification[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInterval(self)
}
class TimeConstraint inherits IntervalConstraint
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTimeConstraint(self)
}
class IntervalConstraint inherits Constraint
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitIntervalConstraint(self)
}
class TimeInterval inherits Interval
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitTimeInterval(self)
}
class DurationObservationAction inherits WriteStructuralFeatureAction
{
	attribute duration : Duration[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDurationObservationAction(self)
}
class DurationConstraint inherits IntervalConstraint
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDurationConstraint(self)
}
class DataStoreNode inherits CentralBufferNode
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDataStoreNode(self)
}
enumeration ParameterEffectKind
{
	create;
	read;
	update;
	delete;
}
class InterruptibleActivityRegion inherits ActivityGroup
{
	reference interruptingEdge : set ActivityEdge[0..*]#interrupts
	reference containedNode : ActivityNode[0..*]#inInterruptibleRegion
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitInterruptibleActivityRegion(self)
}
enumeration ObjectNodeOrderingKind
{
	unordered;
	ordered;
	LIFO;
	FIFO;
}
class ParameterSet inherits NamedElement
{
	reference parameter : set Parameter[1..*]#parameterSet
	attribute condition : set Constraint[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitParameterSet(self)
}
class Component inherits Class
{
	attribute isIndirectlyInstantiated : Boolean
	property required : set Interface[0..*]
		getter is do
			//TODO: implement getter for derived property required
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property required
			raise kermeta::exceptions::NotImplementedException.new 
		end
	property provided : set Interface[0..*]
		getter is do
			//TODO: implement getter for derived property provided
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property provided
			raise kermeta::exceptions::NotImplementedException.new 
		end
	attribute realization : set Realization[0..*]#abstraction
	attribute ownedMember : set PackageableElement[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitComponent(self)
}
enumeration ConnectorKind
{
	assembly;
	delegation;
}
class Deployment inherits Dependency
{
	reference deployedArtifact : set DeployedArtifact[0..*]
	reference location : DeploymentTarget[1..1]#deployment
	attribute configuration : set DeploymentSpecification[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDeployment(self)
}
abstract class DeployedArtifact inherits NamedElement
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDeployedArtifact(self)
}
abstract class DeploymentTarget inherits NamedElement
{
	attribute deployment : set Deployment[0..*]#location
	property deployedElement : set PackageableElement[0..*]
		getter is do
			//TODO: implement getter for derived property deployedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property deployedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDeploymentTarget(self)
}
class Node inherits Class, DeploymentTarget
{
	attribute nestedNode : set Node[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void from Class is
		result := visitor.visitNode(self)
}
class Device inherits Node
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDevice(self)
}
class ExecutionEnvironment inherits Node
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitExecutionEnvironment(self)
}
class CommunicationPath inherits Association
{
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCommunicationPath(self)
}
class ProtocolConformance inherits DirectedRelationship
{
	reference specificMachine : ProtocolStateMachine[1..1]#conformance
	reference generalMachine : ProtocolStateMachine[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitProtocolConformance(self)
}
class ProtocolStateMachine inherits StateMachine
{
	attribute conformance : set ProtocolConformance[0..*]#specificMachine
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitProtocolStateMachine(self)
}
class ProtocolTransition inherits Transition
{
	attribute postCondition : Constraint
	property referred : set Operation[0..*]
		getter is do
			//TODO: implement getter for derived property referred
			raise kermeta::exceptions::NotImplementedException.new 
		end
		setter is do
			//TODO: implement setter for derived property referred
			raise kermeta::exceptions::NotImplementedException.new 
		end
	reference preCondition : Constraint
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitProtocolTransition(self)
}
class ReadExtentAction inherits Action
{
	attribute ~result : OutputPin[1..1]
	reference classifier : Classifier[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadExtentAction(self)
}
class ReclassifyObjectAction inherits Action
{
	attribute isReplaceAll : Boolean
	reference oldClassifier : set Classifier[0..*]
	reference newClassifier : set Classifier[0..*]
	attribute object : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReclassifyObjectAction(self)
}
class ReadIsClassifiedObjectAction inherits Action
{
	attribute isDirect : Boolean
	reference classifier : Classifier[1..1]
	attribute ~result : OutputPin[1..1]
	attribute object : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadIsClassifiedObjectAction(self)
}
class StartOwnedBehaviorAction inherits Action
{
	attribute object : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitStartOwnedBehaviorAction(self)
}
class QualifierValue inherits Element
{
	reference qualifier : Property[1..1]
	reference ~value : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitQualifierValue(self)
}
class ReadLinkObjectEndAction inherits Action
{
	attribute object : InputPin[1..1]
	reference ~end : Property[1..1]
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadLinkObjectEndAction(self)
}
class ReadLinkObjectEndQualifierAction inherits Action
{
	attribute object : InputPin[1..1]
	attribute ~result : OutputPin[1..1]
	reference qualifier : Property[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReadLinkObjectEndQualifierAction(self)
}
class CreateLinkObjectAction inherits CreateLinkAction
{
	attribute ~result : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitCreateLinkObjectAction(self)
}
class AcceptEventAction inherits Action
{
	reference trigger : Trigger[0..*]
	reference ~result : set OutputPin[0..*]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAcceptEventAction(self)
}
class AcceptCallAction inherits AcceptEventAction
{
	reference returnInformation : OutputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitAcceptCallAction(self)
}
class ReplyAction inherits Action
{
	reference replyToCall : CallTrigger[1..1]
	reference replyValue : set InputPin[0..*]
	reference returnInformation : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitReplyAction(self)
}
class RaiseExceptionAction inherits Action
{
	reference exception : InputPin[1..1]
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitRaiseExceptionAction(self)
}
class DeploymentSpecification inherits Artifact
{
	attribute deploymentLocation : String
	attribute executionLocation : String
	method accept(visitor : visitors::Visitor) : kermeta::standard::~Void is
		result := visitor.visitDeploymentSpecification(self)
}

package visitors
{
	abstract class Visitable
	{
		method accept(visitor : Visitor) : kermeta::standard::~Void is do
			//TODO: implement operation accept
			raise kermeta::exceptions::NotImplementedException.new 
		end
	}
	abstract class Visitor
	{
		operation visit(visitable : Visitable) : kermeta::standard::~Void is do
			//TODO: implement operation visit
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitElement(visitable : Element) : kermeta::standard::~Void is do
			//TODO: implement operation visitElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitMultiplicityElement(visitable : MultiplicityElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitMultiplicityElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitNamedElement(visitable : NamedElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitNamedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitNamespace(visitable : Namespace) : kermeta::standard::~Void is do
			//TODO: implement operation visitNamespace
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitOpaqueExpression(visitable : OpaqueExpression) : kermeta::standard::~Void is do
			//TODO: implement operation visitOpaqueExpression
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitValueSpecification(visitable : ValueSpecification) : kermeta::standard::~Void is do
			//TODO: implement operation visitValueSpecification
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExpression(visitable : Expression) : kermeta::standard::~Void is do
			//TODO: implement operation visitExpression
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitComment(visitable : Comment) : kermeta::standard::~Void is do
			//TODO: implement operation visitComment
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDirectedRelationship(visitable : DirectedRelationship) : kermeta::standard::~Void is do
			//TODO: implement operation visitDirectedRelationship
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRelationship(visitable : Relationship) : kermeta::standard::~Void is do
			//TODO: implement operation visitRelationship
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClass(visitable : Class) : kermeta::standard::~Void is do
			//TODO: implement operation visitClass
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitType(visitable : Type) : kermeta::standard::~Void is do
			//TODO: implement operation visitType
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitProperty(visitable : Property) : kermeta::standard::~Void is do
			//TODO: implement operation visitProperty
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitOperation(visitable : Operation) : kermeta::standard::~Void is do
			//TODO: implement operation visitOperation
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTypedElement(visitable : TypedElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitTypedElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitParameter(visitable : Parameter) : kermeta::standard::~Void is do
			//TODO: implement operation visitParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPackage(visitable : Package) : kermeta::standard::~Void is do
			//TODO: implement operation visitPackage
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitEnumeration(visitable : Enumeration) : kermeta::standard::~Void is do
			//TODO: implement operation visitEnumeration
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDataType(visitable : DataType) : kermeta::standard::~Void is do
			//TODO: implement operation visitDataType
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitEnumerationLiteral(visitable : EnumerationLiteral) : kermeta::standard::~Void is do
			//TODO: implement operation visitEnumerationLiteral
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPrimitiveType(visitable : PrimitiveType) : kermeta::standard::~Void is do
			//TODO: implement operation visitPrimitiveType
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClassifier(visitable : Classifier) : kermeta::standard::~Void is do
			//TODO: implement operation visitClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitFeature(visitable : Feature) : kermeta::standard::~Void is do
			//TODO: implement operation visitFeature
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConstraint(visitable : Constraint) : kermeta::standard::~Void is do
			//TODO: implement operation visitConstraint
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLiteralBoolean(visitable : LiteralBoolean) : kermeta::standard::~Void is do
			//TODO: implement operation visitLiteralBoolean
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLiteralSpecification(visitable : LiteralSpecification) : kermeta::standard::~Void is do
			//TODO: implement operation visitLiteralSpecification
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLiteralString(visitable : LiteralString) : kermeta::standard::~Void is do
			//TODO: implement operation visitLiteralString
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLiteralNull(visitable : LiteralNull) : kermeta::standard::~Void is do
			//TODO: implement operation visitLiteralNull
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLiteralInteger(visitable : LiteralInteger) : kermeta::standard::~Void is do
			//TODO: implement operation visitLiteralInteger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLiteralUnlimitedNatural(visitable : LiteralUnlimitedNatural) : kermeta::standard::~Void is do
			//TODO: implement operation visitLiteralUnlimitedNatural
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitBehavioralFeature(visitable : BehavioralFeature) : kermeta::standard::~Void is do
			//TODO: implement operation visitBehavioralFeature
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStructuralFeature(visitable : StructuralFeature) : kermeta::standard::~Void is do
			//TODO: implement operation visitStructuralFeature
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInstanceSpecification(visitable : InstanceSpecification) : kermeta::standard::~Void is do
			//TODO: implement operation visitInstanceSpecification
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitSlot(visitable : Slot) : kermeta::standard::~Void is do
			//TODO: implement operation visitSlot
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInstanceValue(visitable : InstanceValue) : kermeta::standard::~Void is do
			//TODO: implement operation visitInstanceValue
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRedefinableElement(visitable : RedefinableElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitRedefinableElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitGeneralization(visitable : Generalization) : kermeta::standard::~Void is do
			//TODO: implement operation visitGeneralization
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPackageableElement(visitable : PackageableElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitPackageableElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitElementImport(visitable : ElementImport) : kermeta::standard::~Void is do
			//TODO: implement operation visitElementImport
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPackageImport(visitable : PackageImport) : kermeta::standard::~Void is do
			//TODO: implement operation visitPackageImport
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAssociation(visitable : Association) : kermeta::standard::~Void is do
			//TODO: implement operation visitAssociation
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPackageMerge(visitable : PackageMerge) : kermeta::standard::~Void is do
			//TODO: implement operation visitPackageMerge
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStereotype(visitable : Stereotype) : kermeta::standard::~Void is do
			//TODO: implement operation visitStereotype
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitProfile(visitable : Profile) : kermeta::standard::~Void is do
			//TODO: implement operation visitProfile
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitProfileApplication(visitable : ProfileApplication) : kermeta::standard::~Void is do
			//TODO: implement operation visitProfileApplication
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExtension(visitable : Extension) : kermeta::standard::~Void is do
			//TODO: implement operation visitExtension
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExtensionEnd(visitable : ExtensionEnd) : kermeta::standard::~Void is do
			//TODO: implement operation visitExtensionEnd
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitBehavior(visitable : Behavior) : kermeta::standard::~Void is do
			//TODO: implement operation visitBehavior
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitBehavioredClassifier(visitable : BehavioredClassifier) : kermeta::standard::~Void is do
			//TODO: implement operation visitBehavioredClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivity(visitable : Activity) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivity
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPermission(visitable : Permission) : kermeta::standard::~Void is do
			//TODO: implement operation visitPermission
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDependency(visitable : Dependency) : kermeta::standard::~Void is do
			//TODO: implement operation visitDependency
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitUsage(visitable : Usage) : kermeta::standard::~Void is do
			//TODO: implement operation visitUsage
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAbstraction(visitable : Abstraction) : kermeta::standard::~Void is do
			//TODO: implement operation visitAbstraction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRealization(visitable : Realization) : kermeta::standard::~Void is do
			//TODO: implement operation visitRealization
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitSubstitution(visitable : Substitution) : kermeta::standard::~Void is do
			//TODO: implement operation visitSubstitution
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitGeneralizationSet(visitable : GeneralizationSet) : kermeta::standard::~Void is do
			//TODO: implement operation visitGeneralizationSet
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAssociationClass(visitable : AssociationClass) : kermeta::standard::~Void is do
			//TODO: implement operation visitAssociationClass
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInformationItem(visitable : InformationItem) : kermeta::standard::~Void is do
			//TODO: implement operation visitInformationItem
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInformationFlow(visitable : InformationFlow) : kermeta::standard::~Void is do
			//TODO: implement operation visitInformationFlow
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitModel(visitable : Model) : kermeta::standard::~Void is do
			//TODO: implement operation visitModel
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConnectorEnd(visitable : ConnectorEnd) : kermeta::standard::~Void is do
			//TODO: implement operation visitConnectorEnd
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConnectableElement(visitable : ConnectableElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitConnectableElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConnector(visitable : Connector) : kermeta::standard::~Void is do
			//TODO: implement operation visitConnector
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStructuredClassifier(visitable : StructuredClassifier) : kermeta::standard::~Void is do
			//TODO: implement operation visitStructuredClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivityEdge(visitable : ActivityEdge) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivityEdge
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivityGroup(visitable : ActivityGroup) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivityGroup
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivityNode(visitable : ActivityNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivityNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAction(visitable : Action) : kermeta::standard::~Void is do
			//TODO: implement operation visitAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitObjectNode(visitable : ObjectNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitObjectNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitControlNode(visitable : ControlNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitControlNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitControlFlow(visitable : ControlFlow) : kermeta::standard::~Void is do
			//TODO: implement operation visitControlFlow
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitObjectFlow(visitable : ObjectFlow) : kermeta::standard::~Void is do
			//TODO: implement operation visitObjectFlow
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInitialNode(visitable : InitialNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitInitialNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitFinalNode(visitable : FinalNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitFinalNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivityFinalNode(visitable : ActivityFinalNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivityFinalNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDecisionNode(visitable : DecisionNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitDecisionNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitMergeNode(visitable : MergeNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitMergeNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExecutableNode(visitable : ExecutableNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitExecutableNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitOutputPin(visitable : OutputPin) : kermeta::standard::~Void is do
			//TODO: implement operation visitOutputPin
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInputPin(visitable : InputPin) : kermeta::standard::~Void is do
			//TODO: implement operation visitInputPin
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPin(visitable : Pin) : kermeta::standard::~Void is do
			//TODO: implement operation visitPin
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivityParameterNode(visitable : ActivityParameterNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivityParameterNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitValuePin(visitable : ValuePin) : kermeta::standard::~Void is do
			//TODO: implement operation visitValuePin
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInterface(visitable : Interface) : kermeta::standard::~Void is do
			//TODO: implement operation visitInterface
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitImplementation(visitable : Implementation) : kermeta::standard::~Void is do
			//TODO: implement operation visitImplementation
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitArtifact(visitable : Artifact) : kermeta::standard::~Void is do
			//TODO: implement operation visitArtifact
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitManifestation(visitable : Manifestation) : kermeta::standard::~Void is do
			//TODO: implement operation visitManifestation
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActor(visitable : Actor) : kermeta::standard::~Void is do
			//TODO: implement operation visitActor
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExtend(visitable : Extend) : kermeta::standard::~Void is do
			//TODO: implement operation visitExtend
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitUseCase(visitable : UseCase) : kermeta::standard::~Void is do
			//TODO: implement operation visitUseCase
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExtensionPoint(visitable : ExtensionPoint) : kermeta::standard::~Void is do
			//TODO: implement operation visitExtensionPoint
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInclude(visitable : Include) : kermeta::standard::~Void is do
			//TODO: implement operation visitInclude
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCollaborationOccurrence(visitable : CollaborationOccurrence) : kermeta::standard::~Void is do
			//TODO: implement operation visitCollaborationOccurrence
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCollaboration(visitable : Collaboration) : kermeta::standard::~Void is do
			//TODO: implement operation visitCollaboration
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPort(visitable : Port) : kermeta::standard::~Void is do
			//TODO: implement operation visitPort
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitEncapsulatedClassifier(visitable : EncapsulatedClassifier) : kermeta::standard::~Void is do
			//TODO: implement operation visitEncapsulatedClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCallTrigger(visitable : CallTrigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitCallTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitMessageTrigger(visitable : MessageTrigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitMessageTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitChangeTrigger(visitable : ChangeTrigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitChangeTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTrigger(visitable : Trigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReception(visitable : Reception) : kermeta::standard::~Void is do
			//TODO: implement operation visitReception
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitSignal(visitable : Signal) : kermeta::standard::~Void is do
			//TODO: implement operation visitSignal
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitSignalTrigger(visitable : SignalTrigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitSignalTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTimeTrigger(visitable : TimeTrigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitTimeTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAnyTrigger(visitable : AnyTrigger) : kermeta::standard::~Void is do
			//TODO: implement operation visitAnyTrigger
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitVariable(visitable : Variable) : kermeta::standard::~Void is do
			//TODO: implement operation visitVariable
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStructuredActivityNode(visitable : StructuredActivityNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitStructuredActivityNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConditionalNode(visitable : ConditionalNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitConditionalNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClause(visitable : Clause) : kermeta::standard::~Void is do
			//TODO: implement operation visitClause
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLoopNode(visitable : LoopNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitLoopNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInteraction(visitable : Interaction) : kermeta::standard::~Void is do
			//TODO: implement operation visitInteraction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInteractionFragment(visitable : InteractionFragment) : kermeta::standard::~Void is do
			//TODO: implement operation visitInteractionFragment
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLifeline(visitable : Lifeline) : kermeta::standard::~Void is do
			//TODO: implement operation visitLifeline
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitMessage(visitable : Message) : kermeta::standard::~Void is do
			//TODO: implement operation visitMessage
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitGeneralOrdering(visitable : GeneralOrdering) : kermeta::standard::~Void is do
			//TODO: implement operation visitGeneralOrdering
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitMessageEnd(visitable : MessageEnd) : kermeta::standard::~Void is do
			//TODO: implement operation visitMessageEnd
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitEventOccurrence(visitable : EventOccurrence) : kermeta::standard::~Void is do
			//TODO: implement operation visitEventOccurrence
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExecutionOccurrence(visitable : ExecutionOccurrence) : kermeta::standard::~Void is do
			//TODO: implement operation visitExecutionOccurrence
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStateInvariant(visitable : StateInvariant) : kermeta::standard::~Void is do
			//TODO: implement operation visitStateInvariant
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStop(visitable : Stop) : kermeta::standard::~Void is do
			//TODO: implement operation visitStop
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTemplateSignature(visitable : TemplateSignature) : kermeta::standard::~Void is do
			//TODO: implement operation visitTemplateSignature
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTemplateParameter(visitable : TemplateParameter) : kermeta::standard::~Void is do
			//TODO: implement operation visitTemplateParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTemplateableElement(visitable : TemplateableElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitTemplateableElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStringExpression(visitable : StringExpression) : kermeta::standard::~Void is do
			//TODO: implement operation visitStringExpression
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitParameterableElement(visitable : ParameterableElement) : kermeta::standard::~Void is do
			//TODO: implement operation visitParameterableElement
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTemplateBinding(visitable : TemplateBinding) : kermeta::standard::~Void is do 
			//TODO: implement operation visitTemplateBinding
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTemplateParameterSubstitution(visitable : TemplateParameterSubstitution) : kermeta::standard::~Void is do
			//TODO: implement operation visitTemplateParameterSubstitution
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitOperationTemplateParameter(visitable : OperationTemplateParameter) : kermeta::standard::~Void is do
			//TODO: implement operation visitOperationTemplateParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClassifierTemplateParameter(visitable : ClassifierTemplateParameter) : kermeta::standard::~Void is do
			//TODO: implement operation visitClassifierTemplateParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitParameterableClassifier(visitable : ParameterableClassifier) : kermeta::standard::~Void is do
			//TODO: implement operation visitParameterableClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRedefinableTemplateSignature(visitable : RedefinableTemplateSignature) : kermeta::standard::~Void is do
			//TODO: implement operation visitRedefinableTemplateSignature
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTemplateableClassifier(visitable : TemplateableClassifier) : kermeta::standard::~Void is do
			//TODO: implement operation visitTemplateableClassifier
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConnectableElementTemplateParameter(visitable : ConnectableElementTemplateParameter) : kermeta::standard::~Void is do
			//TODO: implement operation visitConnectableElementTemplateParameter
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitForkNode(visitable : ForkNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitForkNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitJoinNode(visitable : JoinNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitJoinNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitFlowFinalNode(visitable : FlowFinalNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitFlowFinalNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCentralBufferNode(visitable : CentralBufferNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitCentralBufferNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitActivityPartition(visitable : ActivityPartition) : kermeta::standard::~Void is do
			//TODO: implement operation visitActivityPartition
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExpansionNode(visitable : ExpansionNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitExpansionNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExpansionRegion(visitable : ExpansionRegion) : kermeta::standard::~Void is do
			//TODO: implement operation visitExpansionRegion
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExceptionHandler(visitable : ExceptionHandler) : kermeta::standard::~Void is do
			//TODO: implement operation visitExceptionHandler
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInteractionOccurrence(visitable : InteractionOccurrence) : kermeta::standard::~Void is do
			//TODO: implement operation visitInteractionOccurrence
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitGate(visitable : Gate) : kermeta::standard::~Void is do
			//TODO: implement operation visitGate
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPartDecomposition(visitable : PartDecomposition) : kermeta::standard::~Void is do
			//TODO: implement operation visitPartDecomposition
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInteractionOperand(visitable : InteractionOperand) : kermeta::standard::~Void is do
			//TODO: implement operation visitInteractionOperand
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInteractionConstraint(visitable : InteractionConstraint) : kermeta::standard::~Void is do
			//TODO: implement operation visitInteractionConstraint
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCombinedFragment(visitable : CombinedFragment) : kermeta::standard::~Void is do
			//TODO: implement operation visitCombinedFragment
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitContinuation(visitable : Continuation) : kermeta::standard::~Void is do
			//TODO: implement operation visitContinuation
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStateMachine(visitable : StateMachine) : kermeta::standard::~Void is do
			//TODO: implement operation visitStateMachine
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRegion(visitable : Region) : kermeta::standard::~Void is do
			//TODO: implement operation visitRegion
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPseudostate(visitable : Pseudostate) : kermeta::standard::~Void is do
			//TODO: implement operation visitPseudostate
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitState(visitable : State) : kermeta::standard::~Void is do
			//TODO: implement operation visitState
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitVertex(visitable : Vertex) : kermeta::standard::~Void is do
			//TODO: implement operation visitVertex
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitConnectionPointReference(visitable : ConnectionPointReference) : kermeta::standard::~Void is do
			//TODO: implement operation visitConnectionPointReference
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTransition(visitable : Transition) : kermeta::standard::~Void is do
			//TODO: implement operation visitTransition
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitFinalState(visitable : FinalState) : kermeta::standard::~Void is do
			//TODO: implement operation visitFinalState
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCreateObjectAction(visitable : CreateObjectAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitCreateObjectAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDestroyObjectAction(visitable : DestroyObjectAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitDestroyObjectAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTestIdentityAction(visitable : TestIdentityAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitTestIdentityAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadSelfAction(visitable : ReadSelfAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadSelfAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStructuralFeatureAction(visitable : StructuralFeatureAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitStructuralFeatureAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadStructuralFeatureAction(visitable : ReadStructuralFeatureAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadStructuralFeatureAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitWriteStructuralFeatureAction(visitable : WriteStructuralFeatureAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitWriteStructuralFeatureAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClearStructuralFeatureAction(visitable : ClearStructuralFeatureAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitClearStructuralFeatureAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRemoveStructuralFeatureValueAction(visitable : RemoveStructuralFeatureValueAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitRemoveStructuralFeatureValueAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAddStructuralFeatureValueAction(visitable : AddStructuralFeatureValueAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitAddStructuralFeatureValueAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLinkAction(visitable : LinkAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitLinkAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLinkEndData(visitable : LinkEndData) : kermeta::standard::~Void is do
			//TODO: implement operation visitLinkEndData
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadLinkAction(visitable : ReadLinkAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadLinkAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitLinkEndCreationData(visitable : LinkEndCreationData) : kermeta::standard::~Void is do
			//TODO: implement operation visitLinkEndCreationData
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCreateLinkAction(visitable : CreateLinkAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitCreateLinkAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitWriteLinkAction(visitable : WriteLinkAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitWriteLinkAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDestroyLinkAction(visitable : DestroyLinkAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitDestroyLinkAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClearAssociationAction(visitable : ClearAssociationAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitClearAssociationAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitVariableAction(visitable : VariableAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitVariableAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadVariableAction(visitable : ReadVariableAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadVariableAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitWriteVariableAction(visitable : WriteVariableAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitWriteVariableAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitClearVariableAction(visitable : ClearVariableAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitClearVariableAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAddVariableValueAction(visitable : AddVariableValueAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitAddVariableValueAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRemoveVariableValueAction(visitable : RemoveVariableValueAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitRemoveVariableValueAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitApplyFunctionAction(visitable : ApplyFunctionAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitApplyFunctionAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitPrimitiveFunction(visitable : PrimitiveFunction) : kermeta::standard::~Void is do
			//TODO: implement operation visitPrimitiveFunction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCallAction(visitable : CallAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitCallAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInvocationAction(visitable : InvocationAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitInvocationAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitSendSignalAction(visitable : SendSignalAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitSendSignalAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitBroadcastSignalAction(visitable : BroadcastSignalAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitBroadcastSignalAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitSendObjectAction(visitable : SendObjectAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitSendObjectAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCallOperationAction(visitable : CallOperationAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitCallOperationAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCallBehaviorAction(visitable : CallBehaviorAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitCallBehaviorAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTimeExpression(visitable : TimeExpression) : kermeta::standard::~Void is do
			//TODO: implement operation visitTimeExpression
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDuration(visitable : Duration) : kermeta::standard::~Void is do
			//TODO: implement operation visitDuration
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTimeObservationAction(visitable : TimeObservationAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitTimeObservationAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDurationInterval(visitable : DurationInterval) : kermeta::standard::~Void is do
			//TODO: implement operation visitDurationInterval
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInterval(visitable : Interval) : kermeta::standard::~Void is do
			//TODO: implement operation visitInterval
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTimeConstraint(visitable : TimeConstraint) : kermeta::standard::~Void is do
			//TODO: implement operation visitTimeConstraint
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitIntervalConstraint(visitable : IntervalConstraint) : kermeta::standard::~Void is do
			//TODO: implement operation visitIntervalConstraint
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitTimeInterval(visitable : TimeInterval) : kermeta::standard::~Void is do
			//TODO: implement operation visitTimeInterval
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDurationObservationAction(visitable : DurationObservationAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitDurationObservationAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDurationConstraint(visitable : DurationConstraint) : kermeta::standard::~Void is do
			//TODO: implement operation visitDurationConstraint
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDataStoreNode(visitable : DataStoreNode) : kermeta::standard::~Void is do
			//TODO: implement operation visitDataStoreNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitInterruptibleActivityRegion(visitable : InterruptibleActivityRegion) : kermeta::standard::~Void is do
			//TODO: implement operation visitInterruptibleActivityRegion
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitParameterSet(visitable : ParameterSet) : kermeta::standard::~Void is do
			//TODO: implement operation visitParameterSet
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitComponent(visitable : Component) : kermeta::standard::~Void is do
			//TODO: implement operation visitComponent
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDeployment(visitable : Deployment) : kermeta::standard::~Void is do
			//TODO: implement operation visitDeployment
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDeployedArtifact(visitable : DeployedArtifact) : kermeta::standard::~Void is do
			//TODO: implement operation visitDeployedArtifact
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDeploymentTarget(visitable : DeploymentTarget) : kermeta::standard::~Void is do
			//TODO: implement operation visitDeploymentTarget
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitNode(visitable : Node) : kermeta::standard::~Void is do
			//TODO: implement operation visitNode
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDevice(visitable : Device) : kermeta::standard::~Void is do
			//TODO: implement operation visitDevice
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitExecutionEnvironment(visitable : ExecutionEnvironment) : kermeta::standard::~Void is do
			//TODO: implement operation visitExecutionEnvironment
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCommunicationPath(visitable : CommunicationPath) : kermeta::standard::~Void is do
			//TODO: implement operation visitCommunicationPath
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitProtocolConformance(visitable : ProtocolConformance) : kermeta::standard::~Void is do
			//TODO: implement operation visitProtocolConformance
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitProtocolStateMachine(visitable : ProtocolStateMachine) : kermeta::standard::~Void is do
			//TODO: implement operation visitProtocolStateMachine
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitProtocolTransition(visitable : ProtocolTransition) : kermeta::standard::~Void is do
			//TODO: implement operation visitProtocolTransition
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadExtentAction(visitable : ReadExtentAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadExtentAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReclassifyObjectAction(visitable : ReclassifyObjectAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReclassifyObjectAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadIsClassifiedObjectAction(visitable : ReadIsClassifiedObjectAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadIsClassifiedObjectAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitStartOwnedBehaviorAction(visitable : StartOwnedBehaviorAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitStartOwnedBehaviorAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitQualifierValue(visitable : QualifierValue) : kermeta::standard::~Void is do
			//TODO: implement operation visitQualifierValue
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadLinkObjectEndAction(visitable : ReadLinkObjectEndAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadLinkObjectEndAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReadLinkObjectEndQualifierAction(visitable : ReadLinkObjectEndQualifierAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReadLinkObjectEndQualifierAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitCreateLinkObjectAction(visitable : CreateLinkObjectAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitCreateLinkObjectAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAcceptEventAction(visitable : AcceptEventAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitAcceptEventAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitAcceptCallAction(visitable : AcceptCallAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitAcceptCallAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitReplyAction(visitable : ReplyAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitReplyAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitRaiseExceptionAction(visitable : RaiseExceptionAction) : kermeta::standard::~Void is do
			//TODO: implement operation visitRaiseExceptionAction
			raise kermeta::exceptions::NotImplementedException.new 
		end
		operation visitDeploymentSpecification(visitable : DeploymentSpecification) : kermeta::standard::~Void is do
			//TODO: implement operation visitDeploymentSpecification
			raise kermeta::exceptions::NotImplementedException.new 
		end
	}
}


