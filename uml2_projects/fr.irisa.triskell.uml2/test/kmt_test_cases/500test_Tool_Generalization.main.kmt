package tools_tests;

require kermeta
require "../../src/kermeta/transformations/StaticTools.kmt"

using uml
using uml::transformations

class ToolGeneralizationTestCase inherits kermeta::kunit::TestCase
{
	reference model : Model
    reference Aclass : Classifier
    reference Bclass : Classifier
	
	method setUp() is do
    	model := Model.new
    	Aclass := Class.new
    	Bclass := Class.new
    	Aclass.name := "A"
    	Bclass.name := "B"
    	model.packagedElement.add(Aclass)
    	model.packagedElement.add(Bclass)
    	
     	var gene : Generalization_Tool init Generalization_Tool.new
     	gene.addGeneralization(Aclass, Bclass)
	end
	
	method tearDown() is do
		// We don't need to tearDown anything in this test case.
	end
    
/*	the redefinedClassifier has nothing to do with generalization !!!
    operation testGeneralizationTool_Ancestor() is do
    	assertTrueWithMsg(Aclass.redefinedClassifier.contains(Bclass),
    		"The ancestor Class must be redefined by the heir")
    end		*/
    
    operation testGeneralizationTool_Heir() is do
    	assertTrueWithMsg(Bclass.generalization.size == 1,
    		"The heir Class must have a generalization")
    	assertTrueWithMsg(Bclass.generalization.one.general == Aclass,
    		"The heir Class must have the right ancestor")
    end
    
/*  NB : Generalization is not a packageableElement so we can't add it to the heir package
    // the added generalization must be present in the model, to be saved
    operation testGeneralizationTool_Model() is do
    	var bool : Boolean init false
    	model.packagedElement.each{ u |
    		if u.getMetaClass.isInstance(Generalization) then bool := true end
    	}
    	assertTrueWithMsg(bool,
    		"Tool failed to add the generalization to the model")
    end		*/
}