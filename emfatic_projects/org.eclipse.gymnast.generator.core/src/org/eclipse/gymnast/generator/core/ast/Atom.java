/*******************************************************************************
 * Copyright (c) 2004, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.gymnast.generator.core.ast;

import antlr.Token;

/**
 *
 * @generated by Gymnast from gymnast.ast on Aug 15, 2004 2:28:15 PM
 */
public class Atom extends GymnastTokenNode {

	public static final String KW_ABSTRACT = "abstract";
	public static final String KW_CONTAINER = "container";
	public static final String KW_INTERFACE = "interface";
	public static final String KW_LANGUAGE = "language";
	public static final String KW_LIST = "list";
	public static final String KW_OPTIONS = "options";
	public static final String KW_SEQUENCE = "sequence";
	public static final String KW_TOKEN = "token";

	
	/**
	 * Construct a new Atom.
	 */
	public Atom(Token token) {
		super(token);
	}

	/**
	 * This method overrides the superclass <code>acceptImpl</code> providing
	 * the same implementation.  Here <code>this</code> refers to this specific node
	 * class, so the <code>beginVisit</code> and <code>endVisit</code> methods
	 * specific to this type in the visitor will be invoked.
	 */
	public void acceptImpl(GymnastASTNodeVisitor visitor) {
		boolean visitChildren = visitor.beginVisit(this);
		if (visitChildren) visitChildren(visitor);
		visitor.endVisit(this);
	}

}