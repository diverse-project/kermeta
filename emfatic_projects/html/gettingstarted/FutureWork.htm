<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>Possibilities for future work</title>
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=Section1>

<h2><a name="_Toc159304147">Possibilities for future work</a></h2>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Many extensions are possible. An obvious one is adding
Emfatic-level shorthand annotations for OCL expressions. To the Emfatic editor
they are just uninterpreted strings, yet the AST-building background process
can trigger the MDT OCL infrastructure for parsing and validation, thus
allowing for feedback to the user. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Another possibility that would rely on previous work at STS
is support for Java Persistence (JSR-220). Assuming that EMF-level annotations
for persistence were given alongside the class model (in the .emf document
edited by Emfatic) then a generation of Java-level annotations for persistence
could be carried out automatically by an Emfatic extension. The resulting code
runs with an EMF-aware persistence runtime, e.g. Teneo. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The third possibility we’ll mention are hints for diagram
layout specified along text, with an accompanying visualization (as a second tabbed
page in MultiPageEditor), following the ideas of </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-left:36.0pt'>Diomidis Spinellis. On the
declarative specification of models. IEEE Software, 20(2):94–96, March/April
2003<br>
<a
href="http://www.spinellis.gr/pubs/jrnl/2003-IEEESW-umlgraph/html/article.html">http://www.spinellis.gr/pubs/jrnl/2003-IEEESW-umlgraph/html/article.html</a>
<br>
A tool exemplifying the proposed functionality is UMLGraph: <a
href="http://www.spinellis.gr/sw/umlgraph/">http://www.spinellis.gr/sw/umlgraph/</a>
<br>
<br>
Martin Fowler on this topic,  <a
href="http://martinfowler.com/bliki/UmlSketchingTools.html">http://martinfowler.com/bliki/UmlSketchingTools.html</a>
<br>
<br>
Another, layout only tool, whose syntax for layout hints we’re following is
MetaUML: <a href="http://metauml.sourceforge.net/">http://metauml.sourceforge.net/</a>
</p>

<p class=MsoNormal style='margin-left:36.0pt'>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
