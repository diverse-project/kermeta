global java.util.List list;
global java.util.Map uniqueobjects;
rule "RulesName"
	 when 
$s2: art.type.Service(name == "eu.diva.tis.api.thinkingtool.NotificationStrategy")
$s3: art.type.Port(role == "client",service == $s2)
$s4: art.type.PrimitiveType(port contains $s3)
$s5: art.instance.PrimitiveInstance(type == $s4)
$s1: art.instance.CompositeInstance(subComponent contains $s5)
$s0: art.System(root == $s1)
then
 	 java.util.HashMap m = new java.util.HashMap();
m.put("systemRole",$s0);
m.put("rootRole",$s1);
m.put("strategyClientRole",$s5);
m.put("strategyClientPortRole",$s3);
	 list.add(m);
 art.System s0 = art.ArtFactory.eINSTANCE.createSystem();
art.instance.CompositeInstance s1 = art.instance.InstanceFactory.eINSTANCE.createCompositeInstance();
art.instance.PrimitiveInstance s2 = (art.instance.PrimitiveInstance) uniqueobjects.get("s2");
if ( s2 == null){
s2 = art.instance.InstanceFactory.eINSTANCE.createPrimitiveInstance();
uniqueobjects.put("s2",s2);
}
art.implem.OSGiComponent s3 = (art.implem.OSGiComponent) uniqueobjects.get("s3");
if ( s3 == null){
s3 = art.implem.ImplemFactory.eINSTANCE.createOSGiComponent();
uniqueobjects.put("s3",s3);
}
art.instance.PrimitiveInstance s4 = art.instance.InstanceFactory.eINSTANCE.createPrimitiveInstance();
art.instance.TransmissionBinding s5 = art.instance.InstanceFactory.eINSTANCE.createTransmissionBinding();
art.type.FunctionalService s6 = (art.type.FunctionalService) uniqueobjects.get("s6");
if ( s6 == null){
s6 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s6",s6);
}
art.type.FunctionalService s7 = (art.type.FunctionalService) uniqueobjects.get("s7");
if ( s7 == null){
s7 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s7",s7);
}
art.type.PrimitiveType s8 = (art.type.PrimitiveType) uniqueobjects.get("s8");
if ( s8 == null){
s8 = art.type.TypeFactory.eINSTANCE.createPrimitiveType();
uniqueobjects.put("s8",s8);
}
art.type.Port s9 = (art.type.Port) uniqueobjects.get("s9");
if ( s9 == null){
s9 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s9",s9);
}
art.type.Port s10 = (art.type.Port) uniqueobjects.get("s10");
if ( s10 == null){
s10 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s10",s10);
}
s2.setName("EmergencyNotificationStrategy");
s2.setType(s8);
s2.setSuperComponent(s1);
s2.setImplem(s3);
s4.setName("FakeNotificationClient");
s4.setSuperComponent(s1);
s4.getBinding().add(s5);
s5.setId("EmergencyNotificationStrategy");
s5.setServerInstance(s2);
s6.setName("eu.diva.tis.api.thinkingtool.NotificationStrategy");
s7.setName("org.slf4j.Logger");
s8.setName("eu.diva.tis.thinkingtool.notification");
s8.getPort().add(s9);
s8.getPort().add(s10);
s9.setLower(1);
s9.setUpper(1);
s9.setRole("server");
s9.setName("strategy");
s9.setService(s6);
s10.setLower(1);
s10.setUpper(1);
s10.setRole("client");
s10.setName("logger");
s10.setService(s7);
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s6"));
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s7"));
$s0.getTypes().add((art.type.ComponentType)  uniqueobjects.get("s8"));
$s1.getSubComponent().add((art.instance.ComponentInstance)  uniqueobjects.get("s2"));
s5.setClient($s3);
$s5.getBinding().add(s5);
end