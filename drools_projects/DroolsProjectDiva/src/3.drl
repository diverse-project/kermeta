global java.util.List list;
global java.util.Map uniqueobjects;
rule "RulesName"
	 when 
$s2: art.type.Service(name == "eu.diva.tis.api.thinkingtool.ResourcePlanner")
$s3: art.type.Port(role == "client",service == $s2)
$s4: art.type.Service(name == "eu.diva.tis.api.thinkingtool.TaskPlanner")
$s5: art.type.Port(role == "client",service == $s4)
$s6: art.type.Service(name == "eu.diva.tis.api.thinkingtool.CommunicationPlanner")
$s7: art.type.Port(role == "client",service == $s6)
$s8: art.type.PrimitiveType(port contains $s3,port contains $s5,port contains $s7)
$s9: art.instance.PrimitiveInstance(type == $s8)
$s1: art.instance.CompositeInstance(subComponent contains $s9)
$s0: art.System(root == $s1)
then
 	 java.util.HashMap m = new java.util.HashMap();
m.put("systemRole",$s0);
m.put("rootRole",$s1);
m.put("resRole",$s3);
m.put("taskRole",$s5);
m.put("comRole",$s7);
m.put("clientRole",$s9);
	 list.add(m);
 art.System s0 = art.ArtFactory.eINSTANCE.createSystem();
art.instance.CompositeInstance s1 = art.instance.InstanceFactory.eINSTANCE.createCompositeInstance();
art.instance.PrimitiveInstance s2 = (art.instance.PrimitiveInstance) uniqueobjects.get("s2");
if ( s2 == null){
s2 = art.instance.InstanceFactory.eINSTANCE.createPrimitiveInstance();
uniqueobjects.put("s2",s2);
}
art.implem.OSGiComponent s3 = (art.implem.OSGiComponent) uniqueobjects.get("s3");
if ( s3 == null){
s3 = art.implem.ImplemFactory.eINSTANCE.createOSGiComponent();
uniqueobjects.put("s3",s3);
}
art.instance.PrimitiveInstance s4 = art.instance.InstanceFactory.eINSTANCE.createPrimitiveInstance();
art.instance.TransmissionBinding s5 = art.instance.InstanceFactory.eINSTANCE.createTransmissionBinding();
art.instance.TransmissionBinding s6 = art.instance.InstanceFactory.eINSTANCE.createTransmissionBinding();
art.instance.TransmissionBinding s7 = art.instance.InstanceFactory.eINSTANCE.createTransmissionBinding();
art.type.FunctionalService s8 = (art.type.FunctionalService) uniqueobjects.get("s8");
if ( s8 == null){
s8 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s8",s8);
}
art.type.FunctionalService s9 = (art.type.FunctionalService) uniqueobjects.get("s9");
if ( s9 == null){
s9 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s9",s9);
}
art.type.FunctionalService s10 = (art.type.FunctionalService) uniqueobjects.get("s10");
if ( s10 == null){
s10 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s10",s10);
}
art.type.FunctionalService s11 = (art.type.FunctionalService) uniqueobjects.get("s11");
if ( s11 == null){
s11 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s11",s11);
}
art.type.FunctionalService s12 = (art.type.FunctionalService) uniqueobjects.get("s12");
if ( s12 == null){
s12 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s12",s12);
}
art.type.FunctionalService s13 = (art.type.FunctionalService) uniqueobjects.get("s13");
if ( s13 == null){
s13 = art.type.TypeFactory.eINSTANCE.createFunctionalService();
uniqueobjects.put("s13",s13);
}
art.type.PrimitiveType s14 = (art.type.PrimitiveType) uniqueobjects.get("s14");
if ( s14 == null){
s14 = art.type.TypeFactory.eINSTANCE.createPrimitiveType();
uniqueobjects.put("s14",s14);
}
art.type.Port s15 = (art.type.Port) uniqueobjects.get("s15");
if ( s15 == null){
s15 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s15",s15);
}
art.type.Port s16 = (art.type.Port) uniqueobjects.get("s16");
if ( s16 == null){
s16 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s16",s16);
}
art.type.Port s17 = (art.type.Port) uniqueobjects.get("s17");
if ( s17 == null){
s17 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s17",s17);
}
art.type.Port s18 = (art.type.Port) uniqueobjects.get("s18");
if ( s18 == null){
s18 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s18",s18);
}
art.type.Port s19 = (art.type.Port) uniqueobjects.get("s19");
if ( s19 == null){
s19 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s19",s19);
}
art.type.Port s20 = (art.type.Port) uniqueobjects.get("s20");
if ( s20 == null){
s20 = art.type.TypeFactory.eINSTANCE.createPort();
uniqueobjects.put("s20",s20);
}
s2.setName("FirePlanner");
s2.setType(s14);
s2.setSuperComponent(s1);
s2.setImplem(s3);
s4.setName("fake");
s4.setSuperComponent(s1);
s4.getBinding().add(s5);
s4.getBinding().add(s6);
s4.getBinding().add(s7);
s5.setId("com");
s5.setServerInstance(s2);
s6.setId("task");
s6.setServerInstance(s2);
s7.setId("res");
s7.setServerInstance(s2);
s8.setName("eu.diva.tis.api.thinkingtool.ResourcePlanner");
s9.setName("eu.diva.tis.api.thinkingtool.TaskPlanner");
s10.setName("eu.diva.tis.api.thinkingtool.CommunicationPlanner");
s11.setName("eu.diva.tis.api.messaging.Channel");
s12.setName("eu.diva.tis.api.thinkingtool.NotificationStrategy");
s13.setName("org.slf4j.Logger");
s14.setName("eu.diva.tis.thinkingtool.planner");
s14.getPort().add(s15);
s14.getPort().add(s16);
s14.getPort().add(s17);
s14.getPort().add(s18);
s14.getPort().add(s19);
s14.getPort().add(s20);
s15.setLower(1);
s15.setUpper(1);
s15.setRole("server");
s15.setName("res");
s15.setService(s8);
s16.setLower(1);
s16.setUpper(1);
s16.setRole("server");
s16.setName("task");
s16.setService(s9);
s17.setLower(1);
s17.setUpper(1);
s17.setRole("server");
s17.setName("com");
s17.setService(s10);
s18.setLower(0);
s18.setUpper(-1);
s18.setRole("client");
s18.setName("channel");
s18.setService(s11);
s19.setLower(1);
s19.setUpper(1);
s19.setRole("client");
s19.setName("strategy");
s19.setService(s12);
s20.setLower(1);
s20.setUpper(1);
s20.setRole("client");
s20.setName("logger");
s20.setService(s13);
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s8"));
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s9"));
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s10"));
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s11"));
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s12"));
$s0.getServices().add((art.type.Service)  uniqueobjects.get("s13"));
$s0.getTypes().add((art.type.ComponentType)  uniqueobjects.get("s14"));
$s1.getSubComponent().add((art.instance.ComponentInstance)  uniqueobjects.get("s2"));
s7.setClient($s3);
s6.setClient($s5);
s5.setClient($s7);
$s9.getBinding().add(s5);
$s9.getBinding().add(s6);
$s9.getBinding().add(s7);
end