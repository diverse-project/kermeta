package fr.irisa.triskell.scala.generated.fw
trait ImplicitConversion {
 implicit def richAspect(v : test.resource.testCases.LoadSaveKm.LoadKm) = v.asInstanceOf[test.resource.testCases.LoadSaveKm.LoadKmAspect]
 implicit def richAspect(v : test.resource.testCases.LoadSaveKm.LoadKmAspect) = v.asInstanceOf[test.resource.testCases.LoadSaveKm.LoadKm]
 implicit def richAspect(v : kermeta.DummyClass) = v.asInstanceOf[kermetaScalaAspect.DummyClassAspect]
 implicit def richAspect(v : kermetaScalaAspect.DummyClassAspect) = v.asInstanceOf[kermeta.impl.DummyClassImpl]
 implicit def richAspect(v : kermeta.language.DummyClass) = v.asInstanceOf[kermeta.languageScalaAspect.DummyClassAspect]
 implicit def richAspect(v : kermeta.languageScalaAspect.DummyClassAspect) = v.asInstanceOf[kermeta.language.impl.DummyClassImpl]
 implicit def richAspect[G](v : kermeta.languageScalaAspect.ReflectiveCollection[G]) = v.asInstanceOf[kermeta.languageScalaAspect.ReflectiveCollectionAspect[G]]
 implicit def richAspect[G](v : kermeta.languageScalaAspect.ReflectiveCollectionAspect[G]) = v.asInstanceOf[kermeta.languageScalaAspect.ReflectiveCollection[G]]
 implicit def richAspect[G](v : kermeta.languageScalaAspect.ReflectiveSequence[G]) = v.asInstanceOf[kermeta.languageScalaAspect.ReflectiveSequenceAspect[G]]
 implicit def richAspect[G](v : kermeta.languageScalaAspect.ReflectiveSequenceAspect[G]) = v.asInstanceOf[kermeta.languageScalaAspect.ReflectiveSequence[G]]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PropertyConstraint) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PropertyConstraintAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PropertyConstraintAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PropertyConstraint]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Property) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PropertyAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PropertyAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.PropertyImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ClassDefinition) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ClassDefinitionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ClassDefinitionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ClassDefinitionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Object) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ObjectAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ObjectAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ObjectImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ModelType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ModelTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Class) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ClassAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ClassAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ClassImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Model) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ModelImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Type) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.NamedElement) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.NamedElementAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.NamedElementAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.NamedElementImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Enumeration) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.EnumerationAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.EnumerationAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.EnumerationImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.FunctionType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.FunctionTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.FunctionTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.FunctionTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Operation) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.OperationAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.OperationAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.OperationImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.TypeContainer) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeContainerAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeContainerAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypeContainerImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.EnumerationLiteral) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.EnumerationLiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.EnumerationLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.EnumerationLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.TypeVariableBinding) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeVariableBindingAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeVariableBindingAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypeVariableBindingImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.MultiplicityElement) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.MultiplicityElementAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.MultiplicityElementAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.MultiplicityElementImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.TypedElement) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypedElementAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypedElementAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypedElementImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.TypeDefinition) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeDefinitionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeDefinitionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypeDefinitionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.DataType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.DataTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.DataTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.DataTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Package) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PackageAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PackageAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.PackageImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Parameter) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ParameterAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ParameterAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ParameterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.PrimitiveType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PrimitiveTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.PrimitiveTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.PrimitiveTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Tag) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TagAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TagAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TagImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Constraint) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ConstraintAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ConstraintAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ConstraintImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.GenericTypeDefinition) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.GenericTypeDefinitionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.GenericTypeDefinitionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.GenericTypeDefinitionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ParameterizedType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ParameterizedTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ParameterizedTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ParameterizedTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.TypeVariable) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeVariableAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypeVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ObjectTypeVariable) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ObjectTypeVariableAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ObjectTypeVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ObjectTypeVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ModelTypeVariable) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelTypeVariableAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelTypeVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ModelTypeVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.VirtualType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.VirtualTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.VirtualTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.VirtualTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ModelingUnit) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelingUnitAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ModelingUnitAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ModelingUnitImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Require) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.RequireAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.RequireAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.RequireImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Using) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.UsingAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.UsingAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.UsingImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.Filter) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.FilterAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.FilterAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.FilterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.ProductType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ProductTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.ProductTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.ProductTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.VoidType) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.VoidTypeAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.VoidTypeAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.VoidTypeImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structure.TypeDefinitionContainer) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeDefinitionContainerAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.scala.framework.language.structureScalaAspect.TypeDefinitionContainerAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.scala.framework.language.structure.impl.TypeDefinitionContainerImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallExpression) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallExpressionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Expression) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.ExpressionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.ExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.ExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallVariable) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallVariableAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallVariableAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallVariableImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallFeature) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallFeatureAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallFeatureAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallFeatureImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallSuperOperation) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallSuperOperationAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallSuperOperationAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallSuperOperationImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallResult) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallResultAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallResultAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallResultImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.CallValue) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallValueAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.CallValueAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.CallValueImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Assignment) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.AssignmentAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.AssignmentAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.AssignmentImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Block) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.BlockAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.BlockAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.BlockImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Conditional) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.ConditionalAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.ConditionalAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.ConditionalImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Raise) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.RaiseAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.RaiseAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.RaiseImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Rescue) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.RescueAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.RescueAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.RescueImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.TypeReference) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.TypeReferenceAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.TypeReferenceAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.TypeReferenceImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Literal) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.EmptyExpression) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.EmptyExpressionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.EmptyExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.EmptyExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.JavaStaticCall) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.JavaStaticCallAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.JavaStaticCallAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.JavaStaticCallImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.LambdaExpression) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LambdaExpressionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LambdaExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LambdaExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.LambdaParameter) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LambdaParameterAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LambdaParameterAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LambdaParameterImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.IntegerLiteral) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.IntegerLiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.IntegerLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.IntegerLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.StringLiteral) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.StringLiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.StringLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.StringLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.BooleanLiteral) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.BooleanLiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.BooleanLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.BooleanLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.TypeLiteral) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.TypeLiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.TypeLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.TypeLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.VoidLiteral) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.VoidLiteralAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.VoidLiteralAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.VoidLiteralImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.Loop) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LoopAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.LoopAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.LoopImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.SelfExpression) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.SelfExpressionAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.SelfExpressionAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.SelfExpressionImpl]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behavior.VariableDecl) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behaviorScalaAspect.VariableDeclAspect]
 implicit def richAspect(v : fr.irisa.triskell.kermeta.language.behaviorScalaAspect.VariableDeclAspect) = v.asInstanceOf[fr.irisa.triskell.kermeta.language.behavior.impl.VariableDeclImpl]
 implicit def richAspect[K,V](v : java.util.HashMap[K,V]) = v.asInstanceOf[kermeta.utils.HashtableAspect[K,V]]
 implicit def richAspect[K,V](v : kermeta.utils.HashtableAspect[K,V]) = v.asInstanceOf[kermeta.utils.Hashtable[K,V]]
 implicit def richAspect(v : kermeta.utils.StringBuffer) = v.asInstanceOf[kermeta.utils.StringBufferAspect]
 implicit def richAspect(v : kermeta.utils.StringBufferAspect) = v.asInstanceOf[kermeta.utils.StringBuffer]
 implicit def richAspect[G](v :  java.util.Stack[G]) = v.asInstanceOf[kermeta.utils.StackAspect[G]]
 implicit def richAspect[G](v : kermeta.utils.StackAspect[G]) = v.asInstanceOf[kermeta.utils.Stack[G]]
 implicit def richAspect(v : kermeta.xmltype.QName) = v.asInstanceOf[kermeta.xmltype.QNameAspect]
 implicit def richAspect(v : kermeta.xmltype.QNameAspect) = v.asInstanceOf[kermeta.xmltype.QName]
 implicit def richAspect(v : kermeta.kunit.InvalidTestCaseNameException) = v.asInstanceOf[kermeta.kunit.InvalidTestCaseNameExceptionAspect]
 implicit def richAspect(v : kermeta.kunit.InvalidTestCaseNameExceptionAspect) = v.asInstanceOf[kermeta.kunit.InvalidTestCaseNameException]
 implicit def richAspect(v : kermeta.kunit.InvalidParameterException) = v.asInstanceOf[kermeta.kunit.InvalidParameterExceptionAspect]
 implicit def richAspect(v : kermeta.kunit.InvalidParameterExceptionAspect) = v.asInstanceOf[kermeta.kunit.InvalidParameterException]
 implicit def richAspect(v : kermeta.kunit.Fallible) = v.asInstanceOf[kermeta.kunit.FallibleAspect]
 implicit def richAspect(v : kermeta.kunit.FallibleAspect) = v.asInstanceOf[kermeta.kunit.Fallible]
 implicit def richAspect(v : kermeta.kunit.Log) = v.asInstanceOf[kermeta.kunit.LogAspect]
 implicit def richAspect(v : kermeta.kunit.LogAspect) = v.asInstanceOf[kermeta.kunit.Log]
 implicit def richAspect(v : kermeta.kunit.Failure) = v.asInstanceOf[kermeta.kunit.FailureAspect]
 implicit def richAspect(v : kermeta.kunit.FailureAspect) = v.asInstanceOf[kermeta.kunit.Failure]
 implicit def richAspect(v : kermeta.kunit.Error) = v.asInstanceOf[kermeta.kunit.ErrorAspect]
 implicit def richAspect(v : kermeta.kunit.ErrorAspect) = v.asInstanceOf[kermeta.kunit.Error]
 implicit def richAspect(v : kermeta.kunit.Test) = v.asInstanceOf[kermeta.kunit.TestAspect]
 implicit def richAspect(v : kermeta.kunit.TestAspect) = v.asInstanceOf[kermeta.kunit.Test]
 implicit def richAspect(v : kermeta.kunit.TestSuite) = v.asInstanceOf[kermeta.kunit.TestSuiteAspect]
 implicit def richAspect(v : kermeta.kunit.TestSuiteAspect) = v.asInstanceOf[kermeta.kunit.TestSuite]
 implicit def richAspect(v : kermeta.kunit.TestCase) = v.asInstanceOf[kermeta.kunit.TestCaseAspect]
 implicit def richAspect(v : kermeta.kunit.TestCaseAspect) = v.asInstanceOf[kermeta.kunit.TestCase]
 implicit def richAspect(v : kermeta.kunit.TestRunner) = v.asInstanceOf[kermeta.kunit.TestRunnerAspect]
 implicit def richAspect(v : kermeta.kunit.TestRunnerAspect) = v.asInstanceOf[kermeta.kunit.TestRunner]
 implicit def richAspect(v : kermeta.kunit.AbstractFallible) = v.asInstanceOf[kermeta.kunit.AbstractFallibleAspect]
 implicit def richAspect(v : kermeta.kunit.AbstractFallibleAspect) = v.asInstanceOf[kermeta.kunit.AbstractFallible]
 implicit def richAspect(v : kermeta.kunit.AssertionFailedError) = v.asInstanceOf[kermeta.kunit.AssertionFailedErrorAspect]
 implicit def richAspect(v : kermeta.kunit.AssertionFailedErrorAspect) = v.asInstanceOf[kermeta.kunit.AssertionFailedError]
 implicit def richAspect(v : kermeta.kunit.Assert) = v.asInstanceOf[kermeta.kunit.AssertAspect]
 implicit def richAspect(v : kermeta.kunit.AssertAspect) = v.asInstanceOf[kermeta.kunit.Assert]
 implicit def richAspect(v : kermeta.io.FileIO) = v.asInstanceOf[kermeta.io.FileIOAspect]
 implicit def richAspect(v : kermeta.io.FileIOAspect) = v.asInstanceOf[kermeta.io.FileIO]
 implicit def richAspect(v : kermeta.io.StdIO) = v.asInstanceOf[kermeta.io.StdIOAspect]
 implicit def richAspect(v : kermeta.io.StdIOAspect) = v.asInstanceOf[kermeta.io.StdIO]
 implicit def richAspect(v : kermeta.standard.Void) = v.asInstanceOf[kermeta.standard.VoidAspect]
 implicit def richAspect(v : kermeta.standard.VoidAspect) = v.asInstanceOf[kermeta.standard.Void]
 implicit def richAspect(v : kermeta.standard.ValueType) = v.asInstanceOf[kermeta.standard.ValueTypeAspect]
 implicit def richAspect(v : kermeta.standard.ValueTypeAspect) = v.asInstanceOf[kermeta.standard.ValueType]
 implicit def richAspect(v : kermeta.standard.Comparable) = v.asInstanceOf[kermeta.standard.ComparableAspect]
 implicit def richAspect(v : kermeta.standard.ComparableAspect) = v.asInstanceOf[kermeta.standard.Comparable]
 implicit def richAspect[G](v : kermeta.standard.Summable[G]) = v.asInstanceOf[kermeta.standard.SummableAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.SummableAspect[G]) = v.asInstanceOf[kermeta.standard.Summable[G]]
 implicit def richAspect(v : kermeta.standard.NotComparableException) = v.asInstanceOf[kermeta.standard.NotComparableExceptionAspect]
 implicit def richAspect(v : kermeta.standard.NotComparableExceptionAspect) = v.asInstanceOf[kermeta.standard.NotComparableException]
 implicit def richAspect(v : Boolean) = v.asInstanceOf[kermeta.standard.BooleanAspect]
 implicit def richAspect(v : kermeta.standard.BooleanAspect) = v.asInstanceOf[kermeta.standard.Boolean]
 implicit def richAspect(v : kermeta.standard.Numeric) = v.asInstanceOf[kermeta.standard.NumericAspect]
 implicit def richAspect(v : kermeta.standard.NumericAspect) = v.asInstanceOf[kermeta.standard.Numeric]
 implicit def richAspect(v : Int) = v.asInstanceOf[kermeta.standard.IntegerAspect]
 implicit def richAspect(v : kermeta.standard.IntegerAspect) = v.asInstanceOf[kermeta.standard.Integer]
 implicit def richAspect(v : java.lang.Double) = v.asInstanceOf[kermeta.standard.RealAspect]
 implicit def richAspect(v : kermeta.standard.RealAspect) = v.asInstanceOf[kermeta.standard.Real]
 implicit def richAspect(v : java.lang.Character) = v.asInstanceOf[kermeta.standard.CharacterAspect]
 implicit def richAspect(v : kermeta.standard.CharacterAspect) = v.asInstanceOf[kermeta.standard.Character]
 implicit def richAspect(v : java.lang.String) = v.asInstanceOf[kermeta.standard.StringAspect]
 implicit def richAspect(v : kermeta.standard.StringAspect) = v.asInstanceOf[kermeta.standard.String]
 implicit def richAspect[G](v : java.util.List[G]) = v.asInstanceOf[kermeta.standard.CollectionAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.CollectionAspect[G]) = v.asInstanceOf[kermeta.standard.Collection[G]]
 implicit def richAspect(v : kermeta.standard.EachContext) = v.asInstanceOf[kermeta.standard.EachContextAspect]
 implicit def richAspect(v : kermeta.standard.EachContextAspect) = v.asInstanceOf[kermeta.standard.EachContext]
 implicit def richAspect[G](v : java.util.List[G]) = v.asInstanceOf[kermeta.standard.SetAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.SetAspect[G]) = v.asInstanceOf[kermeta.standard.Set[G]]
 implicit def richAspect[G](v : java.util.List[G]) = v.asInstanceOf[kermeta.standard.BagAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.BagAspect[G]) = v.asInstanceOf[kermeta.standard.Bag[G]]
 implicit def richAspect[G](v : kermeta.standard.OrderedCollection[G]) = v.asInstanceOf[kermeta.standard.OrderedCollectionAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.OrderedCollectionAspect[G]) = v.asInstanceOf[kermeta.standard.OrderedCollection[G]]
 implicit def richAspect[G](v : kermeta.standard.OrderedSet[G]) = v.asInstanceOf[kermeta.standard.OrderedSetAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.OrderedSetAspect[G]) = v.asInstanceOf[kermeta.standard.OrderedSet[G]]
 implicit def richAspect[G](v : java.util.List[G]) = v.asInstanceOf[kermeta.standard.SequenceAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.SequenceAspect[G]) = v.asInstanceOf[kermeta.standard.Sequence[G]]
 implicit def richAspect[G](v : java.util.Iterator[G]) = v.asInstanceOf[kermeta.standard.IteratorAspect[G]]
 implicit def richAspect[G](v : kermeta.standard.IteratorAspect[G]) = v.asInstanceOf[kermeta.standard.Iterator[G]]
 implicit def richAspect(v : kermeta.standard.UnknownJavaObject) = v.asInstanceOf[kermeta.standard.UnknownJavaObjectAspect]
 implicit def richAspect(v : kermeta.standard.UnknownJavaObjectAspect) = v.asInstanceOf[kermeta.standard.UnknownJavaObject]
 implicit def richAspect(v : kermeta.persistence.Resource) = v.asInstanceOf[kermeta.persistence.ResourceAspect]
 implicit def richAspect(v : kermeta.persistence.ResourceAspect) = v.asInstanceOf[kermeta.persistence.Resource]
 implicit def richAspect(v : kermeta.persistence.EMFResource) = v.asInstanceOf[kermeta.persistence.EMFResourceAspect]
 implicit def richAspect(v : kermeta.persistence.EMFResourceAspect) = v.asInstanceOf[kermeta.persistence.EMFResource]
 implicit def richAspect(v : kermeta.persistence.Repository) = v.asInstanceOf[kermeta.persistence.RepositoryAspect]
 implicit def richAspect(v : kermeta.persistence.RepositoryAspect) = v.asInstanceOf[kermeta.persistence.Repository]
 implicit def richAspect(v : kermeta.persistence.DanglingDiagnostic) = v.asInstanceOf[kermeta.persistence.DanglingDiagnosticAspect]
 implicit def richAspect(v : kermeta.persistence.DanglingDiagnosticAspect) = v.asInstanceOf[kermeta.persistence.DanglingDiagnostic]
 implicit def richAspect(v : kermeta.persistence.EMFRepository) = v.asInstanceOf[kermeta.persistence.EMFRepositoryAspect]
 implicit def richAspect(v : kermeta.persistence.EMFRepositoryAspect) = v.asInstanceOf[kermeta.persistence.EMFRepository]
 implicit def richAspect(v : kermeta.ecore.EFeatureMapEntry) = v.asInstanceOf[kermeta.ecore.EFeatureMapEntryAspect]
 implicit def richAspect(v : kermeta.ecore.EFeatureMapEntryAspect) = v.asInstanceOf[kermeta.ecore.EFeatureMapEntry]
 implicit def richAspect(v : kermeta.interpreter.DynamicExpression) = v.asInstanceOf[kermeta.interpreter.DynamicExpressionAspect]
 implicit def richAspect(v : kermeta.interpreter.DynamicExpressionAspect) = v.asInstanceOf[kermeta.interpreter.DynamicExpression]
 implicit def richAspect(v : kermeta.interpreter.KermetaError) = v.asInstanceOf[kermeta.interpreter.KermetaErrorAspect]
 implicit def richAspect(v : kermeta.interpreter.KermetaErrorAspect) = v.asInstanceOf[kermeta.interpreter.KermetaError]
 implicit def richAspect(v : kermeta.interpreter.ParseError) = v.asInstanceOf[kermeta.interpreter.ParseErrorAspect]
 implicit def richAspect(v : kermeta.interpreter.ParseErrorAspect) = v.asInstanceOf[kermeta.interpreter.ParseError]
 implicit def richAspect(v : kermeta.interpreter.TypeError) = v.asInstanceOf[kermeta.interpreter.TypeErrorAspect]
 implicit def richAspect(v : kermeta.interpreter.TypeErrorAspect) = v.asInstanceOf[kermeta.interpreter.TypeError]
 implicit def richAspect(v : kermeta.exceptions.Exception) = v.asInstanceOf[kermeta.exceptions.ExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ExceptionAspect) = v.asInstanceOf[kermeta.exceptions.Exception]
 implicit def richAspect(v : kermeta.exceptions.RuntimeError) = v.asInstanceOf[kermeta.exceptions.RuntimeErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.RuntimeErrorAspect) = v.asInstanceOf[kermeta.exceptions.RuntimeError]
 implicit def richAspect(v : kermeta.exceptions.CallOnVoidTarget) = v.asInstanceOf[kermeta.exceptions.CallOnVoidTargetAspect]
 implicit def richAspect(v : kermeta.exceptions.CallOnVoidTargetAspect) = v.asInstanceOf[kermeta.exceptions.CallOnVoidTarget]
 implicit def richAspect(v : kermeta.exceptions.TypeCastError) = v.asInstanceOf[kermeta.exceptions.TypeCastErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.TypeCastErrorAspect) = v.asInstanceOf[kermeta.exceptions.TypeCastError]
 implicit def richAspect(v : kermeta.exceptions.NotImplementedException) = v.asInstanceOf[kermeta.exceptions.NotImplementedExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.NotImplementedExceptionAspect) = v.asInstanceOf[kermeta.exceptions.NotImplementedException]
 implicit def richAspect(v : kermeta.exceptions.UpperBoundReachedError) = v.asInstanceOf[kermeta.exceptions.UpperBoundReachedErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.UpperBoundReachedErrorAspect) = v.asInstanceOf[kermeta.exceptions.UpperBoundReachedError]
 implicit def richAspect(v : kermeta.exceptions.AbstractClassInstantiationError) = v.asInstanceOf[kermeta.exceptions.AbstractClassInstantiationErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.AbstractClassInstantiationErrorAspect) = v.asInstanceOf[kermeta.exceptions.AbstractClassInstantiationError]
 implicit def richAspect(v : kermeta.exceptions.IncompatibleTypeError) = v.asInstanceOf[kermeta.exceptions.IncompatibleTypeErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.IncompatibleTypeErrorAspect) = v.asInstanceOf[kermeta.exceptions.IncompatibleTypeError]
 implicit def richAspect(v : kermeta.exceptions.DivisionByZero) = v.asInstanceOf[kermeta.exceptions.DivisionByZeroAspect]
 implicit def richAspect(v : kermeta.exceptions.DivisionByZeroAspect) = v.asInstanceOf[kermeta.exceptions.DivisionByZero]
 implicit def richAspect(v : kermeta.exceptions.OverflowError) = v.asInstanceOf[kermeta.exceptions.OverflowErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.OverflowErrorAspect) = v.asInstanceOf[kermeta.exceptions.OverflowError]
 implicit def richAspect(v : kermeta.exceptions.VoidOperandError) = v.asInstanceOf[kermeta.exceptions.VoidOperandErrorAspect]
 implicit def richAspect(v : kermeta.exceptions.VoidOperandErrorAspect) = v.asInstanceOf[kermeta.exceptions.VoidOperandError]
 implicit def richAspect(v : kermeta.exceptions.StringIndexOutOfBound) = v.asInstanceOf[kermeta.exceptions.StringIndexOutOfBoundAspect]
 implicit def richAspect(v : kermeta.exceptions.StringIndexOutOfBoundAspect) = v.asInstanceOf[kermeta.exceptions.StringIndexOutOfBound]
 implicit def richAspect(v : kermeta.exceptions.StringFormatException) = v.asInstanceOf[kermeta.exceptions.StringFormatExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.StringFormatExceptionAspect) = v.asInstanceOf[kermeta.exceptions.StringFormatException]
 implicit def richAspect(v : kermeta.exceptions.IndexOutOfBound) = v.asInstanceOf[kermeta.exceptions.IndexOutOfBoundAspect]
 implicit def richAspect(v : kermeta.exceptions.IndexOutOfBoundAspect) = v.asInstanceOf[kermeta.exceptions.IndexOutOfBound]
 implicit def richAspect(v : kermeta.exceptions.EmptyCollection) = v.asInstanceOf[kermeta.exceptions.EmptyCollectionAspect]
 implicit def richAspect(v : kermeta.exceptions.EmptyCollectionAspect) = v.asInstanceOf[kermeta.exceptions.EmptyCollection]
 implicit def richAspect(v : kermeta.exceptions.IteratorIsOff) = v.asInstanceOf[kermeta.exceptions.IteratorIsOffAspect]
 implicit def richAspect(v : kermeta.exceptions.IteratorIsOffAspect) = v.asInstanceOf[kermeta.exceptions.IteratorIsOff]
 implicit def richAspect(v : kermeta.exceptions.IOException) = v.asInstanceOf[kermeta.exceptions.IOExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.IOExceptionAspect) = v.asInstanceOf[kermeta.exceptions.IOException]
 implicit def richAspect(v : kermeta.exceptions.FileNotFoundException) = v.asInstanceOf[kermeta.exceptions.FileNotFoundExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.FileNotFoundExceptionAspect) = v.asInstanceOf[kermeta.exceptions.FileNotFoundException]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedException) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedExceptionAspect) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedException]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedPre) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedPreAspect]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedPreAspect) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedPre]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedPost) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedPostAspect]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedPostAspect) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedPost]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedInv) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedInvAspect]
 implicit def richAspect(v : kermeta.exceptions.ConstraintViolatedInvAspect) = v.asInstanceOf[kermeta.exceptions.ConstraintViolatedInv]
 implicit def richAspect(v : kermeta.exceptions.ResourceLoadException) = v.asInstanceOf[kermeta.exceptions.ResourceLoadExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ResourceLoadExceptionAspect) = v.asInstanceOf[kermeta.exceptions.ResourceLoadException]
 implicit def richAspect(v : kermeta.exceptions.ResourceSaveException) = v.asInstanceOf[kermeta.exceptions.ResourceSaveExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ResourceSaveExceptionAspect) = v.asInstanceOf[kermeta.exceptions.ResourceSaveException]
 implicit def richAspect(v : kermeta.exceptions.ResourceMixedLevelsException) = v.asInstanceOf[kermeta.exceptions.ResourceMixedLevelsExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ResourceMixedLevelsExceptionAspect) = v.asInstanceOf[kermeta.exceptions.ResourceMixedLevelsException]
 implicit def richAspect(v : kermeta.exceptions.ResourceCreateException) = v.asInstanceOf[kermeta.exceptions.ResourceCreateExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ResourceCreateExceptionAspect) = v.asInstanceOf[kermeta.exceptions.ResourceCreateException]
 implicit def richAspect(v : kermeta.exceptions.ResourceUnconformityException) = v.asInstanceOf[kermeta.exceptions.ResourceUnconformityExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.ResourceUnconformityExceptionAspect) = v.asInstanceOf[kermeta.exceptions.ResourceUnconformityException]
 implicit def richAspect(v : kermeta.exceptions.UnregisteredMetamodelException) = v.asInstanceOf[kermeta.exceptions.UnregisteredMetamodelExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.UnregisteredMetamodelExceptionAspect) = v.asInstanceOf[kermeta.exceptions.UnregisteredMetamodelException]
 implicit def richAspect(v : kermeta.exceptions.DynamicExpressionException) = v.asInstanceOf[kermeta.exceptions.DynamicExpressionExceptionAspect]
 implicit def richAspect(v : kermeta.exceptions.DynamicExpressionExceptionAspect) = v.asInstanceOf[kermeta.exceptions.DynamicExpressionException]
 implicit def richAspect(v : kermeta.exceptions.ConstraintsDiagnostic) = v.asInstanceOf[kermeta.exceptions.ConstraintsDiagnosticAspect]
 implicit def richAspect(v : kermeta.exceptions.ConstraintsDiagnosticAspect) = v.asInstanceOf[kermeta.exceptions.ConstraintsDiagnostic]
}

