/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.triskell.osgi.introspector.manifest.node;

import fr.irisa.triskell.osgi.introspector.manifest.analysis.*;

@SuppressWarnings("nls")
public final class AVersionIntervalVersionRange extends PVersionRange {
	private PVersionInterval _versionInterval_;

	public AVersionIntervalVersionRange() {
		// Constructor
	}

	public AVersionIntervalVersionRange(@SuppressWarnings("hiding")
	PVersionInterval _versionInterval_) {
		// Constructor
		setVersionInterval(_versionInterval_);

	}

	@Override
	public Object clone() {
		return new AVersionIntervalVersionRange(
				cloneNode(this._versionInterval_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAVersionIntervalVersionRange(this);
	}

	public PVersionInterval getVersionInterval() {
		return this._versionInterval_;
	}

	public void setVersionInterval(PVersionInterval node) {
		if (this._versionInterval_ != null) {
			this._versionInterval_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._versionInterval_ = node;
	}

	@Override
	public String toString() {
		return "" + toString(this._versionInterval_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._versionInterval_ == child) {
			this._versionInterval_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._versionInterval_ == oldChild) {
			setVersionInterval((PVersionInterval) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
