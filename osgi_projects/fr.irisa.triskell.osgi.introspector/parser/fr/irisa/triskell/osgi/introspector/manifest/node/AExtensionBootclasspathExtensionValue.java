/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.triskell.osgi.introspector.manifest.node;

import fr.irisa.triskell.osgi.introspector.manifest.analysis.*;

@SuppressWarnings("nls")
public final class AExtensionBootclasspathExtensionValue extends
		PExtensionValue {
	private TExtensionBootclasspath _extensionBootclasspath_;

	public AExtensionBootclasspathExtensionValue() {
		// Constructor
	}

	public AExtensionBootclasspathExtensionValue(@SuppressWarnings("hiding")
	TExtensionBootclasspath _extensionBootclasspath_) {
		// Constructor
		setExtensionBootclasspath(_extensionBootclasspath_);

	}

	@Override
	public Object clone() {
		return new AExtensionBootclasspathExtensionValue(
				cloneNode(this._extensionBootclasspath_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAExtensionBootclasspathExtensionValue(this);
	}

	public TExtensionBootclasspath getExtensionBootclasspath() {
		return this._extensionBootclasspath_;
	}

	public void setExtensionBootclasspath(TExtensionBootclasspath node) {
		if (this._extensionBootclasspath_ != null) {
			this._extensionBootclasspath_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._extensionBootclasspath_ = node;
	}

	@Override
	public String toString() {
		return "" + toString(this._extensionBootclasspath_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._extensionBootclasspath_ == child) {
			this._extensionBootclasspath_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._extensionBootclasspath_ == oldChild) {
			setExtensionBootclasspath((TExtensionBootclasspath) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
