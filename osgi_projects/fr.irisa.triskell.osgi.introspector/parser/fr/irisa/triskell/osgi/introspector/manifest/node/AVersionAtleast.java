/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.triskell.osgi.introspector.manifest.node;

import fr.irisa.triskell.osgi.introspector.manifest.analysis.*;

@SuppressWarnings("nls")
public final class AVersionAtleast extends PVersionAtleast {
	private PMajorVersionEntry _majorVersionEntry_;

	public AVersionAtleast() {
		// Constructor
	}

	public AVersionAtleast(@SuppressWarnings("hiding")
	PMajorVersionEntry _majorVersionEntry_) {
		// Constructor
		setMajorVersionEntry(_majorVersionEntry_);

	}

	@Override
	public Object clone() {
		return new AVersionAtleast(cloneNode(this._majorVersionEntry_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAVersionAtleast(this);
	}

	public PMajorVersionEntry getMajorVersionEntry() {
		return this._majorVersionEntry_;
	}

	public void setMajorVersionEntry(PMajorVersionEntry node) {
		if (this._majorVersionEntry_ != null) {
			this._majorVersionEntry_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._majorVersionEntry_ = node;
	}

	@Override
	public String toString() {
		return "" + toString(this._majorVersionEntry_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._majorVersionEntry_ == child) {
			this._majorVersionEntry_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._majorVersionEntry_ == oldChild) {
			setMajorVersionEntry((PMajorVersionEntry) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
