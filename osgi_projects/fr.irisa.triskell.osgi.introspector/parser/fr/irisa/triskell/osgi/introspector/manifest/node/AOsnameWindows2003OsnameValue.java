/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.triskell.osgi.introspector.manifest.node;

import fr.irisa.triskell.osgi.introspector.manifest.analysis.*;

@SuppressWarnings("nls")
public final class AOsnameWindows2003OsnameValue extends POsnameValue {
	private TOsnameWindows2003 _osnameWindows2003_;

	public AOsnameWindows2003OsnameValue() {
		// Constructor
	}

	public AOsnameWindows2003OsnameValue(@SuppressWarnings("hiding")
	TOsnameWindows2003 _osnameWindows2003_) {
		// Constructor
		setOsnameWindows2003(_osnameWindows2003_);

	}

	@Override
	public Object clone() {
		return new AOsnameWindows2003OsnameValue(
				cloneNode(this._osnameWindows2003_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAOsnameWindows2003OsnameValue(this);
	}

	public TOsnameWindows2003 getOsnameWindows2003() {
		return this._osnameWindows2003_;
	}

	public void setOsnameWindows2003(TOsnameWindows2003 node) {
		if (this._osnameWindows2003_ != null) {
			this._osnameWindows2003_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._osnameWindows2003_ = node;
	}

	@Override
	public String toString() {
		return "" + toString(this._osnameWindows2003_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._osnameWindows2003_ == child) {
			this._osnameWindows2003_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._osnameWindows2003_ == oldChild) {
			setOsnameWindows2003((TOsnameWindows2003) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
