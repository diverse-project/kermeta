/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.osgi.manifest.parser.node;

import fr.irisa.osgi.manifest.parser.analysis.*;

@SuppressWarnings("nls")
public final class AParameter extends PParameter {
	private TSemicolon _semicolon_;
	private PAttribute _attribute_;

	public AParameter() {
		// Constructor
	}

	public AParameter(@SuppressWarnings("hiding")
	TSemicolon _semicolon_, @SuppressWarnings("hiding")
	PAttribute _attribute_) {
		// Constructor
		setSemicolon(_semicolon_);

		setAttribute(_attribute_);

	}

	@Override
	public Object clone() {
		return new AParameter(cloneNode(this._semicolon_),
				cloneNode(this._attribute_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAParameter(this);
	}

	public TSemicolon getSemicolon() {
		return this._semicolon_;
	}

	public void setSemicolon(TSemicolon node) {
		if (this._semicolon_ != null) {
			this._semicolon_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._semicolon_ = node;
	}

	public PAttribute getAttribute() {
		return this._attribute_;
	}

	public void setAttribute(PAttribute node) {
		if (this._attribute_ != null) {
			this._attribute_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._attribute_ = node;
	}

	@Override
	public String toString() {
		return "" + toString(this._semicolon_) + toString(this._attribute_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._semicolon_ == child) {
			this._semicolon_ = null;
			return;
		}

		if (this._attribute_ == child) {
			this._attribute_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._semicolon_ == oldChild) {
			setSemicolon((TSemicolon) newChild);
			return;
		}

		if (this._attribute_ == oldChild) {
			setAttribute((PAttribute) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
