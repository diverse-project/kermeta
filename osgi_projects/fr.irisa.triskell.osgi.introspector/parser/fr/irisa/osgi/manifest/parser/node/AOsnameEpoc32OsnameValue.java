/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.osgi.manifest.parser.node;

import fr.irisa.osgi.manifest.parser.analysis.*;

@SuppressWarnings("nls")
public final class AOsnameEpoc32OsnameValue extends POsnameValue {
	private TOsnameEpoc32 _osnameEpoc32_;

	public AOsnameEpoc32OsnameValue() {
		// Constructor
	}

	public AOsnameEpoc32OsnameValue(@SuppressWarnings("hiding")
	TOsnameEpoc32 _osnameEpoc32_) {
		// Constructor
		setOsnameEpoc32(_osnameEpoc32_);

	}

	@Override
	public Object clone() {
		return new AOsnameEpoc32OsnameValue(cloneNode(this._osnameEpoc32_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseAOsnameEpoc32OsnameValue(this);
	}

	public TOsnameEpoc32 getOsnameEpoc32() {
		return this._osnameEpoc32_;
	}

	public void setOsnameEpoc32(TOsnameEpoc32 node) {
		if (this._osnameEpoc32_ != null) {
			this._osnameEpoc32_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._osnameEpoc32_ = node;
	}

	@Override
	public String toString() {
		return "" + toString(this._osnameEpoc32_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._osnameEpoc32_ == child) {
			this._osnameEpoc32_ = null;
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._osnameEpoc32_ == oldChild) {
			setOsnameEpoc32((TOsnameEpoc32) newChild);
			return;
		}

		throw new RuntimeException("Not a child.");
	}
}
