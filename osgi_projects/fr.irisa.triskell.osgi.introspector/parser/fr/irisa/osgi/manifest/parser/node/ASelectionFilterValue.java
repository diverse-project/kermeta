/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.osgi.manifest.parser.node;

import fr.irisa.osgi.manifest.parser.analysis.*;

@SuppressWarnings("nls")
public final class ASelectionFilterValue extends PSelectionFilterValue
{
    private PStringEntryValue _first_;
    private PBooleanComparator _booleanComparator_;
    private PStringEntryValue _next_;

    public ASelectionFilterValue()
    {
        // Constructor
    }

    public ASelectionFilterValue(
        @SuppressWarnings("hiding") PStringEntryValue _first_,
        @SuppressWarnings("hiding") PBooleanComparator _booleanComparator_,
        @SuppressWarnings("hiding") PStringEntryValue _next_)
    {
        // Constructor
        setFirst(_first_);

        setBooleanComparator(_booleanComparator_);

        setNext(_next_);

    }

    @Override
    public Object clone()
    {
        return new ASelectionFilterValue(
            cloneNode(this._first_),
            cloneNode(this._booleanComparator_),
            cloneNode(this._next_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASelectionFilterValue(this);
    }

    public PStringEntryValue getFirst()
    {
        return this._first_;
    }

    public void setFirst(PStringEntryValue node)
    {
        if(this._first_ != null)
        {
            this._first_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._first_ = node;
    }

    public PBooleanComparator getBooleanComparator()
    {
        return this._booleanComparator_;
    }

    public void setBooleanComparator(PBooleanComparator node)
    {
        if(this._booleanComparator_ != null)
        {
            this._booleanComparator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._booleanComparator_ = node;
    }

    public PStringEntryValue getNext()
    {
        return this._next_;
    }

    public void setNext(PStringEntryValue node)
    {
        if(this._next_ != null)
        {
            this._next_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._next_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._first_)
            + toString(this._booleanComparator_)
            + toString(this._next_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._first_ == child)
        {
            this._first_ = null;
            return;
        }

        if(this._booleanComparator_ == child)
        {
            this._booleanComparator_ = null;
            return;
        }

        if(this._next_ == child)
        {
            this._next_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._first_ == oldChild)
        {
            setFirst((PStringEntryValue) newChild);
            return;
        }

        if(this._booleanComparator_ == oldChild)
        {
            setBooleanComparator((PBooleanComparator) newChild);
            return;
        }

        if(this._next_ == oldChild)
        {
            setNext((PStringEntryValue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
