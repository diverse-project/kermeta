/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.irisa.osgi.manifest.parser.node;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

import fr.irisa.osgi.manifest.parser.analysis.Analysis;

@SuppressWarnings("nls")
public final class ADynamicDescription extends PDynamicDescription {
	private PPackageNameWildcard _packageNameWildcard_;
	private final LinkedList<PDynamicimportPackageNames> _dynamicimportPackageNames_ = new LinkedList<PDynamicimportPackageNames>();
	private final LinkedList<PParameter> _parameter_ = new LinkedList<PParameter>();

	public ADynamicDescription() {
		// Constructor
	}

	public ADynamicDescription(@SuppressWarnings("hiding")
	PPackageNameWildcard _packageNameWildcard_, @SuppressWarnings("hiding")
	List<PDynamicimportPackageNames> _dynamicimportPackageNames_,
			@SuppressWarnings("hiding")
			List<PParameter> _parameter_) {
		// Constructor
		setPackageNameWildcard(_packageNameWildcard_);

		setDynamicimportPackageNames(_dynamicimportPackageNames_);

		setParameter(_parameter_);

	}

	@Override
	public Object clone() {
		return new ADynamicDescription(cloneNode(this._packageNameWildcard_),
				cloneList(this._dynamicimportPackageNames_),
				cloneList(this._parameter_));
	}

	public void apply(Switch sw) {
		((Analysis) sw).caseADynamicDescription(this);
	}

	public PPackageNameWildcard getPackageNameWildcard() {
		return this._packageNameWildcard_;
	}

	public void setPackageNameWildcard(PPackageNameWildcard node) {
		if (this._packageNameWildcard_ != null) {
			this._packageNameWildcard_.parent(null);
		}

		if (node != null) {
			if (node.parent() != null) {
				node.parent().removeChild(node);
			}

			node.parent(this);
		}

		this._packageNameWildcard_ = node;
	}

	public LinkedList<PDynamicimportPackageNames> getDynamicimportPackageNames() {
		return this._dynamicimportPackageNames_;
	}

	public void setDynamicimportPackageNames(
			List<PDynamicimportPackageNames> list) {
		this._dynamicimportPackageNames_.clear();
		this._dynamicimportPackageNames_.addAll(list);
		for (PDynamicimportPackageNames e : list) {
			if (e.parent() != null) {
				e.parent().removeChild(e);
			}

			e.parent(this);
		}
	}

	public LinkedList<PParameter> getParameter() {
		return this._parameter_;
	}

	public void setParameter(List<PParameter> list) {
		this._parameter_.clear();
		this._parameter_.addAll(list);
		for (PParameter e : list) {
			if (e.parent() != null) {
				e.parent().removeChild(e);
			}

			e.parent(this);
		}
	}

	@Override
	public String toString() {
		return "" + toString(this._packageNameWildcard_)
				+ toString(this._dynamicimportPackageNames_)
				+ toString(this._parameter_);
	}

	@Override
	void removeChild(@SuppressWarnings("unused")
	Node child) {
		// Remove child
		if (this._packageNameWildcard_ == child) {
			this._packageNameWildcard_ = null;
			return;
		}

		if (this._dynamicimportPackageNames_.remove(child)) {
			return;
		}

		if (this._parameter_.remove(child)) {
			return;
		}

		throw new RuntimeException("Not a child.");
	}

	@Override
	void replaceChild(@SuppressWarnings("unused")
	Node oldChild, @SuppressWarnings("unused")
	Node newChild) {
		// Replace child
		if (this._packageNameWildcard_ == oldChild) {
			setPackageNameWildcard((PPackageNameWildcard) newChild);
			return;
		}

		for (ListIterator<PDynamicimportPackageNames> i = this._dynamicimportPackageNames_
				.listIterator(); i.hasNext();) {
			if (i.next() == oldChild) {
				if (newChild != null) {
					i.set((PDynamicimportPackageNames) newChild);
					newChild.parent(this);
					oldChild.parent(null);
					return;
				}

				i.remove();
				oldChild.parent(null);
				return;
			}
		}

		for (ListIterator<PParameter> i = this._parameter_.listIterator(); i
				.hasNext();) {
			if (i.next() == oldChild) {
				if (newChild != null) {
					i.set((PParameter) newChild);
					newChild.parent(this);
					oldChild.parent(null);
					return;
				}

				i.remove();
				oldChild.parent(null);
				return;
			}
		}

		throw new RuntimeException("Not a child.");
	}
}
