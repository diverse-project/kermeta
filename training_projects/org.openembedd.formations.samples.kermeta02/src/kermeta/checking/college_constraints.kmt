/* $Id: college_constraints.kmt,v 1.1 2008-03-10 16:41:47 vmahe Exp $
 * Creation date: March 7, 2008
 * License:
 * Copyright:
 * Authors:
 */
@mainClass "CollegeMM::Verification"
@mainOperation "main"

package CollegeMM;

require kermeta
require "platform:/resource/org.openembedd.formations.samples.kermeta02/metamodel/CollegeMM.ecore"

using kermeta::standard

aspect class Lesson {
	inv lessonHasTeacher is do
		self.teacher != void
	end
	inv lessonHasStudents is do
		self.students.size > 1
	end
	inv lessonHasMatter is do
		self.matter != void
	end
	inv lessonHasClassroom is do
		self.classroom != void
	end
}


class Verification
{
	operation main(modelFile : String) : Void is do 
		var rep : kermeta::persistence::EMFRepository init kermeta::persistence::EMFRepository.new
		
		rep.registerEcoreFile("platform:/resource/org.openembedd.formations.samples.kermeta02/metamodel/CollegeMM.ecore")
		
		var res : kermeta::persistence::Resource init rep.getResource(modelFile)
//			"platform:/resource/org.openembedd.formations.samples.kermeta02/model/MyCollege.xmi")
//			"platform:/resource/org.openembedd.formations.samples.kermeta02/model/NotAGoodCollege.xmi")
		var model : CollegeMM::College
		model ?= res.one
		
		stdio.writeln("Debug Begin check")
		var cd : kermeta::exceptions::ConstraintsDiagnostic init model.getViolatedConstraints
		//model.checkAllInvariants
		stdio.writeln("Debug end check")
		
		if cd.setConstraints.isEmpty() then
			stdio.writeln("getViolatedConstraints OK")
		else
			cd.prettyPrint
		end
		
	end
}