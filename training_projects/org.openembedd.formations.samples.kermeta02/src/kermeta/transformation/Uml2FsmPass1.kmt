/* $Id: Uml2FsmPass1.kmt,v 1.1 2009-02-18 10:53:11 vmahe Exp $ 
 * Creation : January 30, 2009
 * Licence  : EPL 
 * Copyright:
 * Authors  : 
 *            vmahe
 */

package uml;

require kermeta
require "UmlBrowser.kmt"
require "http://www.kermeta.org/fsm"

// the main class in UML2 (all other classes derived from it)
aspect class Element {
   operation uml2fsmPass1() is abstract
}

aspect class Model {
   method uml2fsmPass1() is do
   	  self.eachOwnedElement{ p | p.uml2fsmPass1() } // browse
   end
}

aspect class Package {
   method uml2fsmPass1() is do
      self.eachOwnedElement{ p | p.uml2fsmPass1() } // browse
   end
}

aspect class StateMachine {
   reference output : fsm::FSM
   method uml2fsmPass1() is do
      output := fsm::FSM.new
      self.eachOwnedElement{ p | p.uml2fsmPass1() } // browse
   end
}

aspect class Region {
   reference outModel : fsm::FSM
   method uml2fsmPass1() is do
      self.eachOwnedElement{ p | p.uml2fsmPass1() } // browse
   end
}

aspect class Vertex {
   reference output : fsm::State
   reference outModel : fsm::FSM
   method uml2fsmPass1() is do
      output := fsm::State.new
      output.name := self.name
   end
}

aspect class Transition {
	reference fsmTransition : fsm::Transition
	method uml2fsmPass1() is do
		fsmTransition := fsm::Transition.new
	end
}