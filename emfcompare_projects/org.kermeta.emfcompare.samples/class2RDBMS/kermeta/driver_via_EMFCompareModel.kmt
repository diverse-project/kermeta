/* $Id: driver_via_EMFCompareModel.kmt,v 1.1 2007-12-17 13:32:24 cfaucher Exp $
 * Creation date: December 17, 2007
 * License: EPL
 * Copyright: INRIA
 * Authors: Cyril Faucher <cfaucher@irisa.fr>
 */

@mainClass "class2RDBMS::Main"
@mainOperation "main"

package class2RDBMS;

require kermeta
require "../metamodels/ClassMM.ecore"
require "platform:/plugin/org.kermeta.emfcompare/kermeta/compare.kmt"
require "http://www.eclipse.org/emf/compare/match/1.1"
require "http://www.eclipse.org/emf/compare/diff/1.1"

using kermeta::standard
using kermeta::utils
using kermeta::persistence

using kermeta::compare

using ClassMM

using match
using diff

class Main
{
	// Launch the model comparison
	operation main() : Void is do
		
		// uri of the left model that will be compared
		var uri1 : String init "platform:/resource/org.kermeta.emfcompare.samples/class2RDBMS/models/ClassModel.xmi"
		// uri of the right model that will be compared
		var uri2 : String init "platform:/resource/org.kermeta.emfcompare.samples/class2RDBMS/models/ClassModel6.xmi"
		
		// uri of the model of matching that will be generated
		var uriMatch : String init "platform:/resource/org.kermeta.emfcompare.samples/.bin/result.match"
		// uri of the diff model that will be generated
		var uriDiff : String init "platform:/resource/org.kermeta.emfcompare.samples/.bin/result.diff"
		
		// Display the result of the comparison
		stdio.writeln(EMFCompareModel.new.compare(uri1,uri2).toString)
		
		// Get the model of matching between the 2 models
		var match_resource : Resource init EMFCompareModel.new.getMatch(uri1, uri2, uriMatch)
		
		// Get the diff model between the 2 models
		var diff_resource : Resource init EMFCompareModel.new.getDiff(uri1, uri2, uriDiff)
		
		// Display the root of the diff model
		// instances.one should be a DiffModel
		stdio.writeln(diff_resource.instances.one.toString)
		
	end
}